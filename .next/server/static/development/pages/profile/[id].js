module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = require('../../../../ssr-module-cache.js');
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		var threw = true;
/******/ 		try {
/******/ 			modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 			threw = false;
/******/ 		} finally {
/******/ 			if(threw) delete installedModules[moduleId];
/******/ 		}
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 6);
/******/ })
/************************************************************************/
/******/ ({

/***/ "../next-server/lib/router-context":
/*!**************************************************************!*\
  !*** external "next/dist/next-server/lib/router-context.js" ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("next/dist/next-server/lib/router-context.js");

/***/ }),

/***/ "../next-server/lib/utils":
/*!*****************************************************!*\
  !*** external "next/dist/next-server/lib/utils.js" ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("next/dist/next-server/lib/utils.js");

/***/ }),

/***/ "./common-function.js":
/*!****************************!*\
  !*** ./common-function.js ***!
  \****************************/
/*! exports provided: isNumberAndSpace, formatDate, formatNumber, numberToFixed, trimStringNumber, reverseString, checkCardType, removeNullFromArray, isValidDate, calculateTimeRange, convertMilliSecondsToTime, isExpired, convertToCardFormat, convertToExpiredDateFormat, insertBetween, checkSupportedCardType, isValidNumber, isExpiryDateFormat, sortByDesc, sortByDateDesc, findData, hideStringNumber, notEmptyLength, arrayLengthCount, syncDefaultDelivery, syncDefaultBilling, syncDefaultCard, syncDefaultBank, isSavedWishList, isFollowed, deepEqual, isObject, deepEqualArrayObject, roundToHalf, queryStringifyNestedObject, getImgTagSource, removeHtmlTag, convertToRangeFormat, convertRangeFormatBack, convertRangeFormatToText, convertFilterRange, objectRemoveEmptyValue, convertProductRouteParamsToFilterObject, convertParameterToProductListUrl, convertParameterToProductListSeoUrl, getTopItems, toCamelCase, toSnakeCase, viewPort, getUserName, getPlural, findIndexesOfString, checkObjectId, getObjectId, getCarMarketSeoData, getProfileSeoData, getCarFreakSeoData, getSocialBoardSeoData, getClubSeoData, getAllNewCarSeoData, getLiveSeoData */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isNumberAndSpace", function() { return isNumberAndSpace; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "formatDate", function() { return formatDate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "formatNumber", function() { return formatNumber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "numberToFixed", function() { return numberToFixed; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "trimStringNumber", function() { return trimStringNumber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "reverseString", function() { return reverseString; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "checkCardType", function() { return checkCardType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "removeNullFromArray", function() { return removeNullFromArray; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isValidDate", function() { return isValidDate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "calculateTimeRange", function() { return calculateTimeRange; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "convertMilliSecondsToTime", function() { return convertMilliSecondsToTime; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isExpired", function() { return isExpired; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "convertToCardFormat", function() { return convertToCardFormat; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "convertToExpiredDateFormat", function() { return convertToExpiredDateFormat; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "insertBetween", function() { return insertBetween; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "checkSupportedCardType", function() { return checkSupportedCardType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isValidNumber", function() { return isValidNumber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isExpiryDateFormat", function() { return isExpiryDateFormat; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sortByDesc", function() { return sortByDesc; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sortByDateDesc", function() { return sortByDateDesc; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "findData", function() { return findData; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hideStringNumber", function() { return hideStringNumber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "notEmptyLength", function() { return notEmptyLength; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "arrayLengthCount", function() { return arrayLengthCount; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "syncDefaultDelivery", function() { return syncDefaultDelivery; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "syncDefaultBilling", function() { return syncDefaultBilling; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "syncDefaultCard", function() { return syncDefaultCard; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "syncDefaultBank", function() { return syncDefaultBank; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isSavedWishList", function() { return isSavedWishList; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isFollowed", function() { return isFollowed; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "deepEqual", function() { return deepEqual; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isObject", function() { return isObject; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "deepEqualArrayObject", function() { return deepEqualArrayObject; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "roundToHalf", function() { return roundToHalf; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "queryStringifyNestedObject", function() { return queryStringifyNestedObject; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getImgTagSource", function() { return getImgTagSource; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "removeHtmlTag", function() { return removeHtmlTag; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "convertToRangeFormat", function() { return convertToRangeFormat; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "convertRangeFormatBack", function() { return convertRangeFormatBack; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "convertRangeFormatToText", function() { return convertRangeFormatToText; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "convertFilterRange", function() { return convertFilterRange; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "objectRemoveEmptyValue", function() { return objectRemoveEmptyValue; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "convertProductRouteParamsToFilterObject", function() { return convertProductRouteParamsToFilterObject; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "convertParameterToProductListUrl", function() { return convertParameterToProductListUrl; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "convertParameterToProductListSeoUrl", function() { return convertParameterToProductListSeoUrl; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getTopItems", function() { return getTopItems; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "toCamelCase", function() { return toCamelCase; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "toSnakeCase", function() { return toSnakeCase; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "viewPort", function() { return viewPort; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getUserName", function() { return getUserName; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getPlural", function() { return getPlural; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "findIndexesOfString", function() { return findIndexesOfString; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "checkObjectId", function() { return checkObjectId; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getObjectId", function() { return getObjectId; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getCarMarketSeoData", function() { return getCarMarketSeoData; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getProfileSeoData", function() { return getProfileSeoData; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getCarFreakSeoData", function() { return getCarFreakSeoData; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getSocialBoardSeoData", function() { return getSocialBoardSeoData; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getClubSeoData", function() { return getClubSeoData; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getAllNewCarSeoData", function() { return getAllNewCarSeoData; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getLiveSeoData", function() { return getLiveSeoData; });
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var query_string__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! query-string */ "query-string");
/* harmony import */ var query_string__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(query_string__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var cookie__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! cookie */ "cookie");
/* harmony import */ var cookie__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(cookie__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var local_storage__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! local-storage */ "local-storage");
/* harmony import */ var local_storage__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(local_storage__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _redux_config__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./redux/config */ "./redux/config.js");
/* harmony import */ var _params_carBrandsList__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./params/carBrandsList */ "./params/carBrandsList.js");
/* harmony import */ var _params_stateList__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./params/stateList */ "./params/stateList.js");
/* harmony import */ var _params_bodyTypeList__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./params/bodyTypeList */ "./params/bodyTypeList.js");
/* harmony import */ var _params_fuelTypeList__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./params/fuelTypeList */ "./params/fuelTypeList.js");
/* harmony import */ var _params_colorList__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./params/colorList */ "./params/colorList.js");
/* harmony import */ var _functionContent__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./functionContent */ "./functionContent.js");
/* harmony import */ var _feathers__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./feathers */ "./feathers.js");
/* harmony import */ var _components_carFreak_config__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./components/carFreak/config */ "./components/carFreak/config.js");
/* harmony import */ var _components_live_config__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./components/live/config */ "./components/live/config.js");
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

















var moment = __webpack_require__(/*! moment */ "moment");

const defaultRangeSmaller = '<=';
const defaultRangeBigger = '>=';
const availableFilters = ['make', 'model', 'title', 'condition', 'transmission', 'state', 'area', 'priceRange', 'yearRange', 'mileageRange', 'engineCapacityRange', 'bodyType', 'color', 'fuelType', 'registrationUrl', 'readyStock', 'car360View', 'businessType'];
function isNumberAndSpace(value) {
  //to array
  if (value != null) {
    value = value.split('');

    if (value.filter(function (item, index) {
      return !parseInt(item) && parseInt(item) != 0 && item != ' ';
    }).length > 0) {
      return false;
    } else {
      return true;
    }
  } else {
    return false;
  }
}
function formatDate(value, format) {
  if (value != null) {
    if (!isValidDate(value)) {
      return null;
    } else {
      if (format == null) {
        format = "DD/MM/YYYY";
      }

      return moment(value).format(format);
    }
  } else {
    return null;
  }
}
function formatNumber(value, unit, round, fixedPoint, trim) {
  if (value != null) {
    if (isNaN(parseFloat(value))) {
      return value;
    } else {
      value = parseFloat(value); //default will auto round up if round didn't passed in
      //default fixedPoint 0

      switch (unit) {
        case "k":
          value = numberToFixed(value / 1000, round, fixedPoint);
          break;

        case "m":
          value = numberToFixed(value / 1000000, round, fixedPoint);
          break;

        case "b":
          value = numberToFixed(value / 1000000000, round, fixedPoint);
          break;

        case "auto":
          let units = [['', 1], ['k', 1000], ['m', 1000000], ['b', 1000000000]]; //get closest unit

          if (value <= 1) {
            unit = '';
          } else {
            lodash__WEBPACK_IMPORTED_MODULE_0___default.a.forEach(lodash__WEBPACK_IMPORTED_MODULE_0___default.a.reverse(units), function (item, index) {
              if (value / item[1] >= 1) {
                value = numberToFixed(value / item[1], round, fixedPoint);
                unit = item[0];
                return false;
              }
            });
          }

          break;

        default:
          value = numberToFixed(value, round, fixedPoint);
          break;
      }

      let formatedValue = '';
      let prefix = insertBetween(parseInt(value), 3, ',', true, true);
      let postfix = value.toString().split('.')[1];
      formatedValue += prefix;

      if (postfix) {
        formatedValue += '.' + postfix;
      }

      if (trim) {
        formatedValue = trimStringNumber(formatedValue);
      }

      if (unit) {
        formatedValue += unit;
      }

      return formatedValue;
    }
  } else {
    return value;
  }
}
function numberToFixed(value, round, fixedPoint, fromFront) {
  if (value != null && !isNaN(parseFloat(value))) {
    if (isNaN(parseInt(fixedPoint))) {
      //Default
      fixedPoint = 0;
    } else {
      fixedPoint = parseInt(fixedPoint);
    }

    if (round == null) {
      round = true;
    }

    if (fromFront) {
      value = parseFloat(value);
      value = value.toString().split('.');

      if (value[0]) {
        // if (value[0].length > fixedPoint) {
        //     value[0] = value[0].slice(value[0].length - fixedPoint);
        // }
        if (value[0].length < fixedPoint) {
          lodash__WEBPACK_IMPORTED_MODULE_0___default.a.forEach(lodash__WEBPACK_IMPORTED_MODULE_0___default.a.range(fixedPoint - value[0].length), function () {
            value[0] = '0' + value[0];
          });
        }

        return value[0];
      }
    } else {
      value = parseFloat(value);

      if (round) {
        return value.toFixed(fixedPoint);
      } else {
        value = value.toString().split('.');

        if (value[1]) {
          if (value[1].length > fixedPoint) {
            value[1] = value[1].slice(0, fixedPoint);
          }

          if (value[1].length < fixedPoint) {
            lodash__WEBPACK_IMPORTED_MODULE_0___default.a.forEach(lodash__WEBPACK_IMPORTED_MODULE_0___default.a.range(fixedPoint - value[0].length), function () {
              value[0] = value[0] + '0';
            });
          }
        }

        return parseFloat(value.join(".")).toFixed(fixedPoint);
      }
    }
  } else {
    return value;
  }
} //Remove prefix 0 and postfix 0

function trimStringNumber(value) {
  if (value != null) {
    value = value.toString().split('.');
    let prefix = value[0];
    let postfix = value[1];

    if (prefix != null) {
      if (prefix.length > 1) {
        let prefixArr = prefix.split("");
        let done = false;
        prefixArr.some(num => {
          if (num == '0') {
            //cut out 0
            prefix = prefix.substring(1);
          } else {
            done = true;
          }

          return done;
        });
      }
    }

    if (postfix != null) {
      if (postfix.length > 0) {
        let postfixArr = postfix.split("").reverse();
        let done = false;
        postfixArr.some(num => {
          if (num == '0') {
            //cut out 0
            postfix = postfix.substring(0, postfix.length - 1);
          } else {
            done = true;
          }

          return done;
        });
      }
    }

    if (postfix) {
      return prefix + "." + postfix;
    } else {
      return prefix;
    }
  } else {
    return value;
  }
}
function reverseString(value) {
  if (value != null) {
    var strArray = value.toString().split("");
    strArray = strArray.reverse();
    return strArray.join("");
  } else {
    return value;
  }
}
function checkCardType(number) {
  if (number != null) {
    number = number.replace(/\s/g, ''); // visa

    var re = new RegExp("^4");
    if (number.match(re) != null) return "VISA"; // Mastercard 
    // Updated for Mastercard 2017 BINs expansion

    if (/^(5[1-5][0-9]{14}|2(22[1-9][0-9]{12}|2[3-9][0-9]{13}|[3-6][0-9]{14}|7[0-1][0-9]{13}|720[0-9]{12}))$/.test(number)) return "MASTERCARD"; // AMEX

    re = new RegExp("^3[47]");
    if (number.match(re) != null) return "AMERICANEXPRESS"; // Discover

    re = new RegExp("^(6011|622(12[6-9]|1[3-9][0-9]|[2-8][0-9]{2}|9[0-1][0-9]|92[0-5]|64[4-9])|65)");
    if (number.match(re) != null) return "DISCOVER"; // Diners

    re = new RegExp("^36");
    if (number.match(re) != null) return "DINERS"; // Diners - Carte Blanche

    re = new RegExp("^30[0-5]");
    if (number.match(re) != null) return "DINERSCARTEBLANCHE"; // JCB

    re = new RegExp("^35(2[89]|[3-8][0-9])");
    if (number.match(re) != null) return "JCB"; // Visa Electron

    re = new RegExp("^(4026|417500|4508|4844|491(3|7))");
    if (number.match(re) != null) return "VISAELECTRON";
  }

  return null;
}
function removeNullFromArray(value) {
  if (notEmptyLength(value)) {
    return value.filter(function (item) {
      return item != null;
    });
  }

  return value;
}
function isValidDate(value) {
  if (value != null) {
    value = new Date(value);

    if (Object.prototype.toString.call(value) === "[object Date]") {
      // it is a date
      if (isNaN(value.valueOf())) {
        // value.valueOf() could also work
        return false;
      } else {
        return true;
      }
    } else {
      return false;
    }
  } else {
    return false;
  }
}
function calculateTimeRange(date1, date2, unit, precise) {
  if (date1 != null) {
    if (isValidDate(date1)) {
      date1 = moment(date1);

      if (date2 != null) {
        if (isValidDate(date2)) {
          date2 = moment(date2);
        } else {
          return null;
        }
      } else {
        date2 = moment();
      }

      let data = {};

      switch (unit) {
        case 'year':
          data.difference = date1.diff(date2, 'years', precise);
          data.unit = unit;
          break;

        case 'month':
          data.difference = date1.diff(date2, 'months', precise);
          data.unit = unit;
          break;

        case 'week':
          data.difference = date1.diff(date2, 'weeks', precise);
          data.unit = unit;
          break;

        case 'day':
          data.difference = date1.diff(date2, 'days', precise);
          data.unit = unit;
          break;

        case 'hour':
          data.difference = date1.diff(date2, 'hours', precise);
          data.unit = unit;
          break;

        case 'minute':
          data.difference = date1.diff(date2, 'minutes', precise);
          data.unit = unit;
          break;

        case 'second':
          data.difference = date1.diff(date2, 'seconds', precise);
          data.unit = unit;
          break;

        default:
          //auto get nearest 1
          let sections = ['year', 'month', 'week', 'day', 'hour', 'minute', 'second'];
          let selectedSection = sections.find(function (section) {
            return Math.abs(date1.diff(date2, section + 's', true)) >= 1;
          });

          if (selectedSection) {
            data.difference = date1.diff(date2, selectedSection + 's', precise);
            data.unit = selectedSection;
          } else {
            data.difference = 0;
            data.unit = 'second';
          }

      }

      return data;
    } else {
      return null;
    }
  } else {
    return null;
  }
}
function convertMilliSecondsToTime(millisecond, minUnit) {
  if (millisecond != null && isValidNumber(parseInt(millisecond))) {
    let second = 0,
        minute = 0,
        hour = 0;
    let finalTime = '';
    millisecond = parseInt(millisecond);
    hour = numberToFixed(moment.duration(millisecond).hours(), false, 2, true);
    minute = numberToFixed(moment.duration(millisecond).minutes(), false, 2, true);
    second = numberToFixed(moment.duration(millisecond).seconds(), false, 2, true);

    switch (minUnit) {
      case 'minute':
        if (hour > 0) {
          finalTime = `${hour}:${minute}:${second}`;
        } else {
          finalTime = `${minute}:${second}`;
        }

        break;

      case 'hour':
        finalTime = `${hour}:${minute}:${second}`;
        break;

      default:
        if (hour > 0) {
          finalTime = `${hour}:${minute}:${second}`;
        } else if (minute > 0) {
          finalTime = `${minute}:${second}`;
        } else {
          finalTime = `${second}`;
        }

        break;
    }

    return finalTime;
  } else {
    return null;
  }
}
function isExpired(date, aspect) {
  if (aspect == null) {
    aspect = 'second';
  }

  if (date != null && isValidDate(date)) {
    var today = moment();
    date = moment(date);
    return today.isAfter(date, aspect);
  }

  return null;
}
function convertToCardFormat(value) {
  if (value != null) {
    value = value.replace(/\s/g, '');
    value = insertBetween(value, 4, ' ');
  }

  return value;
}
function convertToExpiredDateFormat(value) {
  if (value != null) {
    var str = value.split('');

    if (str.length < 3) {
      if (str[1] == '/') {
        str.splice(0, 0, '0');
        value = str.join("");
      } else {
        value = value.replace('/', '');
        value = insertBetween(value, 2, '/');
      }
    }
  }

  return value;
}
function insertBetween(value, space, char, fromBack, stopAtEnd) {
  if (value != null) {
    if (isNaN(parseInt(space))) {
      return value;
    } else {
      if (fromBack) {
        value = reverseString(value);
      }

      var oristr = value.toString().split('');
      var length = oristr.length;
      var addedspacecount = 1;
      space = parseInt(space);

      for (let index = 0; index < length; index++) {
        if (index != 0 && (index + 1) % space == 0) {
          if (stopAtEnd && index == length - 1) {
            break;
          }

          oristr.splice(index + addedspacecount, 0, char);
          addedspacecount = addedspacecount + 1;
        }
      }

      if (fromBack) {
        oristr = oristr.reverse();
      }

      return oristr.join("");
    }
  } else {
    return null;
  }
}
function checkSupportedCardType(card) {
  if (card != null) {
    // visa
    if (card == 'VISA') {
      return true;
    }

    if (card == 'MASTERCARD') {
      return true;
    }

    if (card == 'VISAELECTRON') {
      return true;
    }

    if (card == 'AMERICANEXPRESS') {
      return true;
    }
  }

  return false;
}
function isValidNumber(value) {
  return !isNaN(parseFloat(value));
}
function isExpiryDateFormat(value) {
  if (value != null) {
    //to array
    value = value.split('');

    if (value.filter(function (item, index) {
      if (index == 2) {
        return item != '/';
      }

      return !parseInt(item) && parseInt(item) != 0;
    }).length > 0) {
      return false;
    } else {
      return true;
    }
  } else {
    return false;
  }
}
function sortByDesc(data, col) {
  if (data && col) {
    return data.sort(function (a, b) {
      if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isPlainObject(a) || lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isPlainObject(b) || lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isArray(a) || lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isArray(b)) {
        if (!col) {
          col = 0;
        }

        if (a[col] < b[col]) return 1;
        if (a[col] > b[col]) return -1;
        return 0;
      } else {
        if (a < b) return 1;
        if (a > b) return -1;
        return 0;
      }
    });
  } else {
    return [];
  }
}
function sortByDateDesc(data, col) {
  if (data && col) {
    return data.sort(function (a, b) {
      if (moment(a[col]).isBefore(moment(b[col]))) return 1;
      if (moment(a[col]).isAfter(moment(b[col]))) return -1;
      return 0;
    });
  } else {
    return [];
  }
}
function findData(data, col, val) {
  return data.filter(function (item) {
    return item[col] == val;
  });
}
function hideStringNumber(string, start, end) {
  if (string) {
    var length = string.length; //Get rest part

    var startpart = '';
    var endpart = '';

    if (Number.isInteger(start) && Number.isInteger(end)) {
      startpart = string.slice(0, start);
      endpart = string.slice(length - (length - end), length);
    } else if (Number.isInteger(start)) {
      startpart = string.slice(0, start);
      endpart = '';
    } else if (Number.isInteger(end)) {
      startpart = '';
      endpart = string.slice(length - (length - end), length);
    } else {
      return string;
    } //Get desire convert part


    var convertpart = '';

    if (Number.isInteger(start) && Number.isInteger(end)) {
      convertpart = string.slice(start, end);
    } else if (Number.isInteger(start)) {
      convertpart = string.slice(start);
    } else if (Number.isInteger(end)) {
      convertpart = string.slice(0, end);
    } else {
      return string;
    } //to array


    convertpart = convertpart.split('');
    convertpart = convertpart.map(function (char) {
      if (isNaN(parseInt(char)) || !parseInt(char)) {
        return char;
      } else {
        return '*';
      }
    }); //to string

    convertpart = convertpart.join("");
    return startpart + convertpart + endpart;
  } else {
    return null;
  }
}
function notEmptyLength(data) {
  if (data) {
    if (Array.isArray(data) && data.length > 0) {
      return true;
    } else if (isObject(data) && Object.keys(data).length > 0) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
}
function arrayLengthCount(data) {
  if (notEmptyLength(data) && Array.isArray(data)) {
    return data.length;
  } else {
    return 0;
  }
}
function syncDefaultDelivery(data, id) {
  return data.map(function (item) {
    if (item._id) {
      if (item._id != id) {
        if (item.isDefaultDelivery) {
          item.isDefaultDelivery = false;
        }
      } else {
        item.isDefaultDelivery = true;
      }
    }

    return item;
  });
}
function syncDefaultBilling(data, id) {
  return data.map(function (item) {
    if (item._id) {
      if (item._id != id) {
        if (item.isDefaultBilling) {
          item.isDefaultBilling = false;
        }
      } else {
        item.isDefaultBilling = true;
      }
    }

    return item;
  });
}
function syncDefaultCard(data, id) {
  return data.map(function (item) {
    if (item._id) {
      if (item._id != id) {
        if (item.isDefaultCard) {
          item.isDefaultCard = false;
        }
      } else {
        item.isDefaultCard = true;
      }
    }

    return item;
  });
}
function syncDefaultBank(data, id) {
  return data.map(function (item) {
    if (item._id) {
      if (item._id != id) {
        if (item.isDefaultBank) {
          item.isDefaultBank = false;
        }
      } else {
        item.isDefaultBank = true;
      }
    }

    return item;
  });
}
function isSavedWishList(data, id) {
  if (data && id) {
    var check = data.filter(function (item) {
      return item.productId == id;
    });
    return check.length > 0;
  } else {
    return false;
  }
}
function isFollowed(data, id) {
  if (data && id) {
    var check = data.filter(function (item) {
      return item.companyId == id;
    });
    return check.length > 0;
  } else {
    return false;
  }
}
function deepEqual(object1, object2) {
  if (object1 && object2) {
    const keys1 = Object.keys(object1);
    const keys2 = Object.keys(object2);

    if (keys1.length !== keys2.length) {
      return false;
    }

    for (const key of keys1) {
      const val1 = object1[key];
      const val2 = object2[key];
      const areObjects = isObject(val1) && isObject(val2);

      if (areObjects && !deepEqual(val1, val2) || !areObjects && val1 !== val2) {
        return false;
      }
    }
  } else {
    return false;
  }

  return true;
}
function isObject(object) {
  return object != null && typeof object === 'object';
}
function deepEqualArrayObject(array1, array2) {
  if (Array.isArray(array1) && Array.isArray(array2)) {
    if (array1.length != array2.length) {
      return false;
    } else {
      for (let x = 0; x < array1.length; x++) {
        if (!deepEqual(array1[x], array2[x])) {
          return false;
        }
      }

      return true;
    }
  } else {
    return false;
  }
}
function roundToHalf(number) {
  if (number != null) {
    if (!isNaN(parseFloat(number))) {
      var decimal = parseFloat(number);
      var int = parseInt(number);
      decimal = decimal - int;
      return decimal >= 0.5 ? int + 0.5 : int;
    }
  }

  return false;
}
function queryStringifyNestedObject(value, colName) {
  if (value != null) {
    if (colName) {
      let data = {};
      data[colName] = JSON.stringify(value);
      return query_string__WEBPACK_IMPORTED_MODULE_1___default.a.stringify(data);
    }

    return query_string__WEBPACK_IMPORTED_MODULE_1___default.a.stringify({
      data: JSON.stringify(value)
    });
  }

  return '';
}
function getImgTagSource(str) {
  if (str) {
    str = str.toString();
    let strArr = str.split("");
    let removed = true; //Get html tag only

    strArr = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.compact(lodash__WEBPACK_IMPORTED_MODULE_0___default.a.map(strArr, function (chr) {
      if (chr == '<') {
        removed = false;
        return chr;
      }

      if (chr == '>') {
        removed = true;
        return chr;
      }

      if (removed) {
        return null;
      }

      return chr;
    }));
    let images = strArr.join("").split(">");
    images = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.compact(lodash__WEBPACK_IMPORTED_MODULE_0___default.a.map(images, function (image) {
      if (image.substr(0, 4) == '<img') {
        //point to src value
        let startIndex = image.indexOf('src="') + 5; //crop until src

        let croppedStrArr = image.substr(startIndex);
        croppedStrArr = croppedStrArr.split("");
        let removed = false; //retrieve value

        croppedStrArr = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.compact(lodash__WEBPACK_IMPORTED_MODULE_0___default.a.map(croppedStrArr, function (chr) {
          if (chr == '"') {
            removed = true;
            return null;
          }

          if (removed) {
            return null;
          }

          return chr;
        }));
        return {
          url: `/${croppedStrArr.join("")}`,
          name: croppedStrArr.join("").slice(10)
        };
      }

      return null;
    }));
    return images;
  } else {
    return str;
  }
}
function removeHtmlTag(str) {
  if (str) {
    str = str.toString();
    let strArr = str.split("");
    let removed = false;
    strArr = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.compact(lodash__WEBPACK_IMPORTED_MODULE_0___default.a.map(strArr, function (chr) {
      if (chr == '<') {
        removed = true;
        return null;
      }

      if (chr == '>') {
        removed = false;
        return null;
      }

      if (removed) {
        return null;
      }

      return chr;
    }));
    return strArr.join("");
  } else {
    return str;
  }
}
function convertToRangeFormat(value) {
  let data = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.cloneDeep(value); //Convert Range Format


  if (notEmptyLength(data)) {
    //Restruct range format to convert
    if (!data[0] && !data[1]) {} else if (!data[0]) {
      data[0] = data[1];
      data[1] = defaultRangeSmaller;
    } else if (!data[1]) {
      data[1] = defaultRangeBigger;
    }
  }

  return data;
}
function convertRangeFormatBack(valueArr) {
  if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isArray(valueArr) && !lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isEmpty(valueArr)) {
    let parameter1 = valueArr[0];
    let parameter2 = valueArr[1];
    let data = [,];

    if (parameter2 == defaultRangeSmaller || parameter2 == defaultRangeBigger) {
      if (parameter2 == defaultRangeBigger) {
        data[0] = parameter1;
      }

      if (parameter2 == defaultRangeSmaller) {
        data[1] = parameter1;
      }

      return data;
    } else {
      return valueArr;
    }
  } else {
    return valueArr;
  }
}
function convertRangeFormatToText(formatedRange, valueFormat) {
  function convertValue(value, format) {
    if (format == 'price') {
      return `RM ${formatNumber(value, null, true, 2, true)}`;
    }

    if (format == 'mileage') {
      return `${formatNumber(value, null, true, 2, true)} km`;
    }

    if (format == 'engineCapacity') {
      return `${formatNumber(value, null, true, 2, true)} cc`;
    }

    return value;
  }

  if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isArray(formatedRange) && !lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isEmpty(formatedRange)) {
    let parameter1 = formatedRange[0];
    let parameter2 = formatedRange[1];
    let text = '';

    if (parameter2 == defaultRangeBigger) {
      text = `above ${convertValue(parameter1, valueFormat)}`;
    } else if (parameter2 == defaultRangeSmaller) {
      text = `below ${convertValue(parameter1, valueFormat)}`;
    } else {
      text = `between ${convertValue(parameter1, valueFormat)} and ${convertValue(parameter2, valueFormat)}`;
    }

    return text;
  } else {
    return '';
  }
}
function convertFilterRange(value, name) {
  if (notEmptyLength(value) && name) {
    let parameter1 = parseFloat(value[0]);
    let parameter2 = value[1];
    let finalData = [];
    let query = {};

    if (!isValidNumber(parameter1)) {
      return null;
    }

    if (parameter2 != null) {
      switch (parameter2) {
        case '<=':
          query[`${name}`] = {
            $lte: +parameter1
          };
          finalData.push(query);
          break;

        case '<':
          query[`${name}`] = {
            $lt: +parameter1
          };
          finalData.push(query);
          break;

        case '==':
          query[`${name}`] = {
            $eq: +parameter1
          };
          finalData.push(query);
          break;

        case '>':
          query[`${name}`] = {
            $gt: +parameter1
          };
          finalData.push(query);
          break;

        case '>=':
          query[`${name}`] = {
            $gte: +parameter1
          };
          finalData.push(query);
          break;

        default:
          parameter2 = parseFloat(parameter2);

          if (!isValidNumber(parameter2)) {
            query[`${name}`] = {
              $eq: +parameter1
            };
            finalData.push(query);
          } else {
            query[`${name}`] = {
              $gte: +parameter1
            };
            finalData.push(query);
            let query1 = {};
            query1[`${name}`] = {
              $lte: +parameter2
            };
            finalData.push(query1);
          }

          break;
      }
    } else {
      query[`${name}`] = {
        $eq: +parameter1
      };
      finalData.push(query);
    }

    return finalData;
  } else {
    return null;
  }
}
function objectRemoveEmptyValue(value) {
  if (notEmptyLength(value) && lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isPlainObject(value)) {
    return lodash__WEBPACK_IMPORTED_MODULE_0___default.a.pickBy(value, function (property) {
      return lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isArray(property) ? notEmptyLength(lodash__WEBPACK_IMPORTED_MODULE_0___default.a.compact(property)) : lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isPlainObject(property) ? notEmptyLength(objectRemoveEmptyValue(property)) : property;
    });
  } else {
    return {};
  }
}
function convertProductRouteParamsToFilterObject(routeParams) {
  let {
    parameter1,
    parameter2,
    parameter3
  } = routeParams;
  let {
    sorting,
    page,
    view
  } = routeParams;
  let mergeObj = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.pick(routeParams, availableFilters) || {};

  if (!isValidNumber(parseInt(page))) {
    page = 1;
  }

  if (view != 'gridView' && view != 'listView') {
    view = 'gridView';
  }

  if (!lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(sorting, ['carspec.year']) && !lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(sorting, ['mileageFilter']) && !lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(sorting, ['searchPrice'])) {
    sorting = {};
  }

  let finalData = {
    filterGroup: _objectSpread({}, mergeObj),
    config: {
      page: page,
      sorting: sorting,
      view: view
    }
  };

  if (finalData.filterGroup.priceRange) {
    finalData.filterGroup.priceRange = convertRangeFormatBack(finalData.filterGroup.priceRange);
  }

  if (finalData.filterGroup.yearRange) {
    finalData.filterGroup.yearRange = convertRangeFormatBack(finalData.filterGroup.yearRange);
  }

  if (finalData.filterGroup.mileageRange) {
    finalData.filterGroup.mileageRange = convertRangeFormatBack(finalData.filterGroup.mileageRange);
  }

  if (finalData.filterGroup.engineCapacityRange) {
    finalData.filterGroup.engineCapacityRange = convertRangeFormatBack(finalData.filterGroup.engineCapacityRange);
  }

  if (parameter1 && !parameter2 && !parameter3) {
    let stateArr = parameter1.split('_');
    finalData.filterGroup.state = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isArray(stateArr) && !lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isEmpty(stateArr) ? lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(stateArr, [1]) || '' : '';
    finalData.filterGroup.area = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isArray(stateArr) && !lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isEmpty(stateArr) ? lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(stateArr, [2]) || '' : '';
  } else if (parameter1 && parameter2 && !parameter3) {
    finalData.filterGroup.make = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.toLower(parameter1);
    let stateArr = parameter2.split('_');
    finalData.filterGroup.state = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isArray(stateArr) && !lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isEmpty(stateArr) ? lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(stateArr, [1]) || '' : '';
    finalData.filterGroup.area = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isArray(stateArr) && !lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isEmpty(stateArr) ? lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(stateArr, [2]) || '' : '';
  } else if (parameter1 && parameter2 && parameter3) {
    finalData.filterGroup.make = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.toLower(parameter1);
    finalData.filterGroup.model = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.toLower(parameter2);
    let stateArr = parameter3.split('_');
    finalData.filterGroup.state = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isArray(stateArr) && !lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isEmpty(stateArr) ? lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(stateArr, [1]) || '' : '';
    finalData.filterGroup.area = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isArray(stateArr) && !lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isEmpty(stateArr) ? lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(stateArr, [2]) || '' : '';
  } else {}

  return finalData;
}
function convertParameterToProductListUrl(data, config) {
  let mergeObj = objectRemoveEmptyValue(data);
  let basePath = '';

  if (!lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isPlainObject(config) || lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isEmpty(config)) {
    config = {
      page: 1,
      sorting: {},
      view: 'gridView'
    };
  }

  if (!isValidNumber(parseInt(config.page))) {
    config.page = 1;
  }

  if (config.view != 'gridView' && config.view != 'listView') {
    config.view = 'gridView';
  }

  if (!lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isPlainObject(objectRemoveEmptyValue(config.sorting)) && lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isEmpty(objectRemoveEmptyValue(config.sorting)) && !lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(config, ['sorting', 'carspec.year']) && !lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(config, ['sorting', 'mileageFilter']) && !lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(config, ['sorting', 'searchPrice'])) {
    config.sorting = {};
  } else {
    config.sorting = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.pick(objectRemoveEmptyValue(config.sorting), ['carspec.year', 'searchPrice', 'mileageFilter']);
  }

  if (notEmptyLength(mergeObj)) {
    mergeObj = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.pick(mergeObj, availableFilters);
    let condition = mergeObj.condition;
    let make = mergeObj.make;
    let model = mergeObj.model;
    let state = mergeObj.state;
    let area = mergeObj.area;

    if (condition && condition != 'cars-on-sale' && condition != 'all') {
      condition = [lodash__WEBPACK_IMPORTED_MODULE_0___default.a.toLower(condition), 'cars-on-sale'].join('-');
    } else {
      condition = 'cars-on-sale';
    }

    if (state && state != 'malaysia') {
      if (area && state != 'malaysia') {
        state = ['malaysia', lodash__WEBPACK_IMPORTED_MODULE_0___default.a.toLower(mergeObj.state), lodash__WEBPACK_IMPORTED_MODULE_0___default.a.toLower(mergeObj.area)].join('_');
      } else {
        state = ['malaysia', lodash__WEBPACK_IMPORTED_MODULE_0___default.a.toLower(mergeObj.state)].join('_');
      }
    } else {
      state = 'malaysia';
    } //Main parameter
    //Order is important
    //The first 1 always is condition
    //The last 1 always is state


    let mainParameters = [make, model];
    let path = `${basePath}/${condition}`;

    lodash__WEBPACK_IMPORTED_MODULE_0___default.a.forEach(mainParameters, function (parameter) {
      if (!parameter) {
        return false;
      } else {
        path += `/${lodash__WEBPACK_IMPORTED_MODULE_0___default.a.toLower(parameter)}`;
      }
    });

    path += `/${state}`;
    delete mergeObj.condition;
    delete mergeObj.make;
    delete mergeObj.model;
    delete mergeObj.state;
    return `${path}?view=${config.view}&page=${config.page}${lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isPlainObject(config.sorting) && !lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isEmpty(config.sorting) ? `&${queryStringifyNestedObject(config.sorting, 'sorting')}` : ''}${notEmptyLength(mergeObj) ? `&${queryStringifyNestedObject(mergeObj)}` : ''}`;
  } else {
    return `/cars-on-sale/malaysia?view=${config.view}&page=${config.page}${lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isPlainObject(config.sorting) && !lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isEmpty(config.sorting) ? `&${queryStringifyNestedObject(config.sorting, 'sorting')}` : ''}`;
  }
}
function convertParameterToProductListSeoUrl(data) {
  let mergeObj = objectRemoveEmptyValue(data);
  let basePath = Object(_functionContent__WEBPACK_IMPORTED_MODULE_10__["checkEnvReturnCmsUrl"])(_feathers__WEBPACK_IMPORTED_MODULE_11__["default"].io.io.uri);
  ;

  if (notEmptyLength(mergeObj)) {
    mergeObj = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.pick(mergeObj, availableFilters);
    let condition = mergeObj.condition;
    let make = mergeObj.make;
    let model = mergeObj.model;
    let state = mergeObj.state;
    let area = mergeObj.area;

    if (condition && condition != 'cars-on-sale' && condition != 'all') {
      condition = [lodash__WEBPACK_IMPORTED_MODULE_0___default.a.toLower(condition), 'cars-on-sale'].join('-');
    } else {
      condition = 'cars-on-sale';
    }

    if (state && state != 'malaysia') {
      if (area && state != 'malaysia') {
        state = ['malaysia', lodash__WEBPACK_IMPORTED_MODULE_0___default.a.toLower(mergeObj.state), lodash__WEBPACK_IMPORTED_MODULE_0___default.a.toLower(mergeObj.area)].join('_');
      } else {
        state = ['malaysia', lodash__WEBPACK_IMPORTED_MODULE_0___default.a.toLower(mergeObj.state)].join('_');
      }
    } else {
      state = 'malaysia';
    } //Main parameter
    //Order is important
    //The first 1 always is condition
    //The last 1 always is state


    let mainParameters = [make, model];
    let path = `${basePath}/${condition}`;

    lodash__WEBPACK_IMPORTED_MODULE_0___default.a.forEach(mainParameters, function (parameter) {
      if (!parameter) {
        return false;
      } else {
        path += `/${lodash__WEBPACK_IMPORTED_MODULE_0___default.a.toLower(parameter)}`;
      }
    });

    path += `/${state}`;
    delete mergeObj.condition;
    delete mergeObj.make;
    delete mergeObj.model;
    delete mergeObj.state;
    return `${path}?${notEmptyLength(mergeObj) ? `&${queryStringifyNestedObject(mergeObj)}` : ''}`;
  } else {
    return `/cars-on-sale/malaysia`;
  }
}
function getTopItems(data, rank, col) {
  if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isArray(data) && notEmptyLength(data)) {
    if (!isValidNumber(rank)) {
      rank = 3;
    } else {
      rank = parseInt(rank);
    }

    let pickedData = sortByDesc(data, col);
    pickedData = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.slice(pickedData, 0, rank);
    return pickedData;
  } else {
    return data;
  }
}
function toCamelCase(value, seperator) {
  if (!value || !value.toString()) {
    return value;
  } else {
    if (!seperator || !seperator.toString()) {
      seperator = ' ';
    } else {
      seperator = seperator.toString();
    }

    value = value.toString().split(seperator);
    value = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.map(value, function (item, index) {
      if (index > 0) {
        return lodash__WEBPACK_IMPORTED_MODULE_0___default.a.capitalize(item);
      } else {
        return item;
      }
    });
    return value.join('');
  }
}
function toSnakeCase(value, seperator) {
  if (!value || !value.toString()) {
    return value;
  } else {
    if (!seperator || !seperator.toString()) {
      seperator = '_';
    } else {
      seperator = seperator.toString();
    }

    value = value.toString().split('');
    let finalData = [];

    lodash__WEBPACK_IMPORTED_MODULE_0___default.a.forEach(value, function (item, index) {
      if (index == 0) {
        finalData.push(lodash__WEBPACK_IMPORTED_MODULE_0___default.a.lowerCase(item));
      } else {
        if (item == lodash__WEBPACK_IMPORTED_MODULE_0___default.a.upperCase(item)) {
          finalData.push(seperator);
        }

        finalData.push(lodash__WEBPACK_IMPORTED_MODULE_0___default.a.lowerCase(item));
      }
    });

    return finalData.join('');
  }
}
const viewPort = {
  xs: 480,
  sm: 576,
  md: 768,
  lg: 992,
  xl: 1200,
  xxl: 1600
};
function getUserName(user, type) {
  if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isPlainObject(user) && !lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isEmpty(user)) {
    let username = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.trim(lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(user, ['username']) || '');

    let fullName = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.trim(lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(user, ['fullName']) || `${lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(user, ['firstName']) || ''} ${lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(user, ['lastName']) || ''}` || '');

    let firstName = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.trim(lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(user, ['firstName']) || '');

    let lastName = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.trim(lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(user, ['lastName']) || '');

    let namePrefix = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.trim(lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(user, ['namePrefix']) || '');

    let freakId = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.trim(lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(user, ['freakId']) || '');

    switch (type) {
      case 'username':
        return username;

      case 'fullName':
        return fullName;

      case 'prefixName':
        return lodash__WEBPACK_IMPORTED_MODULE_0___default.a.trim(`${namePrefix ? `${namePrefix}` : ''} ${fullName || ''}`);

      case 'firstName':
        return firstName;

      case 'lastName':
        return lastName;

      case 'freakId':
        return freakId;

      default:
        return fullName;
    }
  } else {
    return 'Ccar User';
  }
}
function getPlural(singular, plural, count, showCount) {
  if (singular && isValidNumber(parseInt(count))) {
    return parseInt(count) > 1 ? showCount ? `${count} ${plural || singular + 's'}` : `${plural || singular + 's'}` : showCount ? `${formatNumber(count, 'auto', true, 0, true)} ${singular}` : `${singular}`;
  } else {
    return '';
  }
}
function findIndexesOfString(text, search) {
  if (text && search) {
    let indexes = [];
    let currentPosition = 0;

    while (currentPosition < text.length) {
      currentPosition = text.indexOf(search, currentPosition);

      if (currentPosition == -1) {
        currentPosition = text.length;
      } else {
        indexes.push(currentPosition);
        currentPosition = currentPosition + search.length;
      }
    }

    return indexes;
  } else {
    return [];
  }
}
function checkObjectId(data, idForCheck, col) {
  if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isPlainObject(data) && !lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isEmpty(data)) {
    return data[`${col || '_id'}`] == idForCheck;
  } else {
    return data == idForCheck;
  }
}
function getObjectId(data, col) {
  if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isPlainObject(data) && !lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isEmpty(data)) {
    return data[`${col || '_id'}`];
  } else {
    return data;
  }
}
function getCarMarketSeoData(filterGroup, total) {
  if (!lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isPlainObject(filterGroup)) {
    filterGroup = {};
  } else {
    filterGroup = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.cloneDeep(filterGroup);
  }

  let title = [];
  let description = [];
  let location = [];
  let rangeFilter = [];
  let otherFilter = [];

  if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(filterGroup, 'state') || lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(filterGroup, 'area')) {
    location.push(`${lodash__WEBPACK_IMPORTED_MODULE_0___default.a.capitalize(lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(filterGroup, 'area') || '')}`);
    location.push(`${lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(Object(_params_stateList__WEBPACK_IMPORTED_MODULE_6__["getState"])(filterGroup.state), 'value') || ''}`);
  }

  location.push('Malaysia');
  location = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.compact(location).join(' ');
  const filterRanges = ['price', 'mileage', 'engineCapacity', 'year'];

  lodash__WEBPACK_IMPORTED_MODULE_0___default.a.forEach(filterRanges, function (filterRange) {
    if (filterGroup[filterRange + 'Range']) {
      rangeFilter.push(`${lodash__WEBPACK_IMPORTED_MODULE_0___default.a.capitalize(toSnakeCase(filterRange, ' '))} ${convertRangeFormatToText(convertToRangeFormat(filterGroup[filterRange + 'Range']), filterRange)}`);
    }
  });

  if (filterGroup.bodyType) {
    otherFilter.push(lodash__WEBPACK_IMPORTED_MODULE_0___default.a.capitalize(lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(Object(_params_bodyTypeList__WEBPACK_IMPORTED_MODULE_7__["getBodyType"])(filterGroup.bodyType), 'value') || ''));
  }

  if (filterGroup.fuelType) {
    otherFilter.push(lodash__WEBPACK_IMPORTED_MODULE_0___default.a.capitalize(lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(Object(_params_fuelTypeList__WEBPACK_IMPORTED_MODULE_8__["getFuelType"])(filterGroup.fuelType), 'value') || ''));
  }

  if (filterGroup.color) {
    otherFilter.push(`Color ${lodash__WEBPACK_IMPORTED_MODULE_0___default.a.capitalize(lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(Object(_params_colorList__WEBPACK_IMPORTED_MODULE_9__["getColor"])(filterGroup.color), 'value') || '')}`);
  }

  if (filterGroup.registrationUrl) {
    otherFilter.push(`With Registration Url`);
  }

  if (filterGroup.readyStock) {
    otherFilter.push(`Is Ready Stock`);
  }

  if (filterGroup.car360View) {
    otherFilter.push(`With Car 360 View`);
  }

  otherFilter = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.concat(otherFilter, rangeFilter).join(', ');
  title.push(`Search ${formatNumber(total) || 0}`);

  if (filterGroup.title) {
    title.push(lodash__WEBPACK_IMPORTED_MODULE_0___default.a.capitalize(filterGroup.title));
    title.push(lodash__WEBPACK_IMPORTED_MODULE_0___default.a.capitalize(filterGroup.title));
  } else {
    title.push(`${lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(Object(_params_carBrandsList__WEBPACK_IMPORTED_MODULE_5__["getCarBrand"])(lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(filterGroup, 'make')), 'value') || ''}`);
    title.push(`${lodash__WEBPACK_IMPORTED_MODULE_0___default.a.capitalize(lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(filterGroup, 'model') || '')}`);
  }

  title.push(lodash__WEBPACK_IMPORTED_MODULE_0___default.a.capitalize(filterGroup.condition || ''));
  title.push(lodash__WEBPACK_IMPORTED_MODULE_0___default.a.capitalize(filterGroup.transmission || ''));
  description = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.cloneDeep(title);
  title.push(`Cars for Sales in ${location} - CCAR.my #1 Car Social Platform.`);
  title = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.compact(title);
  title = title.join(' ');
  description.push(`Cars for Sales in ${location}${otherFilter ? '.' : ''}`);
  description.push(otherFilter);
  description.push('- CCAR.my #1 Car Social Platform.');
  description = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.compact(description);
  description = description.join(' ');
  let canonical = convertParameterToProductListSeoUrl(filterGroup);
  return {
    title,
    description,
    canonical
  };
}
function getProfileSeoData(profile) {
  if (!lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isPlainObject(profile)) {
    return {};
  } else {
    profile = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.cloneDeep(profile);
  }

  let title = [];
  let description = [];
  title.push(`${getUserName(profile, 'fullName') || ''}`);
  title.push(`'s Profile - CCAR.my #1 Car Social Platform `);
  title = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.compact(title);
  title = title.join(' ');
  description.push(`${getUserName(profile, 'fullName') || ''}`);
  description.push(`is on CCAR #1 Car Social Platform. Come and share car info with ${getUserName(profile, 'fullName') || ''} and others. CCAR connects all car lovers together.`);
  description = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.compact(description);
  description = description.join(' ');
  let canonical = `${Object(_functionContent__WEBPACK_IMPORTED_MODULE_10__["checkEnvReturnCmsUrl"])(_feathers__WEBPACK_IMPORTED_MODULE_11__["default"].io.io.uri)}/profile/${profile.userurlId}`;
  let images = [{
    url: profile.avatar,
    alt: 'CCAR User Profile Image'
  }];
  return {
    title,
    description,
    canonical,
    images
  };
}
function getCarFreakSeoData(data) {
  if (!lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isPlainObject(data)) {
    return {};
  } else {
    data = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.cloneDeep(data);
  }

  let title = [];
  let description = [];
  title.push(`${Object(_components_carFreak_config__WEBPACK_IMPORTED_MODULE_12__["parseTagStringToPlainString"])(data.title) || ''}`);
  title.push(`|`);
  title.push(`CarFreaks`);
  title.push(`- CCAR.my #1 Car Social Platform`);
  title = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.compact(title);
  title = title.join(' ');
  description.push(`${Object(_components_carFreak_config__WEBPACK_IMPORTED_MODULE_12__["parseTagStringToPlainString"])(data.content) || ''}`);

  if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isPlainObject(data.userId) && !lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isEmpty(data.userId)) {
    description.push('|');
    description.push(`Posted By ${getUserName(data.userId, 'fullName') || ''}`);
  }

  description = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.compact(description);
  description = description.join(' ');
  let canonical = `${Object(_functionContent__WEBPACK_IMPORTED_MODULE_10__["checkEnvReturnCmsUrl"])(_feathers__WEBPACK_IMPORTED_MODULE_11__["default"].io.io.uri)}/car-freaks/${data._id}`;
  let images = [{
    url: lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(data, 'mediaList[0].url') || '',
    alt: 'CCAR CarFreak Image'
  }];
  return {
    title,
    description,
    canonical,
    images
  };
}
function getSocialBoardSeoData(data) {
  if (!lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isPlainObject(data)) {
    return {};
  } else {
    data = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.cloneDeep(data);
  }

  let title = [];
  let description = [];
  title.push(`${Object(_components_carFreak_config__WEBPACK_IMPORTED_MODULE_12__["parseTagStringToPlainString"])(data.title) || ''}`);
  title.push(`|`);
  title.push(`Social Board`);
  title.push(`- CCAR.my #1 Car Social Platform`);
  title = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.compact(title);
  title = title.join(' ');
  description.push(`${Object(_components_carFreak_config__WEBPACK_IMPORTED_MODULE_12__["parseTagStringToPlainString"])(data.content) || ''}`);

  if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isPlainObject(data.userId) && !lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isEmpty(data.userId)) {
    description.push('|');
    description.push(`Posted By ${getUserName(data.userId, 'fullName') || ''}`);
  }

  description = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.compact(description);
  description = description.join(' ');
  let canonical = `${Object(_functionContent__WEBPACK_IMPORTED_MODULE_10__["checkEnvReturnCmsUrl"])(_feathers__WEBPACK_IMPORTED_MODULE_11__["default"].io.io.uri)}/social-board/${data._id}`;
  return {
    title,
    description,
    canonical
  };
}
function getClubSeoData(data) {
  if (!lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isPlainObject(data)) {
    return {};
  } else {
    data = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.cloneDeep(data);
  }

  let title = [];
  let description = [];
  title.push(`${data.clubName || ''}`);
  title.push(`|`);
  title.push(`Social Club`);
  title.push(`- CCAR.my #1 Car Social Platform`);
  title = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.compact(title);
  title = title.join(' ');
  description.push(`${data.clubBio || ''}`);

  if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isPlainObject(data.userId) && !lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isEmpty(data.userId)) {
    description.push('|');
    description.push(`Created By ${getUserName(data.userId, 'fullName') || ''}`);
  }

  description = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.compact(description);
  description = description.join(' ');
  let canonical = `${Object(_functionContent__WEBPACK_IMPORTED_MODULE_10__["checkEnvReturnCmsUrl"])(_feathers__WEBPACK_IMPORTED_MODULE_11__["default"].io.io.uri)}/social-club/${data._id}`;
  let images = [{
    url: lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(data, 'clubAvatar') || '',
    alt: 'CCAR CarFreak Image'
  }];
  return {
    title,
    description,
    canonical,
    images
  };
}
function getAllNewCarSeoData(data) {
  if (!lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isPlainObject(data)) {
    return {};
  } else {
    data = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.cloneDeep(data);
  }

  let title = [];
  let description = [];
  title.push(`${Object(_params_carBrandsList__WEBPACK_IMPORTED_MODULE_5__["getCarBrand"])(data.make).value || ''}`);
  title.push(`|`);
  title.push(`${lodash__WEBPACK_IMPORTED_MODULE_0___default.a.capitalize(data.model || '')}`);
  title.push(`|`);
  title.push(`All New Car - CCAR.my #1 Car Social Platform`);
  title = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.compact(title);
  title = title.join(' ');
  description.push(`View ${Object(_params_carBrandsList__WEBPACK_IMPORTED_MODULE_5__["getCarBrand"])(data.make).value || ''} ${lodash__WEBPACK_IMPORTED_MODULE_0___default.a.capitalize(data.model || '')} All New Car at CCAR.my now - CCAR.my #1 Car Social Platform  `);
  description = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.compact(description);
  description = description.join(' ');
  let canonical = `${Object(_functionContent__WEBPACK_IMPORTED_MODULE_10__["checkEnvReturnCmsUrl"])(_feathers__WEBPACK_IMPORTED_MODULE_11__["default"].io.io.uri)}/newcar/details/${data.make}/${data.model}`;
  let images = [{
    url: lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(data, 'uri') || '',
    alt: `CCAR ${Object(_params_carBrandsList__WEBPACK_IMPORTED_MODULE_5__["getCarBrand"])(data.make).value || ''} ${lodash__WEBPACK_IMPORTED_MODULE_0___default.a.capitalize(data.model || '')} Image`
  }];
  return {
    title,
    description,
    canonical,
    images
  };
}
function getLiveSeoData(data) {
  const apiDomain = Object(_components_live_config__WEBPACK_IMPORTED_MODULE_13__["getStreamUrl"])(_feathers__WEBPACK_IMPORTED_MODULE_11__["default"].io.io.uri);

  if (!lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isPlainObject(data)) {
    return {};
  } else {
    data = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.cloneDeep(data);
  }

  let title = [];
  let description = [];
  title.push(`CCAR LIVE`);
  title.push(`|`);
  title.push(`${lodash__WEBPACK_IMPORTED_MODULE_0___default.a.capitalize(data.user || 'Ccar User')}`);
  title.push(`- CCAR.my #1 Car Social Platform`);
  title = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.compact(title);
  title = title.join(' ');
  description.push(data.title);
  description.push(`View Car Live Streaming at CCAR.my now - CCAR.my #1 Car Social Platform  `);
  description = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.compact(description);
  description = description.join(' ');
  let canonical = `${Object(_functionContent__WEBPACK_IMPORTED_MODULE_10__["checkEnvReturnCmsUrl"])(_feathers__WEBPACK_IMPORTED_MODULE_11__["default"].io.io.uri)}/live/${data.id}`;
  let images = [{
    url: `${apiDomain}dealerVideoThumbnails/${data.id}.png`,
    alt: `Live Streaming Image`
  }];
  return {
    title,
    description,
    canonical,
    images
  };
}

/***/ }),

/***/ "./components/carFreak/components/club/club-avatar.jsx":
/*!*************************************************************!*\
  !*** ./components/carFreak/components/club/club-avatar.jsx ***!
  \*************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! antd */ "antd");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(antd__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-redux */ "react-redux");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var next_dist_client_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! next/dist/client/router */ "./node_modules/next/dist/client/router.js");
/* harmony import */ var next_dist_client_router__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(next_dist_client_router__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _common_function__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../common-function */ "./common-function.js");
/* harmony import */ var _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../redux/actions/app-actions */ "./redux/actions/app-actions.js");
/* harmony import */ var _general_light_box_gallery__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../general/light-box-gallery */ "./components/general/light-box-gallery.jsx");
/* harmony import */ var _profile_config__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../profile/config */ "./components/profile/config.js");
var __jsx = react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement;










const ClubAvatar = props => {
  const {
    0: tooltipVisible,
    1: setTooltipVisible
  } = Object(react__WEBPACK_IMPORTED_MODULE_2__["useState"])(false);
  return __jsx(react__WEBPACK_IMPORTED_MODULE_2___default.a.Fragment, null, __jsx("span", {
    className: `flex-items-align-center flex-justify-center ${props.className ? props.className : ''} ${props.redirectProfile ? 'cursor-pointer' : ''} `,
    onClick: e => {
      if (props.onClick) {
        props.onClick(e);
      }

      if (lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(props.data, ['_id']) && props.redirectProfile) {
        if (props.onRedirect) {
          props.onRedirect();
        }

        props.router.push(`/social-club/${props.data._id}`, undefined, {
          shallow: false
        });
      }
    }
  }, __jsx(_general_light_box_gallery__WEBPACK_IMPORTED_MODULE_7__["default"], {
    images: lodash__WEBPACK_IMPORTED_MODULE_1___default.a.compact([lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(props.data, ['clubAvatar'])])
  }, (data, setCurrentIndex, setVisible) => {
    return __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Tooltip"], {
      title: lodash__WEBPACK_IMPORTED_MODULE_1___default.a.isPlainObject(props.data) && !lodash__WEBPACK_IMPORTED_MODULE_1___default.a.isEmpty(props.data) ? lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(props.data, ['clubName']) || '' : '',
      visible: tooltipVisible,
      onVisibleChange: visible => {
        if (props.showTooltip) {
          setTooltipVisible(visible);
        }
      }
    }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Avatar"], {
      onClick: e => {
        if (!props.redirectProfile && props.showPreview) {
          setCurrentIndex(0);
          setVisible(true);
        }
      },
      size: Object(_common_function__WEBPACK_IMPORTED_MODULE_5__["isValidNumber"])(props.size) || props.size == 'small' || props.size == 'large' ? props.size : 'default',
      src: lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(props.data, ['clubAvatar']) || _profile_config__WEBPACK_IMPORTED_MODULE_8__["ccarLogo"],
      className: `${props.redirectProfile || props.showPreview ? 'cursor-pointer' : ''} ${props.avatarClassName ? props.avatarClassName : ''}`
    }));
  }), props.showNameRight && props.data ? __jsx("span", {
    className: `d-inline-block text-align-center headline margin-left-md ${props.textClassName ? props.textClassName : '  '}`
  }, props.renderName ? props.renderName(props.data) : `${lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(props.data, ['clubName'])}`) : null), __jsx("div", {
    className: `text-align-center headline ${props.textClassName ? props.textClassName : '  '}`
  }, props.showName && props.data && !props.showNameRight ? props.renderName ? props.renderName(props.data) : `${lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(props.data, ['clubName'])}` : null));
};

const mapStateToProps = state => ({
  app: state.app,
  user: state.user
});

const mapDispatchToProps = {
  loading: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_6__["loading"]
};
/* harmony default export */ __webpack_exports__["default"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_3__["connect"])(mapStateToProps, mapDispatchToProps)(antd__WEBPACK_IMPORTED_MODULE_0__["Form"].create()(Object(next_dist_client_router__WEBPACK_IMPORTED_MODULE_4__["withRouter"])(ClubAvatar))));

/***/ }),

/***/ "./components/carFreak/components/comment-box-1.jsx":
/*!**********************************************************!*\
  !*** ./components/carFreak/components/comment-box-1.jsx ***!
  \**********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! antd */ "antd");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(antd__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! moment */ "moment");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var next_dist_client_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/dist/client/router */ "./node_modules/next/dist/client/router.js");
/* harmony import */ var next_dist_client_router__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_dist_client_router__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react-redux */ "react-redux");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! uuid */ "uuid");
/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(uuid__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _feathers__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../feathers */ "./feathers.js");
/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../config */ "./components/carFreak/config.js");
/* harmony import */ var _like_post_button__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./like-post-button */ "./components/carFreak/components/like-post-button.jsx");
/* harmony import */ var _reply_box_1__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./reply-box-1 */ "./components/carFreak/components/reply-box-1.jsx");
/* harmony import */ var _social_input__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./social-input */ "./components/carFreak/components/social-input.jsx");
/* harmony import */ var _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../../redux/actions/app-actions */ "./redux/actions/app-actions.js");
/* harmony import */ var _common_function__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../../common-function */ "./common-function.js");
/* harmony import */ var _general_UserAvatar__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../general/UserAvatar */ "./components/general/UserAvatar.jsx");
/* harmony import */ var _general_ParseTag__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../general/ParseTag */ "./components/general/ParseTag.jsx");
var __jsx = react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement;

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

















const defaultHeight = 'auto';
const headerHeight = 100;
const imageHeight = 200;
const titleHeight = 40;
const footerHeight = 100;
const actionHeight = 40;
let uid = Object(uuid__WEBPACK_IMPORTED_MODULE_6__["v4"])();
const PAGE_SIZE = 6;
const commentInputRef = react__WEBPACK_IMPORTED_MODULE_4___default.a.createRef();

const CommentBox1 = props => {
  const {
    0: comment,
    1: setComment
  } = Object(react__WEBPACK_IMPORTED_MODULE_4__["useState"])({});
  const {
    0: height,
    1: setHeight
  } = Object(react__WEBPACK_IMPORTED_MODULE_4__["useState"])(defaultHeight);
  const {
    0: editMode,
    1: setEditMode
  } = Object(react__WEBPACK_IMPORTED_MODULE_4__["useState"])(false);
  const {
    0: totalLike,
    1: setTotalLike
  } = Object(react__WEBPACK_IMPORTED_MODULE_4__["useState"])(0);
  const {
    0: expandReplyKey,
    1: setExpandReplyKey
  } = Object(react__WEBPACK_IMPORTED_MODULE_4__["useState"])();
  const {
    0: text,
    1: setText
  } = Object(react__WEBPACK_IMPORTED_MODULE_4__["useState"])('');
  const {
    0: textEditMode,
    1: setTextEditMode
  } = Object(react__WEBPACK_IMPORTED_MODULE_4__["useState"])(false);
  const {
    0: messages,
    1: setMessages
  } = Object(react__WEBPACK_IMPORTED_MODULE_4__["useState"])([]);
  const {
    0: canSendMessage,
    1: setCanSendMessage
  } = Object(react__WEBPACK_IMPORTED_MODULE_4__["useState"])(true);
  const {
    0: messageTotal,
    1: setMessageTotal
  } = Object(react__WEBPACK_IMPORTED_MODULE_4__["useState"])(0);
  const {
    0: loading,
    1: setIsLoading
  } = Object(react__WEBPACK_IMPORTED_MODULE_4__["useState"])(false);
  const {
    0: focusIndicator,
    1: setFocusIndicator
  } = Object(react__WEBPACK_IMPORTED_MODULE_4__["useState"])(null);
  Object(react__WEBPACK_IMPORTED_MODULE_4__["useEffect"])(() => {
    if (lodash__WEBPACK_IMPORTED_MODULE_1___default.a.isPlainObject(props.data) && !lodash__WEBPACK_IMPORTED_MODULE_1___default.a.isEmpty(props.data)) {
      setComment(props.data);
    } else {
      setComment({});
    }
  }, [props.data]);
  Object(react__WEBPACK_IMPORTED_MODULE_4__["useEffect"])(() => {
    if (lodash__WEBPACK_IMPORTED_MODULE_1___default.a.isPlainObject(comment) && !lodash__WEBPACK_IMPORTED_MODULE_1___default.a.isEmpty(comment)) {
      setTotalLike(lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(comment, ['totalLike']) || 0);
      getData();
    } else {
      setTotalLike(0);
      setMessages([]);
    }
  }, [comment]); // useEffect(() => {
  //     if (!props.style || !isValidNumber(props.style.height) || !(parseFloat(props.style.height) >= defaultHeight)) {
  //         setHeight(defaultHeight);
  //     } else {
  //         setHeight(props.style.height);
  //     }
  // }, [props.style])

  function getData() {
    if (lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(comment, ['_id'])) {
      setIsLoading(true);
      _feathers__WEBPACK_IMPORTED_MODULE_7__["default"].service('chatmessagereplies').find({
        query: {
          messageId: comment._id,
          $populate: 'userId',
          $limit: PAGE_SIZE,
          $sort: {
            _id: -1
          },
          $skip: messages.length
        }
      }).then(res => {
        setIsLoading(false);

        if (res.data.length > 0) {
          let newMessages = messages.concat(res.data);
          setMessages(newMessages);
        } else {
          setMessages([]);
        }

        setMessageTotal(res.total);
      }).catch(err => {
        console.log(error);
        setIsLoading(false);
      });
    }
  }

  function handleSubmit(text) {
    setEditMode(false);

    if (props.onChange) {
      props.onChange(_objectSpread(_objectSpread({}, comment), {}, {
        message: text
      }));
    }

    if (lodash__WEBPACK_IMPORTED_MODULE_1___default.a.isPlainObject(comment) && !lodash__WEBPACK_IMPORTED_MODULE_1___default.a.isEmpty(comment) && lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(comment, ['_id']) && editMode) {
      _feathers__WEBPACK_IMPORTED_MODULE_7__["default"].authenticate().then(res => {
        _feathers__WEBPACK_IMPORTED_MODULE_7__["default"].service('chatmessages').patch(comment._id, {
          message: text
        }).then(res1 => {
          if (props.onUpdate) {
            res1.userId = res.user;
            props.onUpdate(res1);
          }
        }).catch(err => {
          console.log(err);
          antd__WEBPACK_IMPORTED_MODULE_0__["message"].error("Unable to edit comment. T.T");
        });
      }).catch(err => {
        antd__WEBPACK_IMPORTED_MODULE_0__["message"].error("Unable to edit comment. T.T");
      });
    }
  }

  function handleRemove(data) {
    if (lodash__WEBPACK_IMPORTED_MODULE_1___default.a.isPlainObject(data) && !lodash__WEBPACK_IMPORTED_MODULE_1___default.a.isEmpty(data) && lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(data, ['_id'])) {
      _feathers__WEBPACK_IMPORTED_MODULE_7__["default"].service('chatmessages').remove(data._id).then(res => {
        antd__WEBPACK_IMPORTED_MODULE_0__["message"].success('Comment Deleted');

        if (props.onRemove) {
          props.onRemove(res);
        }
      }).catch(err => {
        console.log('Unable to delete comment.');
      });
    }
  }

  function handleReplySubmit(text) {
    if (!lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(props.user, ['authenticated']) || !lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(props.user, ['info', 'user', '_id'])) {
      antd__WEBPACK_IMPORTED_MODULE_0__["message"].error('Please Login First!');
      props.loginMode(true);
      return;
    }

    if (!lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(comment, ['_id'])) {
      antd__WEBPACK_IMPORTED_MODULE_0__["message"].error('Comment Not Found!');
      return;
    }

    if (canSendMessage) {
      _feathers__WEBPACK_IMPORTED_MODULE_7__["default"].authenticate().then(res => {
        _feathers__WEBPACK_IMPORTED_MODULE_7__["default"].service('chatmessagereplies').create({
          messageId: comment._id,
          userId: res.user._id,
          message: text
        }).then(res1 => {
          setText('');
          setCanSendMessage(false);
          res1.userId = res.user;
          setMessages(messages.concat([res1]));
          setMessageTotal(messageTotal + 1);
          setTimeout(() => {
            setCanSendMessage(true);
          }, _config__WEBPACK_IMPORTED_MODULE_8__["chatRestrictTime"]);
        }).catch(err => {
          console.log(err);
        });
      }).catch(err => {
        console.log(err);
      });
    } else {
      antd__WEBPACK_IMPORTED_MODULE_0__["message"].warning('You are typing too fast!');
    }
  }

  ;

  function handleReplyChange(data) {
    if (lodash__WEBPACK_IMPORTED_MODULE_1___default.a.isPlainObject(data) && !lodash__WEBPACK_IMPORTED_MODULE_1___default.a.isEmpty(data)) {
      let newMessages = lodash__WEBPACK_IMPORTED_MODULE_1___default.a.map(messages, function (v) {
        return lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(v, ['_id']) == lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(data, ['_id']) ? data : v;
      });

      setMessages(newMessages);
    }
  }

  function handleReplyRemove(data) {
    if (lodash__WEBPACK_IMPORTED_MODULE_1___default.a.isPlainObject(data) && !lodash__WEBPACK_IMPORTED_MODULE_1___default.a.isEmpty(data)) {
      let newMessages = lodash__WEBPACK_IMPORTED_MODULE_1___default.a.filter(messages, function (v) {
        return lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(v, ['_id']) != lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(data, ['_id']);
      });

      setMessages(newMessages);
    }
  }

  function addAlias(value, id) {
    if (value && id) {
      setTextEditMode(true);
      setText(Object(_config__WEBPACK_IMPORTED_MODULE_8__["getTagString"])(value, id) + ' ');
      setTimeout(() => {
        setTextEditMode(false);
        setText('');
        setFocusIndicator(Object(uuid__WEBPACK_IMPORTED_MODULE_6__["v4"])());
      }, 500);
    }
  }

  return Object(_common_function__WEBPACK_IMPORTED_MODULE_13__["notEmptyLength"])(Object(_common_function__WEBPACK_IMPORTED_MODULE_13__["objectRemoveEmptyValue"])(comment)) ? __jsx(react__WEBPACK_IMPORTED_MODULE_4___default.a.Fragment, null, __jsx("div", {
    className: `flex-justify-space-between flex-items-align-start ${props.className ? props.className : ''}`,
    style: _objectSpread({}, props.style)
  }, __jsx("span", {
    className: "d-inline-block",
    style: {
      width: 50
    }
  }, __jsx(_general_UserAvatar__WEBPACK_IMPORTED_MODULE_14__["default"], {
    redirectProfile: true,
    data: lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(comment, ['userId']),
    size: 30
  })), __jsx("span", {
    className: "d-inline-block headline width-80"
  }, __jsx("span", {
    className: "headline font-weight-black padding-right-sm black"
  }, Object(_common_function__WEBPACK_IMPORTED_MODULE_13__["getUserName"])(lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(comment, ['userId']), 'freakId')), editMode ? __jsx(_social_input__WEBPACK_IMPORTED_MODULE_11__["default"], {
    placeholder: "What's on your mind?",
    editMode: true,
    clickOutsideSubmit: true,
    excludeEnter: true,
    clubId: props.clubId,
    text: `${lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(comment, ['message']) || ''}`,
    emojiPosition: {
      right: 33,
      bottom: 0
    },
    onSubmit: text => {
      handleSubmit(text);
      setEditMode(false);
    }
  }) : __jsx(_general_ParseTag__WEBPACK_IMPORTED_MODULE_15__["default"], {
    data: lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(comment, ['message']) || '',
    className: "width-100 text-overflow-break"
  }), __jsx("div", {
    className: "width-100 flex-justify-start flex-items-align-center",
    style: {
      padding: 0
    }
  }, __jsx("span", {
    className: "small-text margin-right-md grey font-weight-light"
  }, Object(_common_function__WEBPACK_IMPORTED_MODULE_13__["getPlural"])('Like', 'Likes', totalLike, true)), __jsx("span", {
    className: "small-text margin-right-md grey font-weight-light  cursor-pointer",
    onClick: () => {
      setExpandReplyKey(expandReplyKey ? null : '1');
      setFocusIndicator(Object(uuid__WEBPACK_IMPORTED_MODULE_6__["v4"])());
    }
  }, Object(_common_function__WEBPACK_IMPORTED_MODULE_13__["getPlural"])('Reply', 'Replies', messageTotal, true))), __jsx("div", {
    className: "width-100",
    style: {
      padding: 0
    }
  }, __jsx("span", {
    className: "margin-right-sm small-text"
  }, moment__WEBPACK_IMPORTED_MODULE_2___default()(comment.createdAt).fromNow()), __jsx(_like_post_button__WEBPACK_IMPORTED_MODULE_9__["default"], {
    className: "margin-right-sm",
    likeOn: "message",
    autoHandle: true,
    messageId: lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(comment, ['_id']),
    onClick: actived => {
      setTotalLike(actived ? totalLike + 1 : totalLike - 1);
    },
    activeButton: __jsx("span", {
      className: "small-text blue font-weight-light cursor-pointer"
    }, "Liked")
  }, __jsx("span", {
    className: "small-text grey font-weight-light cursor-pointer"
  }, "Like")), __jsx("span", {
    className: "small-text margin-right-sm grey font-weight-light cursor-pointer",
    onClick: () => {
      setExpandReplyKey('1');
      addAlias(Object(_common_function__WEBPACK_IMPORTED_MODULE_13__["getUserName"])(lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(comment, ['userId']), 'freakId') || '', Object(_common_function__WEBPACK_IMPORTED_MODULE_13__["getObjectId"])(lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(comment, ['userId'])) || '');
    }
  }, "Reply")), __jsx("div", {
    className: "width-100"
  }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Collapse"], {
    className: "collapse-no-header border-none collapse-body-no-padding collapse-body-overflow-visible",
    activeKey: expandReplyKey
  }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Collapse"].Panel, {
    key: "1",
    showArrow: false
  }, __jsx("div", {
    className: "width-100"
  }, __jsx("div", {
    className: "padding-left-xl margin-y-sm"
  }, lodash__WEBPACK_IMPORTED_MODULE_1___default.a.map(messages, function (v) {
    return __jsx("div", null, __jsx(_reply_box_1__WEBPACK_IMPORTED_MODULE_10__["default"], {
      data: v,
      clubId: props.clubId,
      onChange: data => {
        handleReplyChange(data);
      },
      onRemove: data => {
        handleReplyRemove(data);
      },
      handleReply: (name, id) => {
        if (name && id) {
          setExpandReplyKey('1');
          addAlias(name || '', Object(_common_function__WEBPACK_IMPORTED_MODULE_13__["getObjectId"])(id) || '');
        }
      }
    }));
  }))), __jsx("div", null, __jsx(_social_input__WEBPACK_IMPORTED_MODULE_11__["default"], {
    placeholder: "What's on your mind?",
    editMode: textEditMode,
    text: text || '',
    inputRef: commentInputRef,
    excludeEnter: true,
    clubId: props.clubId,
    emojiPosition: {
      bottom: 0,
      right: 33
    },
    onChange: (text, finalText) => {
      if (!text) {
        setText('');
      }
    },
    focusIndicator: focusIndicator,
    onSubmit: text => {
      handleReplySubmit(text);
    }
  })))))), __jsx("span", {
    className: "d-inline-block",
    style: {
      width: 30
    }
  }, lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(props.user, ['authenticated']) && lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(props.user, ['info', 'user', '_id']) && lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(props.user, ['info', 'user', '_id']) == lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(comment, ['userId', '_id']) ? __jsx("span", {
    className: "d-inline-block",
    id: `comment-menu-${uid}`
  }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Dropdown"], {
    getPopupContainer: () => document.getElementById(`comment-menu-${uid}`),
    overlay: __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Menu"], null, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Menu"].Item, {
      onClick: e => {
        setEditMode(true);
      }
    }, __jsx("span", null, "Edit")), __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Menu"].Item, null, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Popconfirm"], {
      title: "Are you sure to delete this comment?",
      onConfirm: e => {
        handleRemove(comment);
      },
      okText: "Yes",
      cancelText: "No"
    }, __jsx("span", null, "Delete"))))
  }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Icon"], {
    type: "more",
    className: "commentMore",
    style: {
      fontSize: 20
    }
  }))) : null))) : null;
};

const mapStateToProps = state => ({
  app: state.app,
  user: state.user
});

const mapDispatchToProps = {
  loading: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_12__["loading"],
  loginMode: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_12__["loginMode"]
};
/* harmony default export */ __webpack_exports__["default"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_5__["connect"])(mapStateToProps, mapDispatchToProps)(antd__WEBPACK_IMPORTED_MODULE_0__["Form"].create()(Object(next_dist_client_router__WEBPACK_IMPORTED_MODULE_3__["withRouter"])(CommentBox1))));

/***/ }),

/***/ "./components/carFreak/components/like-post-button.jsx":
/*!*************************************************************!*\
  !*** ./components/carFreak/components/like-post-button.jsx ***!
  \*************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! antd */ "antd");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(antd__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! axios */ "axios");
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var next_dist_client_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/dist/client/router */ "./node_modules/next/dist/client/router.js");
/* harmony import */ var next_dist_client_router__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_dist_client_router__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react-redux */ "react-redux");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _feathers__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../feathers */ "./feathers.js");
/* harmony import */ var _icon__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../icon */ "./icon.js");
/* harmony import */ var _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../redux/actions/app-actions */ "./redux/actions/app-actions.js");
var __jsx = react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement;

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }










const TIME_OUT = 1000;

const LikePostButton = props => {
  const {
    0: likeOn,
    1: setLikeOn
  } = Object(react__WEBPACK_IMPORTED_MODULE_4__["useState"])('chat');
  const {
    0: postLike,
    1: setPostLike
  } = Object(react__WEBPACK_IMPORTED_MODULE_4__["useState"])({});
  const {
    0: isActived,
    1: setIsActived
  } = Object(react__WEBPACK_IMPORTED_MODULE_4__["useState"])(false);
  const {
    0: timeoutFunc,
    1: setTimeoutFunc
  } = Object(react__WEBPACK_IMPORTED_MODULE_4__["useState"])();
  Object(react__WEBPACK_IMPORTED_MODULE_4__["useEffect"])(() => {
    setLikeOn(props.likeOn || 'chat');
  }, [props.likeOn]);
  Object(react__WEBPACK_IMPORTED_MODULE_4__["useEffect"])(() => {
    if (lodash__WEBPACK_IMPORTED_MODULE_2___default.a.isPlainObject(props.postLike) && !lodash__WEBPACK_IMPORTED_MODULE_2___default.a.isEmpty(props.postLike)) {
      setPostLike(props.postLike);
    } else {
      setPostLike({});
    }
  }, [props.postLike]);
  Object(react__WEBPACK_IMPORTED_MODULE_4__["useEffect"])(() => {
    if (lodash__WEBPACK_IMPORTED_MODULE_2___default.a.isPlainObject(postLike) && !lodash__WEBPACK_IMPORTED_MODULE_2___default.a.isEmpty(postLike)) {
      setIsActived(true);
    } else {
      setIsActived(false);
    }
  }, [postLike]);
  Object(react__WEBPACK_IMPORTED_MODULE_4__["useEffect"])(() => {}, [isActived]);
  Object(react__WEBPACK_IMPORTED_MODULE_4__["useEffect"])(() => {
    if (props.autoHandle && likeOn) {
      getPostLike();
    }
  }, [props.autoHandle, likeOn]);

  function getPostLike() {
    if (props[`${likeOn}Id`] && lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(props.user, ['authenticated']) && lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(props.user, ['info', 'user', '_id'])) {
      let query = {};
      query.likeOn = likeOn;
      query[`${likeOn}Id`] = props[`${likeOn}Id`];
      query.userId = lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(props.user, ['info', 'user', '_id']);
      _feathers__WEBPACK_IMPORTED_MODULE_6__["default"].service('chatlikes').find({
        query: _objectSpread({}, query)
      }).then(res => {
        setPostLike(lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(res, ['data', 0]) || {});
      }).catch(err => {
        console.log(err);
      });
    }
  }

  function onClickLike() {
    if (!props.readOnly) {
      if (!lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(props.user, ['authenticated']) && !lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(props.user, ['info', 'user', '_id'])) {
        antd__WEBPACK_IMPORTED_MODULE_0__["message"].error('Please Login First!');
        props.loginMode(true);
        return;
      }

      switch (likeOn) {
        case 'chat':
          break;

        case 'message':
          break;

        case 'reply':
          break;

        default:
          antd__WEBPACK_IMPORTED_MODULE_0__["message"].error('Content Not Found.');
          return;
      }

      if (props[`${likeOn}Id`]) {
        let actived = !isActived;
        setIsActived(actived);

        if (timeoutFunc) {
          clearTimeout(timeoutFunc);
        }

        if (props.onClick) {
          props.onClick(actived);
        }

        setTimeoutFunc(setTimeout(() => {
          //Only run if the like status no same
          let query = {
            userId: lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(props.user, ['info', 'user', '_id']),
            type: actived ? 'add' : 'remove',
            likeOn: likeOn
          };
          query[`${likeOn}Id`] = props[`${likeOn}Id`];
          axios__WEBPACK_IMPORTED_MODULE_1___default.a.post(`${_feathers__WEBPACK_IMPORTED_MODULE_6__["default"].io.io.uri}updateLike`, query, {
            headers: {
              'Authorization': _feathers__WEBPACK_IMPORTED_MODULE_6__["default"].settings.storage.storage.storage['feathers-jwt']
            }
          }).then(res => {
            if (props.onSuccessUpdate) {
              props.onSuccessUpdate(actived, lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(res, ['data']));
            }

            if (lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(res.data, ['type']) == 'add') {
              setPostLike(res.data);
            } else {
              setPostLike({});
            }

            setTimeoutFunc();
          }).catch(err => {
            setTimeoutFunc();
            console.log(err);
            console.log('not able to like');
          });
        }, TIME_OUT));
      } else {
        antd__WEBPACK_IMPORTED_MODULE_0__["message"].error('Post Not Found');
      }
    }
  }

  return __jsx("span", {
    className: `${props.className ? props.className : ''}`,
    onClick: e => {
      if (!props.readOnly) {
        onClickLike();
      }
    }
  }, !isActived ? props.children ? props.children : __jsx("span", {
    className: "flex-items-align-center cursor-pointer"
  }, __jsx("span", {
    className: "margin-right-sm"
  }, __jsx("img", {
    src: _icon__WEBPACK_IMPORTED_MODULE_7__["carFreakLikeGreyIcon"],
    style: {
      width: 35,
      height: 25
    },
    className: "cursor-pointer"
  })), __jsx("span", {
    className: "headline"
  }, props.text ? props.text(false) || 'Like' : 'Like')) : props.activeButton ? props.activeButton : __jsx("span", {
    className: "flex-items-align-center cursor-pointer"
  }, __jsx("span", {
    className: "margin-right-sm"
  }, __jsx("img", {
    src: _icon__WEBPACK_IMPORTED_MODULE_7__["carFreakLikeIcon"],
    style: {
      width: 35,
      height: 25
    },
    className: "cursor-pointer"
  })), __jsx("span", {
    className: "headline"
  }, props.text ? props.text(true) || 'Liked' : 'Liked')));
};

const mapStateToProps = state => ({
  app: state.app,
  user: state.user
});

const mapDispatchToProps = {
  loading: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_8__["loading"],
  loginMode: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_8__["loginMode"]
};
/* harmony default export */ __webpack_exports__["default"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_5__["connect"])(mapStateToProps, mapDispatchToProps)(antd__WEBPACK_IMPORTED_MODULE_0__["Form"].create()(Object(next_dist_client_router__WEBPACK_IMPORTED_MODULE_3__["withRouter"])(LikePostButton))));

/***/ }),

/***/ "./components/carFreak/components/post-menu.jsx":
/*!******************************************************!*\
  !*** ./components/carFreak/components/post-menu.jsx ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _ant_design_icons__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ant-design/icons */ "@ant-design/icons");
/* harmony import */ var _ant_design_icons__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_ant_design_icons__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! antd */ "antd");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(antd__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var next_dist_client_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/dist/client/router */ "./node_modules/next/dist/client/router.js");
/* harmony import */ var next_dist_client_router__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_dist_client_router__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react-redux */ "react-redux");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _save_post_button__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./save-post-button */ "./components/carFreak/components/save-post-button.jsx");
/* harmony import */ var _profile_FollowButton__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../profile/FollowButton */ "./components/profile/FollowButton.jsx");
/* harmony import */ var _general_ShareButtonDialog__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../general/ShareButtonDialog */ "./components/general/ShareButtonDialog.jsx");
/* harmony import */ var _general_ReportButton__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../general/ReportButton */ "./components/general/ReportButton.jsx");
var __jsx = react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement;










const postCommentRef = react__WEBPACK_IMPORTED_MODULE_4___default.a.createRef();

const PostMenu = props => {
  const {
    0: post,
    1: setPost
  } = Object(react__WEBPACK_IMPORTED_MODULE_4__["useState"])({});
  Object(react__WEBPACK_IMPORTED_MODULE_4__["useEffect"])(() => {
    if (lodash__WEBPACK_IMPORTED_MODULE_2___default.a.isPlainObject(props.post) && !lodash__WEBPACK_IMPORTED_MODULE_2___default.a.isEmpty(props.post)) {
      setPost(props.post);
    } else {
      setPost({});
    }
  }, [props.post]);
  return __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Dropdown"], {
    overlay: __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Menu"], null, lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(props.user, ['authenticated']) && lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(props.user, ['info', 'user', '_id']) && lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(props.user, ['info', 'user', '_id']) == lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(post, ['userId', '_id']) && lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(post, ['chatType']) != 'event' ? [__jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Menu"].Item, {
      key: lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(post, ['_id']) + 'editBtn',
      className: "no-padding",
      onClick: e => {
        if (props.onEditPostClick) {
          props.onEditPostClick(post);
        }
      }
    }, __jsx("span", {
      className: "d-inline-block padding-x-sm padding-y-xs"
    }, "Edit")), __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Menu"].Item, {
      key: lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(post, ['_id']) + 'removeBtn',
      className: "no-padding"
    }, __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Popconfirm"], {
      title: "Are you sure to delete this post?",
      onConfirm: e => {
        if (props.onRemovePostClick) {
          props.onRemovePostClick(post);
        }
      },
      okText: "Yes",
      cancelText: "No"
    }, __jsx("span", {
      className: "d-inline-block padding-x-sm padding-y-xs"
    }, "Delete")))] : null, lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(props.user, ['authenticated']) && lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(props.user, ['info', 'user', '_id']) && lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(props.user, ['info', 'user', '_id']) != lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(post, ['userId', '_id']) && lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(post, ['chatType']) != 'event' ? __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Menu"].Item, {
      key: lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(post, ['_id']) + 'saveBtn',
      className: "no-padding"
    }, __jsx(_save_post_button__WEBPACK_IMPORTED_MODULE_6__["default"], {
      userId: lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(props.user, ['info', 'user', '_id']),
      chatId: lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(post, ['_id']),
      saveButton: () => {
        return __jsx("span", {
          className: "grey-darken-3 d-inline-block padding-x-sm padding-y-xs"
        }, __jsx(_ant_design_icons__WEBPACK_IMPORTED_MODULE_0__["BookOutlined"], {
          className: "margin-right-xs"
        }), "Save Post");
      },
      savedButton: () => {
        return __jsx("span", {
          className: "d-inline-block padding-x-sm padding-y-xs"
        }, __jsx(_ant_design_icons__WEBPACK_IMPORTED_MODULE_0__["BookFilled"], {
          className: "margin-right-xs"
        }), "Saved Post");
      },
      notify: true
    })) : null, lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(props.user, ['authenticated']) && lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(props.user, ['info', 'user', '_id']) && lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(props.user, ['info', 'user', '_id']) != lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(post, ['userId', '_id']) ? [__jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Menu"].Item, {
      key: lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(post, ['_id']) + 'followBtn',
      className: "no-padding"
    }, __jsx(_profile_FollowButton__WEBPACK_IMPORTED_MODULE_7__["default"], {
      type: "user",
      followerId: lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(props.user, ['info', 'user', '_id']),
      userId: lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(post, ['userId', '_id']),
      followButton: () => {
        return __jsx("span", {
          className: "grey-darken-3 d-inline-block padding-x-sm padding-y-xs"
        }, "Follow");
      },
      followingButton: () => {
        return __jsx("span", {
          className: "d-inline-block padding-x-sm padding-y-xs"
        }, __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Icon"], {
          type: "check",
          style: {
            color: '#F57F17'
          },
          className: "margin-right-xs"
        }), "Following");
      },
      handleSuccess: data => {
        antd__WEBPACK_IMPORTED_MODULE_1__["message"].success(data.type == 'remove' ? 'Unfollowed' : 'Followed');
      },
      handleError: err => {
        antd__WEBPACK_IMPORTED_MODULE_1__["message"].error(err.message);
      }
    })), __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Menu"].Item, {
      key: lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(post, ['_id']) + 'reportBtn',
      className: "no-padding"
    }, __jsx(_general_ReportButton__WEBPACK_IMPORTED_MODULE_9__["default"], {
      type: "chat",
      reporterId: lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(props.user, ['info', 'user', '_id']),
      chatId: lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(post, ['_id']),
      reportButton: () => {
        return __jsx("span", {
          className: "red d-inline-block padding-x-sm padding-y-xs"
        }, "Report");
      },
      cancelButton: () => {
        return null;
      },
      handleSuccess: data => {
        antd__WEBPACK_IMPORTED_MODULE_1__["message"].success(data.type == 'cancel' ? 'Canceled' : 'Reported');
      },
      handleError: err => {
        antd__WEBPACK_IMPORTED_MODULE_1__["message"].error(err.message);
      }
    }))] : null, __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Menu"].Item, {
      key: lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(post, ['_id']) + 'shareBtn',
      className: "no-padding"
    }, __jsx(_general_ShareButtonDialog__WEBPACK_IMPORTED_MODULE_8__["default"], {
      link: `/${lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(post, ['chatType']) == 'event' ? 'event-post' : lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(post, ['chatType']) == 'socialboard' ? 'social-board' : 'car-freaks'}/${lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(post, ['_id'])}`
    }, __jsx("span", {
      className: "d-inline-block padding-x-sm padding-y-xs"
    }, "Share Link"))))
  }, props.children || __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Icon"], {
    type: "more",
    className: "black",
    style: {
      fontSize: 20
    }
  }));
};

const mapStateToProps = state => ({
  app: state.app,
  user: state.user
});

const mapDispatchToProps = {};
/* harmony default export */ __webpack_exports__["default"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_5__["connect"])(mapStateToProps, mapDispatchToProps)(antd__WEBPACK_IMPORTED_MODULE_1__["Form"].create()(Object(next_dist_client_router__WEBPACK_IMPORTED_MODULE_3__["withRouter"])(PostMenu))));

/***/ }),

/***/ "./components/carFreak/components/post-modal.jsx":
/*!*******************************************************!*\
  !*** ./components/carFreak/components/post-modal.jsx ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _ant_design_icons__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ant-design/icons */ "@ant-design/icons");
/* harmony import */ var _ant_design_icons__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_ant_design_icons__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! antd */ "antd");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(antd__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! moment */ "moment");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react-redux */ "react-redux");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _common_function__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../common-function */ "./common-function.js");
/* harmony import */ var _feathers__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../feathers */ "./feathers.js");
/* harmony import */ var _icon__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../icon */ "./icon.js");
/* harmony import */ var _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../redux/actions/app-actions */ "./redux/actions/app-actions.js");
/* harmony import */ var _general_LightBoxCarousel__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../general/LightBoxCarousel */ "./components/general/LightBoxCarousel.jsx");
/* harmony import */ var _general_ParseTag__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../general/ParseTag */ "./components/general/ParseTag.jsx");
/* harmony import */ var _general_ScrollLoadWrapper__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../general/ScrollLoadWrapper */ "./components/general/ScrollLoadWrapper.jsx");
/* harmony import */ var _general_UserAvatar__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../general/UserAvatar */ "./components/general/UserAvatar.jsx");
/* harmony import */ var _live_config__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../live/config */ "./components/live/config.js");
/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../config */ "./components/carFreak/config.js");
/* harmony import */ var _comment_box_1__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./comment-box-1 */ "./components/carFreak/components/comment-box-1.jsx");
/* harmony import */ var _like_post_button__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./like-post-button */ "./components/carFreak/components/like-post-button.jsx");
/* harmony import */ var _social_input__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./social-input */ "./components/carFreak/components/social-input.jsx");
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! next/router */ "next/router");
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_19___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_19__);
/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! next/link */ "./node_modules/next/link.js");
/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_20___default = /*#__PURE__*/__webpack_require__.n(next_link__WEBPACK_IMPORTED_MODULE_20__);
/* harmony import */ var _route__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../../../route */ "./route.js");
var __jsx = react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement;

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }























const messagePageSize = 6;
const {
  TextArea
} = antd__WEBPACK_IMPORTED_MODULE_1__["Input"];
const postCommentRef = react__WEBPACK_IMPORTED_MODULE_4___default.a.createRef();

const PostModal = props => {
  const {
    0: newPostModalComment,
    1: setNewPostModalComment
  } = Object(react__WEBPACK_IMPORTED_MODULE_4__["useState"])(false);
  const {
    0: messages,
    1: setMessages
  } = Object(react__WEBPACK_IMPORTED_MODULE_4__["useState"])([]);
  const {
    0: post,
    1: setPost
  } = Object(react__WEBPACK_IMPORTED_MODULE_4__["useState"])({});
  const {
    0: postLike,
    1: setPostLike
  } = Object(react__WEBPACK_IMPORTED_MODULE_4__["useState"])({});
  const {
    0: message,
    1: setMessage
  } = Object(react__WEBPACK_IMPORTED_MODULE_4__["useState"])('');
  const {
    0: messageTotal,
    1: setMessageTotal
  } = Object(react__WEBPACK_IMPORTED_MODULE_4__["useState"])(0);
  const {
    0: totalLike,
    1: setTotalLike
  } = Object(react__WEBPACK_IMPORTED_MODULE_4__["useState"])(0);
  const {
    0: canSendMessage,
    1: setCanSendMessage
  } = Object(react__WEBPACK_IMPORTED_MODULE_4__["useState"])(true);
  const {
    0: isLoading,
    1: setIsLoading
  } = Object(react__WEBPACK_IMPORTED_MODULE_4__["useState"])(false);
  const {
    0: focused,
    1: setFocused
  } = Object(react__WEBPACK_IMPORTED_MODULE_4__["useState"])(false);
  const {
    form
  } = props;
  const {
    getFieldDecorator
  } = form;
  Object(react__WEBPACK_IMPORTED_MODULE_4__["useEffect"])(() => {
    if (lodash__WEBPACK_IMPORTED_MODULE_2___default.a.isPlainObject(props.chatInfo) && !lodash__WEBPACK_IMPORTED_MODULE_2___default.a.isEmpty(props.chatInfo)) {
      setFocused(false);
      setMessages([]);
      setPost(props.chatInfo);
    } else {
      setPost({});
    }
  }, [props.chatInfo]);
  Object(react__WEBPACK_IMPORTED_MODULE_4__["useEffect"])(() => {
    if (lodash__WEBPACK_IMPORTED_MODULE_2___default.a.isPlainObject(props.postLike) && !lodash__WEBPACK_IMPORTED_MODULE_2___default.a.isEmpty(props.postLike)) {
      setPostLike(props.postLike);
    } else {
      setPostLike({});
    }
  }, [props.postLike]);
  Object(react__WEBPACK_IMPORTED_MODULE_4__["useEffect"])(() => {
    if (lodash__WEBPACK_IMPORTED_MODULE_2___default.a.isPlainObject(post) && !lodash__WEBPACK_IMPORTED_MODULE_2___default.a.isEmpty(post) && newPostModalComment) {
      getData();
    } else {
      setMessages([]);
    }

    setTotalLike(!lodash__WEBPACK_IMPORTED_MODULE_2___default.a.isNaN(parseInt(lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(post, ['totalLike']))) ? Object(_common_function__WEBPACK_IMPORTED_MODULE_6__["formatNumber"])(lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(post, ['totalLike']), null, true, 0, 0) : 0);
  }, [post, newPostModalComment]);
  Object(react__WEBPACK_IMPORTED_MODULE_4__["useEffect"])(() => {
    let visibleMode = props.visibleMode ? props.visibleMode === true ? true : false : false;
    setNewPostModalComment(visibleMode);

    if (postCommentRef.current && !focused) {
      if (postCommentRef.current.focus) {
        postCommentRef.current.focus();
      }

      setFocused(true);
    }
  });

  function closeModal() {
    props.changeVisibleMode(false);
    setNewPostModalComment(false);
    setMessage('');
    setMessages([]);
    setCanSendMessage(true);
  }

  function handleSubmit(text) {
    if (!lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(props.user, ['authenticated']) && !lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(props.user, ['info', 'user', '_id'])) {
      antd__WEBPACK_IMPORTED_MODULE_1__["message"].error('Please Login First!');
      props.loginMode(true);
      return;
    }

    if (lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(post, ['_id']) && text) {
      if (canSendMessage) {
        _feathers__WEBPACK_IMPORTED_MODULE_7__["default"].authenticate().then(res => {
          _feathers__WEBPACK_IMPORTED_MODULE_7__["default"].service('chatmessages').create({
            chatId: post._id,
            userId: res.user._id,
            message: text
          }).then(res1 => {
            if (props.onUpdatePost) {
              props.onUpdatePost(_objectSpread(_objectSpread({}, post), {}, {
                totalReply: messageTotal + 1
              }));
            }

            setMessage('');
            setCanSendMessage(false);
            res1.userId = res.user; //for new message appear at top after submit

            let newData = [res1];
            setMessages(newData.concat(messages)); // setMessages(messages.concat([res1]));

            setMessageTotal(messageTotal + 1);
            setTimeout(() => {
              setCanSendMessage(true);
            }, _config__WEBPACK_IMPORTED_MODULE_15__["chatRestrictTime"]);
          }).catch(err => {
            console.log('Unable to send messages.');
          });
        }).catch(err => {
          return antd__WEBPACK_IMPORTED_MODULE_1__["message"].error("Please Login.");
        });
      } else {
        antd__WEBPACK_IMPORTED_MODULE_1__["message"].warning('You are typing too fast...');
      }
    }
  }

  ;

  function getData() {
    if (lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(post, ['_id'])) {
      setIsLoading(true);
      _feathers__WEBPACK_IMPORTED_MODULE_7__["default"].service('chatmessages').find({
        query: {
          chatId: post._id,
          $populate: 'userId',
          $limit: messagePageSize,
          $sort: {
            _id: -1
          },
          $skip: messages.length
        }
      }).then(res => {
        setIsLoading(false);

        if (res.data.length > 0) {
          let newMessages = messages.concat(res.data);
          setMessages(newMessages);
        } //if not found , remain , no need set empty
        // else {
        //     setMessages([])
        // }


        setMessageTotal(res.total);
      }).catch(err => {
        console.log(err);
        setIsLoading(false);
      });
    }
  }

  function handleCommentChange(data) {
    if (lodash__WEBPACK_IMPORTED_MODULE_2___default.a.isPlainObject(data) && !lodash__WEBPACK_IMPORTED_MODULE_2___default.a.isEmpty(data)) {
      let newMessages = lodash__WEBPACK_IMPORTED_MODULE_2___default.a.map(messages, function (v) {
        return lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(v, ['_id']) == lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(data, ['_id']) ? data : v;
      });

      setMessages(newMessages);
    }
  }

  function handleRemoveComment(data) {
    if (lodash__WEBPACK_IMPORTED_MODULE_2___default.a.isPlainObject(data) && !lodash__WEBPACK_IMPORTED_MODULE_2___default.a.isEmpty(data)) {
      let newMessages = lodash__WEBPACK_IMPORTED_MODULE_2___default.a.filter(messages, function (v) {
        return lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(v, ['_id']) != lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(data, ['_id']);
      });

      setMessages(newMessages);
    }
  }

  let emojiPosition = {
    top: -360,
    right: 0
  };
  return __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Modal"] // title="Comment Post"
  , {
    visible: newPostModalComment,
    onCancel: e => {
      closeModal();
    },
    footer: null,
    width: 720,
    centered: true,
    maskClosable: false,
    className: " no-padding-modal-body modal-body-background-transparent",
    closable: true,
    closeIcon: __jsx("span", {
      className: "padding-md background-black-opacity-70 flex-justify-center flex-items-align-center"
    }, __jsx(_ant_design_icons__WEBPACK_IMPORTED_MODULE_0__["CloseOutlined"], {
      className: "white",
      style: {
        fontSize: 20
      }
    }))
  }, __jsx("div", {
    className: "show-carousel-dots-inside carousel-background-black background-black"
  }, __jsx(_general_LightBoxCarousel__WEBPACK_IMPORTED_MODULE_10__["default"], {
    height: '30vh',
    images: lodash__WEBPACK_IMPORTED_MODULE_2___default.a.compact(lodash__WEBPACK_IMPORTED_MODULE_2___default.a.map(lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(post, ['mediaList']), function (v) {
      return lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(v, ['url']) || null;
    }))
  })), __jsx("div", {
    className: "padding-x-lg padding-y-md background-white round-border-bottom relative-wrapper"
  }, !props.hideAction ? __jsx("span", {
    className: "d-inline-block",
    style: {
      position: 'absolute',
      top: 10,
      right: 10
    }
  }, __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Dropdown"], {
    overlay: __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Menu"], null, __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Menu"].Item, {
      key: lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(post, ['_id']) + 'goToPost'
    }, __jsx(next_link__WEBPACK_IMPORTED_MODULE_20___default.a, {
      shallow: false,
      passHref: true,
      href: _route__WEBPACK_IMPORTED_MODULE_21__["routePaths"].viewCarFreaks.to || '/',
      as: typeof _route__WEBPACK_IMPORTED_MODULE_21__["routePaths"].viewCarFreaks.as == 'function' ? _route__WEBPACK_IMPORTED_MODULE_21__["routePaths"].viewCarFreaks.as(post) : '/'
    }, __jsx("a", null, __jsx("span", null, "Go To Post")))))
  }, __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Icon"], {
    type: "more",
    className: "black",
    style: {
      fontSize: 20
    }
  }))) : null, __jsx(_general_ScrollLoadWrapper__WEBPACK_IMPORTED_MODULE_12__["default"], {
    autoHeight: true,
    autoHeightMax: '50vh',
    onScrolledBottom: () => {
      if (Object(_common_function__WEBPACK_IMPORTED_MODULE_6__["arrayLengthCount"])(messages) < messageTotal) {
        getData();
      }
    }
  }, __jsx("div", {
    style: {
      minHeight: '50vh'
    }
  }, __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Row"], {
    gutter: [0, 10]
  }, __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Col"], {
    xs: 24,
    sm: 24,
    md: 24,
    lg: 24,
    xl: 24
  }, __jsx("div", {
    className: "fill-parent flex-justify-start flex-items-align-center"
  }, __jsx(_general_UserAvatar__WEBPACK_IMPORTED_MODULE_13__["default"], {
    redirectProfile: true,
    data: lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(post, ['userId']),
    size: 50
  }), __jsx("div", {
    className: "padding-left-md"
  }, __jsx("div", {
    className: "subtitle1 font-weight-bold black"
  }, `${Object(_common_function__WEBPACK_IMPORTED_MODULE_6__["getUserName"])(lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(post, ['userId']), 'freakId')}`), __jsx("div", {
    className: "headline grey"
  }, `posted at ${moment__WEBPACK_IMPORTED_MODULE_3___default()(lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(post, ['createdAt'])).fromNow()}`)))), __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Col"], {
    xs: 24,
    sm: 24,
    md: 24,
    lg: 24,
    xl: 24
  }, __jsx("div", null, __jsx(_general_ParseTag__WEBPACK_IMPORTED_MODULE_11__["default"], {
    data: lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(post, ['title']) || '',
    className: "font-weight-bold subtitle1 width-100 pre-wrap",
    expandable: true,
    lines: 1,
    more: __jsx("span", {
      className: "caption"
    }, "Show More"),
    less: __jsx("span", {
      className: "caption"
    }, "Show Less")
  })), __jsx("div", null, __jsx(_general_ParseTag__WEBPACK_IMPORTED_MODULE_11__["default"], {
    data: lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(post, ['content']) || '',
    className: "headline font-weight-normal width-100 pre-wrap",
    expandable: true,
    lines: 1,
    more: __jsx("span", {
      className: "caption"
    }, "Show More"),
    less: __jsx("span", {
      className: "caption"
    }, "Show Less")
  }))), __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Col"], {
    xs: 24,
    sm: 24,
    md: 24,
    lg: 24,
    xl: 24
  }, __jsx("div", {
    className: "headline font-weight-bold"
  }, __jsx("span", {
    className: "d-inline-block margin-right-md"
  }, Object(_common_function__WEBPACK_IMPORTED_MODULE_6__["getPlural"])('Like', 'Likes', totalLike, true)), __jsx("span", {
    className: "d-inline-block"
  }, Object(_common_function__WEBPACK_IMPORTED_MODULE_6__["getPlural"])('Comment', 'Comments', messageTotal, true)))), __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Col"], {
    xs: 24,
    sm: 24,
    md: 24,
    lg: 24,
    xl: 24
  }, __jsx("div", {
    className: "width-100 flex-justify-start flex-items-align-center"
  }, __jsx(_like_post_button__WEBPACK_IMPORTED_MODULE_17__["default"], {
    className: "d-inline-block margin-right-md",
    chatId: post._id,
    postLike: postLike,
    likeOn: "chat",
    onClick: liked => {
      setTotalLike(liked ? parseInt(totalLike) + 1 : parseInt(totalLike) - 1);
    },
    onSuccessUpdate: (liked, data) => {
      if (props.onPostLikeChange) {
        props.onPostLikeChange(liked, data);
      }

      if (props.onUpdatePost) {
        props.onUpdatePost(_objectSpread(_objectSpread({}, post), {}, {
          totalLike: liked ? parseInt(post.totalLike) + 1 : parseInt(post.totalLike) - 1
        }));
      }
    },
    activeButton: __jsx("div", {
      className: "flex-items-align-center"
    }, __jsx("img", {
      src: _icon__WEBPACK_IMPORTED_MODULE_8__["carFreakLikeIcon"],
      style: {
        width: 35,
        height: 25
      },
      className: "margin-right-sm cursor-pointer"
    }), Object(_common_function__WEBPACK_IMPORTED_MODULE_6__["formatNumber"])(totalLike, 'auto', true, 0, true) || 0)
  }, __jsx("div", {
    className: "flex-items-align-center"
  }, __jsx("img", {
    src: _icon__WEBPACK_IMPORTED_MODULE_8__["carFreakLikeGreyIcon"],
    style: {
      width: 35,
      height: 25
    },
    className: "margin-right-sm cursor-pointer"
  }), Object(_common_function__WEBPACK_IMPORTED_MODULE_6__["formatNumber"])(totalLike, 'auto', true, 0, true) || 0)), __jsx("span", {
    className: "flex-items-align-center cursor-pointer",
    onClick: e => {
      if (postCommentRef.current.focus) {
        postCommentRef.current.focus();
      }
    }
  }, __jsx("span", {
    className: "margin-right-sm"
  }, __jsx("img", {
    src: _live_config__WEBPACK_IMPORTED_MODULE_14__["commentIcon"],
    style: {
      width: '20px',
      height: '20px'
    }
  })), __jsx("span", {
    className: "headline"
  }, "Comment")))), __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Col"], {
    xs: 24,
    sm: 24,
    md: 24,
    lg: 24,
    xl: 24
  }, lodash__WEBPACK_IMPORTED_MODULE_2___default.a.isArray(messages) && Object(_common_function__WEBPACK_IMPORTED_MODULE_6__["notEmptyLength"])(messages) ? messages.map(function (v, i) {
    return __jsx(react__WEBPACK_IMPORTED_MODULE_4___default.a.Fragment, {
      key: 'messages' + i
    }, __jsx(_comment_box_1__WEBPACK_IMPORTED_MODULE_16__["default"], {
      data: v,
      onChange: data => {
        handleCommentChange(data);
      },
      onRemove: data => {
        handleRemoveComment(data);
      }
    }));
  }) : __jsx("div", {
    className: "width-100",
    style: {
      height: 100
    }
  }, __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Empty"], {
    description: "No comment yet..."
  }))), __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Col"], {
    xs: 24,
    sm: 24,
    md: 24,
    lg: 24,
    xl: 24
  }, __jsx("div", {
    className: "width-100 flex-justify-center",
    style: {
      height: 20
    }
  }, isLoading ? __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Icon"], {
    type: "loading",
    style: {
      fontSize: 20
    }
  }) : null))))), __jsx(_social_input__WEBPACK_IMPORTED_MODULE_18__["default"], {
    placeholder: "What's on your mind?",
    maxLength: 1000,
    inputRef: postCommentRef,
    size: "small",
    onChange: v => {
      setMessage(v);
    },
    emojiPosition: {
      right: 33,
      bottom: 0
    },
    onSubmit: text => {
      handleSubmit(text);
    },
    autoFocus: true,
    excludeEnter: true
  })));
};

const mapStateToProps = state => ({
  app: state.app,
  user: state.user
});

const mapDispatchToProps = {
  loading: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_9__["loading"],
  loginMode: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_9__["loginMode"]
};
/* harmony default export */ __webpack_exports__["default"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_5__["connect"])(mapStateToProps, mapDispatchToProps)(antd__WEBPACK_IMPORTED_MODULE_1__["Form"].create()(Object(next_router__WEBPACK_IMPORTED_MODULE_19__["withRouter"])(PostModal))));

/***/ }),

/***/ "./components/carFreak/components/reply-box-1.jsx":
/*!********************************************************!*\
  !*** ./components/carFreak/components/reply-box-1.jsx ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! antd */ "antd");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(antd__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! moment */ "moment");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var next_dist_client_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/dist/client/router */ "./node_modules/next/dist/client/router.js");
/* harmony import */ var next_dist_client_router__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_dist_client_router__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react-redux */ "react-redux");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! uuid */ "uuid");
/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(uuid__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _feathers__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../feathers */ "./feathers.js");
/* harmony import */ var _like_post_button__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./like-post-button */ "./components/carFreak/components/like-post-button.jsx");
/* harmony import */ var _social_input__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./social-input */ "./components/carFreak/components/social-input.jsx");
/* harmony import */ var _general_UserAvatar__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../general/UserAvatar */ "./components/general/UserAvatar.jsx");
/* harmony import */ var _common_function__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../../common-function */ "./common-function.js");
/* harmony import */ var _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../../redux/actions/app-actions */ "./redux/actions/app-actions.js");
/* harmony import */ var _general_ParseTag__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../general/ParseTag */ "./components/general/ParseTag.jsx");
var __jsx = react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement;

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }















let uid = Object(uuid__WEBPACK_IMPORTED_MODULE_6__["v4"])();

const ReplyBox1 = props => {
  const {
    0: comment,
    1: setComment
  } = Object(react__WEBPACK_IMPORTED_MODULE_4__["useState"])({});
  const {
    0: totalLike,
    1: setTotalLike
  } = Object(react__WEBPACK_IMPORTED_MODULE_4__["useState"])(0);
  const {
    0: editMode,
    1: setEditMode
  } = Object(react__WEBPACK_IMPORTED_MODULE_4__["useState"])(false);
  Object(react__WEBPACK_IMPORTED_MODULE_4__["useEffect"])(() => {
    if (lodash__WEBPACK_IMPORTED_MODULE_1___default.a.isPlainObject(props.data) && !lodash__WEBPACK_IMPORTED_MODULE_1___default.a.isEmpty(props.data)) {
      setComment(props.data);
    } else {
      setComment({});
    }
  }, [props.data]);
  Object(react__WEBPACK_IMPORTED_MODULE_4__["useEffect"])(() => {
    if (lodash__WEBPACK_IMPORTED_MODULE_1___default.a.isPlainObject(comment) && !lodash__WEBPACK_IMPORTED_MODULE_1___default.a.isEmpty(comment)) {
      setTotalLike(lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(comment, ['totalLike']) || 0);
    } else {
      setTotalLike(0);
    }
  }, [comment]);

  function handleSubmit(text) {
    setEditMode(false);

    if (lodash__WEBPACK_IMPORTED_MODULE_1___default.a.isPlainObject(comment) && !lodash__WEBPACK_IMPORTED_MODULE_1___default.a.isEmpty(comment) && lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(comment, ['_id']) && editMode) {
      if (props.onChange) {
        comment.message = text;
        props.onChange(comment);
      }

      _feathers__WEBPACK_IMPORTED_MODULE_7__["default"].authenticate().then(res => {
        _feathers__WEBPACK_IMPORTED_MODULE_7__["default"].service('chatmessagereplies').patch(comment._id, {
          message: text
        }).then(res1 => {
          if (props.onUpdate) {
            res1.userId = res.user;
            props.onUpdate(res1);
          }
        }).catch(err => {
          console.log(err);
          antd__WEBPACK_IMPORTED_MODULE_0__["message"].error("Unable to edit comment. T.T");
        });
      }).catch(err => {
        antd__WEBPACK_IMPORTED_MODULE_0__["message"].error(err.message);
      });
    }
  }

  function handleRemove() {
    if (lodash__WEBPACK_IMPORTED_MODULE_1___default.a.isPlainObject(comment) && !lodash__WEBPACK_IMPORTED_MODULE_1___default.a.isEmpty(comment) && lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(comment, ['_id'])) {
      _feathers__WEBPACK_IMPORTED_MODULE_7__["default"].authenticate().then(res => {
        _feathers__WEBPACK_IMPORTED_MODULE_7__["default"].service('chatmessagereplies').remove(comment._id).then(res => {
          antd__WEBPACK_IMPORTED_MODULE_0__["message"].success('Comment Deleted');

          if (props.onRemove) {
            props.onRemove(res);
          }
        }).catch(err => {
          console.log(err);
          antd__WEBPACK_IMPORTED_MODULE_0__["message"].error("Unable to edit comment. T.T");
        });
      }).catch(err => {
        antd__WEBPACK_IMPORTED_MODULE_0__["message"].error(err.message);
      });
    }
  }

  return Object(_common_function__WEBPACK_IMPORTED_MODULE_11__["notEmptyLength"])(Object(_common_function__WEBPACK_IMPORTED_MODULE_11__["objectRemoveEmptyValue"])(comment)) ? __jsx(react__WEBPACK_IMPORTED_MODULE_4___default.a.Fragment, null, __jsx("div", {
    className: `flex-justify-space-between flex-items-align-start ${props.className ? props.className : ''}`,
    style: _objectSpread({}, props.style)
  }, __jsx("span", {
    className: "d-inline-block",
    style: {
      width: 50
    }
  }, __jsx(_general_UserAvatar__WEBPACK_IMPORTED_MODULE_10__["default"], {
    redirectProfile: true,
    data: lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(comment, ['userId']),
    size: 30
  })), __jsx("span", {
    className: "d-inline-block headline width-80"
  }, __jsx("span", {
    className: "headline font-weight-black padding-right-sm black"
  }, Object(_common_function__WEBPACK_IMPORTED_MODULE_11__["getUserName"])(lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(comment, ['userId']), 'freakId')), editMode ? __jsx(_social_input__WEBPACK_IMPORTED_MODULE_9__["default"], {
    placeholder: "Write your comment...",
    editMode: true,
    clickOutsideSubmit: true,
    text: `${lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(comment, ['message']) || ''}`,
    emojiPosition: {
      bottom: -20,
      right: 33
    },
    clubId: props.clubId,
    onSubmit: text => {
      handleSubmit(text);
      setEditMode(false);
    },
    excludeEnter: true
  }) : __jsx(_general_ParseTag__WEBPACK_IMPORTED_MODULE_13__["default"], {
    data: lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(comment, ['message']) || '',
    className: "width-100"
  }), __jsx("div", {
    className: "width-100 flex-justify-start flex-items-align-center",
    style: {
      padding: 0
    }
  }, __jsx("span", {
    className: "small-text margin-right-md grey font-weight-light"
  }, Object(_common_function__WEBPACK_IMPORTED_MODULE_11__["formatNumber"])(totalLike, 'auto', true, 0, false) || 0, " Likes")), __jsx("div", {
    className: "width-100",
    style: {
      padding: 0
    }
  }, __jsx("span", {
    className: "margin-right-sm small-text"
  }, moment__WEBPACK_IMPORTED_MODULE_2___default()(comment.createdAt).fromNow()), __jsx(_like_post_button__WEBPACK_IMPORTED_MODULE_8__["default"], {
    className: "margin-right-sm",
    likeOn: "reply",
    replyId: lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(comment, ['_id']),
    onClick: actived => {
      setTotalLike(actived ? totalLike + 1 : totalLike - 1);
    },
    activeButton: __jsx("span", {
      className: "small-text blue font-weight-light cursor-pointer"
    }, "Liked")
  }, __jsx("span", {
    className: "small-text grey font-weight-light cursor-pointer"
  }, Object(_common_function__WEBPACK_IMPORTED_MODULE_11__["getPlural"])('Like', 'Likes', totalLike, true))), __jsx("span", {
    className: "small-text margin-right-sm grey font-weight-light cursor-pointer",
    onClick: () => {
      if (props.handleReply) {
        props.handleReply(Object(_common_function__WEBPACK_IMPORTED_MODULE_11__["getUserName"])(lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(comment, ['userId']), 'freakId') || '', Object(_common_function__WEBPACK_IMPORTED_MODULE_11__["getObjectId"])(lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(comment, ['userId'])) || '');
      }
    }
  }, "Reply"))), __jsx("span", {
    className: "d-inline-block",
    style: {
      width: 30
    }
  }, lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(props.user, ['authenticated']) && lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(props.user, ['info', 'user', '_id']) && lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(props.user, ['info', 'user', '_id']) == lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(comment, ['userId', '_id']) ? __jsx("span", {
    className: "d-inline-block",
    id: `comment-menu-${uid}`
  }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Dropdown"], {
    getPopupContainer: () => document.getElementById(`comment-menu-${uid}`),
    overlay: __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Menu"], null, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Menu"].Item, {
      onClick: e => {
        setEditMode(true);
      }
    }, __jsx("span", null, "Edit")), __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Menu"].Item, null, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Popconfirm"], {
      title: "Are you sure to delete this comment?",
      onConfirm: e => {
        handleRemove(comment);
      },
      okText: "Yes",
      cancelText: "No"
    }, __jsx("span", null, "Delete"))))
  }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Icon"], {
    type: "more",
    className: "black",
    style: {
      fontSize: 20
    }
  }))) : null))) : null;
};

const mapStateToProps = state => ({
  app: state.app,
  user: state.user
});

const mapDispatchToProps = {
  loading: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_12__["loading"],
  loginMode: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_12__["loginMode"]
};
/* harmony default export */ __webpack_exports__["default"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_5__["connect"])(mapStateToProps, mapDispatchToProps)(antd__WEBPACK_IMPORTED_MODULE_0__["Form"].create()(Object(next_dist_client_router__WEBPACK_IMPORTED_MODULE_3__["withRouter"])(ReplyBox1))));

/***/ }),

/***/ "./components/carFreak/components/save-post-button.jsx":
/*!*************************************************************!*\
  !*** ./components/carFreak/components/save-post-button.jsx ***!
  \*************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! antd */ "antd");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(antd__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var next_dist_client_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/client/router */ "./node_modules/next/dist/client/router.js");
/* harmony import */ var next_dist_client_router__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_client_router__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react-redux */ "react-redux");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../redux/actions/app-actions */ "./redux/actions/app-actions.js");
/* harmony import */ var _common_function__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../common-function */ "./common-function.js");
/* harmony import */ var _feathers__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../feathers */ "./feathers.js");
var __jsx = react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement;









const SavePostButton = props => {
  const {
    0: savedPost,
    1: setSavedPost
  } = Object(react__WEBPACK_IMPORTED_MODULE_3__["useState"])([]);
  const {
    0: confirmModalState,
    1: setConfirmModalState
  } = Object(react__WEBPACK_IMPORTED_MODULE_3__["useState"])(false);
  const {
    0: isSaved,
    1: setIsSaved
  } = Object(react__WEBPACK_IMPORTED_MODULE_3__["useState"])(false);
  Object(react__WEBPACK_IMPORTED_MODULE_3__["useEffect"])(() => {
    init();
  }, [props.userId, props.chatId]);

  function init() {
    if (props.userId && props.chatId) {
      let query = {};
      query.chatId = props.chatId;
      query.userId = props.userId;
      _feathers__WEBPACK_IMPORTED_MODULE_7__["default"].service('savedpost').find({
        query: query
      }).then(res => {
        if (Object(_common_function__WEBPACK_IMPORTED_MODULE_6__["notEmptyLength"])(res.data)) {
          setSavedPost(res.data[0]);
          setIsSaved(true);
        } else {
          setSavedPost(null);
          setIsSaved(false);
        }
      }).catch(err => {// message.error(err.message)
      });
    }
  }

  function handleSuccess(success) {
    setConfirmModalState(false);

    if (props.handleSuccess) {
      props.handleSuccess(success);
    }

    if (props.notify && lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(success, ['type']) == 'remove') {
      antd__WEBPACK_IMPORTED_MODULE_0__["message"].success('Unsaved Post.');
    }

    if (props.notify && lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(success, ['type']) == 'save') {
      antd__WEBPACK_IMPORTED_MODULE_0__["message"].success('Saved Post.');
    }
  }

  function handleError(error) {
    setConfirmModalState(false);

    if (props.handleError) {
      props.handleError(error);
    }

    if (props.notify && lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(error, ['message'])) {
      antd__WEBPACK_IMPORTED_MODULE_0__["message"].success(error.message);
    }
  }

  function handleSubmit() {
    if (props.userId && props.chatId) {
      let promises = [];
      promises.push(_feathers__WEBPACK_IMPORTED_MODULE_7__["default"].authenticate());

      if (!isSaved) {
        let data = {};
        data.userId = props.userId;
        data.chatId = props.chatId;
        promises.push(_feathers__WEBPACK_IMPORTED_MODULE_7__["default"].service('savedpost').create(data));
      } else {
        promises.push(_feathers__WEBPACK_IMPORTED_MODULE_7__["default"].service('savedpost').remove(savedPost._id));
      } //Write in savedPost model


      Promise.all(promises).then(([auth, savedPostRes]) => {
        props.loading(false);
        handleSuccess({
          type: isSaved ? 'remove' : 'save',
          data: savedPostRes
        });
        init();
      }).catch(error => {
        handleError({
          message: "Submit SavePost Failed"
        });
      });
    } else {
      handleError({
        message: "Unable to save post!"
      });
    }
  }

  ;

  function handleChange() {
    if (!props.userId) {
      props.loginMode(true);
      handleError({
        message: 'Please login to save the savedPost.'
      });
      return null;
    }

    if (!props.chatId) {
      handleError({
        message: 'Post not found!'
      });
      return null;
    }

    if (isSaved) {
      setConfirmModalState(true);
    } else {
      handleSubmit();
    }
  }

  return __jsx("span", {
    className: props.className ? props.className : null,
    style: props.style ? props.style : null
  }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Modal"], {
    visible: confirmModalState,
    title: "Are you sure?",
    maskClosable: true,
    centered: true,
    onOk: e => {
      handleSubmit();
      setConfirmModalState(false);
    },
    onCancel: e => {
      setConfirmModalState(false);
    }
  }, __jsx("div", null, "Do you want to unsave this post?")), isSaved ? __jsx("a", {
    onClick: () => props.readOnly ? null : handleChange()
  }, props.savedButton ? props.savedButton() : __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Button"], {
    style: {
      color: '#F57F17'
    }
  }, "Saved")) : __jsx("a", {
    onClick: () => props.readOnly ? null : handleChange()
  }, props.saveButton ? props.saveButton() : __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Button"], null, "Save")));
};

const mapStateToProps = state => ({
  app: state.app,
  user: state.user
});

const mapDispatchToProps = {
  loginMode: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_5__["loginMode"],
  loading: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_5__["loading"]
};
/* harmony default export */ __webpack_exports__["default"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_4__["connect"])(mapStateToProps, mapDispatchToProps)(antd__WEBPACK_IMPORTED_MODULE_0__["Form"].create()(Object(next_dist_client_router__WEBPACK_IMPORTED_MODULE_2__["withRouter"])(SavePostButton))));

/***/ }),

/***/ "./components/carFreak/components/social-board-card.jsx":
/*!**************************************************************!*\
  !*** ./components/carFreak/components/social-board-card.jsx ***!
  \**************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! antd */ "antd");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(antd__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! moment */ "moment");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var next_dist_client_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/dist/client/router */ "./node_modules/next/dist/client/router.js");
/* harmony import */ var next_dist_client_router__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_dist_client_router__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react-redux */ "react-redux");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _common_function__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../common-function */ "./common-function.js");
/* harmony import */ var _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../redux/actions/app-actions */ "./redux/actions/app-actions.js");
/* harmony import */ var _general_ParseTag__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../general/ParseTag */ "./components/general/ParseTag.jsx");
/* harmony import */ var _general_UserAvatar__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../general/UserAvatar */ "./components/general/UserAvatar.jsx");
/* harmony import */ var _post_menu__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./post-menu */ "./components/carFreak/components/post-menu.jsx");
var __jsx = react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement;

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }












const defaultHeight = 100;

const SocialBoardCard = props => {
  const {
    0: post,
    1: setPost
  } = Object(react__WEBPACK_IMPORTED_MODULE_4__["useState"])({});
  const {
    0: height,
    1: setHeight
  } = Object(react__WEBPACK_IMPORTED_MODULE_4__["useState"])(defaultHeight);
  Object(react__WEBPACK_IMPORTED_MODULE_4__["useEffect"])(() => {
    if (lodash__WEBPACK_IMPORTED_MODULE_1___default.a.isPlainObject(props.data) && !lodash__WEBPACK_IMPORTED_MODULE_1___default.a.isEmpty(props.data)) {
      setPost(props.data);
    } else {
      setPost({});
    }
  }, [props.data]);
  Object(react__WEBPACK_IMPORTED_MODULE_4__["useEffect"])(() => {
    if (!props.style || !Object(_common_function__WEBPACK_IMPORTED_MODULE_6__["isValidNumber"])(props.style.height) || !(parseFloat(props.style.height) >= defaultHeight)) {
      setHeight(defaultHeight);
    } else {
      setHeight(props.style.height);
    }
  }, [props.style]);

  function redirectToPost(post) {
    if (props.onRedirectToPost) {
      props.onRedirectToPost(post);
    }

    if (props.redirectPost && lodash__WEBPACK_IMPORTED_MODULE_1___default.a.isPlainObject(post) && !lodash__WEBPACK_IMPORTED_MODULE_1___default.a.isEmpty(post)) {
      props.router.push(`/social-board/${lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(post, ['_id'])}`, undefined, {
        shallow: false
      });
    }
  }

  return Object(_common_function__WEBPACK_IMPORTED_MODULE_6__["notEmptyLength"])(Object(_common_function__WEBPACK_IMPORTED_MODULE_6__["objectRemoveEmptyValue"])(post)) ? __jsx(react__WEBPACK_IMPORTED_MODULE_4___default.a.Fragment, null, __jsx("div", {
    className: ` thin-border box-shadow-heavy round-border background-white flex-items-align-start flex-justify-start padding-md cursor-pointer ${props.className ? props.className : ''}`,
    style: _objectSpread(_objectSpread({}, props.style), {}, {
      height: height
    }),
    onClick: e => {
      redirectToPost(post);
    }
  }, __jsx("span", {
    className: "d-inline-block margin-right-md"
  }, __jsx(_general_UserAvatar__WEBPACK_IMPORTED_MODULE_9__["default"], {
    redirectProfile: true,
    size: 50,
    data: lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(post, ['userId'])
  })), __jsx("span", {
    className: "d-inline-block width-70"
  }, __jsx("div", {
    className: "width-100"
  }, __jsx(_general_ParseTag__WEBPACK_IMPORTED_MODULE_8__["default"], {
    data: lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(post, ['title']) || '',
    className: "subtitle1 font-weight-bold text-truncate"
  })), __jsx("div", {
    className: "flex-justify-start flex-items-align-center headline text-truncate"
  }, __jsx("span", {
    className: "black"
  }, Object(_common_function__WEBPACK_IMPORTED_MODULE_6__["getUserName"])(lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(post, ['userId']), 'freakId')), lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(post, ['location']) ? __jsx(react__WEBPACK_IMPORTED_MODULE_4___default.a.Fragment, null, __jsx("span", {
    className: "grey"
  }, "in"), __jsx("span", {
    className: "black"
  }, `${lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(post, ['location']) || ''}`)) : null), __jsx("div", {
    className: "flex-justify-space-between flex-items-align-center text-truncate"
  }, __jsx("span", {
    className: "d-inline-block"
  }, moment__WEBPACK_IMPORTED_MODULE_2___default()(lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(post, ['createdAt']) || null).format('MMM Do'), " | ", moment__WEBPACK_IMPORTED_MODULE_2___default()(lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(post, ['createdAt']) || null).fromNow())))), __jsx("span", {
    className: "d-inline-block",
    style: {
      position: 'absolute',
      top: 30,
      right: 20
    }
  }, __jsx(_post_menu__WEBPACK_IMPORTED_MODULE_10__["default"], {
    post: post,
    onEditPostClick: () => {
      if (props.onEditClick) {
        props.onEditClick(post);
      }
    },
    onRemovePostClick: () => {
      if (props.onRemoveClick) {
        props.onRemoveClick(post);
      }
    }
  }))) : null;
};

const mapStateToProps = state => ({
  app: state.app,
  user: state.user
});

const mapDispatchToProps = {
  loading: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_7__["loading"]
};
/* harmony default export */ __webpack_exports__["default"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_5__["connect"])(mapStateToProps, mapDispatchToProps)(antd__WEBPACK_IMPORTED_MODULE_0__["Form"].create()(Object(next_dist_client_router__WEBPACK_IMPORTED_MODULE_3__["withRouter"])(SocialBoardCard))));

/***/ }),

/***/ "./components/carFreak/components/social-input.jsx":
/*!*********************************************************!*\
  !*** ./components/carFreak/components/social-input.jsx ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! antd */ "antd");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(antd__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! axios */ "axios");
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var next_dist_client_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/dist/client/router */ "./node_modules/next/dist/client/router.js");
/* harmony import */ var next_dist_client_router__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_dist_client_router__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react-redux */ "react-redux");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! uuid */ "uuid");
/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(uuid__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _feathers__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../feathers */ "./feathers.js");
/* harmony import */ var _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../redux/actions/app-actions */ "./redux/actions/app-actions.js");
/* harmony import */ var _general_ClickOutsideDetectWrapper__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../general/ClickOutsideDetectWrapper */ "./components/general/ClickOutsideDetectWrapper.jsx");
/* harmony import */ var _general_EmojiPickerButton__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../general/EmojiPickerButton */ "./components/general/EmojiPickerButton.jsx");
/* harmony import */ var _general_ScrollLoadWrapper__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../general/ScrollLoadWrapper */ "./components/general/ScrollLoadWrapper.jsx");
/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../config */ "./components/carFreak/config.js");
/* harmony import */ var _common_function__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../../common-function */ "./common-function.js");
/* harmony import */ var _general_UserAvatar__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../general/UserAvatar */ "./components/general/UserAvatar.jsx");
var __jsx = react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement;

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
















let uid = Object(uuid__WEBPACK_IMPORTED_MODULE_6__["v4"])();
let ref = {};
ref[uid] = react__WEBPACK_IMPORTED_MODULE_4___default.a.createRef();
let typingTimeout;
let checkSearchTimeout;
let checkHashTagTimeout;
const PAGE_SIZE = 20;
let ReactQuill;

const SocialInput = props => {
  const {
    0: text,
    1: setText
  } = Object(react__WEBPACK_IMPORTED_MODULE_4__["useState"])('');
  const {
    0: suggestList,
    1: setSuggestList
  } = Object(react__WEBPACK_IMPORTED_MODULE_4__["useState"])({});
  const {
    0: suggestListTotal,
    1: setSuggestListTotal
  } = Object(react__WEBPACK_IMPORTED_MODULE_4__["useState"])(0);
  const {
    0: suggestListPage,
    1: setSuggestListPage
  } = Object(react__WEBPACK_IMPORTED_MODULE_4__["useState"])(1);
  const {
    0: prefix,
    1: setPrefix
  } = Object(react__WEBPACK_IMPORTED_MODULE_4__["useState"])(_config__WEBPACK_IMPORTED_MODULE_12__["tagPrefix"]);
  const {
    0: isLoading,
    1: setIsLoading
  } = Object(react__WEBPACK_IMPORTED_MODULE_4__["useState"])(false);
  const {
    0: searchMode,
    1: setSearchMode
  } = Object(react__WEBPACK_IMPORTED_MODULE_4__["useState"])(false);
  const {
    0: searchWord,
    1: setSearchWord
  } = Object(react__WEBPACK_IMPORTED_MODULE_4__["useState"])('');
  const {
    0: activeTriggerPosition,
    1: setActiveTriggerPosition
  } = Object(react__WEBPACK_IMPORTED_MODULE_4__["useState"])(0);
  const {
    0: hashTagActiveTriggerPosition,
    1: setHashTagActiveTriggerPosition
  } = Object(react__WEBPACK_IMPORTED_MODULE_4__["useState"])(null);
  const {
    0: hashTagActived,
    1: setHashTagActived
  } = Object(react__WEBPACK_IMPORTED_MODULE_4__["useState"])(false);
  const {
    0: hashTagValue,
    1: setHashTagValue
  } = Object(react__WEBPACK_IMPORTED_MODULE_4__["useState"])('');
  const {
    0: aliasCode,
    1: setAliasCode
  } = Object(react__WEBPACK_IMPORTED_MODULE_4__["useState"])([]);
  const {
    0: editMode,
    1: setEditMode
  } = Object(react__WEBPACK_IMPORTED_MODULE_4__["useState"])(false);
  const {
    0: startWatching,
    1: setStartWatching
  } = Object(react__WEBPACK_IMPORTED_MODULE_4__["useState"])(false);
  Object(react__WEBPACK_IMPORTED_MODULE_4__["useEffect"])(() => {
    if (document) {
      ReactQuill = __webpack_require__(/*! react-quill */ "react-quill");
    }
  }, []);
  Object(react__WEBPACK_IMPORTED_MODULE_4__["useEffect"])(() => {
    if (!hashTagActived && hashTagValue && hashTagActiveTriggerPosition != null) {
      handleAddAliasCode(`#${hashTagValue}`, '$_id', '#', hashTagActiveTriggerPosition);
      setHashTagValue('');
      setHashTagActiveTriggerPosition(null);
      setSearchMode(false);
    }
  }, [hashTagActived, hashTagValue]);
  Object(react__WEBPACK_IMPORTED_MODULE_4__["useEffect"])(() => {
    if (props.resetIndicator) {
      reset();
    }
  }, [props.resetIndicator]);
  Object(react__WEBPACK_IMPORTED_MODULE_4__["useEffect"])(() => {
    if (props.focusIndicator) {
      focus();
    }
  }, [props.focusIndicator]);
  Object(react__WEBPACK_IMPORTED_MODULE_4__["useEffect"])(() => {
    setEditMode(props.editMode ? true : false);
  }, [props.editMode]);
  Object(react__WEBPACK_IMPORTED_MODULE_4__["useEffect"])(() => {
    if (editMode && props.text && ReactQuill) {
      let newText = Object(_config__WEBPACK_IMPORTED_MODULE_12__["parseTagStringToPlainString"])(props.text);
      let quill = props.inputRef || ref[uid];

      if (quill.current) {
        let editor = quill.current.getEditor();

        if (editor && quill) {
          editor.setText(newText, 'silent');
        }

        let newAliasCode = Object(_config__WEBPACK_IMPORTED_MODULE_12__["getAliasCodeFromText"])(props.text);
        setText(newText);
        setAliasCode(newAliasCode);
      }
    }
  }, [editMode, props.text, ReactQuill]);
  Object(react__WEBPACK_IMPORTED_MODULE_4__["useEffect"])(() => {
    if (searchMode) {
      searchData(0, searchWord, prefix);
    } else {
      setSearchWord('');
      setSuggestList([]);
      setSuggestListPage(1);
      setSuggestListTotal(0);
      setActiveTriggerPosition(null);
    }
  }, [searchMode]);
  Object(react__WEBPACK_IMPORTED_MODULE_4__["useEffect"])(() => {
    if (searchMode && prefix) {
      clearTimeout(typingTimeout);
      typingTimeout = setTimeout(() => {
        searchData((suggestListPage - 1) * PAGE_SIZE, searchWord, prefix);
      }, 300);
    }
  }, [searchWord, prefix, suggestListPage]);
  Object(react__WEBPACK_IMPORTED_MODULE_4__["useEffect"])(() => {
    updateAliasText();
  }, [aliasCode]);
  Object(react__WEBPACK_IMPORTED_MODULE_4__["useEffect"])(() => {
    if (props.onChange && startWatching) {
      props.onChange(text, Object(_config__WEBPACK_IMPORTED_MODULE_12__["parseToTagString"])(text, aliasCode));
    }

    setStartWatching(true);
  }, [text, aliasCode]);

  function reset() {
    if (ReactQuill) {
      let quill = props.inputRef || ref[uid];

      if (quill.current) {
        let editor = quill.current.getEditor();

        if (editor && quill) {
          editor.setText("");
        }

        setText('');
        setAliasCode([]);
        setSuggestList([]);
      }
    }
  }

  function focus() {
    if (ReactQuill) {
      let quill = props.inputRef || ref[uid];

      if (quill.current) {
        let editor = quill.current.getEditor();
        quill.current.focus();
        let currentCursor = (editor.getText() || '').length || 0;

        if (editor && quill) {
          setTimeout(() => {
            editor.setSelection(currentCursor);
          }, 10);
        }
      }

      return;
    }
  }

  function handleSubmit() {
    let finalText = text;

    if (props.excludeEnter) {
      finalText = finalText.replace(/\n/g, "");
    }

    if (props.onSubmit && finalText) {
      finalText = Object(_config__WEBPACK_IMPORTED_MODULE_12__["parseToTagString"])(finalText, aliasCode);
      props.onSubmit(finalText);
      reset();
      focus();
    }
  }

  function searchData(skip, keyword, prefix) {
    setSuggestList({});

    if (prefix == _config__WEBPACK_IMPORTED_MODULE_12__["tagPrefix"]) {
      setIsLoading(true);
      axios__WEBPACK_IMPORTED_MODULE_1___default.a.get(`${_feathers__WEBPACK_IMPORTED_MODULE_7__["default"].io.io.uri}getRelatedUser`, {
        params: {
          match: {
            userId: lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(props.user, ['info', 'user', '_id']),
            clubId: props.clubId || '',
            keyword: keyword || ''
          },
          limit: PAGE_SIZE,
          skip: skip || 0
        }
      }).then(res => {
        setIsLoading(false);

        let temp = lodash__WEBPACK_IMPORTED_MODULE_2___default.a.cloneDeep(suggestList);

        temp[prefix] = suggestListPage > 1 ? lodash__WEBPACK_IMPORTED_MODULE_2___default.a.isArray(lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(res, ['data', 'data'])) && !lodash__WEBPACK_IMPORTED_MODULE_2___default.a.isEmpty(lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(res, ['data', 'data'])) ? (suggestList[prefix] || []).concat(res.data.data) : suggestList[prefix] || [] : lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(res, ['data', 'data']) || [];
        setSuggestList(temp);
      }).catch(err => {
        setIsLoading(false);
        console.log(err);
      });
    }

    if (prefix == _config__WEBPACK_IMPORTED_MODULE_12__["hashTagPrefix"]) {
      setIsLoading(true);
      axios__WEBPACK_IMPORTED_MODULE_1___default.a.get(`${_feathers__WEBPACK_IMPORTED_MODULE_7__["default"].io.io.uri}getHashTags`, {
        params: {
          match: {
            keyword: keyword || ''
          },
          limit: PAGE_SIZE,
          skip: skip || 0
        }
      }).then(res => {
        setIsLoading(false);

        let temp = lodash__WEBPACK_IMPORTED_MODULE_2___default.a.cloneDeep(suggestList);

        temp[prefix] = suggestListPage > 1 ? lodash__WEBPACK_IMPORTED_MODULE_2___default.a.isArray(lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(res, ['data', 'data'])) && !lodash__WEBPACK_IMPORTED_MODULE_2___default.a.isEmpty(lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(res, ['data', 'data'])) ? (suggestList[prefix] || []).concat(res.data.data) : suggestList[prefix] || [] : lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(res, ['data', 'data']) || [];
        setSuggestList(temp);
      }).catch(err => {
        console.log(err);
      });
    }
  }

  function handleChange(content, delta, source, editor) {
    let newText = editor.getText();

    let action = lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(delta, ['ops', Object(_common_function__WEBPACK_IMPORTED_MODULE_13__["arrayLengthCount"])(lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(delta, ['ops'])) == 2 ? 1 : 0]);

    let position = Object(_common_function__WEBPACK_IMPORTED_MODULE_13__["arrayLengthCount"])(lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(delta, ['ops'])) == 2 ? lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(delta, ['ops', 0, 'retain']) || 0 : 0;

    if (Object(_common_function__WEBPACK_IMPORTED_MODULE_13__["isValidNumber"])(parseInt(props.maxLength))) {
      if (newText.length > parseInt(props.maxLength) && ReactQuill) {
        let quill = props.inputRef || ref[uid];

        if (quill.current) {
          let editor = quill.current.getEditor();

          if (editor && quill) {
            quill.current.focus();
            let currentCursor = editor.getSelection().index || 0;
            editor.setText(text, 'silent');
            editor.setSelection(currentCursor);
          }
        }

        return;
      }
    } // if (props.excludeEnter && _.get(action, ['insert']) == '\n') {
    //     newText = newText.replace(/\n/g, "");
    //     if (ReactQuill) {
    //         let quill = props.inputRef || ref[uid];
    //         if (quill.current) {
    //             let editor = quill.current.getEditor();
    //             if (editor && quill) {
    //                 quill.current.focus();
    //                 let currentCursor = editor.getSelection().index || 0;
    //                 editor.setText(newText, 'silent');
    //                 setTimeout(() => {
    //                     editor.setSelection(currentCursor);
    //                 }, 10);
    //             }
    //         }
    //         return;
    //     }
    // }


    setText(newText);

    if (lodash__WEBPACK_IMPORTED_MODULE_2___default.a.isPlainObject(action) && !lodash__WEBPACK_IMPORTED_MODULE_2___default.a.isEmpty(action)) {
      if (lodash__WEBPACK_IMPORTED_MODULE_2___default.a.has(action, 'delete')) {
        handleDeleteAliasCode(position, 'delete');
      }
    }
  }

  function handleAddText(input, tagging) {
    if (ReactQuill) {
      let quill = props.inputRef || ref[uid];

      if (quill.current) {
        let editor = quill.current.getEditor();

        if (editor && quill) {
          quill.current.focus();
          let currentCursor = editor.getSelection().index || 0;
          editor.insertText(currentCursor, input);
        }
      }
    }
  }

  function handleAddTag(input, aliasPosition, searchWord) {
    if (ReactQuill) {
      let quill = props.inputRef || ref[uid];

      if (quill.current) {
        let editor = quill.current.getEditor();

        if (editor && quill) {
          let preText = text.substr(0, aliasPosition);
          let postText = text.substr(aliasPosition + 1 + searchWord.length);
          let newText = preText + postText;
          editor.setText(newText, 'user');
          editor.insertText(aliasPosition, input, {
            bold: true,
            color: '#2196F3'
          });
          editor.insertText(aliasPosition + input.length, ' ', {
            'bold': false,
            color: '#616161'
          });
          editor.setSelection(aliasPosition + input.length + 1);
        }
      }
    }
  }

  function handleAddAliasCode(value, id, prefix, aliasPosition) {
    if (text[aliasPosition] == prefix) {
      let newAliasCode = lodash__WEBPACK_IMPORTED_MODULE_2___default.a.cloneDeep(aliasCode) || [];
      let codePrefix = prefix == '@' ? _config__WEBPACK_IMPORTED_MODULE_12__["tagPrefixHashValue"] : _config__WEBPACK_IMPORTED_MODULE_12__["hashTagPrefixHashValue"];
      let codeSuffix = prefix == '@' ? _config__WEBPACK_IMPORTED_MODULE_12__["tagSuffixHashValue"] : _config__WEBPACK_IMPORTED_MODULE_12__["hashTagSuffixHashValue"];
      newAliasCode = lodash__WEBPACK_IMPORTED_MODULE_2___default.a.unionBy(lodash__WEBPACK_IMPORTED_MODULE_2___default.a.sortBy(lodash__WEBPACK_IMPORTED_MODULE_2___default.a.reverse(lodash__WEBPACK_IMPORTED_MODULE_2___default.a.sortBy(lodash__WEBPACK_IMPORTED_MODULE_2___default.a.concat(newAliasCode, [{
        value: `${codePrefix}${value || ''}${_config__WEBPACK_IMPORTED_MODULE_12__["seperatorHashValue"]}${id || ''}${codeSuffix}`,
        position: aliasPosition,
        endPosition: aliasPosition + value.length - 1,
        prefix: prefix,
        name: value,
        id: id,
        createdAt: new Date().getTime()
      }]), ['createdAt'])), ['position']), [], 'position');
      setAliasCode(newAliasCode);
    }

    setSearchMode(false);
  }

  function handleDeleteAliasCode(position, action) {
    if (ReactQuill) {
      let newAliasCode = lodash__WEBPACK_IMPORTED_MODULE_2___default.a.unionBy(lodash__WEBPACK_IMPORTED_MODULE_2___default.a.sortBy(lodash__WEBPACK_IMPORTED_MODULE_2___default.a.reverse(lodash__WEBPACK_IMPORTED_MODULE_2___default.a.sortBy(lodash__WEBPACK_IMPORTED_MODULE_2___default.a.cloneDeep(aliasCode) || [], ['createdAt'])), ['position']), [], 'position'); //need update back position after delete things


      let quill = props.inputRef || ref[uid];

      if (quill.current) {
        let editor = quill.current.getEditor();
        let currentText = '';

        if (editor && quill) {
          currentText = editor.getText();
        }

        newAliasCode = lodash__WEBPACK_IMPORTED_MODULE_2___default.a.map(newAliasCode, function (code) {
          if (code.position > position) {
            code.position -= 1;
          }

          return code;
        });
        let codeStr = Object(_config__WEBPACK_IMPORTED_MODULE_12__["parseToTagString"])(currentText, newAliasCode);
        newAliasCode = Object(_config__WEBPACK_IMPORTED_MODULE_12__["getAliasCodeFromText"])(codeStr);

        if (!lodash__WEBPACK_IMPORTED_MODULE_2___default.a.isEqual(newAliasCode, aliasCode)) {
          setAliasCode(newAliasCode);
        }
      }
    }
  }

  function updateAliasText() {
    if (ReactQuill) {
      let quill = props.inputRef || ref[uid];

      if (quill.current) {
        quill = quill.current.getEditor();
        quill.formatText(0, text.length, {
          'bold': false,
          color: '#616161'
        }, 'silent'); //Update format
        //If dont want the sudden color flash need to loop through each word

        lodash__WEBPACK_IMPORTED_MODULE_2___default.a.forEach(aliasCode, function (code) {
          let name = code.name;
          let position = code.position;

          if (name && Object(_common_function__WEBPACK_IMPORTED_MODULE_13__["isValidNumber"])(position)) {
            name = name.split('');

            lodash__WEBPACK_IMPORTED_MODULE_2___default.a.forEach(name, function (char) {
              if (char == text[position]) {
                quill.formatText(position, 1, {
                  bold: true,
                  color: code.prefix == _config__WEBPACK_IMPORTED_MODULE_12__["hashTagPrefix"] ? 'black' : '#2196F3' // color: '#2196F3',

                });
              } else {
                return false;
              }

              position++;
            });
          }
        });
      }
    }
  }

  function checkCanSearch(range, editor) {
    let currentPosition = lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(range, ['index']);

    let text = editor.getText();
    let newSearchWord = '';

    if (!currentPosition || text[currentPosition - 1] == ' ' && hashTagActived) {
      setHashTagActived(false);
      setTimeout(() => {
        setSearchMode(false);
      }, 300);
    }

    if (currentPosition > 0) {
      let canSearch = false;
      let gotSpace = false;

      lodash__WEBPACK_IMPORTED_MODULE_2___default.a.forEach(lodash__WEBPACK_IMPORTED_MODULE_2___default.a.reverse(lodash__WEBPACK_IMPORTED_MODULE_2___default.a.range(0, currentPosition)), function (i) {
        if (text[i] == ' ') {
          gotSpace = true;
        }

        if (text[i] == ' ' && !searchMode) {
          return false;
        }

        if (text[i] == _config__WEBPACK_IMPORTED_MODULE_12__["tagPrefix"]) {
          if (text[i - 1] == undefined || text[i - 1] == ' ' || text[i - 1] == '') {
            canSearch = true;
            setPrefix(text[i]);
            setActiveTriggerPosition(i); // setSearchWord(_.reverse(newSearchWord.split('')).join(''));

            setSearchWord(lodash__WEBPACK_IMPORTED_MODULE_2___default.a.reverse(newSearchWord.split('')).join(''));
            setSearchMode(true);
            return false;
          }
        } else if (text[i] == _config__WEBPACK_IMPORTED_MODULE_12__["hashTagPrefix"] && !gotSpace) {
          canSearch = true;

          if (text[i - 1] == undefined || text[i - 1] == ' ' || text[i - 1] == '') {
            setPrefix(text[i]);
            setHashTagActiveTriggerPosition(i);
            setSearchWord(lodash__WEBPACK_IMPORTED_MODULE_2___default.a.reverse(newSearchWord.split('')).join(''));
            setSearchMode(true);
            setHashTagActived(true);
            setHashTagValue(lodash__WEBPACK_IMPORTED_MODULE_2___default.a.reverse(newSearchWord.split('')).join(''));
            return false;
          }
        }

        newSearchWord += `${text[i] || ''}`;
      });

      if (!canSearch) {
        setSearchMode(false);
      }
    }
  }

  if (ReactQuill) {
    return __jsx(react__WEBPACK_IMPORTED_MODULE_4___default.a.Fragment, null, __jsx(_general_ClickOutsideDetectWrapper__WEBPACK_IMPORTED_MODULE_9__["default"], {
      onClickedOutside: () => {
        if (props.clickOutsideSubmit) {
          handleSubmit();
        }
      },
      className: `no-border-input thin-border round-border-big background-transparent padding-sm flex-justify-start relative-wrapper flex-items-align-center ${props.className || ''}`,
      style: _objectSpread({}, props.style),
      id: uid
    }, __jsx(ReactQuill, {
      theme: null,
      placeholder: props.placeholder || "What's on your mind?",
      className: "width-90 grey-darken-3",
      style: {
        height: props.height || 30
      },
      ref: props.inputRef || ref[uid],
      onChange: (content, delta, source, editor) => {
        handleChange(content, delta, source, editor);
      },
      onChangeSelection: (range, source, editor) => {
        checkCanSearch(range, editor); // checkHashTag(range, editor);
      },
      onKeyUp: e => {
        //Enter Hit
        if (e.key === 'Enter') {
          e.preventDefault();
          handleSubmit();
        }
      }
    }), __jsx(_general_EmojiPickerButton__WEBPACK_IMPORTED_MODULE_10__["default"], {
      onSelect: emoji => {
        handleAddText(emoji.native);
      },
      position: props.emojiPosition
    }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Icon"], {
      type: "smile",
      className: "cursor-pointer grey margin-right-sm margin-top-xs flex-items-no-shrink",
      style: {
        fontSize: '17px'
      }
    })), // searchMode && _.isArray(_.get(suggestList, [prefix])) && !_.isEmpty(_.get(suggestList, [prefix])) ?
    searchMode ? __jsx("div", {
      className: "round-border thin-border background-white ",
      style: props.placement == 'bottom' ? {
        position: 'absolute',
        bottom: -210,
        right: 0,
        left: 0,
        zIndex: 99999,
        margin: 'auto'
      } : {
        position: 'absolute',
        top: -210,
        right: 0,
        left: 0,
        zIndex: 99999,
        margin: 'auto'
      }
    }, __jsx(_general_ScrollLoadWrapper__WEBPACK_IMPORTED_MODULE_11__["default"], {
      autoHeight: true,
      autoHeightMax: 200,
      autoHeightMin: 200,
      style: {
        width: '100%'
      }
    }, lodash__WEBPACK_IMPORTED_MODULE_2___default.a.isArray(lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(suggestList, [prefix])) && !lodash__WEBPACK_IMPORTED_MODULE_2___default.a.isEmpty(lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(suggestList, [prefix])) ? (suggestList[prefix] || []).map(value => __jsx("div", {
      className: "padding-sm flex-justify-start flex-items-align-center cursor-pointer hover-background-yellow-accent-1",
      onClick: e => {
        if (prefix == _config__WEBPACK_IMPORTED_MODULE_12__["tagPrefix"]) {
          setSearchMode(false);
          handleAddTag(Object(_common_function__WEBPACK_IMPORTED_MODULE_13__["getUserName"])(value, 'freakId') || '', activeTriggerPosition, searchWord);
          handleAddAliasCode(Object(_common_function__WEBPACK_IMPORTED_MODULE_13__["getUserName"])(value, 'freakId'), value._id, prefix, activeTriggerPosition);
        } else if (prefix == _config__WEBPACK_IMPORTED_MODULE_12__["hashTagPrefix"]) {
          setHashTagValue('');
          setHashTagActived(false);
          setHashTagActiveTriggerPosition(null);
          handleAddTag(lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(value, ['tag']) || '', hashTagActiveTriggerPosition, `#${hashTagValue}`);
          handleAddAliasCode(lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(value, ['tag']), '$_id', prefix, hashTagActiveTriggerPosition);
        }
      }
    }, prefix == _config__WEBPACK_IMPORTED_MODULE_12__["tagPrefix"] ? __jsx(react__WEBPACK_IMPORTED_MODULE_4___default.a.Fragment, null, __jsx(_general_UserAvatar__WEBPACK_IMPORTED_MODULE_14__["default"], {
      data: value,
      size: 50,
      className: "margin-right-md"
    }), __jsx("span", {
      className: "d-inline-block"
    }, __jsx("div", {
      className: "headline font-weight-black text-truncate"
    }, Object(_common_function__WEBPACK_IMPORTED_MODULE_13__["getUserName"])(value, 'freakId') || ''), __jsx("div", {
      className: "headline text-truncate"
    }, Object(_common_function__WEBPACK_IMPORTED_MODULE_13__["getUserName"])(value, 'fullName') || ''))) : prefix == _config__WEBPACK_IMPORTED_MODULE_12__["hashTagPrefix"] ? __jsx("div", {
      className: "headline font-weight-black text-truncate"
    }, lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(value, ['tag'])) : null)) : __jsx("div", {
      className: "flex-justify-center flex-items-align-center padding-md"
    }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Empty"], {
      description: isLoading ? 'Getting data...' : 'No Result'
    })))) : null));
  } else {
    return null;
  }
};

const mapStateToProps = state => ({
  app: state.app,
  user: state.user
});

const mapDispatchToProps = {
  loading: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_8__["loading"]
};
/* harmony default export */ __webpack_exports__["default"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_5__["connect"])(mapStateToProps, mapDispatchToProps)(antd__WEBPACK_IMPORTED_MODULE_0__["Form"].create()(Object(next_dist_client_router__WEBPACK_IMPORTED_MODULE_3__["withRouter"])(SocialInput))));

/***/ }),

/***/ "./components/carFreak/components/write-post-modal.jsx":
/*!*************************************************************!*\
  !*** ./components/carFreak/components/write-post-modal.jsx ***!
  \*************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! antd */ "antd");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(antd__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! axios */ "axios");
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var browser_image_compression__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! browser-image-compression */ "browser-image-compression");
/* harmony import */ var browser_image_compression__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(browser_image_compression__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var next_dist_client_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! next/dist/client/router */ "./node_modules/next/dist/client/router.js");
/* harmony import */ var next_dist_client_router__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(next_dist_client_router__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! react-redux */ "react-redux");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var react_sortablejs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! react-sortablejs */ "react-sortablejs");
/* harmony import */ var react_sortablejs__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(react_sortablejs__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! uuid */ "uuid");
/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(uuid__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var _feathers__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../feathers */ "./feathers.js");
/* harmony import */ var _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../redux/actions/app-actions */ "./redux/actions/app-actions.js");
/* harmony import */ var _social_input__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./social-input */ "./components/carFreak/components/social-input.jsx");
/* harmony import */ var _redux_actions_user_actions__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../../redux/actions/user-actions */ "./redux/actions/user-actions.js");
/* harmony import */ var _common_function__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../../common-function */ "./common-function.js");
var __jsx = react__WEBPACK_IMPORTED_MODULE_5___default.a.createElement;

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }















const {
  TextArea
} = antd__WEBPACK_IMPORTED_MODULE_0__["Input"];
const titleInputRef = react__WEBPACK_IMPORTED_MODULE_5___default.a.createRef();
const contentInputRef = react__WEBPACK_IMPORTED_MODULE_5___default.a.createRef();
const IMAGE_LIMIT = 10;

const WritePostModal = props => {
  const {
    0: newPostModal,
    1: setNewPostModal
  } = Object(react__WEBPACK_IMPORTED_MODULE_5__["useState"])(false);
  const {
    0: imageList,
    1: setImageList
  } = Object(react__WEBPACK_IMPORTED_MODULE_5__["useState"])([]);
  const {
    0: previewVisible,
    1: setPreviewVisible
  } = Object(react__WEBPACK_IMPORTED_MODULE_5__["useState"])(false);
  const {
    0: previewImage,
    1: setPreviewImage
  } = Object(react__WEBPACK_IMPORTED_MODULE_5__["useState"])('');
  const {
    0: confirmLoading,
    1: setConfirmLoading
  } = Object(react__WEBPACK_IMPORTED_MODULE_5__["useState"])(false);
  const {
    0: editRecord,
    1: setEditRecord
  } = Object(react__WEBPACK_IMPORTED_MODULE_5__["useState"])({});
  const {
    0: text,
    1: setText
  } = Object(react__WEBPACK_IMPORTED_MODULE_5__["useState"])('');
  const {
    0: resetIndicator,
    1: setResetIndicator
  } = Object(react__WEBPACK_IMPORTED_MODULE_5__["useState"])('');
  const {
    0: postData,
    1: setPostData
  } = Object(react__WEBPACK_IMPORTED_MODULE_5__["useState"])({
    title: '',
    content: '',
    location: ''
  });

  const uploadButton = __jsx("div", {
    style: {
      padding: '5%'
    }
  }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Icon"], {
    type: "plus"
  }), __jsx("div", {
    className: "ant-upload-text"
  }, "Upload"));

  Object(react__WEBPACK_IMPORTED_MODULE_5__["useEffect"])(() => {
    let visibleMode = props.visibleMode ? props.visibleMode === true ? true : false : false;

    if (lodash__WEBPACK_IMPORTED_MODULE_3___default.a.isEmpty(props.currentRecord) === false) {
      if (props.currentRecord !== editRecord) {
        let imageList = lodash__WEBPACK_IMPORTED_MODULE_3___default.a.cloneDeep(props.currentRecord.mediaList);

        if (imageList) {
          var uid = 0;
          imageList.map(function (v) {
            v.uid = uid + 1;
            uid++;
            return v;
          });
        }

        setImageList(imageList);
        setEditRecord(props.currentRecord);
        setPostData(props.currentRecord);
      }
    }

    if ((!lodash__WEBPACK_IMPORTED_MODULE_3___default.a.get(props.user, ['authenticated']) || !lodash__WEBPACK_IMPORTED_MODULE_3___default.a.get(props.user, ['info', 'user', '_id'])) && visibleMode === true) {
      props.loginMode(true);
      antd__WEBPACK_IMPORTED_MODULE_0__["message"].error('Please login first');
      visibleMode = false;
      closeModal();
    }

    setNewPostModal(visibleMode);
  });
  const layout = {
    labelCol: {
      span: 8
    },
    wrapperCol: {
      span: 16
    }
  };

  function closeModal() {
    props.changeVisibleMode(false);
    setResetIndicator(Object(uuid__WEBPACK_IMPORTED_MODULE_8__["v4"])());
    setEditRecord({});
    setImageList([]);
    setNewPostModal(false);
  }

  function onSubmit() {
    setConfirmLoading(true);

    if (!lodash__WEBPACK_IMPORTED_MODULE_3___default.a.get(postData, ['title'])) {
      setTimeout(() => {
        setConfirmLoading(false);
      }, 1000);
      antd__WEBPACK_IMPORTED_MODULE_0__["message"].error("Please input title.");
      return;
    }

    if (!lodash__WEBPACK_IMPORTED_MODULE_3___default.a.get(postData, ['content'])) {
      setTimeout(() => {
        setConfirmLoading(false);
      }, 1000);
      antd__WEBPACK_IMPORTED_MODULE_0__["message"].error("Please input content.");
      return;
    }

    let fileList = lodash__WEBPACK_IMPORTED_MODULE_3___default.a.cloneDeep(imageList);

    if (props.chatType === 'carfreaks') {
      if (fileList.length <= 0) {
        setConfirmLoading(false);
        return antd__WEBPACK_IMPORTED_MODULE_0__["message"].error("Please upload Image.");
      }
    }

    let promiseArr = [];
    let imageFile = '';

    for (let i = 0; i < fileList.length; i++) {
      if (!fileList[i].url) {
        let imgObj = fileList[i].originFileObj;
        const options = {
          maxSizeMB: 0.2,
          useWebWorker: true,
          maxWidthOrHeight: 1920
        };
        let imageFile = browser_image_compression__WEBPACK_IMPORTED_MODULE_2___default()(imgObj, options).then(compressedBlob => {
          compressedBlob.lastModifiedDate = new Date();
          const convertedBlobFile = new File([compressedBlob], imgObj.name, {
            type: imgObj.type,
            lastModified: Date.now()
          });
          return convertedBlobFile;
        });
        promiseArr.push(imageFile.then(res => {
          fileList[i].originFileObj = res;
          return fileList[i];
        }));
      } else {
        promiseArr.push(fileList[i]);
      }
    } // after image processing


    Promise.all(promiseArr).then(resArr => {
      let formData = new FormData();
      let uploadYes = 'no';

      for (let i = 0; i < resArr.length; i++) {
        if (!resArr[i].url) {
          uploadYes = 'yes';
          formData.append('images', resArr[i].originFileObj);
        }
      }

      let uploadPromiseArr = [];

      if (uploadYes === 'yes') {
        uploadPromiseArr.push(axios__WEBPACK_IMPORTED_MODULE_1___default.a.post(`${_feathers__WEBPACK_IMPORTED_MODULE_9__["default"].io.io.uri}upload-images-array`, formData, {
          headers: {
            'Authorization': _feathers__WEBPACK_IMPORTED_MODULE_9__["default"].settings.storage.storage.storage['feathers-jwt'],
            'Content-Type': 'multipart/form-data'
          }
        }).then(res => {
          let imageListResult = [];

          try {
            imageListResult = res.data.result;
          } catch (err) {
            imageListResult = [];
          }

          lodash__WEBPACK_IMPORTED_MODULE_3___default.a.map(imageListResult, function (v) {
            fileList.push(v);
          });

          fileList = lodash__WEBPACK_IMPORTED_MODULE_3___default.a.map(fileList, function (v) {
            if (v.url) {
              return v;
            }
          });
          return fileList = lodash__WEBPACK_IMPORTED_MODULE_3___default.a.without(fileList, undefined);
        }));
      } else {
        uploadPromiseArr.push(resArr);
      }

      Promise.all(uploadPromiseArr).then(res => {
        fileList = res[0];
        let finalfileList = [];
        finalfileList = fileList;

        if (!finalfileList) {
          finalfileList = [];
        }

        _feathers__WEBPACK_IMPORTED_MODULE_9__["default"].authenticate().then(res => {
          //patch
          if (props.editMode) {
            if (lodash__WEBPACK_IMPORTED_MODULE_3___default.a.isEmpty(props.editMode) === false) {
              if (props.editMode === 'edit') {
                _feathers__WEBPACK_IMPORTED_MODULE_9__["default"].service('chats').patch(editRecord._id, {
                  title: postData.title,
                  content: postData.content,
                  location: postData.location || '',
                  mediaList: finalfileList
                }).then(res1 => {
                  closeModal();

                  if (props.onUpdatePost) {
                    res1.userId = res.user;
                    props.onUpdatePost(res1);
                  }

                  setNewPostModal(false);
                  setConfirmLoading(false);
                }).catch(err => {
                  console.log(err);
                  antd__WEBPACK_IMPORTED_MODULE_0__["message"].error("Unable to write a Post. T.T");
                  setConfirmLoading(false);
                });
                return;
              }
            }
          } else {
            //create
            _feathers__WEBPACK_IMPORTED_MODULE_9__["default"].service('chats').create({
              userId: res.user._id,
              title: postData.title,
              content: postData.content,
              location: postData.location || '',
              postDate: new Date(),
              mediaList: fileList,
              chatType: props.chatType
            }).then(res1 => {
              closeModal(); // if (props.refreshData) {
              //     props.refreshData();
              // }

              if (props.onCreatePost) {
                res1.userId = res.user;
                props.onCreatePost(res1);
              }

              setNewPostModal(false);
              setConfirmLoading(false);
            }).catch(err => {
              console.log(err);
              antd__WEBPACK_IMPORTED_MODULE_0__["message"].error("Unable to write a Post. T.T");
              setConfirmLoading(false);
            });
          }
        });
      });
    });
  }

  ;

  function handleImageRemove2(record) {
    let oldFileList = lodash__WEBPACK_IMPORTED_MODULE_3___default.a.cloneDeep(imageList);

    var newFileList = lodash__WEBPACK_IMPORTED_MODULE_3___default.a.filter(oldFileList, function (val) {
      return val.uid !== record.uid;
    });

    setImageList(newFileList);
  }

  function getBase64(file) {
    return new Promise((resolve, reject) => {
      const reader = new FileReader();
      reader.readAsDataURL(file);

      reader.onload = () => resolve(reader.result);

      reader.onerror = error => reject(error);
    });
  }

  async function handlePreview(file) {
    if (!file.url && !file.preview) {
      file.preview = await getBase64(file.originFileObj);
    }

    setPreviewImage(file.url || file.preview);
    setPreviewVisible(true);
  }

  ;

  function handleChangeAdsImage(e) {
    e.fileList = e.fileList.slice(-IMAGE_LIMIT);
    e.fileList.map(function (v) {
      if (v.url) {
        return;
      }

      v.ObjectUrl = URL.createObjectURL(v.originFileObj);
    });
    setImageList(e.fileList);
  }

  function handleCancel() {}

  let emojiPosition = {
    bottom: -360,
    right: 0
  };
  return __jsx(react__WEBPACK_IMPORTED_MODULE_5___default.a.Fragment, null, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Modal"], {
    title: props.editMode == 'edit' ? 'Edit Post' : 'New Post',
    visible: newPostModal,
    onCancel: e => {
      closeModal();
    },
    onOk: e => {
      onSubmit();
    },
    okText: "Submit",
    maskClosable: false,
    confirmLoading: confirmLoading
  }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Spin"], {
    spinning: confirmLoading
  }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Form"], {
    layout: "vertical"
  }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Form"].Item, null, __jsx(_social_input__WEBPACK_IMPORTED_MODULE_11__["default"], {
    inputRef: titleInputRef,
    height: 30,
    placement: "bottom",
    resetIndicator: resetIndicator,
    editMode: props.editMode == 'edit' ? true : false,
    text: props.editMode == 'edit' ? editRecord.title : '',
    placeholder: "Topic Title(max 200)",
    className: "flex-items-align-start",
    onChange: (text, finalText) => {
      setPostData(_objectSpread(_objectSpread({}, postData), {}, {
        title: finalText
      }));
    },
    emojiPosition: {
      right: 33,
      top: -244
    },
    maxLength: 200
  })), imageList && props.chatType === 'carfreaks' ? __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Form"].Item, {
    wrapperCol: {
      span: 24
    }
  }, __jsx("div", {
    className: "clearfix createCarAds"
  }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Row"], {
    gutter: 6
  }, __jsx(react_sortablejs__WEBPACK_IMPORTED_MODULE_7__["ReactSortable"], {
    invertSwap: true,
    animation: 300,
    list: Object(_common_function__WEBPACK_IMPORTED_MODULE_13__["notEmptyLength"])(imageList) ? imageList : [],
    setList: newState => setImageList(newState)
  }, imageList.map((item, idx) => __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
    key: 'image' + idx,
    xl: 8,
    xs: 12,
    md: 12,
    xs: 24,
    style: {
      maxWidth: '300px',
      maxHeight: '250px'
    }
  }, item.url ? __jsx("div", {
    className: "containerCarAdsImg"
  }, __jsx("div", {
    className: "containerCarAdsImgBackGround"
  }, __jsx("img", {
    alt: "header",
    src: item.url
  })), __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Tooltip"], {
    title: "Click to Remove"
  }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Icon"], {
    onClick: () => {
      handleImageRemove2(item);
    },
    className: "removeImage",
    type: "close-circle",
    theme: "filled"
  })), idx === 0 ? __jsx("span", {
    className: "seqCount"
  }, idx + 1 + '/Main') : __jsx("span", {
    className: "seqCount"
  }, idx + 1)) : __jsx("div", {
    className: "containerCarAdsImg"
  }, __jsx("div", {
    className: "containerCarAdsImgBackGround"
  }, __jsx("img", {
    alt: "header",
    src: item.ObjectUrl
  })), __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Tooltip"], {
    title: "Click to Remove"
  }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Icon"], {
    onClick: () => {
      handleImageRemove2(item);
    },
    className: "removeImage",
    type: "close-circle",
    theme: "filled"
  })), __jsx("span", {
    className: "seqCount"
  }, idx + 1)))))), __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Upload"], {
    accept: ".png,.jpeg,.jpg",
    multiple: true,
    key: "uploadCarImage",
    beforeUpload: () => false,
    listType: "picture-card",
    fileList: imageList,
    showUploadList: false,
    onPreview: e => {
      handlePreview(e);
    },
    onChange: e => {
      handleChangeAdsImage(e);
    }
  }, imageList.length >= 27 ? null : uploadButton), __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Modal"], {
    visible: previewVisible,
    footer: null,
    onCancel: handleCancel
  }, __jsx("img", {
    alt: "example",
    style: {
      width: '100%'
    },
    src: previewImage
  })))) : '', __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Form"].Item, null, __jsx(_social_input__WEBPACK_IMPORTED_MODULE_11__["default"], {
    inputRef: contentInputRef,
    height: 100,
    resetIndicator: resetIndicator,
    editMode: props.editMode == 'edit' ? true : false,
    text: props.editMode == 'edit' ? editRecord.content : '',
    placeholder: "Please enter your content (maximum 1000 characters)",
    className: "flex-items-align-start",
    onChange: (text, finalText) => {
      setPostData(_objectSpread(_objectSpread({}, postData), {}, {
        content: finalText
      }));
    },
    emojiPosition: {
      right: 33,
      top: -244
    },
    maxLength: 1000
  }))))));
};

const mapStateToProps = state => ({
  app: state.app,
  user: state.user
});

const mapDispatchToProps = {
  loginMode: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_10__["loginMode"],
  loading: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_10__["loading"],
  setUser: _redux_actions_user_actions__WEBPACK_IMPORTED_MODULE_12__["setUser"]
};
/* harmony default export */ __webpack_exports__["default"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_6__["connect"])(mapStateToProps, mapDispatchToProps)(antd__WEBPACK_IMPORTED_MODULE_0__["Form"].create()(Object(next_dist_client_router__WEBPACK_IMPORTED_MODULE_4__["withRouter"])(WritePostModal))));

/***/ }),

/***/ "./components/carFreak/config.js":
/*!***************************************!*\
  !*** ./components/carFreak/config.js ***!
  \***************************************/
/*! exports provided: chatRestrictTime, carFreakGlobalSearch, tagPrefix, hashTagPrefix, tagPrefixHashValue, hashTagPrefixHashValue, tagSuffixHashValue, hashTagSuffixHashValue, seperatorHashValue, clubProfileViewTypes, parseTagStringToArray, getTagString, parseToTagString, getAliasCodeFromText, parseTagStringToPlainString, convertNameString, getViewType, validateViewType */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "chatRestrictTime", function() { return chatRestrictTime; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "carFreakGlobalSearch", function() { return carFreakGlobalSearch; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tagPrefix", function() { return tagPrefix; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hashTagPrefix", function() { return hashTagPrefix; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tagPrefixHashValue", function() { return tagPrefixHashValue; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hashTagPrefixHashValue", function() { return hashTagPrefixHashValue; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tagSuffixHashValue", function() { return tagSuffixHashValue; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hashTagSuffixHashValue", function() { return hashTagSuffixHashValue; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "seperatorHashValue", function() { return seperatorHashValue; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "clubProfileViewTypes", function() { return clubProfileViewTypes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "parseTagStringToArray", function() { return parseTagStringToArray; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getTagString", function() { return getTagString; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "parseToTagString", function() { return parseToTagString; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getAliasCodeFromText", function() { return getAliasCodeFromText; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "parseTagStringToPlainString", function() { return parseTagStringToPlainString; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "convertNameString", function() { return convertNameString; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getViewType", function() { return getViewType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "validateViewType", function() { return validateViewType; });
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! uuid */ "uuid");
/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(uuid__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _common_function__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common-function */ "./common-function.js");



const chatRestrictTime = 2000;
const carFreakGlobalSearch = ['carFreak', 'socialBoard', 'club', 'dealer', 'people'];
const tagPrefix = '@';
const hashTagPrefix = '#';
const tagPrefixHashValue = '@~#}:start';
const hashTagPrefixHashValue = '#^:!%start';
const tagSuffixHashValue = '@^@}}end';
const hashTagSuffixHashValue = '#>^}~end';
const seperatorHashValue = ']<%seperator>!;_';
const clubProfileViewTypes = ['admin', 'member', 'pending', 'non-member'];
function parseTagStringToArray(text) {
  if (text) {
    let finalText = [];
    let tagText = text.split(tagSuffixHashValue);
    tagText = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.forEach(tagText, function (char) {
      if (char.includes(tagPrefixHashValue)) {
        char = char.split(tagPrefixHashValue); //split prefix , the previous 1 sure is other text

        if (char[0] != null && char[0] != undefined) {
          //Check if other text got hashtag
          if (char[0].includes(hashTagPrefixHashValue)) {
            let hashTagArr = parseHashTagStringToArray(char[0]);
            finalText = finalText.concat(hashTagArr);
          } else {
            finalText.push({
              type: 'normal',
              value: char[0],
              id: null
            });
          }
        } //split prefix , the after 1 sure is tag text


        if (char[1] != null && char[1] != undefined) {
          char[1] = char[1].split(seperatorHashValue);
          finalText.push({
            type: 'tag',
            value: char[1][0],
            id: char[1][1]
          });
        }
      } else {
        let hashTagArr = parseHashTagStringToArray(char);
        finalText = finalText.concat(hashTagArr);
      }
    });
    return finalText;
  } else {
    return text;
  }
}

function parseHashTagStringToArray(text) {
  if (text) {
    let finalText = [];
    let tagText = text.split(hashTagSuffixHashValue);
    tagText = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.forEach(tagText, function (char) {
      if (char.includes(hashTagPrefixHashValue)) {
        char = char.split(hashTagPrefixHashValue); //split prefix , the previous 1 sure is other text

        if (char[0] != null && char[0] != undefined) {
          finalText.push({
            type: 'normal',
            value: char[0],
            id: null
          });
        } //split prefix , the after 1 sure is tag text


        if (char[1] != null && char[1] != undefined) {
          char[1] = char[1].split(seperatorHashValue);
          finalText.push({
            type: 'hashTag',
            value: char[1][0],
            id: char[1][1]
          });
        }
      } else {
        finalText.push({
          type: 'normal',
          value: char,
          id: null
        });
      }
    });
    return finalText;
  } else {
    return [];
  }
}

function getTagString(text, id, prefix) {
  if (text && id) {
    let codePrefix = prefix == '#' ? hashTagPrefixHashValue : tagPrefixHashValue;
    let codeSuffix = prefix == '#' ? hashTagSuffixHashValue : tagSuffixHashValue;
    return `${codePrefix}${text || ''}${seperatorHashValue}${id || ''}${codeSuffix}`;
  } else {
    return text;
  }
}
function parseToTagString(text, aliasCode) {
  if (text && lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isArray(aliasCode) && !lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isEmpty(aliasCode)) {
    let finalText = text;

    let sortedAliasCode = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.reverse(lodash__WEBPACK_IMPORTED_MODULE_0___default.a.sortBy(aliasCode, ['position']));

    lodash__WEBPACK_IMPORTED_MODULE_0___default.a.forEach(sortedAliasCode, function (code) {
      let name = code.name;
      let indexes = Object(_common_function__WEBPACK_IMPORTED_MODULE_2__["findIndexesOfString"])(finalText, name);

      if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.includes(indexes, code.position)) {
        let preText = finalText.substr(0, code.position) || '';
        let postText = finalText.substr(code.position + name.length) || '';
        finalText = preText + code.value + postText;
      }
    });

    return finalText;
  } else {
    return text;
  }
}
function getAliasCodeFromText(text) {
  if (text) {
    let aliasCode = [];
    let structedText = '';
    let textArr = parseTagStringToArray(text);
    textArr = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.map(textArr, function (item) {
      if (item.type != 'tag' && item.type != 'hashTag') {
        return item;
      } else {
        item.uid = `${Object(uuid__WEBPACK_IMPORTED_MODULE_1__["v4"])()}`;
        return item;
      }
    });
    structedText = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.compact(lodash__WEBPACK_IMPORTED_MODULE_0___default.a.map(textArr, function (item) {
      if (item.type != 'tag' && item.type != 'hashTag') {
        return item.value;
      } else {
        return `${item.uid}${item.value}`;
      }
    }));
    structedText = structedText.join('');

    lodash__WEBPACK_IMPORTED_MODULE_0___default.a.forEach(textArr, function (item) {
      if (item.type == 'tag' || item.type == 'hashTag') {
        let position = structedText.indexOf(item.uid);
        structedText = structedText.replace(item.uid, '');
        aliasCode.push({
          position: position,
          value: `${item.type == 'tag' ? tagPrefixHashValue : hashTagPrefixHashValue}${item.value || ''}${seperatorHashValue}${item.id || ''}${item.type == 'tag' ? tagSuffixHashValue : hashTagSuffixHashValue}`,
          prefix: item.type == 'tag' ? tagPrefix : hashTagPrefix,
          endPosition: position + item.value.length - 1,
          name: item.value,
          id: item.id,
          createdAt: new Date().getTime()
        });
      }
    });

    return aliasCode;
  } else {
    return [];
  }
}
function parseTagStringToPlainString(text) {
  if (text) {
    let textArr = parseTagStringToArray(text);
    textArr = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.map(textArr, function (item) {
      return item.value;
    });
    return textArr.join('');
  } else {
    return text;
  }
}
function convertNameString(users, authUser) {
  if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isArray(users) && !lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isEmpty(users)) {
    let text = '';
    let count = 3;

    if (Object(_common_function__WEBPACK_IMPORTED_MODULE_2__["getObjectId"])(authUser)) {
      users = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.filter(users, function (user) {
        return Object(_common_function__WEBPACK_IMPORTED_MODULE_2__["checkObjectId"])(user, Object(_common_function__WEBPACK_IMPORTED_MODULE_2__["getObjectId"])(authUser));
      });
    }

    lodash__WEBPACK_IMPORTED_MODULE_0___default.a.forEach(users, function (user, index) {
      if (index + 1 == users.length && users.length > 1) {
        text += ` and ${Object(_common_function__WEBPACK_IMPORTED_MODULE_2__["getUserName"])(user, 'fullName')}`;
        return false;
      }

      if (index + 1 > count) {
        text += ` and ${users.length - count} others`;
        return false;
      }

      if (index == 0) {
        text += `${Object(_common_function__WEBPACK_IMPORTED_MODULE_2__["getUserName"])(user, 'fullName')}`;
      }

      if (index > 0) {
        text += `, ${Object(_common_function__WEBPACK_IMPORTED_MODULE_2__["getUserName"])(user, 'fullName')}`;
      }
    });

    return text;
  } else {
    return 'Ccar User';
  }
}
function getViewType(join) {
  if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isPlainObject(join) && !lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isEmpty(join)) {
    if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(join, ['status']) == 'approved' && lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(join, ['role']) == 'admin') {
      return clubProfileViewTypes[0];
    }

    if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(join, ['status']) == 'approved' && lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(join, ['role']) == 'member') {
      return clubProfileViewTypes[1];
    }

    if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(join, ['status']) == 'pending' && lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(join, ['role']) == 'member') {
      return clubProfileViewTypes[2];
    }

    return clubProfileViewTypes[3];
  } else {
    return clubProfileViewTypes[3];
  }
}
function validateViewType(data) {
  if (!data) {
    return clubProfileViewTypes[3];
  } else {
    return lodash__WEBPACK_IMPORTED_MODULE_0___default.a.find(clubProfileViewTypes, function (type) {
      return type == data;
    }) || clubProfileViewTypes[3];
  }
}

/***/ }),

/***/ "./components/compare/CompareFloatingButton.jsx":
/*!******************************************************!*\
  !*** ./components/compare/CompareFloatingButton.jsx ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _ant_design_icons__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ant-design/icons */ "@ant-design/icons");
/* harmony import */ var _ant_design_icons__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_ant_design_icons__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! antd */ "antd");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(antd__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var react_custom_scrollbars__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react-custom-scrollbars */ "react-custom-scrollbars");
/* harmony import */ var react_custom_scrollbars__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react_custom_scrollbars__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react-redux */ "react-redux");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var redux__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! redux */ "redux");
/* harmony import */ var redux__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(redux__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _redux_actions_productsList_actions__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../redux/actions/productsList-actions */ "./redux/actions/productsList-actions.js");
/* harmony import */ var _feathers__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../feathers */ "./feathers.js");
/* harmony import */ var next_dist_client_router__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! next/dist/client/router */ "./node_modules/next/dist/client/router.js");
/* harmony import */ var next_dist_client_router__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(next_dist_client_router__WEBPACK_IMPORTED_MODULE_9__);
/* harmony import */ var _common_function__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../common-function */ "./common-function.js");
/* harmony import */ var _product_list_grid_product_list__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../product-list/grid-product-list */ "./components/product-list/grid-product-list.jsx");
/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! next/link */ "./node_modules/next/link.js");
/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(next_link__WEBPACK_IMPORTED_MODULE_12__);
/* harmony import */ var _route__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../route */ "./route.js");
var __jsx = react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement;















const CompareFloatingButton = props => {
  const refCompare = Object(react__WEBPACK_IMPORTED_MODULE_3__["useRef"])();
  const {
    0: visible,
    1: setVisible
  } = Object(react__WEBPACK_IMPORTED_MODULE_3__["useState"])(false);
  const {
    0: productList,
    1: setProductList
  } = Object(react__WEBPACK_IMPORTED_MODULE_3__["useState"])([]);
  Object(react__WEBPACK_IMPORTED_MODULE_3__["useEffect"])(() => {
    function handleClickOutside(event) {
      if (event.target.id != 'compare') {
        if (refCompare.current && !refCompare.current.contains(event.target)) {
          setVisible(false);
        }
      }
    } // Bind the event listener


    document.addEventListener("mousedown", handleClickOutside);
    return () => {
      // Unbind the event listener on clean up
      document.removeEventListener("mousedown", handleClickOutside);
    };
  }, [refCompare]);
  Object(react__WEBPACK_IMPORTED_MODULE_3__["useEffect"])(() => {
    if (Object(_common_function__WEBPACK_IMPORTED_MODULE_10__["notEmptyLength"])(props.productsList.compareIds)) {
      _feathers__WEBPACK_IMPORTED_MODULE_8__["default"].service('product-ads').find({
        query: {
          _id: {
            $in: props.productsList.compareIds
          },
          $populate: [{
            path: 'carspecsId',
            ref: 'carspecs'
          }, {
            path: 'companyId',
            ref: 'companys'
          }, {
            path: 'createdBy',
            ref: 'users'
          }]
        }
      }).then(res => {
        if (Object(_common_function__WEBPACK_IMPORTED_MODULE_10__["notEmptyLength"])(res.data)) {
          setProductList(res.data.map(function (item) {
            item.companys = item.companyId;
            item.carspecsAll = item.carspecsId;
            return item;
          }));
        } else {
          setProductList([]);
        }
      }).catch(err => {
        // message.error(err.message);
        props.clearCompareProductIds();
      });
    } else {
      setProductList([]);
    }
  }, [props.productsList.compareIds]);

  const toggle = () => {
    visible == true ? setVisible(false) : setVisible(true);
  };

  const _renderCondition = v => {
    let condDesc = v.condition.toUpperCase();

    if (v.condition == 'used') {
      return __jsx("div", {
        className: "wrap-condition wrap-condition-used",
        style: {
          marginTop: 3
        }
      }, __jsx("p", null, condDesc));
    } else if (v.condition == 'recon') {
      return __jsx("div", {
        className: "wrap-condition wrap-condition-recon",
        style: {
          marginTop: 3
        }
      }, __jsx("p", null, condDesc));
    } else {
      return __jsx("div", {
        className: "wrap-condition wrap-condition-new",
        style: {
          marginTop: 3
        }
      }, __jsx("p", null, "New"));
    }
  };

  return __jsx("div", null, visible === false ? productList.length > 0 ? __jsx("div", {
    className: "wrap-compare-btn"
  }, __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Button"], {
    onClick: () => toggle(),
    id: "compare"
  }, __jsx("img", {
    src: "/assets/CarListingIconMobile/car-compare.png",
    className: "w-100"
  }))) : null : __jsx("div", {
    className: "wrap-compare-btn-circle"
  }, __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Button"], {
    onClick: () => toggle(),
    className: "w-100",
    id: "compare"
  }, __jsx(_ant_design_icons__WEBPACK_IMPORTED_MODULE_0__["CloseOutlined"], null))), visible === true ? __jsx("div", {
    ref: refCompare
  }, __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Card"], {
    title: "Compare Car",
    size: "small",
    className: "card-compare card-padding-0",
    bordered: true,
    extra: __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Button"], {
      onClick: () => {
        props.clearCompareProductIds();
        toggle();
      }
    }, " Clear All")
  }, __jsx(react_custom_scrollbars__WEBPACK_IMPORTED_MODULE_4__["Scrollbars"], {
    style: {
      width: '100%',
      maxWidth: window.innerWidth * 0.7
    },
    autoHide: true,
    autoHeight: true,
    autoHeightMax: "70vh"
  }, Object(_common_function__WEBPACK_IMPORTED_MODULE_10__["notEmptyLength"])(productList) ? __jsx(react__WEBPACK_IMPORTED_MODULE_3___default.a.Fragment, null, __jsx("div", {
    className: "flex-justify-start flex-items-align-center padding-sm"
  }, lodash__WEBPACK_IMPORTED_MODULE_2___default.a.map(productList, function (item) {
    return __jsx("span", {
      className: "d-inline-block margin-right-md flex-items-no-shrink",
      style: {
        width: 300
      }
    }, __jsx(_product_list_grid_product_list__WEBPACK_IMPORTED_MODULE_11__["default"], {
      data: [item],
      xs: 24,
      sm: 24,
      md: 24,
      lg: 24,
      xl: 24,
      topRight: v => {
        return __jsx("span", {
          className: "d-inline-block background-black-opacity-50 padding-x-sm"
        }, __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Icon"], {
          type: "close",
          style: {
            cursor: 'pointer',
            fontSize: '15px'
          },
          onClick: () => {
            props.removeCompareProductId(v._id);
          }
        }));
      }
    }));
  }))) : __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Empty"], {
    style: {
      margin: 30
    }
  })), __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Row"], {
    style: {
      margin: 10
    }
  }, __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Col"], {
    span: 24,
    style: {
      textAlign: 'center'
    }
  }, __jsx(next_link__WEBPACK_IMPORTED_MODULE_12___default.a, {
    shallow: false,
    href: _route__WEBPACK_IMPORTED_MODULE_13__["routePaths"].compare.to || '/',
    as: typeof _route__WEBPACK_IMPORTED_MODULE_13__["routePaths"].compare.as == 'function' ? _route__WEBPACK_IMPORTED_MODULE_13__["routePaths"].compare.as() : '/'
  }, __jsx("a", null, __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Button"], {
    style: {
      fontWeight: 'bold'
    },
    type: "primary"
  }, "Confirm & Compare"))))))) : null);
};

function mapStateToProps(state) {
  return {
    productsList: state.productsList
  };
}

function mapDispatchToProps(dispatch) {
  return Object(redux__WEBPACK_IMPORTED_MODULE_6__["bindActionCreators"])({
    removeCompareProductId: _redux_actions_productsList_actions__WEBPACK_IMPORTED_MODULE_7__["removeCompareProductId"],
    updateActiveIdProductList: _redux_actions_productsList_actions__WEBPACK_IMPORTED_MODULE_7__["updateActiveIdProductList"],
    clearCompareProductIds: _redux_actions_productsList_actions__WEBPACK_IMPORTED_MODULE_7__["clearCompareProductIds"]
  }, dispatch);
}

/* harmony default export */ __webpack_exports__["default"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_5__["connect"])(mapStateToProps, mapDispatchToProps)(Object(next_dist_client_router__WEBPACK_IMPORTED_MODULE_9__["withRouter"])(CompareFloatingButton)));

/***/ }),

/***/ "./components/general/ClickOutsideDetectWrapper.jsx":
/*!**********************************************************!*\
  !*** ./components/general/ClickOutsideDetectWrapper.jsx ***!
  \**********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! antd */ "antd");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(antd__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-redux */ "react-redux");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! uuid */ "uuid");
/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(uuid__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! next/router */ "next/router");
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_4__);
var __jsx = react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement;

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }






let uid = Object(uuid__WEBPACK_IMPORTED_MODULE_3__["v4"])();
let ref = {};
ref[uid] = react__WEBPACK_IMPORTED_MODULE_1___default.a.createRef();

const ClickOutsideDetectWrapper = props => {
  Object(react__WEBPACK_IMPORTED_MODULE_1__["useEffect"])(() => {
    // Bind the event listener
    document.addEventListener("mousedown", handleClickOutside);
    return () => {
      // Unbind the event listener on clean up
      document.removeEventListener("mousedown", handleClickOutside);
    };
  }, []);
  Object(react__WEBPACK_IMPORTED_MODULE_1__["useEffect"])(() => {
    // Bind the event listener
    document.addEventListener("mousedown", handleClickOutside);
    return () => {
      // Unbind the event listener on clean up
      document.removeEventListener("mousedown", handleClickOutside);
    };
  });

  function handleClickOutside(event) {
    if (!ref[uid].current || !ref[uid].current.contains(event.target)) {
      if (props.onClickedOutside) {
        props.onClickedOutside();
      }
    }
  }

  return __jsx("span", {
    className: `${props.className || ''}`,
    style: _objectSpread({}, props.style),
    id: props.id || uid,
    ref: ref[uid]
  }, props.children);
};

const mapStateToProps = state => ({
  app: state.app,
  user: state.user
});

const mapDispatchToProps = {};
/* harmony default export */ __webpack_exports__["default"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_2__["connect"])(mapStateToProps, mapDispatchToProps)(antd__WEBPACK_IMPORTED_MODULE_0__["Form"].create()(Object(next_router__WEBPACK_IMPORTED_MODULE_4__["withRouter"])(ClickOutsideDetectWrapper))));

/***/ }),

/***/ "./components/general/EmojiPickerButton.jsx":
/*!**************************************************!*\
  !*** ./components/general/EmojiPickerButton.jsx ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! antd */ "antd");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(antd__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var emoji_mart__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! emoji-mart */ "emoji-mart");
/* harmony import */ var emoji_mart__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(emoji_mart__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-redux */ "react-redux");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! next/router */ "next/router");
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _common_function__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../common-function */ "./common-function.js");
var __jsx = react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement;

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }







const emojiRef = react__WEBPACK_IMPORTED_MODULE_2___default.a.createRef();

const EmojiPickerButton = props => {
  const {
    0: emojiVisible,
    1: setEmojiVisible
  } = Object(react__WEBPACK_IMPORTED_MODULE_2__["useState"])(false);
  Object(react__WEBPACK_IMPORTED_MODULE_2__["useEffect"])(() => {
    function handleClickOutside(event) {
      if (!emojiRef.current || !emojiRef.current.contains(event.target)) {
        setEmojiVisible(false);
      }
    } // Bind the event listener


    document.addEventListener("mousedown", handleClickOutside);
    return () => {
      // Unbind the event listener on clean up
      document.removeEventListener("mousedown", handleClickOutside);
    };
  }, [emojiRef.current]);

  function handleOnSelect(emoji) {
    if (props.onSelect) {
      props.onSelect(emoji);
    }
  }

  return __jsx(react__WEBPACK_IMPORTED_MODULE_2___default.a.Fragment, null, __jsx("span", {
    className: "d-inline-block relative-wrapper"
  }, __jsx("span", {
    onClick: e => {
      setEmojiVisible(true);
    }
  }, props.children ? props.children : __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Icon"], {
    type: "smile",
    className: "cursor-pointer"
  })), emojiVisible ? __jsx("span", {
    className: `d-inline-block ${props.className || ''}`,
    ref: emojiRef,
    style: Object(_common_function__WEBPACK_IMPORTED_MODULE_5__["notEmptyLength"])(Object(_common_function__WEBPACK_IMPORTED_MODULE_5__["objectRemoveEmptyValue"])(props.position)) ? _objectSpread(_objectSpread({
      position: 'absolute'
    }, props.position), {}, {
      zIndex: 999999
    }) : {
      position: 'absolute',
      top: -380,
      left: -200,
      zIndex: 999999
    }
  }, __jsx(emoji_mart__WEBPACK_IMPORTED_MODULE_1__["Picker"], {
    enableFrequentEmojiSort: true,
    useButton: true,
    theme: "auto",
    showPreview: false,
    showSkinTones: false,
    perLine: 6,
    onClick: emoji => {
      handleOnSelect(emoji);
    }
  })) : null));
};

const mapStateToProps = state => ({
  app: state.app,
  user: state.user
});

const mapDispatchToProps = {};
/* harmony default export */ __webpack_exports__["default"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_3__["connect"])(mapStateToProps, mapDispatchToProps)(antd__WEBPACK_IMPORTED_MODULE_0__["Form"].create()(Object(next_router__WEBPACK_IMPORTED_MODULE_4__["withRouter"])(EmojiPickerButton))));

/***/ }),

/***/ "./components/general/InfiniteScrollWrapper.jsx":
/*!******************************************************!*\
  !*** ./components/general/InfiniteScrollWrapper.jsx ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! antd */ "antd");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(antd__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-redux */ "react-redux");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! uuid */ "uuid");
/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(uuid__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _common_function__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../common-function */ "./common-function.js");
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next/router */ "next/router");
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var react_infinite_scroller__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! react-infinite-scroller */ "react-infinite-scroller");
/* harmony import */ var react_infinite_scroller__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(react_infinite_scroller__WEBPACK_IMPORTED_MODULE_6__);
var __jsx = react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement;







let uid = Object(uuid__WEBPACK_IMPORTED_MODULE_3__["v4"])();
let containerRef = {};
containerRef[uid] = react__WEBPACK_IMPORTED_MODULE_1___default.a.createRef();
let triggerFunction;

const InfiniteScrollWrapper = props => {
  const {
    0: htmlWindow,
    1: setHtmlWindow
  } = Object(react__WEBPACK_IMPORTED_MODULE_1__["useState"])(true);
  Object(react__WEBPACK_IMPORTED_MODULE_1__["useEffect"])(() => {
    if (window) {
      setHtmlWindow(window);
    }
  }, []);
  return __jsx(react__WEBPACK_IMPORTED_MODULE_1___default.a.Fragment, null, __jsx(react_infinite_scroller__WEBPACK_IMPORTED_MODULE_6___default.a, {
    loadMore: () => {
      if (props.onScrolledBottom) {
        clearTimeout(triggerFunction);
        triggerFunction = setTimeout(() => {
          props.onScrolledBottom();
        }, 500);
      }
    },
    hasMore: props.hasMore != null ? props.hasMore : true,
    useWindow: props.useWindow == false ? false : true,
    loader: __jsx("div", {
      className: "width-100 flex-justify-center",
      style: {
        height: 50
      }
    }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Icon"], {
      type: "loading",
      style: {
        fontSize: 50
      }
    })),
    threshold: (htmlWindow.innerHeight || 500) * 0.5
  }, props.children));
};

const mapStateToProps = state => ({
  app: state.app,
  user: state.user
});

const mapDispatchToProps = {};
/* harmony default export */ __webpack_exports__["default"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_2__["connect"])(mapStateToProps, mapDispatchToProps)(antd__WEBPACK_IMPORTED_MODULE_0__["Form"].create()(Object(next_router__WEBPACK_IMPORTED_MODULE_5__["withRouter"])(InfiniteScrollWrapper))));

/***/ }),

/***/ "./components/general/LayoutV2.jsx":
/*!*****************************************!*\
  !*** ./components/general/LayoutV2.jsx ***!
  \*****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _ant_design_icons__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ant-design/icons */ "@ant-design/icons");
/* harmony import */ var _ant_design_icons__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_ant_design_icons__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! antd */ "antd");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(antd__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var next_dist_client_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/dist/client/router */ "./node_modules/next/dist/client/router.js");
/* harmony import */ var next_dist_client_router__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_dist_client_router__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! next/link */ "./node_modules/next/link.js");
/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(next_link__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var react_cookie_consent__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! react-cookie-consent */ "react-cookie-consent");
/* harmony import */ var react_cookie_consent__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(react_cookie_consent__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! react-redux */ "react-redux");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var redux__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! redux */ "redux");
/* harmony import */ var redux__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(redux__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! uuid */ "uuid");
/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(uuid__WEBPACK_IMPORTED_MODULE_9__);
/* harmony import */ var _common_function__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../common-function */ "./common-function.js");
/* harmony import */ var _feathers__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../feathers */ "./feathers.js");
/* harmony import */ var _functionContent__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../functionContent */ "./functionContent.js");
/* harmony import */ var _icon__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../icon */ "./icon.js");
/* harmony import */ var _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../redux/actions/app-actions */ "./redux/actions/app-actions.js");
/* harmony import */ var _redux_actions_newcars_actions__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../redux/actions/newcars-actions */ "./redux/actions/newcars-actions.js");
/* harmony import */ var _redux_actions_productsList_actions__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../redux/actions/productsList-actions */ "./redux/actions/productsList-actions.js");
/* harmony import */ var _redux_actions_user_actions__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../../redux/actions/user-actions */ "./redux/actions/user-actions.js");
/* harmony import */ var _compare_CompareFloatingButton__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../compare/CompareFloatingButton */ "./components/compare/CompareFloatingButton.jsx");
/* harmony import */ var _login_login__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../login/login */ "./components/login/login.jsx");
/* harmony import */ var _global_search_bar__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./global-search-bar */ "./components/general/global-search-bar.jsx");
/* harmony import */ var _UserAvatar__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./UserAvatar */ "./components/general/UserAvatar.jsx");
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! axios */ "axios");
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_22___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_22__);
/* harmony import */ var react_responsive__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! react-responsive */ "react-responsive");
/* harmony import */ var react_responsive__WEBPACK_IMPORTED_MODULE_23___default = /*#__PURE__*/__webpack_require__.n(react_responsive__WEBPACK_IMPORTED_MODULE_23__);
/* harmony import */ var _webPush__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ../../webPush */ "./webPush.js");
/* harmony import */ var firebase_app__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! firebase/app */ "firebase/app");
/* harmony import */ var firebase_app__WEBPACK_IMPORTED_MODULE_25___default = /*#__PURE__*/__webpack_require__.n(firebase_app__WEBPACK_IMPORTED_MODULE_25__);
/* harmony import */ var _InfiniteScrollWrapper__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./InfiniteScrollWrapper */ "./components/general/InfiniteScrollWrapper.jsx");
/* harmony import */ var _ScrollLoadWrapper__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./ScrollLoadWrapper */ "./components/general/ScrollLoadWrapper.jsx");
/* harmony import */ var react_custom_scrollbars__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! react-custom-scrollbars */ "react-custom-scrollbars");
/* harmony import */ var react_custom_scrollbars__WEBPACK_IMPORTED_MODULE_28___default = /*#__PURE__*/__webpack_require__.n(react_custom_scrollbars__WEBPACK_IMPORTED_MODULE_28__);
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! moment */ "moment");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_29___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_29__);
/* harmony import */ var _WindowScrollDisableWrapper__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./WindowScrollDisableWrapper */ "./components/general/WindowScrollDisableWrapper.jsx");
/* harmony import */ var _route__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ../../route */ "./route.js");
var __jsx = react__WEBPACK_IMPORTED_MODULE_5___default.a.createElement;

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

































const NOTIFICATION_BOX_WIDTH = 400;
const NOTIFICATION_MAX_LIMIT = 200;
const NOTIFICATION_PAGE_SIZE = 10;

const Desktop = ({
  children
}) => {
  const isDesktop = Object(react_responsive__WEBPACK_IMPORTED_MODULE_23__["useMediaQuery"])({
    minWidth: 1025
  });
  return isDesktop ? children : null;
};

const Tablet = ({
  children
}) => {
  const isTablet = Object(react_responsive__WEBPACK_IMPORTED_MODULE_23__["useMediaQuery"])({
    minWidth: 768,
    maxWidth: 1024
  });
  return isTablet ? children : null;
};

const Mobile = ({
  children
}) => {
  const isMobile = Object(react_responsive__WEBPACK_IMPORTED_MODULE_23__["useMediaQuery"])({
    maxWidth: 767
  });
  return isMobile ? children : null;
};

const Default = ({
  children
}) => {
  const isNotMobile = Object(react_responsive__WEBPACK_IMPORTED_MODULE_23__["useMediaQuery"])({
    minWidth: 768
  });
  return isNotMobile ? children : null;
};

const NotWebDevice = ({
  children
}) => {
  const isMobile = Object(react_responsive__WEBPACK_IMPORTED_MODULE_23__["useMediaQuery"])({
    maxWidth: 767
  });
  const isTablet = Object(react_responsive__WEBPACK_IMPORTED_MODULE_23__["useMediaQuery"])({
    minWidth: 768,
    maxWidth: 991
  });
  return isMobile || isTablet ? children : null;
};

var frontUrl = Object(_functionContent__WEBPACK_IMPORTED_MODULE_12__["checkEnvReturnWebAdmin"])(_feathers__WEBPACK_IMPORTED_MODULE_11__["default"].io.io.uri);
var currentEnv = Object(_functionContent__WEBPACK_IMPORTED_MODULE_12__["checkEnv"])(_feathers__WEBPACK_IMPORTED_MODULE_11__["default"].io.io.uri);

class LayoutV2 extends react__WEBPACK_IMPORTED_MODULE_5___default.a.Component {
  constructor(props) {
    super(props);

    _defineProperty(this, "showDrawer", () => {
      this.setState({
        visible: true
      });
    });

    _defineProperty(this, "onClose", () => {
      this.setState({
        visible: false
      });
    });

    _defineProperty(this, "handleExpiredToken", () => {
      if (lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(this.props, ['user', 'authenticated'])) {
        _feathers__WEBPACK_IMPORTED_MODULE_11__["default"].authenticate().then(res => {
          this.props.setUser(res.user);
        }).catch(err => {
          this.props.router.push('/logout');
          this.props.loginMode(true);
          antd__WEBPACK_IMPORTED_MODULE_1__["message"].error('Your authentication session is expired. Please login again.');
        });
      }
    });

    _defineProperty(this, "_renderNotification", data => {
      antd__WEBPACK_IMPORTED_MODULE_1__["notification"].open({
        message: lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(data, 'notification.title') || '',
        description: lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(data, 'notification.body') || '',
        duration: 10,
        placement: 'bottomRight',
        icon: __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Avatar"], {
          src: lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(data, 'data.avatar') || _icon__WEBPACK_IMPORTED_MODULE_13__["ccarLogo"]
        }),
        key: Object(uuid__WEBPACK_IMPORTED_MODULE_9__["v4"])(),
        className: 'cursor-pointer',
        onClick: () => {
          if (lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(data, 'data.path')) {
            this.props.router.push(lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(data, 'data.path') || '/');
          }
        }
      });
    });

    _defineProperty(this, "handleScroll", e => {
      this.setState({
        scrollY: window.scrollY
      });
      let scrollBarHeight = window.innerHeight * (window.innerHeight / document.body.offsetHeight);

      if (window.scrollY + scrollBarHeight + this.state.scrollRange >= document.body.scrollHeight) {
        if (this.props.onScrolledBottom) {
          this.props.onScrolledBottom();
        }
      }
    });

    _defineProperty(this, "_renderUser", profileMenu => {
      let self = this;

      if (lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(this.props, ['user', 'authenticated'])) {
        return __jsx("span", {
          className: "d-inline-block margin-x-md flex-items-align-center"
        }, __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Dropdown"], {
          placement: "bottomRight",
          overlayClassName: "padding-top-lg",
          visible: self.state.showProfileMenu,
          onVisibleChange: v => {
            if (self.state.showProfileMenu != v) {
              self.setState({
                showProfileMenu: v
              });
            }
          },
          overlayStyle: {
            width: '250px'
          },
          overlay: () => {
            return __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Menu"], null, lodash__WEBPACK_IMPORTED_MODULE_2___default.a.map(profileMenu, function (menu, index) {
              return __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Menu"].Item, {
                key: `profile-menu-${++index}`,
                className: "padding-sm"
              }, __jsx(next_link__WEBPACK_IMPORTED_MODULE_4___default.a, {
                shallow: false,
                href: menu.to || '/',
                as: typeof menu.as == 'function' ? menu.as(lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(self.props.user, ['info', 'user'])) : '/'
              }, __jsx("a", null, menu.render ? menu.render() : __jsx("div", {
                className: "flex-justify-start flex-items-align-center"
              }, __jsx("span", {
                className: "d-inline-block margin-x-sm"
              }, menu.icon), __jsx("span", {
                className: "d-inline-block black headline subtitle1   cursor-pointer margin-x-sm"
              }, menu.text)))));
            }), lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(this.props.user, ['info', 'user', 'role']) != 'mobile-user' && lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(this.props.user, ['info', 'user', 'role']) != 'normaluser' ? __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Menu"].Item, {
              key: `profile-menu-dealership`,
              className: "padding-sm",
              onClick: e => {}
            }, __jsx("div", {
              className: "flex-justify-start flex-items-align-center"
            }, __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Button"], {
              className: " background-ccar-button-yellow black border-ccar-button-yellow text-align-center",
              block: true,
              target: "_blank",
              href: frontUrl
            }, "Manage My Ads"))) : null);
          }
        }, __jsx("span", {
          className: "d-inline-block cursor-pointer",
          style: {
            maxWidth: '200px'
          }
        }, __jsx(_UserAvatar__WEBPACK_IMPORTED_MODULE_21__["default"], {
          showNameRight: true,
          avatarClassName: "flex-items-no-shrink",
          textClassName: "white text-truncate subtitle1",
          size: 35,
          data: lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(this.props.user, ['info', 'user'])
        }))), __jsx("span", {
          className: "d-inline-block margin-left-md"
        }, this._renderNotificationBox()));
      } else {
        return __jsx("span", {
          className: "flex-items-align-center margin-x-md white subtitle1 cursor-pointer ",
          onClick: () => {
            this.props.loginMode(true);
          }
        }, __jsx("img", {
          src: "/assets/CarListingIcon/login@3x-2.png",
          style: {
            width: 20
          },
          className: "margin-right-xs"
        }), "Login");
      }
    });

    _defineProperty(this, "_renderUserRes", profileMenu => {
      let self = this;

      if (lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(this.props, ['user', 'authenticated'])) {
        return __jsx("span", {
          className: "d-inline-block margin-bottom-xs flex-items-align-center"
        }, __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Dropdown"], {
          placement: "bottomRight",
          overlayClassName: "padding-top-lg",
          overlayStyle: {
            width: '250px'
          },
          overlay: () => {
            return __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Menu"], null, lodash__WEBPACK_IMPORTED_MODULE_2___default.a.map(profileMenu, function (menu, index) {
              return __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Menu"].Item, {
                key: `profile-menu-${++index}`,
                className: "padding-sm"
              }, __jsx(next_link__WEBPACK_IMPORTED_MODULE_4___default.a, {
                shallow: false,
                href: menu.to || '/',
                as: typeof menu.as == 'function' ? menu.as(lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(self.props.user, ['info', 'user'])) : '/'
              }, __jsx("a", null, __jsx("div", {
                className: "flex-justify-start flex-items-align-center"
              }, __jsx("span", {
                className: "d-inline-block margin-x-sm"
              }, menu.icon), __jsx("span", {
                className: "d-inline-block black headline subtitle1 cursor-pointer margin-x-sm"
              }, menu.text)))));
            }), lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(this.props.user, ['info', 'user', 'role']) != 'mobile-user' && lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(this.props.user, ['info', 'user', 'role']) != 'normaluser' ? __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Menu"].Item, {
              key: `profile-menu-dealership`,
              className: "padding-sm",
              onClick: e => {}
            }, __jsx("div", {
              className: "flex-justify-start flex-items-align-center"
            }, __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Button"], {
              className: " background-ccar-button-yellow black border-ccar-button-yellow text-align-center",
              block: true,
              shape: "round",
              target: "_blank",
              href: frontUrl
            }, "Manage My Ads"))) : null);
          }
        }, __jsx("div", null, __jsx("div", {
          className: " cursor-pointer"
        }, __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Badge"], null, __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Avatar"], {
          icon: !this.props.user.info || !this.props.user.info.user || !this.props.user.info.user.avatar ? 'user' : null,
          src: !this.props.user.info || !this.props.user.info.user || !this.props.user.info.user.avatar ? null : this.props.user.info.user.avatar
        }))), __jsx("div", {
          style: {
            color: "#1890ff"
          },
          className: " subtitle1 cursor-pointer"
        }, "My Profile"))));
      } else {
        return (// <span style={{ color: "#1890ff" }} className='flex-items-align-center subtitle1 cursor-pointer ' >
          __jsx("span", null, __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Button"], {
            className: " background-ccar-button-yellow black border-ccar-button-yellow text-align-center cursor-pointer round-border",
            onClick: () => {
              this.props.loginMode(true);
            }
          }, "Login"))
        );
      }
    });

    _defineProperty(this, "_renderFooter", () => {
      return __jsx(react__WEBPACK_IMPORTED_MODULE_5___default.a.Fragment, null, __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Layout"].Footer, {
        className: "footer"
      }, __jsx("div", {
        className: "fixed-container"
      }, __jsx("div", null, __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Row"], null, __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Col"], {
        xs: 0,
        sm: 0,
        md: 12,
        lg: 12,
        xl: 12
      }, __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Row"], null, __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Col"], {
        xs: 20,
        sm: 20,
        md: 20,
        lg: 20,
        xl: 20,
        style: {
          color: 'white',
          textAlign: 'left'
        }
      }, __jsx("p", {
        style: {
          marginBottom: '0px',
          marginTop: '12px',
          fontWeight: '700'
        }
      }, " #1 Car Social Platform ")))), __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Col"], {
        xs: 0,
        sm: 0,
        md: 12,
        lg: 12,
        xl: 12,
        style: {
          textAlign: 'right',
          color: 'white'
        }
      }, __jsx("span", null, " ", __jsx("a", {
        href: "https://play.google.com/store/apps/details?id=com.ccarmy",
        target: "_blank"
      }, " ", __jsx("img", {
        style: {
          padding: '5px',
          width: 40
        },
        src: "/assets/Social Media/Google Play@3x.png"
      })), " "), __jsx("span", null, " ", __jsx("a", {
        href: "https://apps.apple.com/my/app/ccar-my/id1526288072",
        target: "_blank"
      }, __jsx("img", {
        style: {
          padding: '5px',
          width: 40
        },
        src: "/assets/Social Media/Apple Store @3x.png"
      }))), __jsx("span", null, " ", __jsx("a", {
        href: "https://appgallery.huawei.com/#/app/C102692397",
        target: "_blank"
      }, __jsx("img", {
        style: {
          padding: '5px',
          width: 38
        },
        src: "/assets/Social Media/huawei.png"
      }))), __jsx("span", null, " ", __jsx("a", {
        href: "https://www.facebook.com/CCARmy-101790904962298/",
        target: "_blank"
      }, " ", __jsx("img", {
        style: {
          padding: '5px',
          width: 40
        },
        src: "/assets/Social Media/Facebook @3x.png"
      })), " "), __jsx("span", null, " ", __jsx("a", {
        href: "https://www.instagram.com/ccar.my/",
        target: "_blank"
      }, " ", __jsx("img", {
        style: {
          padding: '5px',
          width: 35
        },
        src: "/assets/Social Media/instagram.png"
      })), " "), __jsx("span", null, " ", __jsx("a", {
        href: "https://www.youtube.com/channel/UCxicQ1-VsdNWEdGZCqU-35g",
        target: "_blank"
      }, " ", __jsx("img", {
        style: {
          padding: '5px',
          width: 40
        },
        src: "/assets/Social Media/youtube.png"
      }), " "), " ")), __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Col"], {
        xs: 24,
        sm: 24,
        md: 0,
        lg: 0,
        xl: 0
      }, __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Row"], null, __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Col"], {
        span: 8,
        className: "justify-flex-start"
      }, __jsx("p", {
        style: {
          fontSize: '10px',
          color: 'white',
          fontWeight: '700',
          marginTop: '4px',
          marginBottom: '0px',
          float: 'left'
        }
      }, " #1 Car Social Platform ")), __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Col"], {
        span: 16,
        style: {
          fontSize: '15px'
        }
      }, __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Row"], null, __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Col"], {
        xs: 24,
        sm: 24,
        md: 24,
        lg: 24,
        xl: 24,
        style: {
          fontSize: '10px',
          color: 'white'
        }
      }, __jsx("div", {
        style: {
          float: 'right'
        }
      }, __jsx("span", null, " ", __jsx("a", {
        href: "https://play.google.com/store/apps/details?id=com.ccarmy",
        target: "_blank"
      }, " ", __jsx("img", {
        style: {
          padding: '2px',
          width: 25
        },
        src: "/assets/Social Media/Google Play@3x.png"
      })), " "), __jsx("span", null, " ", __jsx("a", {
        href: "https://apps.apple.com/my/app/ccar-my/id1526288072",
        target: "_blank"
      }, __jsx("img", {
        style: {
          padding: '2px',
          width: 25
        },
        src: "/assets/Social Media/Apple Store @3x.png"
      }))), __jsx("span", null, " ", __jsx("a", {
        href: "",
        target: "_blank"
      }, __jsx("img", {
        style: {
          padding: '2px',
          width: 23
        },
        src: "/assets/Social Media/huawei.png"
      }))), __jsx("span", null, " ", __jsx("a", {
        href: "https://www.facebook.com/CCARmy-101790904962298/",
        target: "_blank"
      }, " ", __jsx("img", {
        style: {
          padding: '2px',
          width: 25
        },
        src: "/assets/Social Media/Facebook @3x.png"
      })), " "), __jsx("span", null, " ", __jsx("a", {
        href: "https://www.instagram.com/ccar.my/",
        target: "_blank"
      }, " ", __jsx("img", {
        style: {
          padding: '2px',
          width: 20
        },
        src: "/assets/Social Media/instagram.png"
      })), " "), __jsx("span", null, " ", __jsx("a", {
        href: "https://www.youtube.com/channel/UCxicQ1-VsdNWEdGZCqU-35g",
        target: "_blank"
      }, " ", __jsx("img", {
        style: {
          padding: '2px',
          width: 25
        },
        src: "/assets/Social Media/youtube.png"
      }), " "), " ")))))))), __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Row"], null, __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Col"], {
        span: 24
      }, __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Divider"], {
        orientation: "left",
        style: {
          border: 'solid 1px #FFCC32',
          fontWeight: 'normal',
          margin: '4px 0px'
        }
      }), __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Row"], {
        style: {
          color: '#E3C57D'
        }
      }, __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Col"], {
        xs: 12,
        sm: 12,
        md: 12,
        lg: 12,
        xl: 12,
        style: {
          fontSize: '15px'
        }
      }, __jsx("div", {
        className: "flex-justify-start white flex-items-align-center main-footer "
      }, "CCAR.MY ", __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Icon"], {
        type: "copyright"
      }), " 2020")), __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Col"], {
        xs: 12,
        sm: 12,
        md: 12,
        lg: 12,
        xl: 12,
        style: {
          fontSize: '15px',
          textAlign: 'right'
        }
      }, __jsx("div", {
        className: "flex-justify-end flex-items-align-center main-footer"
      }, __jsx(next_link__WEBPACK_IMPORTED_MODULE_4___default.a, {
        shallow: false,
        href: _route__WEBPACK_IMPORTED_MODULE_31__["routePaths"].termsOfUse.to || '/',
        as: typeof _route__WEBPACK_IMPORTED_MODULE_31__["routePaths"].termsOfUse.as == 'function' ? _route__WEBPACK_IMPORTED_MODULE_31__["routePaths"].termsOfUse.as() : '/'
      }, "Terms of Use | Privacy Policy"))))))))));
    });

    _defineProperty(this, "_renderNotificationBox", () => {
      const tabs = [{
        value: 'carfreaks',
        text: 'CarFreaks'
      }, {
        value: 'carAds',
        text: 'CarMarket'
      }, {
        value: 'other',
        text: 'Others'
      }];
      let self = this;
      return __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Popover"], {
        onVisibleChange: v => {
          if (self.state.notificationBoxVisible != v) {
            this.setState({
              notificationBoxVisible: v
            });
          }
        },
        overlayClassName: "pop-over-body-no-padding pop-over-title-no-padding",
        overlayStyle: {
          position: 'fixed'
        },
        trigger: "click",
        arrowPointAtCenter: true,
        placement: "bottomLeft",
        title: __jsx("div", {
          className: " h6 font-weight-bold grey-darken-1 padding-x-md padding-y-xs",
          style: {
            width: NOTIFICATION_BOX_WIDTH
          }
        }, "Notifications"),
        content: __jsx("div", {
          style: {
            width: NOTIFICATION_BOX_WIDTH
          }
        }, lodash__WEBPACK_IMPORTED_MODULE_2___default.a.isArray(self.state.notifications) && !lodash__WEBPACK_IMPORTED_MODULE_2___default.a.isEmpty(self.state.notifications) ? __jsx(_ScrollLoadWrapper__WEBPACK_IMPORTED_MODULE_27__["default"], {
          getRef: ref => {
            self.setState({
              notificationBoxRef: ref
            });
          },
          autoHide: true,
          scrollRangeUsePercentage: true,
          scrollRange: 50,
          autoHide: true,
          autoHeight: true,
          autoHeightMax: 400,
          onScrolledBottom: () => {
            if (Object(_common_function__WEBPACK_IMPORTED_MODULE_10__["arrayLengthCount"])(this.state.notifications) < this.state.notificationTotal && !this.state.notificationLoading) {
              self.setState({
                notificationPage: this.state.notificationPage + 1
              });
            }
          }
        }, __jsx("div", null, lodash__WEBPACK_IMPORTED_MODULE_2___default.a.map(this.state.notifications, function (notification) {
          if (lodash__WEBPACK_IMPORTED_MODULE_2___default.a.isPlainObject(notification) && !lodash__WEBPACK_IMPORTED_MODULE_2___default.a.isEmpty(notification)) {
            return __jsx(next_link__WEBPACK_IMPORTED_MODULE_4___default.a, {
              href: notification.path || '/'
            }, __jsx("a", null, __jsx("div", {
              className: `flex-justify-start flex-items-align-center hover-background-yellow-lighten-2 padding-x-md cursor-pointer grey-darken-1 width-100 ${lodash__WEBPACK_IMPORTED_MODULE_2___default.a.some(self.state.seenNotifications, ['notificationId', notification._id]) ? '' : 'background-light-blue-lighten-5'}`,
              onClick: e => {
                if (!lodash__WEBPACK_IMPORTED_MODULE_2___default.a.some(self.state.seenNotifications, ['notificationId', notification._id])) {
                  _feathers__WEBPACK_IMPORTED_MODULE_11__["default"].service('notificationseen').create({
                    userId: lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(self.props.user, ['info', 'user', '_id']),
                    notificationId: notification._id
                  }, {
                    query: {
                      userId: lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(self.props.user, ['info', 'user', '_id']),
                      notificationId: notification._id
                    }
                  }).then(res => {
                    self.setState({
                      seenNotifications: lodash__WEBPACK_IMPORTED_MODULE_2___default.a.concat([res], self.state.seenNotifications)
                    });
                  });
                }
              }
            }, __jsx("img", {
              src: notification.avatar || _icon__WEBPACK_IMPORTED_MODULE_13__["ccarLogo"],
              style: {
                width: 50,
                height: 50
              },
              className: "margin-right-md avatar"
            }), __jsx("span", {
              className: "d-inline-block width-80"
            }, __jsx("div", {
              className: " body2 text-truncate-twoline grey-darken-3"
            }, lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(notification, 'title') || ''), __jsx("div", {
              className: "overline text-truncate "
            }, lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(notification, 'body') || ''), __jsx("div", {
              className: "small-text text-truncate margin-top-sm"
            }, moment__WEBPACK_IMPORTED_MODULE_29___default()(notification.createdAt).fromNow())))));
          }

          return null;
        }))) : __jsx("div", {
          className: "flex-justify-center flex-items-align-center",
          style: {
            height: 300
          }
        }, __jsx("span", {
          className: "d-inline-block"
        }, __jsx("div", {
          className: "flex-justify-center flex-items-align-center"
        }, __jsx("img", {
          src: _icon__WEBPACK_IMPORTED_MODULE_13__["bellInactive"],
          style: {
            height: 70,
            width: 70
          }
        })), __jsx("div", {
          className: "h6 grey-darken-1 margin-top-sm"
        }, "No notification yet"), __jsx("div", {
          className: "caption grey-darken-1 flex-justify-center"
        }, "When you get notification,"), __jsx("div", {
          className: "caption grey-darken-1 flex-justify-center"
        }, "they'll show up here"), __jsx("div", {
          className: "flex-justify-center margin-top-sm"
        }, __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Button"], {
          className: " background-ccar-button-yellow"
        }, "Refresh")))))
      }, __jsx(Desktop, null, __jsx("span", {
        className: "flex-justify-start flex-items-align-center",
        id: "notification-menu-item"
      }, __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Badge"], {
        dot: true
      }, __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Icon"], {
        type: "bell",
        theme: "filled",
        className: "white cursor-pointer",
        style: {
          fontSize: 20
        }
      })))), __jsx(Tablet, null, __jsx("span", {
        className: "flex-justify-start flex-items-align-center",
        id: "notification-menu-item"
      }, __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Badge"], {
        dot: true
      }, __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Icon"], {
        type: "bell",
        theme: "filled",
        className: "white cursor-pointer",
        style: {
          fontSize: 25
        }
      })))));
    });

    this.state = {
      data: [],
      searchWords: [],
      searchValue: null,
      value: undefined,
      typingTimeout: 0,
      scrollYPosition: 0,
      run: true,
      dataSource: [],
      newKppJson: [],
      visible: false,
      scrollRange: 100,
      scrollY: 0,
      backgroundStyle: {
        backgroundImage: null,
        backgroundRepeat: 'no-repeat',
        backgroundSize: '100% 100%'
      },
      window: {},
      showProfileMenu: false,
      notificationBoxRef: {},
      notificationLoading: false,
      notificationPage: 1,
      notificationTotal: 0,
      notifications: [],
      seenNotifications: [],
      notificationBoxVisible: false,
      notificationTabKey: 'carfreaks',
      loginType: 'user'
    };
  }

  getUserNotifications(skip) {
    try {
      if (lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(this.props.user, ['authenticated']) && lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(this.props.user, ['info', 'user', '_id'])) {
        this.setState({
          notificationLoading: true
        }, () => {
          axios__WEBPACK_IMPORTED_MODULE_22___default.a.get(`${_feathers__WEBPACK_IMPORTED_MODULE_11__["default"].io.io.uri}getUserNotifications`, {
            params: {
              userId: this.props.user.info.user._id,
              limit: NOTIFICATION_PAGE_SIZE,
              skip: skip || 0
            }
          }).then(res => {
            this.setState({
              notificationLoading: false,
              notifications: this.state.notificationPage == 1 ? lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(res, 'data.data') || [] : lodash__WEBPACK_IMPORTED_MODULE_2___default.a.concat(this.state.notifications, lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(res, 'data.data') || []),
              notificationTotal: lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(res, 'data.total') || 0
            });
          }).catch(err => {
            this.setState({
              notificationLoading: false
            });
          });
        });
      } else {
        this.setState({
          notifications: []
        });
      }
    } catch (error) {
      console.log(error);
    }
  }

  getUserSeenNotifications() {
    try {
      if (lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(this.props.user, ['authenticated']) && lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(this.props.user, ['info', 'user', '_id'])) {
        _feathers__WEBPACK_IMPORTED_MODULE_11__["default"].service('notificationseen').find({
          query: {
            userId: this.props.user.info.user._id
          }
        }).then(res => {
          this.setState({
            seenNotifications: lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(res, ['data']) || []
          });
        }).catch(err => {
          console.log(err);
        });
      } else {
        this.setState({
          seenNotifications: []
        });
      }
    } catch (error) {
      console.log(error);
    }
  }

  async setFirebaseToken(reauthenticate) {
    try {
      const token = await Object(_webPush__WEBPACK_IMPORTED_MODULE_24__["initFirebaseToken"])();

      if (token != this.props.app.notificationToken || !this.props.app.notificationTokenTimeOutDate || moment__WEBPACK_IMPORTED_MODULE_29___default()().diff(moment__WEBPACK_IMPORTED_MODULE_29___default()(this.props.app.notificationTokenTimeOutDate), 'days', true) > 1 || reauthenticate) {
        this.props.setNotificationToken(token);
        this.props.setNotificationTokenTimeOutDate(moment__WEBPACK_IMPORTED_MODULE_29___default()().add(1, 'days'));
        let self = this;
        this.subscribeNotificationTopics(token).then(() => {
          if (self.state.notificationPage == 1) {
            self.getUserNotifications(0);
          } else {
            self.setState({
              notificationPage: 1
            });
          }
        });
      }

      this.listenOnNotification();
    } catch (error) {
      console.log(error);
    }
  }

  listenOnNotification() {
    const messaging = firebase_app__WEBPACK_IMPORTED_MODULE_25___default.a.messaging();
    messaging.onMessage(message => {
      this._renderNotification(message);

      if (lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(message, 'data._id') && lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(this.props.user, ['authenticated']) && lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(this.props.user, ['info', 'user', '_id'])) {
        _feathers__WEBPACK_IMPORTED_MODULE_11__["default"].service('notifications').find({
          query: {
            _id: message.data._id,
            $limit: 1
          }
        }).then(res => {
          if (lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(res, 'data[0]')) {
            this.setState({
              notifications: [res.data[0], ...this.state.notifications]
            });
          }
        });
      } //

    });
  }

  subscribeNotificationTopics(token) {
    if (lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(this.props.user, ['authenticated']) && lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(this.props.user, ['info', 'user', '_id'])) {
      return axios__WEBPACK_IMPORTED_MODULE_22___default.a.post(`${_feathers__WEBPACK_IMPORTED_MODULE_11__["default"].io.io.uri}pushNotificationTokenToUser`, {
        userId: lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(this.props.user, ['info', 'user', '_id']),
        token: token
      });
    } else {
      return axios__WEBPACK_IMPORTED_MODULE_22___default.a.post(`${_feathers__WEBPACK_IMPORTED_MODULE_11__["default"].io.io.uri}subscribePublicNotification`, {
        token: token
      });
    }
  }

  sendTestMessage(text) {
    axios__WEBPACK_IMPORTED_MODULE_22___default.a.post(`${_feathers__WEBPACK_IMPORTED_MODULE_11__["default"].io.io.uri}sendTestNotification`, {
      params: {
        text: text || ''
      }
    }).then(res => {}).catch(err => {});
  }

  componentDidMount() {
    if (false) {}

    window.scrollTo(0, 0);
    this.handleExpiredToken();
    this.setFirebaseToken();

    if (lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(this.props.user, ['authenticated']) && lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(this.props.user, ['info', 'user', '_id'])) {
      this.getUserSeenNotifications();

      if (this.state.notificationPage == 1) {
        this.getUserNotifications(0);
      } else {
        this.setState({
          notificationPage: 1
        });
      }
    }

    this.props.loading(false); // if(this.props.location.pathname.indexOf('viewCar') > 0){
    //   window.location.href="ccarmy:/" + this.props.location.pathname
    // }
    // this.props.setMenuHeight(document.getElementById('menu-bar').getBoundingClientRect().height);

    if (this.props.backgroundImage) {
      this.setState({
        backgroundStyle: _objectSpread(_objectSpread({}, this.state.backgroundStyle), {}, {
          backgroundImage: this.props.backgroundImage
        })
      });
    }

    if (this.props.scrollRange) {
      this.setState({
        scrollRange: this.props.scrollRange
      });
    }

    axios__WEBPACK_IMPORTED_MODULE_22___default.a.get(`${_feathers__WEBPACK_IMPORTED_MODULE_11__["default"].io.io.uri}getCmsParameters`).then(res => {
      if (Object(_common_function__WEBPACK_IMPORTED_MODULE_10__["notEmptyLength"])(res.data.data)) {
        let self = this;

        lodash__WEBPACK_IMPORTED_MODULE_2___default.a.forEach(res.data.data, function (item) {
          switch (item.table) {
            case 'compareNewCar':
              // self.props.fetchCompareNewCarLimit(-1);
              break;

            case 'compareLimit':
              self.props.fetchCompareCarLimit(isValidNumber(parseInt(lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(item, ['compareLimit']))) ? parseInt(lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(item, ['compareLimit'])) : 5);
              break;

            default:
              break;
          }
        });
      }
    }).catch(err => {// message.error(err.message)
    });
  }

  componentDidUpdate(prevProps, prevState) {
    if (prevProps.scrollRange != this.props.scrollRange) {
      this.setState({
        scrollRange: this.props.scrollRange
      });
    }

    if (!lodash__WEBPACK_IMPORTED_MODULE_2___default.a.isEqual(prevState.window, this.state.window)) {
      this.state.window.addEventListener('scroll', this.handleScroll, {
        passive: true
      });
      return () => {
        this.state.window.removeEventListener('scroll', this.handleScroll);
      };
    }

    if (prevProps.user.authenticated != this.props.user.authenticated) {
      this.setFirebaseToken(true);
      this.getUserSeenNotifications();

      if (this.state.notificationPage == 1) {
        this.getUserNotifications(0);
      } else {
        this.setState({
          notificationPage: 1
        });
      }
    }

    if (prevState.notificationBoxVisible != this.state.notificationBoxVisible) {
      if (this.state.notificationBoxRef.current) {
        this.state.notificationBoxRef.current.scrollToTop();
      }
    }

    if (prevState.notificationPage != this.state.notificationPage && Object(_common_function__WEBPACK_IMPORTED_MODULE_10__["arrayLengthCount"])(this.state.notifications) < NOTIFICATION_MAX_LIMIT) {
      this.getUserNotifications((this.state.notificationPage - 1) * NOTIFICATION_PAGE_SIZE);
    }
  }

  render() {
    let self = this;
    const outterMenu = [_objectSpread({
      icon: '',
      text: 'CarMarket'
    }, _route__WEBPACK_IMPORTED_MODULE_31__["routePaths"].carsOnSale), _objectSpread({
      icon: '',
      text: 'All-NewCar'
    }, _route__WEBPACK_IMPORTED_MODULE_31__["routePaths"].newCar), _objectSpread({
      icon: '',
      text: __jsx("span", {
        className: "d-inline-block white background-red  padding-x-md",
        style: {
          borderRadius: '5px'
        }
      }, "LIVE")
    }, _route__WEBPACK_IMPORTED_MODULE_31__["routePaths"].live)];
    let innerMenu = [_objectSpread({
      icon: '',
      text: 'Car Review'
    }, _route__WEBPACK_IMPORTED_MODULE_31__["routePaths"].carReview), _objectSpread({
      icon: '',
      text: 'Social News & Videos'
    }, _route__WEBPACK_IMPORTED_MODULE_31__["routePaths"].socialNewsAndVideo), _objectSpread({
      icon: '',
      text: 'CarFreaks'
    }, _route__WEBPACK_IMPORTED_MODULE_31__["routePaths"].carFreaks), _objectSpread({
      icon: '',
      text: 'Petrol Price'
    }, _route__WEBPACK_IMPORTED_MODULE_31__["routePaths"].petrolPrice), _objectSpread({
      icon: '',
      text: 'Driving School'
    }, _route__WEBPACK_IMPORTED_MODULE_31__["routePaths"].kpp), _objectSpread({
      icon: '',
      text: 'About Us'
    }, _route__WEBPACK_IMPORTED_MODULE_31__["routePaths"].aboutUs), _objectSpread({
      icon: '',
      text: 'Contact Us'
    }, _route__WEBPACK_IMPORTED_MODULE_31__["routePaths"].contactUs)];

    if (currentEnv !== 'prod') {
      let insurances = [{
        icon: '',
        text: 'Road Tax & Insurance',
        path: '/roadtax-insurance'
      }, {
        icon: '',
        text: 'Extended Warranty',
        path: '/extended-warranty'
      }, {
        icon: '',
        text: 'Latest Car Plate No.',
        path: '/latest-car-plate-no'
      }];
      innerMenu = innerMenu.concat(insurances);
    }

    let profileMenu = [_objectSpread({
      icon: __jsx("span", {
        className: "flex-items-align-center flex-justify-center avatar background-grey-darken-3",
        style: {
          width: '20px',
          height: '20px'
        }
      }, __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Icon"], {
        type: "user",
        style: {
          fontSize: '12px',
          color: 'white'
        }
      })),
      text: 'Profile'
    }, _route__WEBPACK_IMPORTED_MODULE_31__["routePaths"].profile), _objectSpread({
      icon: __jsx("span", {
        className: "flex-items-align-center flex-justify-center"
      }, __jsx("img", {
        src: _icon__WEBPACK_IMPORTED_MODULE_13__["wishList"],
        style: {
          width: '20px',
          height: '20px'
        }
      })),
      text: 'My Wishlist'
    }, _route__WEBPACK_IMPORTED_MODULE_31__["routePaths"].profile), _objectSpread({
      icon: __jsx("span", {
        className: "d-inline-block relative-wrapper",
        style: {
          width: '20px',
          height: '20px'
        }
      }, __jsx("img", {
        src: "/logout icon.svg",
        className: "fill-parent absolute-center"
      })),
      text: 'Log out'
    }, _route__WEBPACK_IMPORTED_MODULE_31__["routePaths"].logout)];
    return __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Layout"], null, __jsx("div", {
      className: "relative-wrapper"
    }, __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Row"], {
      style: {
        position: 'sticky',
        top: 0,
        zIndex: '99',
        height: '61px'
      }
    }, __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Col"], {
      xs: 24,
      sm: 24,
      md: 24,
      lg: 24,
      xl: 24
    }, __jsx(Mobile, null, __jsx("div", {
      id: "menu-bar",
      className: "topnav",
      style: {
        position: 'sticky',
        top: 0,
        zIndex: '99',
        minHeight: '100px',
        backgroundColor: '#000000'
      }
    }, __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Row"], {
      type: "flex",
      align: "middle",
      className: "padding-x-md"
    }, __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Col"], {
      xs: 8,
      sm: 8,
      md: 8,
      lg: 8,
      xl: 8
    }, __jsx("div", {
      className: "flex-justify-start flex-items-align-center topnav-child"
    }, __jsx("span", {
      className: "d-inline-block relative-wrapper margin-right-md cursor-pointer",
      style: {
        height: '62px',
        width: '214px'
      },
      onClick: e => {
        this.props.history.push('/');
      }
    }, __jsx("img", {
      alt: "ccar",
      className: "fill-parent absolute-center",
      src: "/assets/ccar-header-logo.svg"
    })))), __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Col"], {
      xs: 12,
      sm: 12,
      md: 12,
      lg: 12,
      xl: 12
    }, __jsx(_global_search_bar__WEBPACK_IMPORTED_MODULE_20__["default"], {
      searchTypes: this.props.searchTypes || ['productAds', 'carspec', 'dealerWithAds']
    })), __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Col"], {
      xs: 2,
      sm: 2,
      md: 2,
      lg: 2,
      xl: 2,
      offset: 2
    }, __jsx("div", {
      style: {
        width: '300'
      }
    }, __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Button"], {
      type: "primary",
      onClick: this.showDrawer,
      style: {
        marginBottom: 0,
        float: 'right'
      }
    }, __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Icon"], {
      type: "menu"
    })), __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Drawer"], {
      className: "login-drawer",
      title: null,
      placement: "right",
      closable: true,
      onClose: this.onClose,
      visible: this.state.visible,
      width: '100%'
    }, this.props.user.info.authenticated == 'user' ? __jsx("div", null, __jsx("div", {
      className: "margin-bottom-xs padding-sm",
      style: {
        backgroundImage: `url("${_icon__WEBPACK_IMPORTED_MODULE_13__["menuLogin"]}")`,
        backgroundRepeat: 'no-repeat',
        backgroundSize: 'cover',
        height: '15vh',
        backgroundPosition: 'center'
      }
    }, __jsx("div", null, __jsx("span", {
      style: {
        marginRight: '10px'
      }
    }, __jsx("img", {
      src: "https://img.icons8.com/windows/32/ffffff/user-male-circle.png"
    })), __jsx("span", {
      style: {
        color: '#ffffff',
        fontWeight: '700'
      }
    }, "Login to access more features now!")), __jsx("div", {
      className: "flex-justify-center"
    }, this._renderUserRes(profileMenu))), __jsx("div", {
      className: "padding-md"
    }, __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Row"], {
      className: "margin-bottom-md"
    }, __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Col"], {
      span: 11,
      className: "thickBorder round-border"
    }, __jsx("div", {
      style: {
        fontSize: '14px',
        margin: '10px'
      },
      className: `flex-items-no-shrink margin-sm ${this.props.app.activeMenu == '2' ? 'yellow' : ''}`,
      onClick: () => {
        this.props.router.push('/car-market-homepage/index');
      }
    }, __jsx("img", {
      src: "/assets/menu-icon/buy-car.png",
      style: {
        width: '40%'
      }
    }), __jsx("p", {
      style: {
        marginBottom: '0px',
        color: '#000000'
      }
    }, " CarMarket "))), __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Col"], {
      span: 11,
      offset: 2,
      className: "thickBorder round-border "
    }, __jsx("div", {
      style: {
        fontSize: '14px',
        margin: '10px'
      },
      className: `flex-items-no-shrink margin-sm ${this.props.app.activeMenu == '3' ? 'yellow' : ''}`,
      onClick: () => {
        this.props.router.push('/newcar');
      }
    }, __jsx("img", {
      src: "/assets/menu-icon/new-car.png",
      style: {
        width: '40%'
      }
    }), __jsx("p", {
      style: {
        marginBottom: '0px',
        color: '#000000'
      }
    }, "All-NewCar")))), __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Row"], {
      className: "margin-bottom-md"
    }, __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Col"], {
      span: 11,
      className: "thickBorder round-border"
    }, __jsx("div", {
      style: {
        fontSize: '14px',
        margin: '10px'
      },
      className: `flex-items-no-shrink margin-sm ${this.props.app.activeMenu == '6' ? 'yellow' : ''}`,
      onClick: () => {
        this.props.router.push('/car-freaks');
      }
    }, __jsx("img", {
      src: "/assets/menu-icon/carfreaks.png",
      style: {
        width: '40%'
      }
    }), __jsx("p", {
      style: {
        marginBottom: '0px',
        color: '#000000'
      }
    }, "CarFreaks"))), __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Col"], {
      span: 11,
      offset: 2,
      className: "thickBorder round-border"
    }, __jsx("div", {
      style: {
        fontSize: '14px',
        margin: '10px'
      },
      className: `flex-items-no-shrink margin-sm ${this.props.app.activeMenu == '4' ? 'yellow' : ''}`,
      onClick: () => {
        this.props.router.push('/live');
      }
    }, __jsx("img", {
      src: "/assets/menu-icon/live.png",
      style: {
        width: '40%'
      }
    }), __jsx("p", {
      style: {
        marginBottom: '0px',
        color: '#000000'
      }
    }, "LIVE")))), __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Row"], {
      className: "margin-bottom-md"
    }, __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Col"], {
      span: 11,
      className: "thickBorder round-border"
    }, __jsx("div", {
      style: {
        fontSize: '14px',
        margin: '10px'
      },
      className: `flex-items-no-shrink margin-sm ${this.props.app.activeMenu == '5' ? 'yellow' : ''}`,
      onClick: () => {
        this.props.router.push('/socialNews');
      }
    }, __jsx("img", {
      src: "/assets/menu-icon/social-news.png",
      style: {
        width: '40%'
      }
    }), __jsx("p", {
      style: {
        marginBottom: '0px',
        color: '#000000'
      }
    }, "Social News "))), __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Col"], {
      span: 11,
      offset: 2,
      className: "thickBorder round-border"
    }, __jsx("div", {
      style: {
        fontSize: '14px',
        margin: '10px'
      },
      className: `flex-items-no-shrink margin-sm ${this.props.app.activeMenu == '9' ? 'yellow' : ''}`,
      onClick: () => {
        this.props.router.push('/socialVideos');
      }
    }, __jsx("img", {
      src: "/assets/menu-icon/social-videos.png",
      style: {
        width: '40%'
      }
    }), __jsx("p", {
      style: {
        marginBottom: '0px',
        color: '#000000'
      }
    }, "Social Videos ")))), __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Row"], {
      className: "margin-bottom-md"
    }, __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Col"], {
      span: 11,
      className: "thickBorder round-border"
    }, __jsx("div", {
      style: {
        fontSize: '14px',
        margin: '10px'
      },
      className: `flex-items-no-shrink margin-sm ${this.props.app.activeMenu == '8' ? 'yellow' : ''}`,
      onClick: () => {
        this.props.router.push('/kpp');
      }
    }, __jsx("img", {
      src: "/assets/menu-icon/driving-school.png",
      style: {
        width: '40%'
      }
    }), __jsx("p", {
      style: {
        marginBottom: '0px',
        color: '#000000'
      }
    }, "Driving School"))), __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Col"], {
      span: 11,
      offset: 2,
      className: "thickBorder round-border"
    }, __jsx("div", {
      style: {
        fontSize: '14px',
        margin: '10px'
      },
      className: `flex-items-no-shrink margin-sm ${this.props.app.activeMenu == '7' ? 'yellow' : ''}`,
      onClick: () => {
        this.props.router.push('/petrolprice');
      }
    }, __jsx("img", {
      src: "/assets/menu-icon/fuel.png",
      style: {
        width: '40%'
      }
    }), __jsx("p", {
      style: {
        marginBottom: '0px',
        color: '#000000'
      }
    }, "Petrol Price")))))) : __jsx("div", null, __jsx("div", {
      className: "margin-bottom-xs padding-sm",
      style: {
        backgroundImage: `url("${_icon__WEBPACK_IMPORTED_MODULE_13__["menuLogin"]}")`,
        backgroundRepeat: 'no-repeat',
        backgroundSize: 'cover',
        height: '15vh',
        backgroundPosition: 'center'
      }
    }, __jsx("div", null, __jsx("span", {
      style: {
        marginRight: '10px'
      }
    }, __jsx("img", {
      src: "https://img.icons8.com/windows/32/ffffff/user-male-circle.png"
    })), __jsx("span", {
      style: {
        color: '#ffffff',
        fontWeight: '700'
      }
    }, "Login to access more features now!")), __jsx("div", {
      className: "flex-justify-center"
    }, this._renderUserRes(profileMenu))), __jsx("div", {
      className: "padding-md"
    }, __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Row"], {
      className: "margin-bottom-md"
    }, __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Col"], {
      span: 11,
      className: "thickBorder round-border"
    }, __jsx("div", {
      style: {
        fontSize: '14px',
        margin: '10px'
      },
      className: `flex-items-no-shrink margin-sm ${this.props.app.activeMenu == '2' ? 'yellow' : ''}`,
      onClick: () => {
        this.props.router.push('/car-market-homepage/index');
      }
    }, __jsx("img", {
      src: "/assets/menu-icon/buy-car.png",
      style: {
        width: '40%'
      }
    }), __jsx("p", {
      style: {
        marginBottom: '0px',
        color: '#000000'
      }
    }, " CarMarket "))), __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Col"], {
      span: 11,
      offset: 2,
      className: "thickBorder round-border "
    }, __jsx("div", {
      style: {
        fontSize: '14px',
        margin: '10px'
      },
      className: `flex-items-no-shrink margin-sm ${this.props.app.activeMenu == '3' ? 'yellow' : ''}`,
      onClick: () => {
        this.props.router.push('/newcar');
      }
    }, __jsx("img", {
      src: "/assets/menu-icon/new-car.png",
      style: {
        width: '40%'
      }
    }), __jsx("p", {
      style: {
        marginBottom: '0px',
        color: '#000000'
      }
    }, "All-NewCar")))), __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Row"], {
      className: "margin-bottom-md"
    }, __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Col"], {
      span: 11,
      className: "thickBorder round-border"
    }, __jsx("div", {
      style: {
        fontSize: '14px',
        margin: '10px'
      },
      className: `flex-items-no-shrink margin-sm ${this.props.app.activeMenu == '6' ? 'yellow' : ''}`,
      onClick: () => {
        this.props.router.push('/car-freaks');
      }
    }, __jsx("img", {
      src: "/assets/menu-icon/carfreaks.png",
      style: {
        width: '40%'
      }
    }), __jsx("p", {
      style: {
        marginBottom: '0px',
        color: '#000000'
      }
    }, "CarFreaks"))), __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Col"], {
      span: 11,
      offset: 2,
      className: "thickBorder round-border"
    }, __jsx("div", {
      style: {
        fontSize: '14px',
        margin: '10px'
      },
      className: `flex-items-no-shrink margin-sm ${this.props.app.activeMenu == '4' ? 'yellow' : ''}`,
      onClick: () => {
        this.props.router.push('/live');
      }
    }, __jsx("img", {
      src: "/assets/menu-icon/live.png",
      style: {
        width: '40%'
      }
    }), __jsx("p", {
      style: {
        marginBottom: '0px',
        color: '#000000'
      }
    }, "LIVE")))), __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Row"], {
      className: "margin-bottom-md"
    }, __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Col"], {
      span: 11,
      className: "thickBorder round-border"
    }, __jsx("div", {
      style: {
        fontSize: '14px',
        margin: '10px'
      },
      className: `flex-items-no-shrink margin-sm ${this.props.app.activeMenu == '5' ? 'yellow' : ''}`,
      onClick: () => {
        this.props.router.push('/socialNews');
      }
    }, __jsx("img", {
      src: "/assets/menu-icon/social-news.png",
      style: {
        width: '40%'
      }
    }), __jsx("p", {
      style: {
        marginBottom: '0px',
        color: '#000000'
      }
    }, "Social News "))), __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Col"], {
      span: 11,
      offset: 2,
      className: "thickBorder round-border"
    }, __jsx("div", {
      style: {
        fontSize: '14px',
        margin: '10px'
      },
      className: `flex-items-no-shrink margin-sm ${this.props.app.activeMenu == '9' ? 'yellow' : ''}`,
      onClick: () => {
        this.props.router.push('/socialVideos');
      }
    }, __jsx("img", {
      src: "/assets/menu-icon/social-videos.png",
      style: {
        width: '40%'
      }
    }), __jsx("p", {
      style: {
        marginBottom: '0px',
        color: '#000000'
      }
    }, "Social Videos ")))), __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Row"], {
      className: "margin-bottom-md"
    }, __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Col"], {
      span: 11,
      className: "thickBorder round-border"
    }, __jsx("div", {
      style: {
        fontSize: '14px',
        margin: '10px'
      },
      className: `flex-items-no-shrink margin-sm ${this.props.app.activeMenu == '8' ? 'yellow' : ''}`,
      onClick: () => {
        this.props.router.push('/kpp');
      }
    }, __jsx("img", {
      src: "/assets/menu-icon/driving-school.png",
      style: {
        width: '40%'
      }
    }), __jsx("p", {
      style: {
        marginBottom: '0px',
        color: '#000000'
      }
    }, "Driving School"))), __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Col"], {
      span: 11,
      offset: 2,
      className: "thickBorder round-border"
    }, __jsx("div", {
      style: {
        fontSize: '14px',
        margin: '10px'
      },
      className: `flex-items-no-shrink margin-sm ${this.props.app.activeMenu == '7' ? 'yellow' : ''}`,
      onClick: () => {
        this.props.router.push('/petrolprice');
      }
    }, __jsx("img", {
      src: "/assets/menu-icon/fuel.png",
      style: {
        width: '40%'
      }
    }), __jsx("p", {
      style: {
        marginBottom: '0px',
        color: '#000000'
      }
    }, "Petrol Price")))), __jsx("div", {
      style: {
        fontSize: '16px',
        margin: '10px'
      },
      className: `flex-items-no-shrink margin-sm ${this.props.app.activeMenu == '12' ? 'yellow' : ''}`,
      onClick: () => {
        this.props.router.push('/car-review');
      }
    }, " Car Review"), __jsx("div", {
      style: {
        fontSize: '16px',
        margin: '10px'
      },
      className: `flex-items-no-shrink margin-sm ${this.props.app.activeMenu == '11' ? 'yellow' : ''}`,
      onClick: () => {
        this.props.router.push('/about-us');
      }
    }, " About Us"), __jsx("div", {
      style: {
        fontSize: '16px',
        margin: '10px'
      },
      className: `flex-items-no-shrink margin-sm ${this.props.app.activeMenu == '10' ? 'yellow' : ''}`,
      onClick: () => {
        this.props.router.push('/contact-us');
      }
    }, " Contact Us"), __jsx("div", {
      style: {
        fontSize: '16px',
        margin: '10px'
      },
      className: `flex-items-no-shrink margin-sm ${this.props.app.activeMenu == '10' ? 'yellow' : ''}`,
      onClick: () => {
        this.props.router.push('/faq');
      }
    }, " FAQ"))))))), __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Divider"], {
      style: {
        border: 'solid 1px #FFCC32',
        fontWeight: 'normal',
        margin: '4px 0px'
      }
    }), __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Row"], null, __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Col"], {
      span: 24
    }, __jsx("div", {
      className: "flex-justify-start",
      style: {
        display: 'flex',
        overflowX: 'scroll',
        color: '#ffffff',
        paddingRight: '2px'
      }
    }, __jsx("span", {
      className: `flex-items-no-shrink margin-sm ${this.props.app.activeMenu == '1' ? 'yellow' : ''}`,
      onClick: () => {
        this.props.router.push('/');
      }
    }, " Home"), __jsx("span", {
      className: `flex-items-no-shrink margin-sm ${this.props.app.activeMenu == '2' ? 'yellow' : ''}`,
      onClick: () => {
        this.props.router.push('/car-market-homepage/index');
      }
    }, " CarMarket"), __jsx("span", {
      className: `flex-items-no-shrink margin-sm ${this.props.app.activeMenu == '3' ? 'yellow' : ''}`,
      onClick: () => {
        this.props.router.push('/newcar');
      }
    }, " All-NewCar"), __jsx("span", {
      className: `flex-items-no-shrink margin-sm ${this.props.app.activeMenu == '4' ? 'yellow' : ''}`,
      onClick: () => {
        this.props.router.push('/live');
      }
    }, " LIVE"), __jsx("span", {
      className: `flex-items-no-shrink margin-sm ${this.props.app.activeMenu == '6' ? 'yellow' : ''}`,
      onClick: () => {
        this.props.router.push('/car-freaks');
      }
    }, " CarFreaks"), __jsx("span", {
      className: `flex-items-no-shrink margin-sm ${this.props.app.activeMenu == '5' ? 'yellow' : ''}`,
      onClick: () => {
        this.props.router.push('/socialNews');
      }
    }, " Social News"), __jsx("span", {
      className: `flex-items-no-shrink margin-sm ${this.props.app.activeMenu == '9' ? 'yellow' : ''}`,
      onClick: () => {
        this.props.router.push('/socialVideos');
      }
    }, " Social Videos"), __jsx("span", {
      className: `flex-items-no-shrink margin-sm ${this.props.app.activeMenu == '7' ? 'yellow' : ''}`,
      onClick: () => {
        this.props.router.push('/petrolprice');
      }
    }, " Petrol Price"), __jsx("span", {
      className: `flex-items-no-shrink margin-sm ${this.props.app.activeMenu == '8' ? 'yellow' : ''}`,
      onClick: () => {
        this.props.router.push('/kpp');
      }
    }, " Driving School")))))))), lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(this.props, ['app', 'loading']) ? __jsx("div", {
      className: "background-grey-opacity-50 fill-parent absolute-center",
      style: {
        zIndex: 1002
      }
    }, __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Affix"], {
      offsetTop: (this.state.window.innerHeight || 500) / 2
    }, __jsx("div", {
      className: "flex-justify-center width-100"
    }, __jsx("img", {
      src: "/loading.gif",
      style: {
        width: 100,
        height: 100
      }
    })))) : null, __jsx("div", {
      style: this.props.backgroundImage ? _objectSpread({
        minHeight: this.state.window.innerHeight || 500 - 180
      }, this.state.backgroundStyle) : {
        minHeight: this.state.window.innerHeight || 500 - 90
      }
    }, this.props.children), this._renderFooter(), __jsx("div", {
      className: "width-100",
      style: {
        position: '-webkit-sticky',
        position: 'sticky',
        bottom: 0,
        zIndex: 1002
      }
    }, this.props.footerOverLay ? this.props.footerOverLay : this.props.hideOpenApp ? null : __jsx(react__WEBPACK_IMPORTED_MODULE_5___default.a.Fragment, null, __jsx(NotWebDevice, null, __jsx("div", {
      className: "padding-md background-black flex-items-align-center flex-justify-space-between"
    }, __jsx("span", {
      className: " flex-items-align-center"
    }, __jsx("img", {
      src: _icon__WEBPACK_IMPORTED_MODULE_13__["ccarLogo"],
      style: {
        height: 30,
        width: 30
      },
      className: "margin-right-md flex-items-no-shrink"
    }), __jsx("div", {
      className: "caption white"
    }, "A place to connect car lovers' souls")), __jsx("span", {
      className: "d-inline-block "
    }, __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Button"], {
      className: " background-ccar-button-yellow black caption",
      style: {
        borderColor: '#FFCC32'
      },
      onClick: e => {
        this.openApp();
      }
    }, "Open App")))))), __jsx("span", {
      className: "d-inline-block",
      style: {
        position: 'fixed',
        bottom: 30,
        right: 20,
        zIndex: 1002
      }
    }, this.props.showCompareCarButton != undefined && this.props.showCompareCarButton == false && this.props.showCompareCarButton != null ? null : __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Affix"], {
      offsetBottom: 95,
      className: "affix-element-show-on-modal-1"
    }, __jsx(_compare_CompareFloatingButton__WEBPACK_IMPORTED_MODULE_18__["default"], null)))), __jsx(_login_login__WEBPACK_IMPORTED_MODULE_19__["default"], null), __jsx(react_cookie_consent__WEBPACK_IMPORTED_MODULE_6___default.a, {
      location: "bottom",
      buttonText: "Got it !",
      cookieName: "consent",
      cookieValue: true,
      style: {
        background: "#2B373B"
      },
      buttonStyle: {
        color: "#4e503b",
        fontSize: "13px"
      },
      expires: 365,
      onAccept: () => {
        react_cookie_consent__WEBPACK_IMPORTED_MODULE_6__["Cookies"].set('consent', Object(uuid__WEBPACK_IMPORTED_MODULE_9__["v4"])());
      },
      acceptOnScroll: true
    }, "By continuing to browse this website, you accept cookies which are used for several reasons such as personalizing content/ads and analyzing how this website is used."));
  }

}

function mapDispatchToProps(dispatch) {
  return Object(redux__WEBPACK_IMPORTED_MODULE_8__["bindActionCreators"])({
    loading: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_14__["loading"],
    loginMode: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_14__["loginMode"],
    registerMode: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_14__["registerMode"],
    logoutSuccessful: _redux_actions_user_actions__WEBPACK_IMPORTED_MODULE_17__["logoutSuccessful"],
    updateActiveMenu: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_14__["updateActiveMenu"],
    quickSearchProductsList: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_14__["quickSearchProductsList"],
    setApplyYear: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_14__["setApplyYear"],
    setApplyPrice: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_14__["setApplyPrice"],
    setApplyMileage: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_14__["setApplyMileage"],
    fetchCompareNewCarLimit: _redux_actions_newcars_actions__WEBPACK_IMPORTED_MODULE_15__["fetchCompareNewCarLimit"],
    fetchCompareCarLimit: _redux_actions_productsList_actions__WEBPACK_IMPORTED_MODULE_16__["fetchCompareCarLimit"],
    setMenuHeight: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_14__["setMenuHeight"],
    clearProductFilterOptions: _redux_actions_productsList_actions__WEBPACK_IMPORTED_MODULE_16__["clearProductFilterOptions"],
    setNotificationToken: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_14__["setNotificationToken"],
    setNotificationTokenTimeOutDate: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_14__["setNotificationTokenTimeOutDate"],
    setUser: _redux_actions_user_actions__WEBPACK_IMPORTED_MODULE_17__["setUser"],
    setDisableWindowScroll: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_14__["setDisableWindowScroll"]
  }, dispatch);
}

function mapStateToProps(state) {
  return {
    app: state.app,
    user: state.user
  };
}

/* harmony default export */ __webpack_exports__["default"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_7__["connect"])(mapStateToProps, mapDispatchToProps)(Object(next_dist_client_router__WEBPACK_IMPORTED_MODULE_3__["withRouter"])(LayoutV2)));

/***/ }),

/***/ "./components/general/LightBoxCarousel.jsx":
/*!*************************************************!*\
  !*** ./components/general/LightBoxCarousel.jsx ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _brainhubeu_react_carousel__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @brainhubeu/react-carousel */ "@brainhubeu/react-carousel");
/* harmony import */ var _brainhubeu_react_carousel__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_brainhubeu_react_carousel__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! antd */ "antd");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(antd__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/router */ "next/router");
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react-redux */ "react-redux");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _common_function__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../common-function */ "./common-function.js");
/* harmony import */ var _light_box_gallery__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./light-box-gallery */ "./components/general/light-box-gallery.jsx");
/* harmony import */ var _profile_config__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../profile/config */ "./components/profile/config.js");
var __jsx = react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement;

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }











const LightBoxCarousel = props => {
  const {
    0: images,
    1: setImages
  } = Object(react__WEBPACK_IMPORTED_MODULE_4__["useState"])([]);
  const {
    0: imageIndex,
    1: setImageIndex
  } = Object(react__WEBPACK_IMPORTED_MODULE_4__["useState"])(0);
  const {
    0: height,
    1: setHeight
  } = Object(react__WEBPACK_IMPORTED_MODULE_4__["useState"])(400);
  Object(react__WEBPACK_IMPORTED_MODULE_4__["useEffect"])(() => {
    setHeight(props.height);
  }, [props.height]);
  Object(react__WEBPACK_IMPORTED_MODULE_4__["useEffect"])(() => {
    if (lodash__WEBPACK_IMPORTED_MODULE_2___default.a.isArray(props.images) && !lodash__WEBPACK_IMPORTED_MODULE_2___default.a.isEmpty(props.images)) {
      setImages(props.images);
    } else {
      setImages([]);
    }
  }, [props.images]);
  Object(react__WEBPACK_IMPORTED_MODULE_4__["useEffect"])(() => {}, [images]);
  return __jsx(react__WEBPACK_IMPORTED_MODULE_4___default.a.Fragment, null, __jsx("div", {
    className: `width-100 ${props.className || ''}`,
    style: _objectSpread(_objectSpread({}, props.style), {}, {
      height: height
    })
  }, lodash__WEBPACK_IMPORTED_MODULE_2___default.a.isArray(images) && !lodash__WEBPACK_IMPORTED_MODULE_2___default.a.isEmpty(images) ? __jsx(_light_box_gallery__WEBPACK_IMPORTED_MODULE_7__["default"], {
    images: images,
    onChange: (index, image) => {
      setImageIndex(index);
    }
  }, (data, setCurrentIndex, setVisible) => {
    return Object(_common_function__WEBPACK_IMPORTED_MODULE_6__["arrayLengthCount"])(images) > 1 ? __jsx("div", {
      className: "width-100 carousel-background-black show-carousel-dots-inside carousel-custom-arrows",
      style: {
        height: height
      }
    }, __jsx(_brainhubeu_react_carousel__WEBPACK_IMPORTED_MODULE_0___default.a, {
      infinite: true,
      arrowLeft: __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Icon"], {
        type: "left",
        className: "grey-lighten-2 cursor-pointer",
        style: {
          fontSize: 30
        }
      }),
      arrowRight: __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Icon"], {
        type: "right",
        className: "grey-lighten-1 cursor-pointer",
        style: {
          fontSize: 30
        }
      }),
      addArrowClickHandler: true,
      dots: true,
      dotPosition: "bottom",
      value: imageIndex,
      slides: lodash__WEBPACK_IMPORTED_MODULE_2___default.a.isArray(lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(data, ['images'])) && !lodash__WEBPACK_IMPORTED_MODULE_2___default.a.isEmpty(lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(data, ['images'])) ? lodash__WEBPACK_IMPORTED_MODULE_2___default.a.map(lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(data, ['images']), function (image, index) {
        return __jsx("div", {
          className: "relative-wrapper width-100",
          style: {
            height: height
          }
        }, __jsx("img", {
          src: image,
          className: "absolute-center-img-no-stretch cursor-pointer",
          onClick: e => {
            setVisible(true);
            setCurrentIndex(index);
          }
        }));
      }) : [],
      onChange: value => {
        setImageIndex(value);
      }
    })) : __jsx("div", {
      className: "relative-wrapper background-black width-100",
      style: {
        height: height
      }
    }, __jsx("img", {
      src: images[0] || _profile_config__WEBPACK_IMPORTED_MODULE_8__["imageNotFound"],
      onClick: e => {
        setVisible(true);
        setCurrentIndex(0);
      },
      className: " absolute-center-img-no-stretch"
    }));
  }) : __jsx("div", {
    className: "relative-wrapper background-black width-100",
    style: {
      height: height
    }
  }, __jsx("img", {
    src: _profile_config__WEBPACK_IMPORTED_MODULE_8__["imageNotFound"],
    className: " absolute-center-img-no-stretch"
  }))));
};

const mapStateToProps = state => ({
  app: state.app,
  user: state.user
});

const mapDispatchToProps = {};
/* harmony default export */ __webpack_exports__["default"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_5__["connect"])(mapStateToProps, mapDispatchToProps)(antd__WEBPACK_IMPORTED_MODULE_1__["Form"].create()(Object(next_router__WEBPACK_IMPORTED_MODULE_3__["withRouter"])(LightBoxCarousel))));

/***/ }),

/***/ "./components/general/Loading.jsx":
/*!****************************************!*\
  !*** ./components/general/Loading.jsx ***!
  \****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! antd */ "antd");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(antd__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-redux */ "react-redux");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _ant_design_compatible__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ant-design/compatible */ "@ant-design/compatible");
/* harmony import */ var _ant_design_compatible__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_ant_design_compatible__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var next_dist_client_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! next/dist/client/router */ "./node_modules/next/dist/client/router.js");
/* harmony import */ var next_dist_client_router__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(next_dist_client_router__WEBPACK_IMPORTED_MODULE_4__);
var __jsx = react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement;






const Loading = props => {
  Object(react__WEBPACK_IMPORTED_MODULE_1__["useEffect"])(() => {}, [props.loading]);
  return __jsx(react__WEBPACK_IMPORTED_MODULE_1___default.a.Fragment, null, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Spin"], {
    spinning: props.spinning ? props.spinning : false,
    size: props.size ? props.size : 'large',
    wrapperClassName: props.className ? props.className : '',
    indicator: __jsx("img", {
      src: "/loading.gif",
      style: {
        width: 100,
        height: 100,
        position: 'sticky',
        position: '-webkit-sticky',
        top: 0,
        bottom: 0,
        left: 0,
        right: 0,
        margin: 'auto'
      }
    })
  }, props.children));
};

const mapStateToProps = state => ({
  app: state.app,
  user: state.user
});

const mapDispatchToProps = {};
/* harmony default export */ __webpack_exports__["default"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_2__["connect"])(mapStateToProps, mapDispatchToProps)(_ant_design_compatible__WEBPACK_IMPORTED_MODULE_3__["Form"].create()(Object(next_dist_client_router__WEBPACK_IMPORTED_MODULE_4__["withRouter"])(Loading))));

/***/ }),

/***/ "./components/general/ParseTag.jsx":
/*!*****************************************!*\
  !*** ./components/general/ParseTag.jsx ***!
  \*****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! antd */ "antd");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(antd__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-redux */ "react-redux");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var react_show_more_text__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react-show-more-text */ "react-show-more-text");
/* harmony import */ var react_show_more_text__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react_show_more_text__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _carFreak_config__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../carFreak/config */ "./components/carFreak/config.js");
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! next/router */ "next/router");
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _feathers__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../feathers */ "./feathers.js");
var __jsx = react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement;

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }









let timeoutFunc;

const ParseTag = props => {
  const {
    0: text,
    1: setText
  } = Object(react__WEBPACK_IMPORTED_MODULE_2__["useState"])('');
  Object(react__WEBPACK_IMPORTED_MODULE_2__["useEffect"])(() => {
    if (lodash__WEBPACK_IMPORTED_MODULE_1___default.a.isString(props.data)) {
      parseText(props.data);
    } else {
      setText(props.data);
    }
  }, [props.data]);

  async function parseText(data) {
    let userIds = [];
    let users = [];

    if (lodash__WEBPACK_IMPORTED_MODULE_1___default.a.isString(data)) {
      let textArr = Object(_carFreak_config__WEBPACK_IMPORTED_MODULE_5__["parseTagStringToArray"])(data || '') || [];

      lodash__WEBPACK_IMPORTED_MODULE_1___default.a.forEach(textArr, function (v) {
        if (v.type == 'tag') {
          userIds.push(v.id);
        }
      });

      if (lodash__WEBPACK_IMPORTED_MODULE_1___default.a.isArray(userIds) && !lodash__WEBPACK_IMPORTED_MODULE_1___default.a.isEmpty(userIds)) {
        let userRes = await _feathers__WEBPACK_IMPORTED_MODULE_7__["default"].service('users').find({
          query: {
            _id: {
              $in: userIds || []
            }
          }
        });
        users = lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(userRes, 'data') || [];
      }

      setText(lodash__WEBPACK_IMPORTED_MODULE_1___default.a.map(textArr, function (v, i) {
        if (v.type == 'tag') {
          let user = lodash__WEBPACK_IMPORTED_MODULE_1___default.a.find(users, function (user) {
            return user._id == v.id;
          });

          if (lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(user, ['userurlId'])) {
            return __jsx("a", {
              key: 'ccartag' + i,
              className: `${props.tagClassName || 'font-weight-bold blue'} cursor-pointer`,
              href: `/profile/${user.userurlId}`,
              target: "_blank"
            }, v.value);
          }
        }

        if (v.type == 'hashTag') {
          return __jsx("a", {
            key: 'ccarhashtag' + i,
            className: `${props.tagClassName || 'font-weight-bold black'} cursor-pointer`,
            href: v.id ? `/hashtag/${(v.value || '').replace('#', '')}` : '#',
            target: "_blank"
          }, v.value);
        }

        return v.value;
      }));
    } else {
      setText(data);
    }
  }

  return __jsx("span", {
    className: `text-overflow-break d-inline-block ${props.className || ''}`,
    style: _objectSpread({
      maxWidth: '100%'
    }, props.style)
  }, props.expandable ? __jsx(react_show_more_text__WEBPACK_IMPORTED_MODULE_4___default.a, {
    lines: props.lines || 1,
    more: props.more || __jsx("a", {
      className: "small-text"
    }, "Show More"),
    less: props.less || __jsx("a", {
      className: "small-text"
    }, "Show Less"),
    expanded: false
  }, text || '') : text || '');
};

const mapStateToProps = state => ({
  app: state.app,
  user: state.user
});

const mapDispatchToProps = {};
/* harmony default export */ __webpack_exports__["default"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_3__["connect"])(mapStateToProps, mapDispatchToProps)(antd__WEBPACK_IMPORTED_MODULE_0__["Form"].create()(Object(next_router__WEBPACK_IMPORTED_MODULE_6__["withRouter"])(ParseTag))));

/***/ }),

/***/ "./components/general/ReduxPersistWrapper.jsx":
/*!****************************************************!*\
  !*** ./components/general/ReduxPersistWrapper.jsx ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! antd */ "antd");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(antd__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-redux */ "react-redux");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../redux/actions/app-actions */ "./redux/actions/app-actions.js");
/* harmony import */ var _redux_config__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../redux/config */ "./redux/config.js");
/* harmony import */ var local_storage__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! local-storage */ "local-storage");
/* harmony import */ var local_storage__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(local_storage__WEBPACK_IMPORTED_MODULE_6__);
var __jsx = react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement;








const ReduxPersistWrapper = props => {
  Object(react__WEBPACK_IMPORTED_MODULE_2__["useEffect"])(() => {
    //Used better approach, straight persist states at reducer
    // if (props.cookie) {
    //     let persistStates = getLocalStoragePersistStates();
    //     _.forEach(persistStates, function (persistState) {
    //         props.dynamicDispatch(_.get(persistState, ['persistObj', 'action']), _.get(persistState, ['data']))
    //     })
    // console.log(localStorage.get('redux'));
    props.restoreRedux(local_storage__WEBPACK_IMPORTED_MODULE_6___default.a.get('redux') || {});
    props.setInitedRedux(true); // }
  }, [props.cookie]);
  return __jsx(react__WEBPACK_IMPORTED_MODULE_2___default.a.Fragment, null, props.app.initedRedux ? props.children : null);
};

const mapStateToProps = state => ({
  app: state.app,
  user: state.user
});

const mapDispatchToProps = {
  restoreRedux: _redux_config__WEBPACK_IMPORTED_MODULE_5__["restoreRedux"],
  dynamicDispatch: _redux_config__WEBPACK_IMPORTED_MODULE_5__["dynamicDispatch"],
  setInitedRedux: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_4__["setInitedRedux"]
};
/* harmony default export */ __webpack_exports__["default"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_3__["connect"])(mapStateToProps, mapDispatchToProps)(ReduxPersistWrapper));

/***/ }),

/***/ "./components/general/ReportButton.jsx":
/*!*********************************************!*\
  !*** ./components/general/ReportButton.jsx ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! antd */ "antd");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(antd__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-redux */ "react-redux");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! next/router */ "next/router");
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../redux/actions/app-actions */ "./redux/actions/app-actions.js");
/* harmony import */ var _feathers__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../feathers */ "./feathers.js");
var __jsx = react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement;

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }









const ReportButton = props => {
  const {
    form
  } = props;
  const {
    getFieldDecorator
  } = form;
  const {
    0: report,
    1: setReport
  } = Object(react__WEBPACK_IMPORTED_MODULE_2__["useState"])([]);
  const {
    0: visible,
    1: setVisible
  } = Object(react__WEBPACK_IMPORTED_MODULE_2__["useState"])(false);
  const {
    0: isReported,
    1: setIsReported
  } = Object(react__WEBPACK_IMPORTED_MODULE_2__["useState"])(false);
  const {
    0: type,
    1: setType
  } = Object(react__WEBPACK_IMPORTED_MODULE_2__["useState"])();
  Object(react__WEBPACK_IMPORTED_MODULE_2__["useEffect"])(() => {
    getReport();
  }, [props.reporterId, type, props[type + 'Id']]);
  Object(react__WEBPACK_IMPORTED_MODULE_2__["useEffect"])(() => {
    if (props.type) {
      setType(props.type);
    } else {
      setType('');
    }
  }, [props.type]);
  Object(react__WEBPACK_IMPORTED_MODULE_2__["useEffect"])(() => {
    setIsReported(lodash__WEBPACK_IMPORTED_MODULE_1___default.a.isPlainObject(report) && !lodash__WEBPACK_IMPORTED_MODULE_1___default.a.isEmpty(report));
  }, [report]);

  function getReport() {
    if (props.reporterId && props[type + 'Id'] && type) {
      let query = {
        $limit: 1
      };
      query[type + 'Id'] = props[type + 'Id'];
      query.type = type;
      query.reporterId = props.reporterId;
      _feathers__WEBPACK_IMPORTED_MODULE_6__["default"].service('report').find({
        query: query
      }).then(res => {
        setReport(lodash__WEBPACK_IMPORTED_MODULE_1___default.a.isArray(res.data) && !lodash__WEBPACK_IMPORTED_MODULE_1___default.a.isEmpty(res.data) ? res.data[0] : {});
        setIsReported(lodash__WEBPACK_IMPORTED_MODULE_1___default.a.isArray(res.data) && !lodash__WEBPACK_IMPORTED_MODULE_1___default.a.isEmpty(res.data) ? lodash__WEBPACK_IMPORTED_MODULE_1___default.a.isPlainObject(res.data[0]) && !lodash__WEBPACK_IMPORTED_MODULE_1___default.a.isEmpty(res.data[0]) : false);
      }).catch(err => {
        antd__WEBPACK_IMPORTED_MODULE_0__["message"].error(err.message);
      });
    }
  }

  function handleSuccess(success) {
    setVisible(false);

    if (props.handleSuccess) {
      props.handleSuccess(success);
    }
  }

  function handleError(error) {
    setVisible(false);

    if (props.handleError) {
      props.handleError(error);
    }
  }

  function handleSubmit() {
    if (!lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(props.user, ['authenticated']) || !lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(props.user, ['info', 'user', '_id'])) {
      antd__WEBPACK_IMPORTED_MODULE_0__["message"].error('Please Login First!');
      props.loginMode(true);
      return;
    }

    switch (type) {
      case 'chat':
        break;

      case 'user':
        break;

      case 'message':
        break;

      default:
        antd__WEBPACK_IMPORTED_MODULE_0__["message"].error('Invalid type');
        return;
        break;
    }

    if (!props[type + 'Id']) {
      antd__WEBPACK_IMPORTED_MODULE_0__["message"].error('Content Not Found');
      return;
    }

    if (!props.reporterId) {
      antd__WEBPACK_IMPORTED_MODULE_0__["message"].error('Reporter Not Found');
      return;
    }

    form.validateFields((err, values) => {
      if (!err) {
        let promises = [];
        promises.push(_feathers__WEBPACK_IMPORTED_MODULE_6__["default"].authenticate());

        if (!isReported) {
          let data = {};
          data.type = type;
          data.reporterId = props.reporterId;
          data[type + 'Id'] = props[type + 'Id']; //For Activity Logs;

          data.actionType = 'createReport';
          promises.push(_feathers__WEBPACK_IMPORTED_MODULE_6__["default"].service('report').create(_objectSpread(_objectSpread({}, data), values)));
        } else {
          promises.push(_feathers__WEBPACK_IMPORTED_MODULE_6__["default"].service('report').remove(report._id));
        }

        props.loading(true); //Write in report model

        Promise.all(promises).then(([auth, res]) => {
          props.loading(false);
          handleSuccess({
            type: isReported ? 'cancel' : 'reported',
            data: res
          });
          setReport(isReported ? {} : res);
          setVisible(false);
        }).catch(error => {
          props.loading(false);
          setVisible(false);
          handleError({
            message: "Report Failed"
          });
        });
      }
    });
  }

  ;
  return __jsx("span", {
    className: props.className ? props.className : null,
    style: props.style ? props.style : null
  }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Modal"], {
    visible: visible,
    title: "Report Form",
    maskClosable: true,
    centered: true,
    onOk: e => {
      handleSubmit();
    },
    okText: "Submit",
    onCancel: e => {
      setVisible(false);
    }
  }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Form"], {
    layout: "vertical"
  }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Form"].Item, null, getFieldDecorator('title', {
    rules: [{
      required: true,
      message: 'Please input title.'
    }]
  })(__jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Input"], {
    placeholder: "Title(max 200)",
    maxLength: 200
  }))), __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Form"].Item, null, getFieldDecorator('description', {
    rules: [{
      required: true,
      message: 'Please input description.'
    }]
  })(__jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Input"].TextArea, {
    autoSize: {
      minRows: 6,
      maxRows: 6
    },
    showCount: true,
    placeholder: "Description(max 900)",
    maxLength: 900
  }))))), __jsx("span", {
    onClick: () => {
      setVisible(true);
    }
  }, isReported ? props.cancelButton ? props.cancelButton() : __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Button"], {
    type: "danger",
    icon: "flag"
  }, "Report") : props.reportButton ? props.reportButton() : __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Button"], {
    type: "danger",
    icon: "flag",
    disabled: true
  }, "Reported")));
};

const mapStateToProps = state => ({
  app: state.app,
  user: state.user
});

const mapDispatchToProps = {
  loginMode: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_5__["loginMode"],
  loading: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_5__["loading"]
};
/* harmony default export */ __webpack_exports__["default"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_3__["connect"])(mapStateToProps, mapDispatchToProps)(antd__WEBPACK_IMPORTED_MODULE_0__["Form"].create()(Object(next_router__WEBPACK_IMPORTED_MODULE_4__["withRouter"])(ReportButton))));

/***/ }),

/***/ "./components/general/ScrollLoadWrapper.jsx":
/*!**************************************************!*\
  !*** ./components/general/ScrollLoadWrapper.jsx ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! antd */ "antd");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(antd__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var react_custom_scrollbars__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-custom-scrollbars */ "react-custom-scrollbars");
/* harmony import */ var react_custom_scrollbars__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react_custom_scrollbars__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-redux */ "react-redux");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! uuid */ "uuid");
/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(uuid__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next/router */ "next/router");
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _common_function__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../common-function */ "./common-function.js");
var __jsx = react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement;

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }








let uid = Object(uuid__WEBPACK_IMPORTED_MODULE_4__["v4"])();
let containerRef = {};
containerRef[uid] = react__WEBPACK_IMPORTED_MODULE_1___default.a.createRef();

const ScrollLoadWrapper = props => {
  Object(react__WEBPACK_IMPORTED_MODULE_1__["useEffect"])(() => {
    if (props.getRef) {
      props.getRef(containerRef[uid]);
    }
  }, [containerRef[uid].current]);

  function checkScrolledToBottom(ref) {
    try {
      if (!!ref) {
        let scrollHeight = ref.current.getScrollHeight();
        let currentPosition = ref.current.getValues();
        currentPosition = currentPosition.scrollTop + currentPosition.clientHeight;
        let scrollRange = 30;

        if (Object(_common_function__WEBPACK_IMPORTED_MODULE_6__["isValidNumber"])(props.scrollRange)) {
          if (props.scrollRangeUsePercentage) {
            scrollRange = scrollHeight * (parseFloat(props.scrollRange) / 100);
          } else {
            scrollRange = parseFloat(props.scrollRange);
          }
        }

        if (scrollHeight - currentPosition <= scrollRange) {
          if (props.onScrolledBottom) {
            props.onScrolledBottom();
          }
        }
      }
    } catch (error) {
      console.log(error);
    }
  }

  Object(react__WEBPACK_IMPORTED_MODULE_1__["useEffect"])(() => {
    if (_.get(containerRef, [uid, 'current'])) {
      if (props.getRef) {
        props.getRef(containerRef[uid].current);
      }
    }
  }, [containerRef[uid]]);
  return __jsx(react__WEBPACK_IMPORTED_MODULE_1___default.a.Fragment, null, __jsx(react_custom_scrollbars__WEBPACK_IMPORTED_MODULE_2__["Scrollbars"], {
    autoHide: true,
    style: _objectSpread({
      height: '100%',
      width: '100%'
    }, props.style),
    ref: containerRef[uid],
    onScrollStop: () => {
      checkScrolledToBottom(containerRef[uid]);
    },
    autoHeightMax: props.autoHeightMax || 'auto',
    autoHeightMin: props.autoHeightMin || 'auto',
    autoHeight: props.autoHeight || false
  }, props.children));
};

const mapStateToProps = state => ({
  app: state.app,
  user: state.user
});

const mapDispatchToProps = {};
/* harmony default export */ __webpack_exports__["default"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_3__["connect"])(mapStateToProps, mapDispatchToProps)(antd__WEBPACK_IMPORTED_MODULE_0__["Form"].create()(Object(next_router__WEBPACK_IMPORTED_MODULE_5__["withRouter"])(ScrollLoadWrapper))));

/***/ }),

/***/ "./components/general/ShareButtonDialog.jsx":
/*!**************************************************!*\
  !*** ./components/general/ShareButtonDialog.jsx ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _ant_design_icons__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ant-design/icons */ "@ant-design/icons");
/* harmony import */ var _ant_design_icons__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_ant_design_icons__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! antd */ "antd");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(antd__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var copy_to_clipboard__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! copy-to-clipboard */ "copy-to-clipboard");
/* harmony import */ var copy_to_clipboard__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(copy_to_clipboard__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react-redux */ "react-redux");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next/router */ "next/router");
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _common_function__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../common-function */ "./common-function.js");
/* harmony import */ var _SocialShareButton__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./SocialShareButton */ "./components/general/SocialShareButton.jsx");
var __jsx = react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement;









const ShareButtonDialog = props => {
  const {
    0: visible,
    1: setVisible
  } = Object(react__WEBPACK_IMPORTED_MODULE_3__["useState"])(false);
  const {
    0: link,
    1: setLink
  } = Object(react__WEBPACK_IMPORTED_MODULE_3__["useState"])();
  const {
    0: title,
    1: setTitle
  } = Object(react__WEBPACK_IMPORTED_MODULE_3__["useState"])('');
  const {
    0: iconSize,
    1: setIconSize
  } = Object(react__WEBPACK_IMPORTED_MODULE_3__["useState"])(38);
  const {
    0: shape,
    1: setShape
  } = Object(react__WEBPACK_IMPORTED_MODULE_3__["useState"])('square');
  const {
    0: network,
    1: setNetwork
  } = Object(react__WEBPACK_IMPORTED_MODULE_3__["useState"])([// 'email',
  'facebook', // 'messenger',
  // 'hatena',
  // 'instapaper',
  // 'linkedin',
  'line', // 'livejournal',
  // 'mailru',
  // 'ok',
  // 'pinterest',
  // 'pocket',
  // 'reddit',
  'telegram', // 'tumblr',
  'twitter', // 'viber',
  // 'vk',
  // 'weibo',
  'whatsapp' // 'workplace',
  ]);
  Object(react__WEBPACK_IMPORTED_MODULE_3__["useEffect"])(() => {
    if (!props.link) {
      setLink(window.location.href);
    }
  }, []);

  function close(e) {
    setVisible(false);
  }

  function copyToClipboard() {
    copy_to_clipboard__WEBPACK_IMPORTED_MODULE_2___default()(link);
    antd__WEBPACK_IMPORTED_MODULE_1__["message"].info('Copied link. Share it to others now!');
  }

  Object(react__WEBPACK_IMPORTED_MODULE_3__["useEffect"])(() => {
    let link;

    try {
      if (props.link) {
        link = props.link;
      } else {
        link = window.location.href;
      }

      if (!link.includes('http://') && !link.includes('https://')) {
        let prefix = window.location.href.split('//');
        let naming = prefix[1].split('/')[0];
        link = prefix[0] + '//' + naming + link;
      }

      link = link.split('//');
      let surfix = link[1].split('/'); // surfix[0] = `share.${surfix[0]}`;

      surfix[0] = `${surfix[0]}`;
      surfix = surfix.join('/');
      link[1] = surfix;
      link = link.join('//');
    } catch (error) {
      link = window.location.href;
    }

    setLink(link);
  }, [props.link, props.router.asPath]);
  Object(react__WEBPACK_IMPORTED_MODULE_3__["useEffect"])(() => {
    if (props.title) {
      setTitle(props.title);
    }
  }, [props.title]);
  Object(react__WEBPACK_IMPORTED_MODULE_3__["useEffect"])(() => {}, [title]);
  Object(react__WEBPACK_IMPORTED_MODULE_3__["useEffect"])(() => {
    if (props.iconSize) {
      setIconSize(props.iconSize);
    }
  }, [props.iconSize]);
  Object(react__WEBPACK_IMPORTED_MODULE_3__["useEffect"])(() => {
    if (Object(_common_function__WEBPACK_IMPORTED_MODULE_6__["notEmptyLength"])(props.network)) {
      setNetwork(props.network);
    }
  }, [props.network]);
  Object(react__WEBPACK_IMPORTED_MODULE_3__["useEffect"])(() => {
    if (Object(_common_function__WEBPACK_IMPORTED_MODULE_6__["notEmptyLength"])(props.shape)) {
      setShape(props.shape);
    }
  }, [props.shape]);
  return __jsx(react__WEBPACK_IMPORTED_MODULE_3___default.a.Fragment, null, __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Modal"], {
    visible: visible,
    centered: true,
    maskClosable: true,
    closable: false,
    footer: null,
    onCancel: close
  }, __jsx("div", {
    className: "flex-justify-center flex-items-align-center flex-wrap padding-sm "
  }, __jsx("div", {
    className: "flex-justify-center flex-items-align-center padding-sm width-100 margin-bottom-sm "
  }, __jsx("span", {
    className: "d-inline-block margin-x-sm ",
    style: {
      width: '30px',
      height: '30px'
    }
  }, __jsx("img", {
    src: "https://img.icons8.com/ios-filled/26/000000/forward-arrow.png",
    className: "fill-parent"
  })), __jsx("span", {
    className: "d-inline-block subtitle1 font-weight-bold text-overflow-break margin-x-sm"
  }, "Share to...")), __jsx("div", {
    className: "padding-sm width-100"
  }, Object(_common_function__WEBPACK_IMPORTED_MODULE_6__["notEmptyLength"])(network) ? __jsx("div", {
    className: "flex-justify-center flex-items-align-center flex-wrap"
  }, __jsx(_SocialShareButton__WEBPACK_IMPORTED_MODULE_7__["default"], {
    link: link,
    title: title,
    network: network,
    iconSize: iconSize,
    shape: shape
  })) : null, __jsx("div", {
    className: "flex-justify-center flex-items-align-center flex-wrap"
  }, __jsx("a", {
    onClick: copyToClipboard
  }, __jsx("span", {
    className: "d-inline-block flex-justify-center flex-items-align-center background-transparent thin-border margin-md",
    style: {
      width: "auto",
      height: '40px',
      padding: 12,
      borderRadius: 4
    }
  }, __jsx("span", {
    className: "d-inline-block margin-x-sm relative-wrapper",
    style: {
      width: '22px',
      height: '22px'
    }
  }, __jsx("img", {
    src: "https://img.icons8.com/ios/50/000000/copy-link.png",
    className: "fill-parent absolute-center"
  })), __jsx("span", {
    className: "d-inline-block headline   font-weight-bold text-overflow-break grey-darken-3"
  }, "Copy Link"))))))), __jsx("a", {
    onClick: e => props.readOnly ? null : setVisible(true)
  }, props.children ? props.children : __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Button"], {
    className: props.className ? props.className : "padding-x-sm",
    style: props.style ? props.style : null
  }, __jsx(_ant_design_icons__WEBPACK_IMPORTED_MODULE_0__["ShareAltOutlined"], null), "Share")));
};

const mapStateToProps = state => ({
  app: state.app,
  user: state.user
});

const mapDispatchToProps = {};
/* harmony default export */ __webpack_exports__["default"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_4__["connect"])(mapStateToProps, mapDispatchToProps)(antd__WEBPACK_IMPORTED_MODULE_1__["Form"].create()(Object(next_router__WEBPACK_IMPORTED_MODULE_5__["withRouter"])(ShareButtonDialog))));

/***/ }),

/***/ "./components/general/SocialShareButton.jsx":
/*!**************************************************!*\
  !*** ./components/general/SocialShareButton.jsx ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! antd */ "antd");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(antd__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-redux */ "react-redux");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var react_share__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react-share */ "react-share");
/* harmony import */ var react_share__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react_share__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next/router */ "next/router");
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _common_function__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../common-function */ "./common-function.js");
var __jsx = react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement;








const SocialShareButton = props => {
  const {
    0: link,
    1: setLink
  } = Object(react__WEBPACK_IMPORTED_MODULE_2__["useState"])(window.location.href);
  const {
    0: title,
    1: setTitle
  } = Object(react__WEBPACK_IMPORTED_MODULE_2__["useState"])('');
  const {
    0: iconSize,
    1: setIconSize
  } = Object(react__WEBPACK_IMPORTED_MODULE_2__["useState"])(38);
  const {
    0: shape,
    1: setShape
  } = Object(react__WEBPACK_IMPORTED_MODULE_2__["useState"])('square');
  const {
    0: network,
    1: setNetwork
  } = Object(react__WEBPACK_IMPORTED_MODULE_2__["useState"])([// 'email',
  'facebook', // 'messenger',
  // 'hatena',
  // 'instapaper',
  // 'linkedin',
  'line', // 'livejournal',
  // 'mailru',
  // 'ok',
  // 'pinterest',
  // 'pocket',
  // 'reddit',
  'telegram', // 'tumblr',
  'twitter', // 'viber',
  // 'vk',
  // 'weibo',
  'whatsapp' // 'workplace',
  ]);
  Object(react__WEBPACK_IMPORTED_MODULE_2__["useEffect"])(() => {
    if (props.link) {
      setLink(props.link);
    }
  }, [props.link]);
  Object(react__WEBPACK_IMPORTED_MODULE_2__["useEffect"])(() => {
    if (props.title) {
      setTitle(props.title);
    }
  }, [props.title]);
  Object(react__WEBPACK_IMPORTED_MODULE_2__["useEffect"])(() => {
    if (props.iconSize) {
      setIconSize(props.iconSize);
    }
  }, [props.iconSize]);
  Object(react__WEBPACK_IMPORTED_MODULE_2__["useEffect"])(() => {
    if (Object(_common_function__WEBPACK_IMPORTED_MODULE_6__["notEmptyLength"])(props.network)) {
      setNetwork(props.network);
    }
  }, [props.network]);
  Object(react__WEBPACK_IMPORTED_MODULE_2__["useEffect"])(() => {
    if (props.shape) {
      setShape(props.shape);
    }
  }, [props.shape]);

  const _renderSocialShareButton = value => {
    switch (value) {
      case 'email':
        return __jsx(react_share__WEBPACK_IMPORTED_MODULE_4__["EmailShareButton"], {
          url: link,
          title: title,
          className: "margin-sm flex-justify-center flex-items-align-center round-border"
        }, __jsx(react_share__WEBPACK_IMPORTED_MODULE_4__["EmailIcon"], {
          size: iconSize,
          round: shape == 'square' ? false : true
        }));

      case 'facebook':
        return __jsx(react_share__WEBPACK_IMPORTED_MODULE_4__["FacebookShareButton"], {
          url: link,
          quote: title,
          className: "margin-sm flex-justify-center flex-items-align-center round-border"
        }, __jsx(react_share__WEBPACK_IMPORTED_MODULE_4__["FacebookIcon"], {
          size: iconSize,
          round: shape == 'square' ? false : true
        }));
      // case 'messenger':
      //     return (
      //         <FacebookMessengerShareButton url={link} title={title} className='margin-sm flex-justify-center flex-items-align-center round-border'>
      //             <FacebookMessengerIcon size={iconSize} round={shape == 'square' ? false : true} />
      //         </FacebookMessengerShareButton>
      //     )

      case 'hatena':
        return __jsx(react_share__WEBPACK_IMPORTED_MODULE_4__["HatenaShareButton"], {
          url: link,
          title: title,
          className: "margin-sm flex-justify-center flex-items-align-center round-border"
        }, __jsx(react_share__WEBPACK_IMPORTED_MODULE_4__["HatenaIcon"], {
          size: iconSize,
          round: shape == 'square' ? false : true
        }));

      case 'instapaper':
        return __jsx(react_share__WEBPACK_IMPORTED_MODULE_4__["InstapaperShareButton"], {
          url: link,
          title: title,
          className: "margin-sm flex-justify-center flex-items-align-center round-border"
        }, __jsx(react_share__WEBPACK_IMPORTED_MODULE_4__["InstapaperIcon"], {
          size: iconSize,
          round: shape == 'square' ? false : true
        }));

      case 'linkedin':
        return __jsx(react_share__WEBPACK_IMPORTED_MODULE_4__["LinkedinShareButton"], {
          edinShareButton: true,
          url: link,
          title: title,
          className: "margin-sm flex-justify-center flex-items-align-center round-border"
        }, __jsx(react_share__WEBPACK_IMPORTED_MODULE_4__["LinkedinIcon"], {
          size: iconSize,
          round: shape == 'square' ? false : true
        }));

      case 'line':
        return __jsx(react_share__WEBPACK_IMPORTED_MODULE_4__["LineShareButton"], {
          url: link,
          title: title,
          className: "margin-sm flex-justify-center flex-items-align-center round-border"
        }, __jsx(react_share__WEBPACK_IMPORTED_MODULE_4__["LineIcon"], {
          size: iconSize,
          round: shape == 'square' ? false : true
        }));

      case 'livejournal':
        return __jsx(react_share__WEBPACK_IMPORTED_MODULE_4__["LivejournalShareButton"], {
          url: link,
          title: title,
          className: "margin-sm flex-justify-center flex-items-align-center round-border"
        }, __jsx(react_share__WEBPACK_IMPORTED_MODULE_4__["LivejournalIcon"], {
          size: iconSize,
          round: shape == 'square' ? false : true
        }));

      case 'mailru':
        return __jsx(react_share__WEBPACK_IMPORTED_MODULE_4__["MailruShareButton"], {
          url: link,
          title: title,
          className: "margin-sm flex-justify-center flex-items-align-center round-border"
        }, __jsx(react_share__WEBPACK_IMPORTED_MODULE_4__["MailruIcon"], {
          size: iconSize,
          round: shape == 'square' ? false : true
        }));

      case 'ok':
        return __jsx(react_share__WEBPACK_IMPORTED_MODULE_4__["OKShareButton"], {
          url: link,
          title: title,
          className: "margin-sm flex-justify-center flex-items-align-center round-border"
        }, __jsx(react_share__WEBPACK_IMPORTED_MODULE_4__["OKIcon"], {
          size: iconSize,
          round: shape == 'square' ? false : true
        }));
      // case 'pinterest':
      //     return (
      //         <PinterestShareButton url={link} title={title} className='margin-sm flex-justify-center flex-items-align-center round-border'>
      //             <PinterestIcon size={iconSize} round={shape == 'square' ? false : true} />
      //         </PinterestShareButton>
      //     )

      case 'pocket':
        return __jsx(react_share__WEBPACK_IMPORTED_MODULE_4__["PocketShareButton"], {
          url: link,
          title: title,
          className: "margin-sm flex-justify-center flex-items-align-center round-border"
        }, __jsx(react_share__WEBPACK_IMPORTED_MODULE_4__["PocketIcon"], {
          size: iconSize,
          round: shape == 'square' ? false : true
        }));

      case 'reddit':
        return __jsx(react_share__WEBPACK_IMPORTED_MODULE_4__["RedditShareButton"], {
          url: link,
          title: title,
          className: "margin-sm flex-justify-center flex-items-align-center round-border"
        }, __jsx(react_share__WEBPACK_IMPORTED_MODULE_4__["RedditIcon"], {
          size: iconSize,
          round: shape == 'square' ? false : true
        }));

      case 'telegram':
        return __jsx(react_share__WEBPACK_IMPORTED_MODULE_4__["TelegramShareButton"], {
          url: link,
          title: title,
          className: "margin-sm flex-justify-center flex-items-align-center round-border"
        }, __jsx(react_share__WEBPACK_IMPORTED_MODULE_4__["TelegramIcon"], {
          size: iconSize,
          round: shape == 'square' ? false : true
        }));

      case 'tumblr':
        return __jsx(react_share__WEBPACK_IMPORTED_MODULE_4__["TumblrShareButton"], {
          url: link,
          title: title,
          className: "margin-sm flex-justify-center flex-items-align-center round-border"
        }, __jsx(react_share__WEBPACK_IMPORTED_MODULE_4__["TumblrIcon"], {
          size: iconSize,
          round: shape == 'square' ? false : true
        }));

      case 'twitter':
        return __jsx(react_share__WEBPACK_IMPORTED_MODULE_4__["TwitterShareButton"], {
          url: link,
          title: title,
          className: "margin-sm flex-justify-center flex-items-align-center round-border"
        }, __jsx(react_share__WEBPACK_IMPORTED_MODULE_4__["TwitterIcon"], {
          size: iconSize,
          round: shape == 'square' ? false : true
        }));

      case 'viber':
        return __jsx(react_share__WEBPACK_IMPORTED_MODULE_4__["ViberShareButton"], {
          url: link,
          title: title,
          className: "margin-sm flex-justify-center flex-items-align-center round-border"
        }, __jsx(react_share__WEBPACK_IMPORTED_MODULE_4__["ViberIcon"], {
          size: iconSize,
          round: shape == 'square' ? false : true
        }));

      case 'vk':
        return __jsx(react_share__WEBPACK_IMPORTED_MODULE_4__["VKShareButton"], {
          url: link,
          title: title,
          className: "margin-sm flex-justify-center flex-items-align-center round-border"
        }, __jsx(react_share__WEBPACK_IMPORTED_MODULE_4__["VKIcon"], {
          size: iconSize,
          round: shape == 'square' ? false : true
        }));

      case 'weibo':
        return __jsx(react_share__WEBPACK_IMPORTED_MODULE_4__["WeiboShareButton"], {
          url: link,
          title: title,
          className: "margin-sm flex-justify-center flex-items-align-center round-border"
        }, __jsx(react_share__WEBPACK_IMPORTED_MODULE_4__["WeiboIcon"], {
          size: iconSize,
          round: shape == 'square' ? false : true
        }));

      case 'whatsapp':
        return __jsx(react_share__WEBPACK_IMPORTED_MODULE_4__["WhatsappShareButton"], {
          url: link,
          title: title,
          className: "margin-sm flex-justify-center flex-items-align-center round-border"
        }, __jsx(react_share__WEBPACK_IMPORTED_MODULE_4__["WhatsappIcon"], {
          size: iconSize,
          round: shape == 'square' ? false : true
        }));

      case 'workplace':
        return __jsx(react_share__WEBPACK_IMPORTED_MODULE_4__["WorkplaceShareButton"], {
          url: link,
          title: title,
          className: "margin-sm flex-justify-center flex-items-align-center round-border"
        }, __jsx(react_share__WEBPACK_IMPORTED_MODULE_4__["WorkplaceIcon"], {
          size: iconSize,
          round: shape == 'square' ? false : true
        }));

      default:
        break;
    }
  };

  return __jsx(react__WEBPACK_IMPORTED_MODULE_2___default.a.Fragment, null, Object(_common_function__WEBPACK_IMPORTED_MODULE_6__["notEmptyLength"])(network) ? lodash__WEBPACK_IMPORTED_MODULE_1___default.a.map(network, function (v) {
    return _renderSocialShareButton(v);
  }) : null);
};

const mapStateToProps = state => ({
  app: state.app,
  user: state.user
});

const mapDispatchToProps = {};
/* harmony default export */ __webpack_exports__["default"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_3__["connect"])(mapStateToProps, mapDispatchToProps)(antd__WEBPACK_IMPORTED_MODULE_0__["Form"].create()(Object(next_router__WEBPACK_IMPORTED_MODULE_5__["withRouter"])(SocialShareButton))));

/***/ }),

/***/ "./components/general/UserAvatar.jsx":
/*!*******************************************!*\
  !*** ./components/general/UserAvatar.jsx ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! antd */ "antd");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(antd__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-redux */ "react-redux");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _light_box_gallery__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./light-box-gallery */ "./components/general/light-box-gallery.jsx");
/* harmony import */ var _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../redux/actions/app-actions */ "./redux/actions/app-actions.js");
/* harmony import */ var _common_function__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../common-function */ "./common-function.js");
/* harmony import */ var _params_darkThemeColorList__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../params/darkThemeColorList */ "./params/darkThemeColorList.js");
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! next/router */ "next/router");
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_8__);
var __jsx = react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement;

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }











const UserAvatar = props => {
  const {
    0: tooltipVisible,
    1: setTooltipVisible
  } = Object(react__WEBPACK_IMPORTED_MODULE_2__["useState"])(false);
  return __jsx(react__WEBPACK_IMPORTED_MODULE_2___default.a.Fragment, null, __jsx("div", {
    className: `flex-items-align-center flex-justify-center ${props.className ? props.className : ''} ${props.redirectProfile ? 'cursor-pointer' : ''} `,
    style: _objectSpread({}, props.style),
    onClick: e => {
      if (props.onClick) {
        props.onClick(e);
      }

      console.log(props.data);
      console.log(props.data.userurlId);

      if (lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(props.data, ['userurlId']) && props.redirectProfile) {
        if (props.onRedirect) {
          props.onRedirect();
        }

        props.router.push(`/profile/${props.data.userurlId}`, undefined, {
          shallow: false
        });
      }
    }
  }, __jsx(_light_box_gallery__WEBPACK_IMPORTED_MODULE_4__["default"], {
    images: lodash__WEBPACK_IMPORTED_MODULE_1___default.a.compact([lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(props.data, ['avatar'])])
  }, (data, setCurrentIndex, setVisible) => {
    return __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Tooltip"], {
      title: lodash__WEBPACK_IMPORTED_MODULE_1___default.a.isPlainObject(props.data) && !lodash__WEBPACK_IMPORTED_MODULE_1___default.a.isEmpty(props.data) ? lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(props.data, ['name']) ? lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(props.data, ['name']) || '' : lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(props.data, ['firstName', 'lastName']) || '' : '',
      visible: tooltipVisible,
      onVisibleChange: visible => {
        if (props.showTooltip) {
          setTooltipVisible(visible);
        }
      }
    }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Avatar"], {
      onClick: e => {
        if (!props.redirectProfile && props.showPreview) {
          setCurrentIndex(0);
          setVisible(true);
        }
      },
      size: Object(_common_function__WEBPACK_IMPORTED_MODULE_6__["isValidNumber"])(props.size) || props.size == 'small' || props.size == 'large' ? props.size : 'default',
      src: !props.data || !props.data.avatar ? null : props.data.avatar,
      icon: !props.data || !props.data.avatar && !props.data.name && !props.data.firstName && !props.data.lastName ? 'user' : null,
      className: `${props.avatarClassName ? props.avatarClassName : ''} ${props.redirectProfile || props.showPreview ? 'cursor-pointer' : ''}`,
      style: !props.data || !props.data.avatar ? {
        //donar
        backgroundColor: !props.data || !props.data.name && !props.data.firstName && !props.data.lastName ? "#F89F27" : _params_darkThemeColorList__WEBPACK_IMPORTED_MODULE_7__["darkThemeColorList"][lodash__WEBPACK_IMPORTED_MODULE_1___default.a.toString(props.data.name ? props.data.name : `${props.data.firstName ? props.data.firstName : ''} ${props.data.lastName ? props.data.lastName : props.data.lastName}`).length % _params_darkThemeColorList__WEBPACK_IMPORTED_MODULE_7__["darkThemeColorList"].length].code,
        verticalAlign: 'middle'
      } : {}
    }, !props.data ? null : !props.data.avatar ? props.data.name ? props.data.name : `${props.data.firstName ? props.data.firstName : ''} ${props.data.lastName ? props.data.lastName : ''}` : null));
  }), props.showNameRight && props.data ? __jsx("span", {
    className: `d-inline-block text-align-center headline margin-left-md text-truncate ${props.textClassName ? props.textClassName : '  '}`,
    style: _objectSpread(_objectSpread({}, props.textStyle), {}, {
      maxWidth: '80%'
    })
  }, props.renderName ? props.renderName(props.data) : props.data.name ? props.data.name : `${props.data.firstName ? props.data.firstName : ''} ${props.data.lastName ? props.data.lastName : ''}`) : null), __jsx("div", {
    className: `text-align-center headline ${props.textClassName ? props.textClassName : '  '}`
  }, props.showName && props.data && !props.showNameRight ? props.renderName ? props.renderName(props.data) : props.data.name ? props.data.name : `${props.data.firstName ? props.data.firstName : ''} ${props.data.lastName ? props.data.lastName : ''}` : null));
};

const mapStateToProps = state => ({
  app: state.app,
  user: state.user
});

const mapDispatchToProps = {
  loading: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_5__["loading"]
};
/* harmony default export */ __webpack_exports__["default"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_3__["connect"])(mapStateToProps, mapDispatchToProps)(Object(next_router__WEBPACK_IMPORTED_MODULE_8__["withRouter"])(UserAvatar)));

/***/ }),

/***/ "./components/general/WindowScrollDisableWrapper.jsx":
/*!***********************************************************!*\
  !*** ./components/general/WindowScrollDisableWrapper.jsx ***!
  \***********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! antd */ "antd");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(antd__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-redux */ "react-redux");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! uuid */ "uuid");
/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(uuid__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _common_function__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../common-function */ "./common-function.js");
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next/router */ "next/router");
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_5__);
var __jsx = react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement;






let uid = Object(uuid__WEBPACK_IMPORTED_MODULE_3__["v4"])();
let containerRef = {};
containerRef[uid] = react__WEBPACK_IMPORTED_MODULE_1___default.a.createRef();
let triggerFunction;

const WindowScrollDisableWrapper = props => {
  const {
    0: scrollY,
    1: setScrollY
  } = Object(react__WEBPACK_IMPORTED_MODULE_1__["useState"])(100);
  Object(react__WEBPACK_IMPORTED_MODULE_1__["useEffect"])(() => {
    if (typeof document != undefined) {
      if (props.disabled) {
        document.body.style.position = 'fixed';
        console.log(scrollY);
        document.body.style.top = `-${scrollY}px`;
      } else {
        if (props.disabled === false) {
          document.body.style.position = '';
          console.log(parseInt(document.body.style.top || '0') * -1);
          window.scrollTo({
            top: parseInt(document.body.style.top || '0') * -1,
            behavior: 'auto'
          });
        }
      }
    }
  }, [props.disabled]);
  Object(react__WEBPACK_IMPORTED_MODULE_1__["useEffect"])(() => {
    window.addEventListener('scroll', handleScroll, {
      passive: true
    });
    return () => {
      window.removeEventListener('scroll', handleScroll);
    };
  });

  function handleScroll(e) {
    if (true) {
      setScrollY(window.scrollY);
    }
  }

  ;
  return __jsx(react__WEBPACK_IMPORTED_MODULE_1___default.a.Fragment, null, props.children);
};

const mapStateToProps = state => ({
  app: state.app,
  user: state.user
});

const mapDispatchToProps = {};
/* harmony default export */ __webpack_exports__["default"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_2__["connect"])(mapStateToProps, mapDispatchToProps)(antd__WEBPACK_IMPORTED_MODULE_0__["Form"].create()(Object(next_router__WEBPACK_IMPORTED_MODULE_5__["withRouter"])(WindowScrollDisableWrapper))));

/***/ }),

/***/ "./components/general/WindowScrollLoadWrapper.jsx":
/*!********************************************************!*\
  !*** ./components/general/WindowScrollLoadWrapper.jsx ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! antd */ "antd");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(antd__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-redux */ "react-redux");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! uuid */ "uuid");
/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(uuid__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _common_function__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../common-function */ "./common-function.js");
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next/router */ "next/router");
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_5__);
var __jsx = react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement;






let uid = Object(uuid__WEBPACK_IMPORTED_MODULE_3__["v4"])();
let containerRef = {};
containerRef[uid] = react__WEBPACK_IMPORTED_MODULE_1___default.a.createRef();
let triggerFunction;

const WindowScrollLoadWrapper = props => {
  const {
    0: scrollRange,
    1: setScrollRange
  } = Object(react__WEBPACK_IMPORTED_MODULE_1__["useState"])(100);
  Object(react__WEBPACK_IMPORTED_MODULE_1__["useEffect"])(() => {
    setScrollRange(Object(_common_function__WEBPACK_IMPORTED_MODULE_4__["isValidNumber"])(props.scrollRange) ? parseFloat(props.scrollRange) : 100);
  }, [props.scrollRange]);
  Object(react__WEBPACK_IMPORTED_MODULE_1__["useEffect"])(() => {
    window.addEventListener('scroll', handleScroll, {
      passive: true
    });
    return () => {
      window.removeEventListener('scroll', handleScroll);
    };
  });

  function handleScroll(e) {
    clearTimeout(triggerFunction);
    let scrollBarHeight = window.innerHeight * (window.innerHeight / document.body.offsetHeight);

    if (window.scrollY + scrollBarHeight + scrollRange >= document.body.scrollHeight) {
      if (props.onScrolledBottom) {
        triggerFunction = setTimeout(() => {
          props.onScrolledBottom();
        }, 100);
      }
    }
  }

  ;
  return __jsx(react__WEBPACK_IMPORTED_MODULE_1___default.a.Fragment, null, props.children);
};

const mapStateToProps = state => ({
  app: state.app,
  user: state.user
});

const mapDispatchToProps = {};
/* harmony default export */ __webpack_exports__["default"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_2__["connect"])(mapStateToProps, mapDispatchToProps)(antd__WEBPACK_IMPORTED_MODULE_0__["Form"].create()(Object(next_router__WEBPACK_IMPORTED_MODULE_5__["withRouter"])(WindowScrollLoadWrapper))));

/***/ }),

/***/ "./components/general/add-compare-product-button.jsx":
/*!***********************************************************!*\
  !*** ./components/general/add-compare-product-button.jsx ***!
  \***********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _ant_design_compatible__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ant-design/compatible */ "@ant-design/compatible");
/* harmony import */ var _ant_design_compatible__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_ant_design_compatible__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! antd */ "antd");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(antd__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var next_dist_client_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/dist/client/router */ "./node_modules/next/dist/client/router.js");
/* harmony import */ var next_dist_client_router__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_dist_client_router__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react-redux */ "react-redux");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _common_function__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../common-function */ "./common-function.js");
/* harmony import */ var _feathers__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../feathers */ "./feathers.js");
/* harmony import */ var _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../redux/actions/app-actions */ "./redux/actions/app-actions.js");
/* harmony import */ var _redux_actions_productsList_actions__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../redux/actions/productsList-actions */ "./redux/actions/productsList-actions.js");
/* harmony import */ var _redux_actions_user_actions__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../redux/actions/user-actions */ "./redux/actions/user-actions.js");
var __jsx = react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement;












const AddCompareProductButton = props => {
  const {
    0: confirmModalState,
    1: setConfirmModalState
  } = Object(react__WEBPACK_IMPORTED_MODULE_4__["useState"])(false);
  const {
    0: compareLimit,
    1: setCompareLimit
  } = Object(react__WEBPACK_IMPORTED_MODULE_4__["useState"])(4);
  Object(react__WEBPACK_IMPORTED_MODULE_4__["useEffect"])(() => {
    setCompareLimit(lodash__WEBPACK_IMPORTED_MODULE_2___default.a.isNaN(parseInt(props.productsList.compareLimit)) ? 4 : parseInt(props.productsList.compareLimit));
  }, [props.productsList.compareLimit]);

  function isSavedCompare(id) {
    if (id && Object(_common_function__WEBPACK_IMPORTED_MODULE_6__["notEmptyLength"])(props.productsList.compareIds)) {
      var check = props.productsList.compareIds.filter(function (item) {
        return item == id;
      });
      return check.length > 0;
    } else {
      return false;
    }
  }

  const pushToList = data => {
    if (data._id) {
      if (Object(_common_function__WEBPACK_IMPORTED_MODULE_6__["arrayLengthCount"])(lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(props.productsList, ['compareIds'])) >= compareLimit) {
        antd__WEBPACK_IMPORTED_MODULE_1__["message"].warning(`Maximum ${compareLimit} products in comparison list.`);
        return;
      }

      if (Object(_common_function__WEBPACK_IMPORTED_MODULE_6__["notEmptyLength"])(props.productsList.compareIds)) {
        let ids = [];
        _feathers__WEBPACK_IMPORTED_MODULE_7__["default"].service('product-ads').find({
          query: {
            _id: {
              $in: props.productsList.compareIds
            }
          }
        }).then(res => {
          if (Object(_common_function__WEBPACK_IMPORTED_MODULE_6__["notEmptyLength"])(res.data)) {} else {
            props.clearCompareProductIds();
          }

          ids = lodash__WEBPACK_IMPORTED_MODULE_2___default.a.map(lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(res, ['data']), '_id') || [];
          ids.push(data._id);
          props.patchCompareProductIds(ids);
          antd__WEBPACK_IMPORTED_MODULE_1__["message"].success('Added to comparison list');
        }).catch(err => {// message.error(err.message)
        });
      } else {
        antd__WEBPACK_IMPORTED_MODULE_1__["message"].success('Added to comparison list');
        props.patchCompareProductIds([data._id]);
      }
    } else {
      antd__WEBPACK_IMPORTED_MODULE_1__["message"].error("Product Not Found");
    }
  };

  function removeFromList(data) {
    if (data._id) {
      props.removeCompareProductId(data._id);
      antd__WEBPACK_IMPORTED_MODULE_1__["message"].success('Removed from comparison list');
    }
  }

  return __jsx("span", {
    className: props.className ? props.className : null,
    style: props.style ? props.style : null
  }, __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Modal"], {
    visible: confirmModalState,
    title: "Are you sure?",
    maskClosable: true,
    centered: true,
    onOk: e => {
      removeFromList(props.data);
      setConfirmModalState(false);
    },
    onCancel: e => {
      setConfirmModalState(false);
    }
  }, __jsx("div", null, " Do you want to remove this product from your comparison list? ")), __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Tooltip"], {
    placement: "top",
    title: "Add me into the comparison list"
  }, isSavedCompare(props.data._id) ? __jsx("a", {
    onClick: () => props.readOnly ? null : setConfirmModalState(true)
  }, props.savedButton ? props.savedButton() : __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Button"], {
    type: "normal",
    style: {
      background: 'rgb(89, 54, 26)',
      padding: 0
    },
    className: "ads-purchase-button w-100"
  }, __jsx("img", {
    src: "/assets/profile/icon-list/carmarket-bar-icon/compare.png",
    alt: "compare"
  }))) : __jsx("a", {
    onClick: () => props.readOnly ? null : pushToList(props.data)
  }, props.saveButton ? props.saveButton() : __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Button"], {
    type: "normal",
    className: "w-100 ads-purchase-button ads-purchase-compare-btn"
  }, __jsx("img", {
    src: "/assets/profile/icon-list/carmarket-bar-icon/compare.png",
    alt: "compare"
  })))));
};

const mapStateToProps = state => ({
  app: state.app,
  user: state.user,
  productsList: state.productsList
});

const mapDispatchToProps = {
  loading: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_8__["loading"],
  setUser: _redux_actions_user_actions__WEBPACK_IMPORTED_MODULE_10__["setUser"],
  removeCompareProductId: _redux_actions_productsList_actions__WEBPACK_IMPORTED_MODULE_9__["removeCompareProductId"],
  patchCompareProductIds: _redux_actions_productsList_actions__WEBPACK_IMPORTED_MODULE_9__["patchCompareProductIds"],
  clearCompareProductIds: _redux_actions_productsList_actions__WEBPACK_IMPORTED_MODULE_9__["clearCompareProductIds"]
};
/* harmony default export */ __webpack_exports__["default"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_5__["connect"])(mapStateToProps, mapDispatchToProps)(_ant_design_compatible__WEBPACK_IMPORTED_MODULE_0__["Form"].create()(Object(next_dist_client_router__WEBPACK_IMPORTED_MODULE_3__["withRouter"])(AddCompareProductButton))));

/***/ }),

/***/ "./components/general/add-compare-product-button1.jsx":
/*!************************************************************!*\
  !*** ./components/general/add-compare-product-button1.jsx ***!
  \************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _ant_design_compatible__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ant-design/compatible */ "@ant-design/compatible");
/* harmony import */ var _ant_design_compatible__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_ant_design_compatible__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! antd */ "antd");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(antd__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var next_dist_client_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/dist/client/router */ "./node_modules/next/dist/client/router.js");
/* harmony import */ var next_dist_client_router__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_dist_client_router__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react-redux */ "react-redux");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _common_function__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../common-function */ "./common-function.js");
/* harmony import */ var _feathers__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../feathers */ "./feathers.js");
/* harmony import */ var _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../redux/actions/app-actions */ "./redux/actions/app-actions.js");
/* harmony import */ var _redux_actions_productsList_actions__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../redux/actions/productsList-actions */ "./redux/actions/productsList-actions.js");
/* harmony import */ var _redux_actions_user_actions__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../redux/actions/user-actions */ "./redux/actions/user-actions.js");
var __jsx = react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement;












const AddCompareProductButton1 = props => {
  const {
    0: confirmModalState,
    1: setConfirmModalState
  } = Object(react__WEBPACK_IMPORTED_MODULE_4__["useState"])(false);
  const {
    0: compareLimit,
    1: setCompareLimit
  } = Object(react__WEBPACK_IMPORTED_MODULE_4__["useState"])(4);
  Object(react__WEBPACK_IMPORTED_MODULE_4__["useEffect"])(() => {
    setCompareLimit(lodash__WEBPACK_IMPORTED_MODULE_2___default.a.isNaN(parseInt(props.productsList.compareLimit)) ? 4 : parseInt(props.productsList.compareLimit));
  }, [props.productsList.compareLimit]);

  function isSavedCompare(id) {
    if (id && Object(_common_function__WEBPACK_IMPORTED_MODULE_6__["notEmptyLength"])(props.productsList.compareIds)) {
      var check = props.productsList.compareIds.filter(function (item) {
        return item == id;
      });
      return check.length > 0;
    } else {
      return false;
    }
  }

  const pushToList = data => {
    if (data._id) {
      if (Object(_common_function__WEBPACK_IMPORTED_MODULE_6__["arrayLengthCount"])(lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(props.productsList, ['compareIds'])) >= compareLimit) {
        antd__WEBPACK_IMPORTED_MODULE_1__["message"].warning(`Maximum ${compareLimit} products in comparison list.`);
        return;
      }

      if (Object(_common_function__WEBPACK_IMPORTED_MODULE_6__["notEmptyLength"])(props.productsList.compareIds)) {
        let ids = [];
        _feathers__WEBPACK_IMPORTED_MODULE_7__["default"].service('product-ads').find({
          query: {
            _id: {
              $in: props.productsList.compareIds
            }
          }
        }).then(res => {
          if (Object(_common_function__WEBPACK_IMPORTED_MODULE_6__["notEmptyLength"])(res.data)) {} else {
            props.clearCompareProductIds();
          }

          ids = lodash__WEBPACK_IMPORTED_MODULE_2___default.a.map(lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(res, ['data']), '_id') || [];
          ids.push(data._id);
          props.patchCompareProductIds(ids);
          antd__WEBPACK_IMPORTED_MODULE_1__["message"].success('Added to comparison list');
        }).catch(err => {// message.error(err.message)
        });
      } else {
        antd__WEBPACK_IMPORTED_MODULE_1__["message"].success('Added to comparison list');
        props.patchCompareProductIds([data._id]);
      }
    } else {
      antd__WEBPACK_IMPORTED_MODULE_1__["message"].error("Product Not Found");
    }
  };

  function removeFromList(data) {
    if (data._id) {
      props.removeCompareProductId(data._id);
      antd__WEBPACK_IMPORTED_MODULE_1__["message"].success('Removed from comparison list');
    }
  }

  return __jsx("span", {
    className: props.className ? props.className : null,
    style: props.style ? props.style : null
  }, __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Modal"], {
    visible: confirmModalState,
    title: "Are you sure?",
    maskClosable: true,
    centered: true,
    onOk: e => {
      removeFromList(props.data);
      setConfirmModalState(false);
    },
    onCancel: e => {
      setConfirmModalState(false);
    }
  }, __jsx("div", null, " Do you want to remove this product from your comparison list? ")), __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Tooltip"], {
    placement: "top",
    title: "Add me into the comparison list"
  }, isSavedCompare(props.data._id) ? __jsx("a", {
    onClick: () => props.readOnly ? null : setConfirmModalState(true)
  }, props.savedButton ? props.savedButton() : __jsx("div", {
    style: {
      background: 'rgb(89, 54, 26)',
      padding: 5,
      textAlign: 'center',
      borderRadius: '4px'
    },
    className: "w-100"
  }, __jsx("img", {
    src: "/assets/profile/icon-list/carmarket-bar-icon/compare.png",
    alt: "compare",
    style: {
      width: '100%'
    }
  }))) : __jsx("a", {
    onClick: () => props.readOnly ? null : pushToList(props.data)
  }, props.saveButton ? props.saveButton() : __jsx("div", {
    style: {
      textAlign: 'center',
      padding: 5,
      borderRadius: '4px'
    },
    className: "w-100 ads-purchase-compare-btn"
  }, __jsx("img", {
    src: "/assets/profile/icon-list/carmarket-bar-icon/compare.png",
    alt: "compare",
    style: {
      width: '100%'
    }
  })))));
};

const mapStateToProps = state => ({
  app: state.app,
  user: state.user,
  productsList: state.productsList
});

const mapDispatchToProps = {
  loading: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_8__["loading"],
  setUser: _redux_actions_user_actions__WEBPACK_IMPORTED_MODULE_10__["setUser"],
  removeCompareProductId: _redux_actions_productsList_actions__WEBPACK_IMPORTED_MODULE_9__["removeCompareProductId"],
  patchCompareProductIds: _redux_actions_productsList_actions__WEBPACK_IMPORTED_MODULE_9__["patchCompareProductIds"],
  clearCompareProductIds: _redux_actions_productsList_actions__WEBPACK_IMPORTED_MODULE_9__["clearCompareProductIds"]
};
/* harmony default export */ __webpack_exports__["default"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_5__["connect"])(mapStateToProps, mapDispatchToProps)(_ant_design_compatible__WEBPACK_IMPORTED_MODULE_0__["Form"].create()(Object(next_dist_client_router__WEBPACK_IMPORTED_MODULE_3__["withRouter"])(AddCompareProductButton1))));

/***/ }),

/***/ "./components/general/calculator-modal.jsx":
/*!*************************************************!*\
  !*** ./components/general/calculator-modal.jsx ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _ant_design_icons__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ant-design/icons */ "@ant-design/icons");
/* harmony import */ var _ant_design_icons__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_ant_design_icons__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! antd */ "antd");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(antd__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react-redux */ "react-redux");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _ant_design_compatible__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @ant-design/compatible */ "@ant-design/compatible");
/* harmony import */ var _ant_design_compatible__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_ant_design_compatible__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var next_dist_client_router__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! next/dist/client/router */ "./node_modules/next/dist/client/router.js");
/* harmony import */ var next_dist_client_router__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(next_dist_client_router__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _common_function__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../common-function */ "./common-function.js");
var __jsx = react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement;








const priceRef = react__WEBPACK_IMPORTED_MODULE_3___default.a.createRef();
const downPaymentRef = react__WEBPACK_IMPORTED_MODULE_3___default.a.createRef();

const CalculatorModal = props => {
  const {
    getFieldDecorator
  } = props.form;
  const {
    0: visible,
    1: setVisible
  } = Object(react__WEBPACK_IMPORTED_MODULE_3__["useState"])(false); // const [calculateFields, setCalculateFields] = useState(
  //     {
  //         price: 0,
  //         downpayment: 0,
  //         interestRate: 0,
  //         loanPeriod: 9,
  //     }
  // );

  const {
    0: monthlyInstalment,
    1: setMonthlyInstallment
  } = Object(react__WEBPACK_IMPORTED_MODULE_3__["useState"])(0);
  const {
    0: timeoutFunction,
    1: setTimeoutFunction
  } = Object(react__WEBPACK_IMPORTED_MODULE_3__["useState"])(null);
  const {
    0: formValue,
    1: setFormValue
  } = Object(react__WEBPACK_IMPORTED_MODULE_3__["useState"])({
    price: 0
  }); // useEffect(() => {
  //     if (notEmptyLength(calculateFields)) {
  //         //Start calculate monthly payment
  //         typingTimeOut();
  //     } else {
  //         setCalculateFields({
  //             price: 0,
  //             downpayment: 0,
  //             interestRate: 0,
  //             loanPeriod: 9,
  //         });
  //     }
  // }, [calculateFields])

  Object(react__WEBPACK_IMPORTED_MODULE_3__["useEffect"])(() => {
    reset();
  }, [props.data]);

  function close(e) {
    setVisible(false);
  }

  function typingTimeOut() {
    clearTimeout(timeoutFunction);
    setTimeoutFunction(setTimeout(() => {
      handleSubmit();
    }, 1000));
  }

  function reset() {
    if (Object(_common_function__WEBPACK_IMPORTED_MODULE_7__["notEmptyLength"])(props.data)) {
      props.form.setFieldsValue({
        price: !lodash__WEBPACK_IMPORTED_MODULE_2___default.a.isNaN(parseFloat(props.data.price)) ? parseFloat(Object(_common_function__WEBPACK_IMPORTED_MODULE_7__["numberToFixed"])(props.data.price, true, 2)) : null,
        downpayment: !lodash__WEBPACK_IMPORTED_MODULE_2___default.a.isNaN(parseFloat(Object(_common_function__WEBPACK_IMPORTED_MODULE_7__["numberToFixed"])(props.data.price * 0.1, true, 2))) && lodash__WEBPACK_IMPORTED_MODULE_2___default.a.isNaN(parseFloat(props.data.downpayment)) ? parseFloat(Object(_common_function__WEBPACK_IMPORTED_MODULE_7__["numberToFixed"])(props.data.price * 0.1, true, 2)) : !lodash__WEBPACK_IMPORTED_MODULE_2___default.a.isNaN(parseFloat(props.data.downpayment)) ? parseFloat(Object(_common_function__WEBPACK_IMPORTED_MODULE_7__["numberToFixed"])(props.data.downpayment, true, 2)) : null,
        loanPeriod: 9,
        interestRate: 3.00
      });
      handleSubmit();
    } else {
      props.form.setFieldsValue({
        price: 0,
        downpayment: 0,
        loanPeriod: 9,
        interestRate: 0.00
      });
      handleSubmit();
    }
  } // function handleOnChange() {
  //     let price = '0';
  //     let downpayment = '0';
  //     let interestRate = '3';
  //     let loanPeriod = '9';
  //     if (props.form.getFieldValue('price')) {
  //         price = props.form.getFieldValue('price').toString();
  //         price = formatNumber(price.replace(',', ''), null, true, 2);
  //     }
  //     if (props.form.getFieldValue('downpayment')) {
  //         downpayment = props.form.getFieldValue('downpayment').toString();
  //         downpayment = formatNumber(downpayment.replace(',', ''), null, true, 2);
  //     }
  //     if (props.form.getFieldValue('interestRate')) {
  //         interestRate = props.form.getFieldValue('interestRate');
  //     }
  //     if (props.form.getFieldValue('loanPeriod')) {
  //         loanPeriod = props.form.getFieldValue('loanPeriod');
  //     }
  //     setCalculateFields({
  //         price: isValidNumber(price.replace(',', '')) ? parseFloat(price.replace(',', '')) : 0,
  //         downpayment: isValidNumber(downpayment.replace(',', '')) ? parseFloat(downpayment.replace(',', '')) : 0,
  //         interestRate: interestRate ? interestRate : 3,
  //         loanPeriod: loanPeriod ? loanPeriod : 9,
  //     });
  // }


  function handleSubmit() {
    props.form.validateFields((err, values) => {
      if (!err) {
        let LoanAmount = parseFloat(values.price) - parseFloat(values.downpayment);
        let LoanPeriod = parseInt(values.loanPeriod);
        let Interest = parseFloat(values.interestRate) / 100;
        let totalInterest = Interest * LoanAmount * LoanPeriod;
        let monthlyInterest = totalInterest / (LoanPeriod * 12);
        let monthlyInstalment = Object(_common_function__WEBPACK_IMPORTED_MODULE_7__["numberToFixed"])((LoanAmount + totalInterest) / (LoanPeriod * 12), true, 2); //Rounding fields to 2 decimal point

        props.form.setFieldsValue({
          price: !lodash__WEBPACK_IMPORTED_MODULE_2___default.a.isNaN(parseFloat(values.price)) ? parseFloat(Object(_common_function__WEBPACK_IMPORTED_MODULE_7__["numberToFixed"])(values.price, true, 2)) : null,
          downpayment: !lodash__WEBPACK_IMPORTED_MODULE_2___default.a.isNaN(parseFloat(Object(_common_function__WEBPACK_IMPORTED_MODULE_7__["numberToFixed"])(values.price * 0.1, true, 2))) && lodash__WEBPACK_IMPORTED_MODULE_2___default.a.isNaN(parseFloat(values.downpayment)) ? parseFloat(Object(_common_function__WEBPACK_IMPORTED_MODULE_7__["numberToFixed"])(values.price * 0.1, true, 2)) : !lodash__WEBPACK_IMPORTED_MODULE_2___default.a.isNaN(parseFloat(values.downpayment)) ? parseFloat(Object(_common_function__WEBPACK_IMPORTED_MODULE_7__["numberToFixed"])(values.downpayment, true, 2)) : null,
          interestRate: !lodash__WEBPACK_IMPORTED_MODULE_2___default.a.isNaN(parseFloat(values.interestRate)) ? parseFloat(Object(_common_function__WEBPACK_IMPORTED_MODULE_7__["numberToFixed"])(values.interestRate, true, 2)) : null
        });
        setMonthlyInstallment(monthlyInstalment);
      } else {
        setMonthlyInstallment('N/A'); // _.map(err, function (err) {
        //     return message.error(err.errors[0].message)
        // })
      }
    });
  }

  return __jsx(react__WEBPACK_IMPORTED_MODULE_3___default.a.Fragment, null, __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Modal"], {
    visible: visible,
    centered: true,
    title: "Car Loan Calculator",
    maskClosable: true,
    closable: true,
    footer: null,
    onCancel: close,
    width: "350px" // wrapClassName="md-padding-modal-body"

  }, __jsx(_ant_design_compatible__WEBPACK_IMPORTED_MODULE_5__["Form"], {
    name: "basic"
  }, __jsx(_ant_design_compatible__WEBPACK_IMPORTED_MODULE_5__["Form"].Item, {
    style: {
      margin: '0px 5px'
    }
  }, __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Row"], {
    align: "middle",
    gutter: [10, 0]
  }, __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Col"], {
    xs: 24,
    sm: 24,
    md: 24,
    lg: 24,
    xl: 24
  }, __jsx("span", {
    className: "caption flex-items-align-center",
    style: {
      maxHeight: '30px'
    }
  }, "Loan Amount")), __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Col"], {
    xs: 22,
    sm: 22,
    md: 22,
    lg: 22,
    xl: 22
  }, getFieldDecorator('price', {
    rules: [{
      required: false
    }]
  })(__jsx(antd__WEBPACK_IMPORTED_MODULE_1__["InputNumber"], {
    ref: priceRef,
    placeholder: "Total Price (RM)",
    formatter: value => {
      if (!value && priceRef.current) {
        priceRef.current.focus();
      }

      return `RM ${value}`.replace(/\B(?=(\d{3})+(?!\d))/g, ',');
    },
    parser: value => value.replace(/\RM\s?|(,*)/g, ''),
    onChange: typingTimeOut,
    step: "0.01",
    className: "width-100"
  }))), props.form.getFieldValue('price') ? __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Col"], {
    span: 2
  }, __jsx("div", {
    className: "fill-parent flex-justify-center flex-items-align-center"
  }, __jsx(_ant_design_icons__WEBPACK_IMPORTED_MODULE_0__["CloseOutlined"], {
    key: "price-close",
    onClick: () => {
      props.form.setFieldsValue({
        price: 0
      });
      handleSubmit();
    }
  }))) : __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Col"], {
    span: 2
  }, __jsx("div", {
    className: "fill-parent flex-justify-center flex-items-align-center"
  }, __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Tooltip"], {
    placement: "topLeft",
    title: "The vehicle selling price."
  }, __jsx(_ant_design_icons__WEBPACK_IMPORTED_MODULE_0__["InfoCircleOutlined"], {
    key: "downpayment-info",
    className: "ccar-yellow"
  })))))), __jsx(_ant_design_compatible__WEBPACK_IMPORTED_MODULE_5__["Form"].Item, {
    style: {
      margin: '0px 5px'
    }
  }, __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Row"], {
    align: "middle",
    gutter: [10, 0]
  }, __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Col"], {
    xs: 24,
    sm: 24,
    md: 24,
    lg: 24,
    xl: 24
  }, __jsx("span", {
    className: "caption flex-items-align-center",
    style: {
      maxHeight: '30px'
    }
  }, "Down Payment")), __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Col"], {
    span: props.form.getFieldValue('downpayment') ? 22 : 22
  }, getFieldDecorator('downpayment', {
    rules: [{
      required: false
    }]
  })(__jsx(antd__WEBPACK_IMPORTED_MODULE_1__["InputNumber"], {
    ref: downPaymentRef,
    placeholder: "Downpayment (RM)",
    formatter: value => {
      if (!value && downPaymentRef.current) {
        downPaymentRef.current.focus();
      }

      return `RM ${value}`.replace(/\B(?=(\d{3})+(?!\d))/g, ',');
    },
    parser: value => value.replace(/\RM\s?|(,*)/g, ''),
    onChange: typingTimeOut,
    step: "0.01",
    className: "width-100 no-margin"
  }))), props.form.getFieldValue('downpayment') ? __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Col"], {
    span: 2
  }, __jsx("div", {
    className: "fill-pareont flex-justify-center flex-items-align-center"
  }, __jsx(_ant_design_icons__WEBPACK_IMPORTED_MODULE_0__["CloseOutlined"], {
    key: "dwnpayment-close",
    onClick: () => {
      props.form.setFieldsValue({
        downpayment: undefined
      });
      handleSubmit();
    }
  }))) : __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Col"], {
    span: 2
  }, __jsx("div", {
    className: "fill-parent flex-justify-center flex-items-align-center"
  }, __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Tooltip"], {
    placement: "topLeft",
    title: "The amount of money you need to pay by your own. Default rate of downpayment is 10%.(This cost is not covered by the loan that take from a bank)."
  }, __jsx(_ant_design_icons__WEBPACK_IMPORTED_MODULE_0__["InfoCircleOutlined"], {
    key: "downpayment-info",
    className: "ccar-yellow"
  })))))), __jsx(_ant_design_compatible__WEBPACK_IMPORTED_MODULE_5__["Form"].Item, {
    style: {
      margin: '0px 5px'
    }
  }, __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Row"], {
    align: "middle",
    gutter: [10, 0]
  }, __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Col"], {
    xs: 24,
    sm: 24,
    md: 24,
    lg: 24,
    xl: 24
  }, __jsx("span", {
    className: "caption flex-items-align-center",
    style: {
      maxHeight: '30px'
    }
  }, "Loan Period")), __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Col"], {
    span: props.form.getFieldValue('loanPeriod') ? 22 : 22
  }, getFieldDecorator('loanPeriod', {
    rules: [{
      required: false
    }]
  })(__jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Select"], {
    className: "width-100",
    placeholder: "Loan Period (Year)",
    onChange: typingTimeOut
  }, __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Select"].Option, {
    value: 5
  }, "5 Years"), __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Select"].Option, {
    value: 7
  }, "7 Years"), __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Select"].Option, {
    value: 9
  }, "9 Years")))), props.form.getFieldValue('loanPeriod') ? __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Col"], {
    span: 2
  }, __jsx("div", {
    className: "fill-parent flex-justify-center flex-items-align-center"
  }, __jsx(_ant_design_icons__WEBPACK_IMPORTED_MODULE_0__["CloseOutlined"], {
    key: "loanPeriod-close",
    onClick: () => {
      props.form.setFieldsValue({
        loanPeriod: undefined
      });
      handleSubmit();
    }
  }))) : __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Col"], {
    span: 2
  }, __jsx("div", {
    className: "fill-parent flex-justify-center flex-items-align-center"
  }, __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Tooltip"], {
    placement: "topLeft",
    title: "The period (in years) for paying off the bank loan."
  }, __jsx(_ant_design_icons__WEBPACK_IMPORTED_MODULE_0__["InfoCircleOutlined"], {
    key: "loanPeriod-info",
    className: "ccar-yellow"
  })))))), __jsx(_ant_design_compatible__WEBPACK_IMPORTED_MODULE_5__["Form"].Item, {
    style: {
      margin: '0px 5px'
    }
  }, __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Row"], {
    align: "middle",
    gutter: [10, 0]
  }, __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Col"], {
    xs: 24,
    sm: 24,
    md: 24,
    lg: 24,
    xl: 24
  }, __jsx("span", {
    className: "caption flex-items-align-center",
    style: {
      maxHeight: '30px'
    }
  }, "Interest Rate")), __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Col"], {
    span: props.form.getFieldValue('interestRate') ? 22 : 22
  }, getFieldDecorator('interestRate', {
    rules: [{
      required: false
    }]
  })(__jsx(antd__WEBPACK_IMPORTED_MODULE_1__["InputNumber"], {
    placeholder: "Interest Rate (%)",
    formatter: value => `${value}%`,
    parser: value => value.replace('%', ''),
    onChange: typingTimeOut,
    step: "0.01",
    className: "width-100"
  }))), props.form.getFieldValue('interestRate') ? __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Col"], {
    span: 2
  }, __jsx("div", {
    className: "fill-parent flex-justify-center flex-items-align-center"
  }, __jsx(_ant_design_icons__WEBPACK_IMPORTED_MODULE_0__["CloseOutlined"], {
    key: "interestRate-close",
    onClick: () => {
      props.form.setFieldsValue({
        interestRate: undefined
      });
      handleSubmit();
    }
  }))) : __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Col"], {
    span: 2
  }, __jsx("div", {
    className: "fill-parent flex-justify-center flex-items-align-center"
  }, __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Tooltip"], {
    placement: "topLeft",
    title: "The loan interest rate charged by your bank."
  }, __jsx(_ant_design_icons__WEBPACK_IMPORTED_MODULE_0__["InfoCircleOutlined"], {
    key: "interestRate-info",
    className: "ccar-yellow"
  })))))), __jsx("div", {
    className: "round-border text-align-center border-yellow-darken-1 margin-top-md"
  }, __jsx("div", {
    style: {
      fontWeight: 600,
      fontSize: 16,
      marginBottom: 2
    }
  }, " Monthly Pay"), __jsx("div", {
    style: {
      fontWeight: 700,
      color: 'rgb(251, 176, 64)',
      fontSize: 18,
      padding: 0
    }
  }, " RM ", Object(_common_function__WEBPACK_IMPORTED_MODULE_7__["formatNumber"])(monthlyInstalment, null, null, 2), " ")))), __jsx("a", {
    onClick: e => {
      setVisible(true);
      reset();
    }
  }, props.button ? props.button() : // <Tooltip placement="top" title={`Calculate my monthly payment`}>
  //     <Button style={{ paddingLeft: '9px', paddingRight: '9px' }} >
  //         <div className='fill-parent flex-items-align-center' >
  //             <Icon type="calculator" className='ccar-yellow cursor-pointer' style={{ fontSize: '20px' }}/>
  //         </div>
  //     </Button>
  __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Button"], {
    type: "normal",
    className: "w-100 ads-purchase-button ",
    style: {
      padding: 0
    }
  }, __jsx("img", {
    src: "/assets/profile/icon-list/calculator.png",
    style: {
      width: '19px'
    }
  })) // </Tooltip>
  ));
};

const mapStateToProps = state => ({
  app: state.app,
  user: state.user
});

const mapDispatchToProps = {};
/* harmony default export */ __webpack_exports__["default"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_4__["connect"])(mapStateToProps, mapDispatchToProps)(_ant_design_compatible__WEBPACK_IMPORTED_MODULE_5__["Form"].create()(Object(next_dist_client_router__WEBPACK_IMPORTED_MODULE_6__["withRouter"])(CalculatorModal))));

/***/ }),

/***/ "./components/general/car-360-view-button.jsx":
/*!****************************************************!*\
  !*** ./components/general/car-360-view-button.jsx ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! antd */ "antd");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(antd__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-redux */ "react-redux");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var next_dist_client_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/dist/client/router */ "./node_modules/next/dist/client/router.js");
/* harmony import */ var next_dist_client_router__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_dist_client_router__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _ant_design_compatible__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ant-design/compatible */ "@ant-design/compatible");
/* harmony import */ var _ant_design_compatible__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_ant_design_compatible__WEBPACK_IMPORTED_MODULE_4__);
var __jsx = react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement;




 // const urlPrefix = 'https://uat2-api.ccar.my/360View/';

const urlPrefix = 'https://api.ccar.my/360view/';

const Car360ViewButton = props => {
  return __jsx(react__WEBPACK_IMPORTED_MODULE_1___default.a.Fragment, null, __jsx("a", {
    target: `${props.id ? '_blank' : ''}`,
    href: props.id ? `${urlPrefix}${props.id}` : null,
    className: `width-100`
  }, props.children ? props.children : __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Tooltip"], {
    title: "360\xB0 View"
  }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Button"], {
    type: "normal",
    className: "w-100 ads-purchase-button",
    style: {
      padding: 0,
      background: 'rgb(237, 236, 234)',
      borderColor: 'rgb(237, 236, 234)'
    }
  }, __jsx("img", {
    src: "/assets/profile/icon-list/carmarket-bar-icon/360.png"
  })))));
};

const mapStateToProps = state => ({
  app: state.app,
  user: state.user
});

const mapDispatchToProps = {};
/* harmony default export */ __webpack_exports__["default"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_2__["connect"])(mapStateToProps, mapDispatchToProps)(_ant_design_compatible__WEBPACK_IMPORTED_MODULE_4__["Form"].create()(Object(next_dist_client_router__WEBPACK_IMPORTED_MODULE_3__["withRouter"])(Car360ViewButton))));

/***/ }),

/***/ "./components/general/contactList.jsx":
/*!********************************************!*\
  !*** ./components/general/contactList.jsx ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! antd */ "antd");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(antd__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-redux */ "react-redux");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _params_stateList__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../params/stateList */ "./params/stateList.js");
/* harmony import */ var _ant_design_compatible__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @ant-design/compatible */ "@ant-design/compatible");
/* harmony import */ var _ant_design_compatible__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_ant_design_compatible__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _common_function__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../common-function */ "./common-function.js");
/* harmony import */ var _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../redux/actions/app-actions */ "./redux/actions/app-actions.js");
var __jsx = react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement;









const ContactList = props => {
  const {
    0: visible,
    1: setVisible
  } = Object(react__WEBPACK_IMPORTED_MODULE_2__["useState"])(false);
  let contactList = [];
  let hideContactName = 'show';

  try {
    contactList = props.contactPerson.contactList;
  } catch (err) {
    contactList = [];
  }

  if (!contactList) {
    contactList = [];
  }

  try {
    hideContactName = props.contactPerson.hideContactName;
  } catch (err) {
    hideContactName = 'show';
  }

  return __jsx("span", {
    className: props.className ? props.className : null,
    style: props.style ? props.style : null
  }, __jsx("a", {
    onClick: () => {
      setVisible(true);
    }
  }, props.button ? props.button() : // <Tooltip placement="top" title={`Call`}>
  __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Button"], {
    type: "normal",
    className: "w-100 ads-purchase-button",
    style: {
      padding: 0,
      background: '#25D366',
      borderColor: '#25D366'
    }
  }, __jsx("img", {
    src: "/assets/profile/icon-list/carmarket-bar-icon/call.png",
    style: {
      width: '17px'
    }
  })) // </Tooltip>
  ), __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Modal"], {
    title: "Contact Seller",
    visible: visible,
    onCancel: () => setVisible(false),
    footer: null
  }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Row"], {
    type: "flex",
    align: "middle"
  }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
    span: 18
  }, __jsx("h3", null, props.companys ? props.companys.name : ''), __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Row"], {
    type: "flex",
    align: "middle",
    gutter: [10, 10]
  }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
    xs: 4,
    sm: 4,
    md: 2,
    lg: 2,
    xl: 2
  }, __jsx("div", {
    className: "fill-parent  ",
    style: {
      height: '20px'
    }
  }, __jsx("img", {
    src: "/assets/carDetails/Location@3x.png",
    className: "absolute-center width-100 "
  }))), __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
    xs: 6,
    sm: 6,
    md: 4,
    lg: 4,
    xl: 4
  }, __jsx("div", {
    className: "fill-parent  ",
    style: {
      height: '50px'
    }
  }, __jsx("img", {
    src: Object(_params_stateList__WEBPACK_IMPORTED_MODULE_4__["getStateIcon"])(props.companys ? props.companys.state ? props.companys.state : null : null),
    style: {
      height: '50%'
    },
    className: "absolute-center width-100 "
  }))), __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
    xs: 24,
    sm: 24,
    md: 18,
    lg: 18,
    xl: 18
  }, __jsx("div", {
    className: "flex-items-align-center flex-justify-start flex-wrap fill-parent"
  }, __jsx("span", {
    className: "headline   text-align-left padding-x-sm"
  }, '>'), __jsx("span", {
    className: "headline   text-align-left padding-x-sm"
  }, props.companys ? props.companys.area : ''))))), __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
    span: 6
  }, __jsx("div", {
    className: "w-100 relative-wrapper"
  }, __jsx("img", {
    src: "/assets/Ccar-logo.png",
    className: "absolute-center",
    style: {
      width: 70,
      height: 70
    }
  })))), __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Divider"], {
    orientation: "left",
    style: {
      fontWeight: 'normal',
      margin: '5px 0px'
    }
  }), contactList.length === 0 ? __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Row"], {
    type: "flex",
    align: "middle",
    justify: "space-between",
    gutter: [10, 10]
  }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
    xs: 24,
    sm: 24,
    md: 16,
    lg: 16,
    xl: 16
  }, __jsx("div", {
    className: "flex-items-align-center flex-justify-start flex-wrap"
  }, __jsx("span", {
    className: "headline   text-truncate padding-xs text-align-left"
  }, `${lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(props.contactPerson, ['namePrefix']) || ''} ${lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(props.contactPerson, ['firstName']) || ''} ${lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(props.contactPerson, ['lastName']) || ''}`), __jsx("span", {
    className: "headline   text-truncate padding-xs"
  }, '|'), __jsx("span", {
    className: "headline   text-truncate padding-xs"
  }, // `${_.get(props.contactPerson, ['contactNoPrimary']) || ''}`
  `${lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(props.contactPerson, ['contactNoPrimary']) || ''}`)))) : !Object(_common_function__WEBPACK_IMPORTED_MODULE_6__["notEmptyLength"])(props.contactPerson) || !Object(_common_function__WEBPACK_IMPORTED_MODULE_6__["notEmptyLength"])(props.contactPerson.contactList) ? null : props.contactPerson.contactList.sort(() => 0.5 - Math.random()).map((v, id) => {
    let contactName = __jsx(react__WEBPACK_IMPORTED_MODULE_2___default.a.Fragment, null);

    if (hideContactName === 'show') {
      contactName = __jsx(react__WEBPACK_IMPORTED_MODULE_2___default.a.Fragment, null, lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(v, ['contactNamePrefix']) || '', lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(v, ['contactFirstName']) || '', " ", lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(v, ['contactLastName']) || '', __jsx("span", {
        className: "headline   text-truncate padding-xs"
      }, '|'));
    }

    return __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Row"], {
      key: 'contact' + id,
      type: "flex",
      align: "middle",
      justify: "space-between",
      gutter: [10, 10]
    }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
      span: 16
    }, __jsx("div", {
      className: "flex-items-align-center flex-justify-start flex-wrap"
    }, __jsx("span", {
      className: "headline   text-truncate padding-xs text-align-left"
    }, // `${_.get(v, ['contactNamePrefix']) || ''} ${_.get(v, ['contactFirstName']) || ''} ${_.get(v, ['contactLastName']) || ''}`
    contactName), __jsx("span", {
      className: "headline   text-truncate padding-xs"
    }, // `${_.get(v, ['contactNoPrefix']) || ''} ${_.get(v, ['contactNo']) || ''} ${_.get(v, ['contactLastName']) || ''}`
    `${lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(v, ['contactNoPrefix']) || ''} ${lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(v, ['contactNo']) || ''}`))));
  })));
};

const mapStateToProps = state => ({
  app: state.app
});

const mapDispatchToProps = {
  showContactList: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_7__["showContactList"]
};
/* harmony default export */ __webpack_exports__["default"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_3__["connect"])(mapStateToProps, mapDispatchToProps)(_ant_design_compatible__WEBPACK_IMPORTED_MODULE_5__["Form"].create()(ContactList)));

/***/ }),

/***/ "./components/general/contactList1.jsx":
/*!*********************************************!*\
  !*** ./components/general/contactList1.jsx ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! antd */ "antd");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(antd__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-redux */ "react-redux");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _params_stateList__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../params/stateList */ "./params/stateList.js");
/* harmony import */ var _ant_design_compatible__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @ant-design/compatible */ "@ant-design/compatible");
/* harmony import */ var _ant_design_compatible__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_ant_design_compatible__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _common_function__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../common-function */ "./common-function.js");
/* harmony import */ var _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../redux/actions/app-actions */ "./redux/actions/app-actions.js");
var __jsx = react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement;









const ContactList1 = props => {
  const {
    0: visible,
    1: setVisible
  } = Object(react__WEBPACK_IMPORTED_MODULE_2__["useState"])(false);
  let contactList = [];
  let hideContactName = 'show';

  try {
    contactList = props.contactPerson.contactList;
  } catch (err) {
    contactList = [];
  }

  if (!contactList) {
    contactList = [];
  }

  try {
    hideContactName = props.contactPerson.hideContactName;
  } catch (err) {
    hideContactName = 'show';
  }

  return __jsx("span", {
    className: props.className ? props.className : null,
    style: props.style ? props.style : null
  }, __jsx("a", {
    onClick: () => {
      setVisible(true);
    }
  }, props.button ? props.button() : // <Button type="normal" className="w-100 ads-purchase-button" style={{ padding: 0, background: '#25D366', borderColor: '#25D366' }}><img src="/assets/profile/icon-list/carmarket-bar-icon/call.png" style={{width:'17px'}} /></Button>
  __jsx("div", {
    style: {
      padding: 5,
      background: '#25D366',
      borderColor: '#25D366',
      textAlign: 'center',
      borderRadius: '4px'
    }
  }, __jsx("img", {
    src: "/assets/profile/icon-list/carmarket-bar-icon/call.png",
    style: {
      width: '80%'
    }
  }))), __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Modal"], {
    title: "Contact Seller",
    visible: visible,
    onCancel: () => setVisible(false),
    footer: null
  }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Row"], {
    type: "flex",
    align: "middle"
  }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
    span: 18
  }, __jsx("h3", null, props.companys ? props.companys.name : ''), __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Row"], {
    type: "flex",
    align: "middle",
    gutter: [10, 10]
  }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
    xs: 4,
    sm: 4,
    md: 2,
    lg: 2,
    xl: 2
  }, __jsx("div", {
    className: "fill-parent  ",
    style: {
      height: '20px'
    }
  }, __jsx("img", {
    src: "/assets/carDetails/Location@3x.png",
    className: "absolute-center width-100 "
  }))), __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
    xs: 6,
    sm: 6,
    md: 4,
    lg: 4,
    xl: 4
  }, __jsx("div", {
    className: "fill-parent  ",
    style: {
      height: '50px'
    }
  }, __jsx("img", {
    src: Object(_params_stateList__WEBPACK_IMPORTED_MODULE_4__["getStateIcon"])(props.companys ? props.companys.state ? props.companys.state : null : null),
    style: {
      height: '50%'
    },
    className: "absolute-center width-100 "
  }))), __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
    xs: 24,
    sm: 24,
    md: 18,
    lg: 18,
    xl: 18
  }, __jsx("div", {
    className: "flex-items-align-center flex-justify-start flex-wrap fill-parent"
  }, __jsx("span", {
    className: "headline   text-align-left padding-x-sm"
  }, '>'), __jsx("span", {
    className: "headline   text-align-left padding-x-sm"
  }, props.companys ? props.companys.area : ''))))), __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
    span: 6
  }, __jsx("div", {
    className: "w-100 relative-wrapper"
  }, __jsx("img", {
    src: "/assets/Ccar-logo.png",
    className: "absolute-center",
    style: {
      width: 70,
      height: 70
    }
  })))), __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Divider"], {
    orientation: "left",
    style: {
      fontWeight: 'normal',
      margin: '5px 0px'
    }
  }), contactList.length === 0 ? __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Row"], {
    type: "flex",
    align: "middle",
    justify: "space-between",
    gutter: [10, 10]
  }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
    xs: 24,
    sm: 24,
    md: 16,
    lg: 16,
    xl: 16
  }, __jsx("div", {
    className: "flex-items-align-center flex-justify-start flex-wrap"
  }, __jsx("span", {
    className: "headline   text-truncate padding-xs text-align-left"
  }, `${lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(props.contactPerson, ['namePrefix']) || ''} ${lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(props.contactPerson, ['firstName']) || ''} ${lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(props.contactPerson, ['lastName']) || ''}`), __jsx("span", {
    className: "headline   text-truncate padding-xs"
  }, '|'), __jsx("span", {
    className: "headline   text-truncate padding-xs"
  }, // `${_.get(props.contactPerson, ['contactNoPrimary']) || ''}`
  `${lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(props.contactPerson, ['contactNoPrimary']) || ''}`)))) : !Object(_common_function__WEBPACK_IMPORTED_MODULE_6__["notEmptyLength"])(props.contactPerson) || !Object(_common_function__WEBPACK_IMPORTED_MODULE_6__["notEmptyLength"])(props.contactPerson.contactList) ? null : props.contactPerson.contactList.sort(() => 0.5 - Math.random()).map((v, id) => {
    let contactName = __jsx(react__WEBPACK_IMPORTED_MODULE_2___default.a.Fragment, null);

    if (hideContactName === 'show') {
      contactName = __jsx(react__WEBPACK_IMPORTED_MODULE_2___default.a.Fragment, null, lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(v, ['contactNamePrefix']) || '', lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(v, ['contactFirstName']) || '', " ", lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(v, ['contactLastName']) || '', __jsx("span", {
        className: "headline   text-truncate padding-xs"
      }, '|'));
    }

    return __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Row"], {
      key: 'contact' + id,
      type: "flex",
      align: "middle",
      justify: "space-between",
      gutter: [10, 10]
    }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
      span: 16
    }, __jsx("div", {
      className: "flex-items-align-center flex-justify-start flex-wrap"
    }, __jsx("span", {
      className: "headline   text-truncate padding-xs text-align-left"
    }, // `${_.get(v, ['contactNamePrefix']) || ''} ${_.get(v, ['contactFirstName']) || ''} ${_.get(v, ['contactLastName']) || ''}`
    contactName), __jsx("span", {
      className: "headline   text-truncate padding-xs"
    }, // `${_.get(v, ['contactNoPrefix']) || ''} ${_.get(v, ['contactNo']) || ''} ${_.get(v, ['contactLastName']) || ''}`
    `${lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(v, ['contactNoPrefix']) || ''} ${lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(v, ['contactNo']) || ''}`))));
  })));
};

const mapStateToProps = state => ({
  app: state.app
});

const mapDispatchToProps = {
  showContactList: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_7__["showContactList"]
};
/* harmony default export */ __webpack_exports__["default"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_3__["connect"])(mapStateToProps, mapDispatchToProps)(_ant_design_compatible__WEBPACK_IMPORTED_MODULE_5__["Form"].create()(ContactList1)));

/***/ }),

/***/ "./components/general/global-search-bar.jsx":
/*!**************************************************!*\
  !*** ./components/general/global-search-bar.jsx ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _ant_design_icons__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ant-design/icons */ "@ant-design/icons");
/* harmony import */ var _ant_design_icons__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_ant_design_icons__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! antd */ "antd");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(antd__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! axios */ "axios");
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var react_highlight_words__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react-highlight-words */ "react-highlight-words");
/* harmony import */ var react_highlight_words__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(react_highlight_words__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! react-redux */ "react-redux");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var react_responsive__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! react-responsive */ "react-responsive");
/* harmony import */ var react_responsive__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(react_responsive__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! uuid */ "uuid");
/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(uuid__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var _feathers__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../feathers */ "./feathers.js");
/* harmony import */ var _carFreak_config__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../carFreak/config */ "./components/carFreak/config.js");
/* harmony import */ var _common_function__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../common-function */ "./common-function.js");
/* harmony import */ var _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../redux/actions/app-actions */ "./redux/actions/app-actions.js");
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! next/router */ "next/router");
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_13__);
var __jsx = react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement;















const Desktop = ({
  children
}) => {
  const isDesktop = Object(react_responsive__WEBPACK_IMPORTED_MODULE_7__["useMediaQuery"])({
    minWidth: 992
  });
  return isDesktop ? children : null;
};

const Tablet = ({
  children
}) => {
  const isTablet = Object(react_responsive__WEBPACK_IMPORTED_MODULE_7__["useMediaQuery"])({
    minWidth: 768,
    maxWidth: 991
  });
  return isTablet ? children : null;
};

const Mobile = ({
  children
}) => {
  const isMobile = Object(react_responsive__WEBPACK_IMPORTED_MODULE_7__["useMediaQuery"])({
    maxWidth: 767
  });
  return isMobile ? children : null;
};

const Default = ({
  children
}) => {
  const isNotMobile = Object(react_responsive__WEBPACK_IMPORTED_MODULE_7__["useMediaQuery"])({
    minWidth: 768
  });
  return isNotMobile ? children : null;
};

const {
  Option,
  OptGroup
} = antd__WEBPACK_IMPORTED_MODULE_1__["AutoComplete"];
const WORD_LENGTH_TO_START_SEARCH = 2;
const searchBarRef = react__WEBPACK_IMPORTED_MODULE_4___default.a.createRef();
const SEARCH_SECTIONS = [// {
//     value: 'carFreak',
//     text: 'CarFreaks'
// },
{
  value: 'socialBoard',
  text: 'Social Board'
}, {
  value: 'dealerWithAds',
  text: 'Dealer'
}, {
  value: 'people',
  text: 'User'
}, {
  value: 'dealer',
  text: 'Dealer'
}, {
  value: 'productAds',
  text: 'CarMarket'
}, {
  value: 'carspec',
  text: 'All-NewCar'
}];

const GlobalSearchBar = props => {
  const {
    0: searchValue,
    1: setSearchValue
  } = Object(react__WEBPACK_IMPORTED_MODULE_4__["useState"])(null);
  const {
    0: searchWords,
    1: setSearchWords
  } = Object(react__WEBPACK_IMPORTED_MODULE_4__["useState"])([]);
  const {
    0: dataSource,
    1: setDataSource
  } = Object(react__WEBPACK_IMPORTED_MODULE_4__["useState"])([]);
  const {
    0: typingTimeout,
    1: setTypingTimeout
  } = Object(react__WEBPACK_IMPORTED_MODULE_4__["useState"])();
  const {
    0: searchType,
    1: setSearchType
  } = Object(react__WEBPACK_IMPORTED_MODULE_4__["useState"])();
  const {
    0: searchTypes,
    1: setSearchTypes
  } = Object(react__WEBPACK_IMPORTED_MODULE_4__["useState"])();
  const {
    0: isEmptyDataSource,
    1: setIsEmptyDataSource
  } = Object(react__WEBPACK_IMPORTED_MODULE_4__["useState"])(true);
  const {
    0: isFocused,
    1: setIsFocused
  } = Object(react__WEBPACK_IMPORTED_MODULE_4__["useState"])(false);
  Object(react__WEBPACK_IMPORTED_MODULE_4__["useEffect"])(() => {
    if (props.searchTypes == 'all' || !props.searchTypes) {
      setSearchTypes(SEARCH_SECTIONS);
    } else {
      let availableSections = lodash__WEBPACK_IMPORTED_MODULE_3___default.a.compact(lodash__WEBPACK_IMPORTED_MODULE_3___default.a.map(props.searchTypes, function (item) {
        let selectedSection = lodash__WEBPACK_IMPORTED_MODULE_3___default.a.find(SEARCH_SECTIONS, function (section) {
          return lodash__WEBPACK_IMPORTED_MODULE_3___default.a.isPlainObject(item) && !lodash__WEBPACK_IMPORTED_MODULE_3___default.a.isEmpty(item) ? lodash__WEBPACK_IMPORTED_MODULE_3___default.a.toLower(item.value) == lodash__WEBPACK_IMPORTED_MODULE_3___default.a.toLower(section.value) : lodash__WEBPACK_IMPORTED_MODULE_3___default.a.toLower(item) == lodash__WEBPACK_IMPORTED_MODULE_3___default.a.toLower(section.value);
        });

        if (!selectedSection) {
          return null;
        }

        return lodash__WEBPACK_IMPORTED_MODULE_3___default.a.isPlainObject(item) && !lodash__WEBPACK_IMPORTED_MODULE_3___default.a.isEmpty(item) && lodash__WEBPACK_IMPORTED_MODULE_3___default.a.get(item, ['text']) ? item : selectedSection;
      }));

      setSearchTypes(availableSections || []);
    }
  }, [props.searchTypes]);

  function handleSearch(value) {
    // value = value.replace(/[\W_]/g, "");
    // value = value.replace(/[^a-zA-Z ]/g, "");
    setDataSource([]);
    setIsEmptyDataSource(true);

    if (!value || value.length < WORD_LENGTH_TO_START_SEARCH) {
      setSearchWords([]);
    } else {
      clearTimeout(typingTimeout);
      setTypingTimeout(setTimeout(() => {
        axios__WEBPACK_IMPORTED_MODULE_2___default.a.post(`${_feathers__WEBPACK_IMPORTED_MODULE_9__["default"].io.io.uri}globalSearch`, {
          params: {
            keywords: value.trim(),
            filterType: lodash__WEBPACK_IMPORTED_MODULE_3___default.a.map(searchTypes, 'value')
          }
        }).then(res => {
          let dataSource = [];

          lodash__WEBPACK_IMPORTED_MODULE_3___default.a.forEach(searchTypes, function (v) {
            if (lodash__WEBPACK_IMPORTED_MODULE_3___default.a.isArray(lodash__WEBPACK_IMPORTED_MODULE_3___default.a.get(res, ['data', 'result', v.value, 'data'])) && !lodash__WEBPACK_IMPORTED_MODULE_3___default.a.isEmpty(lodash__WEBPACK_IMPORTED_MODULE_3___default.a.get(res, ['data', 'result', v.value, 'data']))) {
              setIsEmptyDataSource(false);
            }

            dataSource.push({
              title: v.text,
              children: lodash__WEBPACK_IMPORTED_MODULE_3___default.a.get(res, ['data', 'result', v.value, 'data']) || [],
              total: lodash__WEBPACK_IMPORTED_MODULE_3___default.a.get(res, ['data', 'result', v.value, 'total']) || 0,
              value: v.value
            });
          });

          setDataSource(dataSource);
          setSearchWords(Object(_common_function__WEBPACK_IMPORTED_MODULE_11__["notEmptyLength"])(value.split(' ')) ? value.split(' ') : []);
          setTypingTimeout();
        }).catch(err => {
          antd__WEBPACK_IMPORTED_MODULE_1__["message"].error(err.message);
        });
      }, 700));
    }
  }

  ;

  const renderTitle = (title, total) => {
    return __jsx("span", null, title, __jsx("a", {
      href: "#",
      style: {
        float: 'right'
      }
    }, "Total: ", total));
  };

  const restructData = data => {
    let base = [__jsx(Option, {
      disabled: true,
      key: "all",
      className: "show-all"
    }, __jsx(Desktop, null, __jsx("p", null, "Search Car/Dealer Name")), __jsx(Tablet, null, __jsx("p", null, "Search Car/Dealer Name")), __jsx(Mobile, null, __jsx("p", null, "Car/Dealer Name")))];

    if (Object(_common_function__WEBPACK_IMPORTED_MODULE_11__["notEmptyLength"])(data)) {
      let list = data.map(group => {
        switch (lodash__WEBPACK_IMPORTED_MODULE_3___default.a.get(group, ['value'])) {
          // case 'carFreak':
          //     return (
          //         <OptGroup key={group.title} label={renderTitle(group.title, group.total)}>
          //             {
          //                 _.isArray(_.get(group, ['children'])) && !_.isEmpty(_.get(group, ['children'])) ?
          //                     group.children.map((opt, index) => (
          //                         <Option key={`${group.title}-${index}`} value={parseTagStringToPlainString(`${opt.title || ''} | ${opt.content || ''}`)} onClick={() => {
          //                             if (_.isPlainObject(opt)) {
          //                                 if (opt._id) {
          //                                     props.router.push('/car-freaks/' + opt._id);
          //                                 }
          //                             }
          //                         }}>
          //                             <Highlighter
          //                                 style={{ padding: '0px 10px' }}
          //                                 highlightStyle={{ color: '#ffc069', padding: 0 }}
          //                                 textToHighlight={parseTagStringToPlainString(`${opt.title || ''} | ${opt.content || ''}`)}
          //                                 autoEscape={true}
          //                                 className="overline"
          //                                 searchWords={searchWords} />
          //                         </Option>
          //                     ))
          //                     :
          //                     <Option key={`${group.title}NotFound`} value={`${group.title}NotFound`} disabled>
          //                         <span className='d-inline-block overline' style={{ padding: '0px 10px' }} >
          //                             {group.title} Not Found
          //                         </span>
          //                     </Option>
          //             }
          //         </OptGroup>
          //     )
          //     break;
          case 'socialBoard':
            return __jsx(OptGroup, {
              key: group.title,
              label: renderTitle(group.title, group.total)
            }, lodash__WEBPACK_IMPORTED_MODULE_3___default.a.isArray(lodash__WEBPACK_IMPORTED_MODULE_3___default.a.get(group, ['children'])) && !lodash__WEBPACK_IMPORTED_MODULE_3___default.a.isEmpty(lodash__WEBPACK_IMPORTED_MODULE_3___default.a.get(group, ['children'])) ? group.children.map((opt, index) => __jsx(Option, {
              key: `${group.title}-${index}`,
              value: Object(_carFreak_config__WEBPACK_IMPORTED_MODULE_10__["parseTagStringToPlainString"])(`${opt.title || ''} | ${opt.content || ''}`),
              onClick: () => {
                if (lodash__WEBPACK_IMPORTED_MODULE_3___default.a.isPlainObject(opt)) {
                  if (opt._id) {
                    props.router.push('/social-board/' + opt._id);
                  }
                }
              }
            }, __jsx(react_highlight_words__WEBPACK_IMPORTED_MODULE_5___default.a, {
              style: {
                padding: '0px 10px'
              },
              highlightStyle: {
                color: '#ffc069',
                padding: 0
              },
              textToHighlight: Object(_carFreak_config__WEBPACK_IMPORTED_MODULE_10__["parseTagStringToPlainString"])(`${opt.title || ''} | ${opt.content || ''}`),
              autoEscape: true,
              className: "overline",
              searchWords: searchWords
            }))) : __jsx(Option, {
              key: `${group.title}NotFound`,
              value: `${group.title}NotFound`,
              disabled: true
            }, __jsx("span", {
              className: "d-inline-block overline",
              style: {
                padding: '0px 10px'
              }
            }, group.title, " Not Found")));
            break;

          case 'people':
            return __jsx(OptGroup, {
              key: group.title,
              label: renderTitle(group.title, group.total)
            }, lodash__WEBPACK_IMPORTED_MODULE_3___default.a.isArray(lodash__WEBPACK_IMPORTED_MODULE_3___default.a.get(group, ['children'])) && !lodash__WEBPACK_IMPORTED_MODULE_3___default.a.isEmpty(lodash__WEBPACK_IMPORTED_MODULE_3___default.a.get(group, ['children'])) ? group.children.map((opt, index) => __jsx(Option, {
              key: `${group.title}-${index}`,
              value: `${opt.freakId || ''}`,
              onClick: () => {
                if (lodash__WEBPACK_IMPORTED_MODULE_3___default.a.isPlainObject(opt) && !lodash__WEBPACK_IMPORTED_MODULE_3___default.a.isEmpty(opt)) {
                  if (opt.userurlId) {
                    props.router.push(`/profile/${opt.userurlId}`);
                  }
                }
              }
            }, __jsx(react_highlight_words__WEBPACK_IMPORTED_MODULE_5___default.a, {
              style: {
                padding: '0px 10px'
              },
              highlightStyle: {
                color: '#ffc069',
                padding: 0
              },
              textToHighlight: `${opt.freakId || ''}`,
              autoEscape: true,
              className: "overline",
              searchWords: searchWords
            }))) : __jsx(Option, {
              key: `${group.title}NotFound`,
              value: `${group.title}NotFound`,
              disabled: true
            }, __jsx("span", {
              className: "d-inline-block overline",
              style: {
                padding: '0px 10px'
              }
            }, group.title, " Not Found")));
            break;

          case 'dealer':
            return __jsx(OptGroup, {
              key: group.title,
              label: renderTitle(group.title, group.total)
            }, lodash__WEBPACK_IMPORTED_MODULE_3___default.a.isArray(lodash__WEBPACK_IMPORTED_MODULE_3___default.a.get(group, ['children'])) && !lodash__WEBPACK_IMPORTED_MODULE_3___default.a.isEmpty(lodash__WEBPACK_IMPORTED_MODULE_3___default.a.get(group, ['children'])) ? group.children.map((opt, index) => __jsx(Option, {
              key: `${group.title}-${index}`,
              value: `${opt.freakId || ''}`,
              onClick: () => {
                if (lodash__WEBPACK_IMPORTED_MODULE_3___default.a.isPlainObject(opt) && !lodash__WEBPACK_IMPORTED_MODULE_3___default.a.isEmpty(opt)) {
                  if (opt._id) {
                    props.router.push(`/dealer/${opt.companyurlId}/${opt.userurlId}`);
                  }
                }
              }
            }, __jsx(react_highlight_words__WEBPACK_IMPORTED_MODULE_5___default.a, {
              style: {
                padding: '0px 10px'
              },
              highlightStyle: {
                color: '#ffc069',
                padding: 0
              },
              textToHighlight: `${opt.freakId || ''}`,
              autoEscape: true,
              className: "overline",
              searchWords: searchWords
            }))) : __jsx(Option, {
              key: `${group.title}NotFound`,
              value: `${group.title}NotFound`,
              disabled: true
            }, __jsx("span", {
              className: "d-inline-block overline",
              style: {
                padding: '0px 10px'
              }
            }, group.title, " Not Found")));

          case 'productAds':
            return __jsx(OptGroup, {
              key: group.title,
              label: renderTitle(group.title, group.total)
            }, lodash__WEBPACK_IMPORTED_MODULE_3___default.a.isArray(lodash__WEBPACK_IMPORTED_MODULE_3___default.a.get(group, ['children'])) && !lodash__WEBPACK_IMPORTED_MODULE_3___default.a.isEmpty(lodash__WEBPACK_IMPORTED_MODULE_3___default.a.get(group, ['children'])) ? group.children.map((opt, index) => __jsx(Option, {
              key: `${group.title}-${index}`,
              value: `${opt.make ? opt.make : ''} ${opt.model ? opt.model : ''}`,
              onClick: e => {
                let path = Object(_common_function__WEBPACK_IMPORTED_MODULE_11__["convertParameterToProductListUrl"])({
                  make: lodash__WEBPACK_IMPORTED_MODULE_3___default.a.toLower(opt.make),
                  model: lodash__WEBPACK_IMPORTED_MODULE_3___default.a.toLower(opt.model)
                });
                props.router.push(path);
              }
            }, __jsx(react_highlight_words__WEBPACK_IMPORTED_MODULE_5___default.a, {
              style: {
                padding: '0px 10px'
              },
              highlightStyle: {
                color: '#ffc069',
                padding: 0
              },
              textToHighlight: `${opt.make ? opt.make : ''} ${opt.model ? opt.model : ''} (${opt.total ? opt.total : ''})` // textToHighlight={`${opt.title || ''} (${opt.total ? opt.total : ''})`}
              ,
              autoEscape: true,
              className: "overline",
              searchWords: searchWords
            }))) : __jsx(Option, {
              key: `${group.title}NotFound`,
              value: `${group.title}NotFound`,
              disabled: true
            }, __jsx("span", {
              className: "d-inline-block overline",
              style: {
                padding: '0px 10px'
              }
            }, group.title, " Not Found")));
            break;

          case 'carspec':
            return __jsx(OptGroup, {
              key: group.title,
              label: renderTitle(group.title, group.total)
            }, lodash__WEBPACK_IMPORTED_MODULE_3___default.a.isArray(lodash__WEBPACK_IMPORTED_MODULE_3___default.a.get(group, ['children'])) && !lodash__WEBPACK_IMPORTED_MODULE_3___default.a.isEmpty(lodash__WEBPACK_IMPORTED_MODULE_3___default.a.get(group, ['children'])) ? group.children.map((opt, index) => __jsx(Option, {
              key: `${group.title}-${index}`,
              value: `${opt.make ? opt.make : ''} ${opt.model ? opt.model : ''}`,
              onClick: () => {
                props.router.push(`/newcar/details/${opt.make}/${opt.model}`);
                window.location.reload();
              }
            }, __jsx(react_highlight_words__WEBPACK_IMPORTED_MODULE_5___default.a, {
              style: {
                padding: '0px 10px'
              },
              highlightStyle: {
                color: '#ffc069',
                padding: 0
              },
              textToHighlight: `${opt.make ? opt.make : ''} ${opt.model ? opt.model : ''}`,
              autoEscape: true,
              className: "overline",
              searchWords: searchWords
            }))) : __jsx(Option, {
              key: `${group.title}NotFound`,
              value: `${group.title}NotFound`,
              disabled: true
            }, __jsx("span", {
              className: "d-inline-block overline",
              style: {
                padding: '0px 10px'
              }
            }, group.title, " Not Found")));

          case 'dealerWithAds':
            return __jsx(OptGroup, {
              key: group.title,
              label: renderTitle(group.title, group.total)
            }, lodash__WEBPACK_IMPORTED_MODULE_3___default.a.isArray(lodash__WEBPACK_IMPORTED_MODULE_3___default.a.get(group, ['children'])) && !lodash__WEBPACK_IMPORTED_MODULE_3___default.a.isEmpty(lodash__WEBPACK_IMPORTED_MODULE_3___default.a.get(group, ['children'])) ? group.children.map((opt, index) => __jsx(Option, {
              key: `${group.title}-${index}`,
              value: `${opt.fullName || ''} | ${opt.companyName ? opt.companyName : ''}`,
              onClick: () => {
                if (opt.companyurlId && opt.userurlId) {
                  props.router.push(`/dealer/${lodash__WEBPACK_IMPORTED_MODULE_3___default.a.get(opt, 'companyurlId')}/${lodash__WEBPACK_IMPORTED_MODULE_3___default.a.get(opt, 'userurlId')}`);
                }
              }
            }, __jsx(react_highlight_words__WEBPACK_IMPORTED_MODULE_5___default.a, {
              style: {
                padding: '0px 10px'
              },
              highlightStyle: {
                color: '#ffc069',
                padding: 0
              },
              textToHighlight: `${opt.fullName || ''} | ${opt.companyName ? opt.companyName : ''} (${Object(_common_function__WEBPACK_IMPORTED_MODULE_11__["formatNumber"])(opt.total, 'auto', true, 0, true)})`,
              autoEscape: true,
              className: "overline",
              searchWords: searchWords
            }))) : __jsx(Option, {
              key: 'notFoundCompany',
              value: 'notFoundCompany',
              disabled: true
            }, __jsx("span", {
              className: "d-inline-block overline",
              style: {
                padding: '0px 10px'
              },
              disabled: true
            }, group.title, " Not Found")));

          case 'company':
            return __jsx(OptGroup, {
              key: group.title,
              label: renderTitle(group.title, group.total)
            }, lodash__WEBPACK_IMPORTED_MODULE_3___default.a.isArray(lodash__WEBPACK_IMPORTED_MODULE_3___default.a.get(group, ['children'])) && !lodash__WEBPACK_IMPORTED_MODULE_3___default.a.isEmpty(lodash__WEBPACK_IMPORTED_MODULE_3___default.a.get(group, ['children'])) ? group.children.map((opt, index) => __jsx(Option, {
              key: `${group.title}-${index}`,
              onClick: () => {
                props.router.push('/profile/' + opt.userurlId);
              }
            }, __jsx(react_highlight_words__WEBPACK_IMPORTED_MODULE_5___default.a, {
              style: {
                padding: '0px 10px'
              },
              highlightStyle: {
                color: '#ffc069',
                padding: 0
              },
              textToHighlight: opt.name ? opt.name : '',
              autoEscape: true,
              className: "overline",
              searchWords: searchWords
            }))) : __jsx(Option, {
              key: `${group.title}NotFound`,
              value: `${group.title}NotFound`,
              disabled: true
            }, __jsx("span", {
              className: "d-inline-block overline",
              style: {
                padding: '0px 10px'
              }
            }, group.title, " Not Found")));

          default:
            return __jsx(OptGroup, {
              key: Object(uuid__WEBPACK_IMPORTED_MODULE_8__["v4"])(),
              label: renderTitle('Others', group.total)
            }, lodash__WEBPACK_IMPORTED_MODULE_3___default.a.isArray(lodash__WEBPACK_IMPORTED_MODULE_3___default.a.get(group, ['children'])) && !lodash__WEBPACK_IMPORTED_MODULE_3___default.a.isEmpty(lodash__WEBPACK_IMPORTED_MODULE_3___default.a.get(group, ['children'])) ? group.children.map((opt, index) => __jsx(Option, {
              key: `${group.title}-${index}`
            }, __jsx(react_highlight_words__WEBPACK_IMPORTED_MODULE_5___default.a, {
              style: {
                padding: '0px 10px'
              },
              highlightStyle: {
                color: '#ffc069',
                padding: 0
              },
              textToHighlight: opt.value ? opt.value : '',
              autoEscape: true,
              className: "overline",
              searchWords: searchWords
            }))) : __jsx(Option, {
              key: `othersNotFound`,
              value: `othersNotFound`
            }, __jsx("span", {
              className: "d-inline-block overline",
              style: {
                padding: '0px 10px'
              },
              disabled: true
            }, "Not Found")));
        }
      });
      base = lodash__WEBPACK_IMPORTED_MODULE_3___default.a.union(list, base);
    }

    return base;
  };

  return __jsx(react__WEBPACK_IMPORTED_MODULE_4___default.a.Fragment, null, __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["AutoComplete"], {
    className: "certain-category-search layout-global-search",
    dropdownClassName: "certain-category-search-dropdown group-item-scroll" // dropdownMatchSelectWidth={false}
    ,
    dropdownStyle: {
      width: 300
    } // size="large"
    ,
    style: {
      width: '100%'
    },
    ref: searchBarRef,
    dataSource: restructData(dataSource),
    onSearch: handleSearch,
    placeholder: "Search here",
    optionLabelProp: "value",
    open: !isEmptyDataSource && isFocused,
    onChange: value => {
      setSearchValue(value);
    },
    onSelect: () => {
      setIsFocused(false);
      setIsEmptyDataSource(true);

      if (searchBarRef.current) {
        searchBarRef.current.blur();
      }
    },
    defaultActiveFirstOption: false,
    onFocus: () => {
      setIsFocused(true);
    },
    onBlur: () => {
      setIsFocused(false);
    }
  }, __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Input"], {
    className: "search-input",
    border: "false",
    size: "large",
    value: searchValue // onSearch={() => props.router.push('/cars-on-sale')}
    ,
    onPressEnter: e => {
      if (e.target.value) {
        // let path = `/cars-on-sale-search?page=${1}${`&${queryStringifyNestedObject({ title: searchValue })}`}`;
        if (props.enterSearchCarFreaks) {
          let text = e.target.value || '';
          let canSearchHashTag = false;

          if (text.indexOf('#') == 0 && Object(_common_function__WEBPACK_IMPORTED_MODULE_11__["arrayLengthCount"])(text.split(' ')) == 1) {
            canSearchHashTag = true;
          }

          text = text.replace('#', '');

          if (canSearchHashTag) {
            props.router.push(`/hashtag/${text}`);
          } else {
            props.router.push(`/search-car-freaks?matchStr=${text}`);
          }
        } else {
          let path = Object(_common_function__WEBPACK_IMPORTED_MODULE_11__["convertParameterToProductListUrl"])({
            title: searchValue
          });
          props.router.push(path);
        }
      }
    },
    suffix: __jsx(_ant_design_icons__WEBPACK_IMPORTED_MODULE_0__["SearchOutlined"], {
      onClick: e => {
        // let path = `/cars-on-sale-search?page=${1}${`&${queryStringifyNestedObject({ title: searchValue })}`}`;
        let path = Object(_common_function__WEBPACK_IMPORTED_MODULE_11__["convertParameterToProductListUrl"])({
          title: searchValue
        });
        props.router.push(path);
      }
    })
  })));
};

const mapStateToProps = state => ({
  app: state.app,
  user: state.user
});

const mapDispatchToProps = {
  loading: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_12__["loading"]
};
/* harmony default export */ __webpack_exports__["default"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_6__["connect"])(mapStateToProps, mapDispatchToProps)(Object(next_router__WEBPACK_IMPORTED_MODULE_13__["withRouter"])(GlobalSearchBar)));

/***/ }),

/***/ "./components/general/light-box-gallery.jsx":
/*!**************************************************!*\
  !*** ./components/general/light-box-gallery.jsx ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! antd */ "antd");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(antd__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var react_custom_scrollbars__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-custom-scrollbars */ "react-custom-scrollbars");
/* harmony import */ var react_custom_scrollbars__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react_custom_scrollbars__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var react_image_lightbox__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react-image-lightbox */ "react-image-lightbox");
/* harmony import */ var react_image_lightbox__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react_image_lightbox__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react-redux */ "react-redux");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _ant_design_compatible__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @ant-design/compatible */ "@ant-design/compatible");
/* harmony import */ var _ant_design_compatible__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_ant_design_compatible__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _common_function__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../common-function */ "./common-function.js");
/* harmony import */ var _WindowScrollDisableWrapper__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./WindowScrollDisableWrapper */ "./components/general/WindowScrollDisableWrapper.jsx");
var __jsx = react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement;










const LightBoxGallery = props => {
  const {
    0: visible,
    1: setVisible
  } = Object(react__WEBPACK_IMPORTED_MODULE_2__["useState"])(false);
  const {
    0: currentIndex,
    1: setCurrentIndex
  } = Object(react__WEBPACK_IMPORTED_MODULE_2__["useState"])(0);
  const {
    0: images,
    1: setImages
  } = Object(react__WEBPACK_IMPORTED_MODULE_2__["useState"])();
  const {
    0: inited,
    1: setInited
  } = Object(react__WEBPACK_IMPORTED_MODULE_2__["useState"])(false);
  Object(react__WEBPACK_IMPORTED_MODULE_2__["useEffect"])(() => {
    if (lodash__WEBPACK_IMPORTED_MODULE_1___default.a.isArray(props.images) && !lodash__WEBPACK_IMPORTED_MODULE_1___default.a.isEmpty(props.images)) {
      setImages(props.images);
    } else {
      setImages([]);
    }
  }, [props.images]);
  Object(react__WEBPACK_IMPORTED_MODULE_2__["useEffect"])(() => {
    if (lodash__WEBPACK_IMPORTED_MODULE_1___default.a.isArray(images) && !lodash__WEBPACK_IMPORTED_MODULE_1___default.a.isEmpty(images)) {
      if (props.onChange) {
        props.onChange(currentIndex, images[currentIndex]);
      }
    }
  }, [currentIndex]);
  Object(react__WEBPACK_IMPORTED_MODULE_2__["useEffect"])(() => {
    if (Object(_common_function__WEBPACK_IMPORTED_MODULE_7__["isValidNumber"])(parseInt(props.currentIndex))) {
      setCurrentIndex(props.currentIndex);
    }
  }, [props.currentIndex]);
  return __jsx(react__WEBPACK_IMPORTED_MODULE_2___default.a.Fragment, null, props.children ? props.children({
    images,
    currentIndex,
    visible
  }, setCurrentIndex, setVisible) : __jsx(react_custom_scrollbars__WEBPACK_IMPORTED_MODULE_3__["Scrollbars"], {
    style: {
      width: '100%',
      height: '100px'
    }
  }, __jsx("div", {
    className: "flex-justify-start flex-items-align-center fill-parent"
  }, lodash__WEBPACK_IMPORTED_MODULE_1___default.a.map(images, function (v, index) {
    return __jsx("span", {
      className: "d-inline-block margin-right-md cursor-pointer",
      onClick: e => {
        setCurrentIndex(index);
        setVisible(true);
      }
    }, __jsx("img", {
      src: v,
      style: {
        width: props.size || 70,
        height: props.size || 70
      }
    }));
  }))), visible && __jsx(react_image_lightbox__WEBPACK_IMPORTED_MODULE_4___default.a, {
    mainSrc: images[currentIndex],
    nextSrc: images[(currentIndex + 1) % images.length],
    prevSrc: images[(currentIndex + images.length - 1) % images.length],
    onCloseRequest: () => {
      setTimeout(() => {
        setVisible(false);
      }, 500);
    },
    onMovePrevRequest: () => {
      setCurrentIndex((currentIndex + images.length - 1) % images.length);
    },
    onMoveNextRequest: () => {
      setCurrentIndex((currentIndex + 1) % images.length);
    }
  }));
};

const mapStateToProps = state => ({
  app: state.app,
  user: state.user
});

const mapDispatchToProps = {};
/* harmony default export */ __webpack_exports__["default"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_5__["connect"])(mapStateToProps, mapDispatchToProps)(_ant_design_compatible__WEBPACK_IMPORTED_MODULE_6__["Form"].create()(LightBoxGallery)));

/***/ }),

/***/ "./components/general/registerCard.jsx":
/*!*********************************************!*\
  !*** ./components/general/registerCard.jsx ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! antd */ "antd");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(antd__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _light_box_gallery__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./light-box-gallery */ "./components/general/light-box-gallery.jsx");
/* harmony import */ var _common_function__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../common-function */ "./common-function.js");
var __jsx = react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement;






const RegisterCard = props => {
  const {
    0: visible,
    1: setVisible
  } = Object(react__WEBPACK_IMPORTED_MODULE_2__["useState"])(false);
  return __jsx(react__WEBPACK_IMPORTED_MODULE_2___default.a.Fragment, null, __jsx("a", {
    onClick: () => {
      if (Object(_common_function__WEBPACK_IMPORTED_MODULE_4__["arrayLengthCount"])(props.registrationUrl) > 0) {
        setVisible(true);
      }
    }
  }, props.button ? props.button : // <Col xs={8} sm={8} md={4} lg={4} xl={4}>
  //     <div className="wrap-product-ads-tag">
  //         <img src="/assets/CarListingIconMobile/registration-card.png" className="w-100" /> 
  //     </div>
  // </Col>
  __jsx("div", {
    className: "wrap-product-ads-tag"
  }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Row"], null, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
    xs: 3,
    sm: 2,
    md: 5,
    lg: 5,
    xl: 5,
    offset: 1
  }, __jsx("img", {
    src: "/assets/CarListingIconMobile/registration-card.png",
    className: "w-100"
  })), __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
    xs: 18,
    sm: 18,
    md: 18,
    lg: 18,
    xl: 18
  }, __jsx("p", {
    style: {
      fontSize: '10px'
    }
  }, "Reg Card"))))), __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Modal"], {
    title: "Registration Card",
    visible: visible,
    onCancel: () => setVisible(false),
    footer: null
  }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Row"], null, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
    span: 24
  }, __jsx(_light_box_gallery__WEBPACK_IMPORTED_MODULE_3__["default"], {
    images: lodash__WEBPACK_IMPORTED_MODULE_1___default.a.isArray(props.registrationUrl) && !lodash__WEBPACK_IMPORTED_MODULE_1___default.a.isEmpty(props.registrationUrl) && lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(props.registrationUrl, [0, 'url']) ? [lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(props.registrationUrl, [0, 'url'])] : []
  }, (data, setCurrentIndex, setVisible) => {
    return __jsx("img", {
      src: lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(data, ['images', 0]),
      className: "w-100 cursor-pointer",
      onClick: e => {
        setVisible(true);
      }
    });
  })))));
};

/* harmony default export */ __webpack_exports__["default"] = (RegisterCard);

/***/ }),

/***/ "./components/general/whatapps-button.jsx":
/*!************************************************!*\
  !*** ./components/general/whatapps-button.jsx ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! antd */ "antd");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(antd__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-redux */ "react-redux");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var react_responsive__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react-responsive */ "react-responsive");
/* harmony import */ var react_responsive__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react_responsive__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _ant_design_compatible__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @ant-design/compatible */ "@ant-design/compatible");
/* harmony import */ var _ant_design_compatible__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_ant_design_compatible__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var next_dist_client_router__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! next/dist/client/router */ "./node_modules/next/dist/client/router.js");
/* harmony import */ var next_dist_client_router__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(next_dist_client_router__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _common_function__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../common-function */ "./common-function.js");
var __jsx = react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement;









const Desktop = ({
  children
}) => {
  const isDesktop = Object(react_responsive__WEBPACK_IMPORTED_MODULE_4__["useMediaQuery"])({
    minWidth: 992
  });
  return isDesktop ? children : null;
};

const Tablet = ({
  children
}) => {
  const isTablet = Object(react_responsive__WEBPACK_IMPORTED_MODULE_4__["useMediaQuery"])({
    minWidth: 768,
    maxWidth: 991
  });
  return isTablet ? children : null;
};

const Mobile = ({
  children
}) => {
  const isMobile = Object(react_responsive__WEBPACK_IMPORTED_MODULE_4__["useMediaQuery"])({
    maxWidth: 767
  });
  return isMobile ? children : null;
};

const Default = ({
  children
}) => {
  const isNotMobile = Object(react_responsive__WEBPACK_IMPORTED_MODULE_4__["useMediaQuery"])({
    minWidth: 768
  });
  return isNotMobile ? children : null;
};

const WhatsAppButton = props => {
  const {
    0: visible,
    1: setVisible
  } = Object(react__WEBPACK_IMPORTED_MODULE_2__["useState"])(false);
  let contactList = [];
  let hideContactName = 'show';
  let contactStyle = {
    float: 'right'
  };

  try {
    contactList = props.mobileNumber.createdBy.contactList;
  } catch (err) {
    contactList = [];
  }

  try {
    hideContactName = props.mobileNumber.createdBy.hideContactName;
  } catch (err) {
    hideContactName = 'show';
  }

  if (!contactList) {
    contactList = [];
  }

  if (contactList.length > 0) {
    return __jsx(react__WEBPACK_IMPORTED_MODULE_2___default.a.Fragment, null, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Button"], {
      type: "normal",
      className: "w-100 ads-purchase-button ccar-product-btn-car",
      style: {
        padding: 0
      },
      onClick: () => {
        setVisible(true);
      }
    }, __jsx("img", {
      src: "/assets/profile/icon-list/carmarket-bar-icon/whatsapp.png",
      style: {
        width: '20px'
      }
    })), __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Modal"], {
      title: "Contact Seller",
      visible: visible,
      onCancel: () => setVisible(false),
      footer: null
    }, __jsx("div", null, contactList.map(function (v) {
      let contactName = __jsx(react__WEBPACK_IMPORTED_MODULE_2___default.a.Fragment, null);

      if (hideContactName === 'show') {
        contactName = __jsx("span", null, (v.contactNamePrefix || '') + ' ' + (v.contactFirstName || '') + ' ' + (v.contactLastName || ''));
      } else {
        contactStyle = {};
      }

      return __jsx("p", null, contactName, __jsx("span", {
        style: contactStyle
      }, (v.contactNoPrefix || '') + (v.contactNo || ''), __jsx("span", null, __jsx("a", {
        target: '_blank',
        href: "https://web.whatsapp.com/send?phone=" + v.contactNoPrefix.replace('+', '') + v.contactNo + "&text=Hi " + (v.contactNamePrefix ? v.contactNamePrefix + ' ' : '') + (v.contactFirstName ? v.contactFirstName + ' ' : '') + (v.contactLastName || '') + ", I am interested in your car ad on ccar.my and I would like to know more about " + props.mobileNumber.title + " (RM " + Object(_common_function__WEBPACK_IMPORTED_MODULE_7__["formatNumber"])(props.mobileNumber.price, null, false, 2, true) + "). Thank you. https://ccar.my/viewCar/" + props.mobileNumber._id,
        onClick: e => {}
      }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Button"], {
        type: "normal",
        className: "ads-purchase-button ccar-product-btn-car",
        style: {
          padding: 0
        }
      }, __jsx("img", {
        src: "/assets/profile/icon-list/carmarket-bar-icon/whatsapp.png",
        style: {
          width: '20px'
        }
      }))))));
    }))));
  }

  return __jsx("span", {
    className: props.className ? props.className : null,
    style: props.style ? props.style : null
  }, __jsx(Default, null, __jsx("a", {
    target: !lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(props.mobileNumber, ['createdBy', 'contactNoPrimary']) ? null : '_blank',
    href: !lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(props.mobileNumber, ['createdBy', 'contactNoPrimary']) ? null : "https://web.whatsapp.com/send?phone=" + lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(props.mobileNumber, ['createdBy', 'contactNoPrimary']).replace('+60', '') + "&text=Hi " + Object(_common_function__WEBPACK_IMPORTED_MODULE_7__["getUserName"])(lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(props.mobileNumber, ['createdBy']), 'prefixName') + ", I am interested in your car ad on ccar.my and I would like to know more about " + props.mobileNumber.title + " (RM " + Object(_common_function__WEBPACK_IMPORTED_MODULE_7__["formatNumber"])(props.mobileNumber.price, null, false, 2, true) + "). Thank you. https://ccar.my/viewCar/" + props.mobileNumber._id,
    onClick: e => {
      if (!lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(props.mobileNumber, ['createdBy', 'contactNoPrimary'])) {
        antd__WEBPACK_IMPORTED_MODULE_0__["message"].error('Whatsapp No Not Found');
      }
    }
  }, props.button ? props.button() : __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Button"], {
    type: "normal",
    className: "w-100 ads-purchase-button ccar-product-btn-car",
    style: {
      padding: 0
    }
  }, __jsx("img", {
    src: "/assets/profile/icon-list/carmarket-bar-icon/whatsapp.png",
    style: {
      width: '20px'
    }
  })))), __jsx(Mobile, null, __jsx("a", {
    href: !lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(props.mobileNumber, ['createdBy', 'contactNoPrimary']) ? null : "https://wa.me/" + lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(props.mobileNumber, ['createdBy', 'contactNoPrimary']).replace('+60', '') + "&text=Hi " + Object(_common_function__WEBPACK_IMPORTED_MODULE_7__["getUserName"])(lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(props.mobileNumber, ['createdBy']), 'prefixName') + ", I am interested in your car ad on ccar.my and I would like to know more about " + props.mobileNumber.title + " (RM " + Object(_common_function__WEBPACK_IMPORTED_MODULE_7__["formatNumber"])(props.mobileNumber.price, null, false, 2, true) + "). Thank you. https://ccar.my/viewCar/" + props.mobileNumber._id,
    onClick: e => {
      if (!lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(props.mobileNumber, ['createdBy', 'contactNoPrimary'])) {
        antd__WEBPACK_IMPORTED_MODULE_0__["message"].error('Whatsapp No Not Found');
      }
    }
  }, props.button ? props.button() : __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Button"], {
    type: "normal",
    className: "w-100 ads-purchase-button ccar-product-btn-car",
    style: {
      padding: 0
    }
  }, __jsx("img", {
    src: "/assets/profile/icon-list/carmarket-bar-icon/whatsapp.png",
    style: {
      width: '20px'
    }
  })))));
};

const mapStateToProps = state => ({
  app: state.app,
  user: state.user
});

const mapDispatchToProps = {};
/* harmony default export */ __webpack_exports__["default"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_3__["connect"])(mapStateToProps, mapDispatchToProps)(_ant_design_compatible__WEBPACK_IMPORTED_MODULE_5__["Form"].create()(Object(next_dist_client_router__WEBPACK_IMPORTED_MODULE_6__["withRouter"])(WhatsAppButton))));

/***/ }),

/***/ "./components/general/whatapps-button1.jsx":
/*!*************************************************!*\
  !*** ./components/general/whatapps-button1.jsx ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! antd */ "antd");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(antd__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-redux */ "react-redux");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var react_responsive__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react-responsive */ "react-responsive");
/* harmony import */ var react_responsive__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react_responsive__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _ant_design_compatible__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @ant-design/compatible */ "@ant-design/compatible");
/* harmony import */ var _ant_design_compatible__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_ant_design_compatible__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var next_dist_client_router__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! next/dist/client/router */ "./node_modules/next/dist/client/router.js");
/* harmony import */ var next_dist_client_router__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(next_dist_client_router__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _common_function__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../common-function */ "./common-function.js");
var __jsx = react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement;









const Desktop = ({
  children
}) => {
  const isDesktop = Object(react_responsive__WEBPACK_IMPORTED_MODULE_4__["useMediaQuery"])({
    minWidth: 992
  });
  return isDesktop ? children : null;
};

const Tablet = ({
  children
}) => {
  const isTablet = Object(react_responsive__WEBPACK_IMPORTED_MODULE_4__["useMediaQuery"])({
    minWidth: 768,
    maxWidth: 991
  });
  return isTablet ? children : null;
};

const Mobile = ({
  children
}) => {
  const isMobile = Object(react_responsive__WEBPACK_IMPORTED_MODULE_4__["useMediaQuery"])({
    maxWidth: 767
  });
  return isMobile ? children : null;
};

const Default = ({
  children
}) => {
  const isNotMobile = Object(react_responsive__WEBPACK_IMPORTED_MODULE_4__["useMediaQuery"])({
    minWidth: 768
  });
  return isNotMobile ? children : null;
};

const WhatsAppButton1 = props => {
  const {
    0: visible,
    1: setVisible
  } = Object(react__WEBPACK_IMPORTED_MODULE_2__["useState"])(false);
  let contactList = [];
  let hideContactName = 'show';
  let contactStyle = {
    float: 'right'
  };

  try {
    contactList = props.mobileNumber.createdBy.contactList;
  } catch (err) {
    contactList = [];
  }

  try {
    hideContactName = props.mobileNumber.createdBy.hideContactName;
  } catch (err) {
    hideContactName = 'show';
  }

  if (!contactList) {
    contactList = [];
  }

  if (contactList.length > 0) {
    return __jsx(react__WEBPACK_IMPORTED_MODULE_2___default.a.Fragment, null, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Button"], {
      type: "normal",
      className: "w-100 ads-purchase-button ccar-product-btn-car",
      style: {
        padding: 0
      },
      onClick: () => {
        setVisible(true);
      }
    }, __jsx("img", {
      src: "/assets/profile/icon-list/carmarket-bar-icon/whatsapp.png",
      style: {
        width: '20px'
      }
    })), __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Modal"], {
      title: "Contact Seller",
      visible: visible,
      onCancel: () => setVisible(false),
      footer: null
    }, __jsx("div", null, contactList.map(function (v) {
      let contactName = __jsx(react__WEBPACK_IMPORTED_MODULE_2___default.a.Fragment, null);

      if (hideContactName === 'show') {
        contactName = __jsx("span", null, (v.contactNamePrefix || '') + ' ' + (v.contactFirstName || '') + ' ' + (v.contactLastName || ''));
      } else {
        contactStyle = {};
      }

      return __jsx("p", null, contactName, __jsx("span", {
        style: contactStyle
      }, (v.contactNoPrefix || '') + (v.contactNo || ''), __jsx("span", null, __jsx("a", {
        target: '_blank',
        href: "https://web.whatsapp.com/send?phone=" + v.contactNoPrefix.replace('+', '') + v.contactNo + "&text=Hi " + (v.contactNamePrefix ? v.contactNamePrefix + ' ' : '') + (v.contactFirstName ? v.contactFirstName + ' ' : '') + (v.contactLastName || '') + ", I am interested in your car ad on ccar.my and I would like to know more about " + props.mobileNumber.title + " (RM " + Object(_common_function__WEBPACK_IMPORTED_MODULE_7__["formatNumber"])(props.mobileNumber.price, null, false, 2, true) + "). Thank you. https://ccar.my/viewCar/" + props.mobileNumber._id,
        onClick: e => {}
      }, __jsx("div", {
        style: {
          padding: 4,
          background: '#25D366',
          borderColor: '#25D366',
          textAlign: 'center',
          borderRadius: '4px'
        }
      }, __jsx("img", {
        src: "/assets/profile/icon-list/carmarket-bar-icon/whatsapp.png",
        style: {
          width: '80%'
        }
      }))))));
    }))));
  }

  return __jsx("span", {
    className: props.className ? props.className : null,
    style: props.style ? props.style : null
  }, __jsx(Default, null, __jsx("a", {
    target: !lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(props.mobileNumber, ['createdBy', 'contactNoPrimary']) ? null : '_blank',
    href: !lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(props.mobileNumber, ['createdBy', 'contactNoPrimary']) ? null : "https://web.whatsapp.com/send?phone=" + lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(props.mobileNumber, ['createdBy', 'contactNoPrimary']).replace('+60', '') + "&text=Hi " + Object(_common_function__WEBPACK_IMPORTED_MODULE_7__["getUserName"])(lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(props.mobileNumber, ['createdBy']), 'prefixName') + ", I am interested in your car ad on ccar.my and I would like to know more about " + props.mobileNumber.title + " (RM " + Object(_common_function__WEBPACK_IMPORTED_MODULE_7__["formatNumber"])(props.mobileNumber.price, null, false, 2, true) + "). Thank you. https://ccar.my/viewCar/" + props.mobileNumber._id,
    onClick: e => {
      if (!lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(props.mobileNumber, ['createdBy', 'contactNoPrimary'])) {
        antd__WEBPACK_IMPORTED_MODULE_0__["message"].error('Whatsapp No Not Found');
      }
    }
  }, props.button ? props.button() : // <Button
  //     type="normal"
  //     className="w-100 ads-purchase-button ccar-product-btn-car"
  //     style={{ padding: 0 }}
  // >
  //     <WhatsAppOutlined style={{ fontSize: 20, color: 'white' }} />
  //     <img src="/assets/profile/icon-list/carmarket-bar-icon/whatsapp.png" style={{ width: '20px' }} />
  // </Button>
  __jsx("div", {
    style: {
      padding: 4,
      background: '#25D366',
      borderColor: '#25D366',
      textAlign: 'center',
      borderRadius: '4px'
    }
  }, __jsx("img", {
    src: "/assets/profile/icon-list/carmarket-bar-icon/whatsapp.png",
    style: {
      width: '80%'
    }
  })))), __jsx(Mobile, null, __jsx("a", {
    href: !lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(props.mobileNumber, ['createdBy', 'contactNoPrimary']) ? null : "https://wa.me/" + lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(props.mobileNumber, ['createdBy', 'contactNoPrimary']).replace('+60', '') + "&text=Hi " + Object(_common_function__WEBPACK_IMPORTED_MODULE_7__["getUserName"])(lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(props.mobileNumber, ['createdBy']), 'prefixName') + ", I am interested in your car ad on ccar.my and I would like to know more about " + props.mobileNumber.title + " (RM " + Object(_common_function__WEBPACK_IMPORTED_MODULE_7__["formatNumber"])(props.mobileNumber.price, null, false, 2, true) + "). Thank you. https://ccar.my/viewCar/" + props.mobileNumber._id,
    onClick: e => {
      if (!lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(props.mobileNumber, ['createdBy', 'contactNoPrimary'])) {
        antd__WEBPACK_IMPORTED_MODULE_0__["message"].error('Whatsapp No Not Found');
      }
    }
  }, props.button ? props.button() : // <Button
  //     type="normal"
  //     className="w-100 ads-purchase-button ccar-product-btn-car"
  //     style={{ padding: 0 }}
  // >
  //     <WhatsAppOutlined style={{ fontSize: 20, color: 'white' }} />
  //     <img src="/assets/profile/icon-list/carmarket-bar-icon/whatsapp.png" style={{ width: '20px' }} />
  // </Button>
  __jsx("div", {
    style: {
      padding: 4,
      background: '#25D366',
      borderColor: '#25D366',
      textAlign: 'center',
      borderRadius: '4px'
    }
  }, __jsx("img", {
    src: "/assets/profile/icon-list/carmarket-bar-icon/whatsapp.png",
    style: {
      width: '80%'
    }
  })))));
};

const mapStateToProps = state => ({
  app: state.app,
  user: state.user
});

const mapDispatchToProps = {};
/* harmony default export */ __webpack_exports__["default"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_3__["connect"])(mapStateToProps, mapDispatchToProps)(_ant_design_compatible__WEBPACK_IMPORTED_MODULE_5__["Form"].create()(Object(next_dist_client_router__WEBPACK_IMPORTED_MODULE_6__["withRouter"])(WhatsAppButton1))));

/***/ }),

/***/ "./components/live/config.js":
/*!***********************************!*\
  !*** ./components/live/config.js ***!
  \***********************************/
/*! exports provided: testStreamUrl, liveStreamUrl, getStreamUrl, defaultReactions, defaultReactionsAnimation, reactionGif, defaultGifts, liveIcon, supportIcon, likeIcon, commentIcon, shareIcon, giftGif, ccoinIcon, reactionAnimationTransitions, LIVE_TEXT_TEMPLATE, generateRandomTransition, getTotalReactions, getTopReactions, createOffer, sendToPeer, closeThePeerConnection, syncReactionSummary */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "testStreamUrl", function() { return testStreamUrl; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "liveStreamUrl", function() { return liveStreamUrl; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getStreamUrl", function() { return getStreamUrl; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "defaultReactions", function() { return defaultReactions; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "defaultReactionsAnimation", function() { return defaultReactionsAnimation; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "reactionGif", function() { return reactionGif; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "defaultGifts", function() { return defaultGifts; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "liveIcon", function() { return liveIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "supportIcon", function() { return supportIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "likeIcon", function() { return likeIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "commentIcon", function() { return commentIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "shareIcon", function() { return shareIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "giftGif", function() { return giftGif; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ccoinIcon", function() { return ccoinIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "reactionAnimationTransitions", function() { return reactionAnimationTransitions; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LIVE_TEXT_TEMPLATE", function() { return LIVE_TEXT_TEMPLATE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "generateRandomTransition", function() { return generateRandomTransition; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getTotalReactions", function() { return getTotalReactions; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getTopReactions", function() { return getTopReactions; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createOffer", function() { return createOffer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sendToPeer", function() { return sendToPeer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "closeThePeerConnection", function() { return closeThePeerConnection; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "syncReactionSummary", function() { return syncReactionSummary; });
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _common_function__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../common-function */ "./common-function.js");


const testStreamUrl = 'https://stream-uat2.ccar.my';
const liveStreamUrl = 'https://stream.ccar.my';
function getStreamUrl(url) {
  let stream = testStreamUrl;

  if (url === 'http://localhost:3030/') {
    stream = 'http://localhost:3030';
  } else if (url === 'https://uat2-api.ccar.my/') {
    stream = testStreamUrl;
  } else if (url === 'https://api.ccar.my/') {
    stream = liveStreamUrl;
  } else if (url === 'https://preprod-api.ccar.my/') {
    stream = testStreamUrl;
  } else {
    stream = 'http://localhost:3030';
  } //default testing
  // return 'http://192.168.0.191:7070/';
  // return "https://stream-uat2.ccar.my";
  // return 'http://localhost:7070/';
  // return 'http://192.168.0.149:3041/';


  return stream;
}
const gifts = [{
  name: 'kopi-ice',
  price: 10
}, {
  name: 'white-rice',
  price: 10
}, {
  name: 'roti-canai',
  price: 20
}, {
  name: 'nasi-lemak',
  price: 20
}, {
  name: 'nasi-kandar',
  price: 50
}, {
  name: 'ramly-burger',
  price: 50
}, {
  name: 'dimsum',
  price: 100
}, {
  name: 'biryani',
  price: 100
}];
const defaultReactions = ['like', 'heart', 'laughing', 'crying', 'angry', 'sleeping', 'rollingEye'];
const defaultReactionsAnimation = ['none', 'least', 'less', 'normal', 'more', 'most'];
let temp = {};

lodash__WEBPACK_IMPORTED_MODULE_0___default.a.forEach(defaultReactions, function (react) {
  temp[`${react}Gif`] = `/assets/live/${react}.gif`;
});

const reactionGif = temp;
temp = [];
temp = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.map(gifts, function (gift) {
  gift.icon = `/assets/live/${gift.name}.png`;
  gift.name = Object(_common_function__WEBPACK_IMPORTED_MODULE_1__["toCamelCase"])(gift.name, '-');
  return gift;
});
const defaultGifts = temp;
const liveIcon = '/assets/live/live.png';
const supportIcon = '/assets/live/support.png';
const likeIcon = '/assets/live/like.png';
const commentIcon = '/assets/live/comment.png';
const shareIcon = '/assets/live/share.png';
const giftGif = '/assets/live/gift.gif';
const ccoinIcon = '/assets/live/ccoin.png';
const reactionAnimationTransitions = generateRandomTransition(30, 400, 4, 4);
const LIVE_TEXT_TEMPLATE = {
  'client-joined': 'has joined',
  'client-left': 'has left',
  'client-text': '',
  'dealer-text': '',
  "anonymous-joined": 'has joined',
  "anonymous-left": 'has left'
};
function generateRandomTransition(maxTransitionX, maxTransitionY, eachTransitionLength, group) {
  let reactionAnimationTransitionsTemp = [];
  let eachTransition = [];

  if (!Object(_common_function__WEBPACK_IMPORTED_MODULE_1__["isValidNumber"])(maxTransitionX)) {
    maxTransitionX = 30;
  } else {
    maxTransitionX = parseInt(maxTransitionX);
  }

  if (!Object(_common_function__WEBPACK_IMPORTED_MODULE_1__["isValidNumber"])(maxTransitionY)) {
    maxTransitionY = 400;
  } else {
    maxTransitionY = parseInt(maxTransitionY);
  }

  if (!Object(_common_function__WEBPACK_IMPORTED_MODULE_1__["isValidNumber"])(eachTransitionLength) || parseInt(eachTransitionLength) < 4) {
    eachTransitionLength = 4;
  } else {
    eachTransitionLength = parseInt(eachTransitionLength);
  }

  if (!Object(_common_function__WEBPACK_IMPORTED_MODULE_1__["isValidNumber"])(group) || parseInt(group) < 0) {
    group = 0;
  } else {
    group = parseInt(group);
  }

  lodash__WEBPACK_IMPORTED_MODULE_0___default.a.forEach(lodash__WEBPACK_IMPORTED_MODULE_0___default.a.range(group), function (index) {
    eachTransition.push({
      x: 0,
      y: 0
    });

    lodash__WEBPACK_IMPORTED_MODULE_0___default.a.forEach(lodash__WEBPACK_IMPORTED_MODULE_0___default.a.range(eachTransitionLength - 2), function (index1) {
      eachTransition.push({
        x: lodash__WEBPACK_IMPORTED_MODULE_0___default.a.random(-maxTransitionX, maxTransitionX, false),
        y: -(maxTransitionY / (eachTransitionLength - index1))
      });
    });

    eachTransition.push({
      x: 0,
      y: -maxTransitionY
    });
    reactionAnimationTransitionsTemp.push(eachTransition);
    eachTransition = [];
  });

  return reactionAnimationTransitionsTemp;
}
function getTotalReactions(reactions) {
  if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isArray(reactions) && Object(_common_function__WEBPACK_IMPORTED_MODULE_1__["notEmptyLength"])(reactions)) {
    let total = 0;

    lodash__WEBPACK_IMPORTED_MODULE_0___default.a.forEach(reactions, function (reaction) {
      if (!lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isNaN(parseInt(reaction.total))) {
        total += parseInt(reaction.total);
      }
    });

    return total;
  } else {
    return 0;
  }
}
function getTopReactions(reactions, rank) {
  if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isArray(reactions) && Object(_common_function__WEBPACK_IMPORTED_MODULE_1__["notEmptyLength"])(reactions)) {
    if (!Object(_common_function__WEBPACK_IMPORTED_MODULE_1__["isValidNumber"])(rank)) {
      rank = 3;
    } else {
      rank = parseInt(rank);
    } //filter out reaction not in list


    let filteredData = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.compact(lodash__WEBPACK_IMPORTED_MODULE_0___default.a.map(reactions, function (reaction) {
      if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.indexOf(defaultReactions, reaction.type) != -1 && Object(_common_function__WEBPACK_IMPORTED_MODULE_1__["isValidNumber"])(reaction.total)) {
        return reaction;
      } else {
        return null;
      }
    })); //get top reactions


    filteredData = Object(_common_function__WEBPACK_IMPORTED_MODULE_1__["getTopItems"])(filteredData, rank, 'total');
    return filteredData;
  } else {
    return 0;
  }
}
function createOffer(socket, broadcaster) {
  if (!!broadcaster && !!socket) {
    const pc_config = {
      iceServers: [{
        urls: ["stun:ss-turn2.xirsys.com"]
      }, {
        username: "K7RYJQ0iO86IzU-paa6guXxfLJ7vXWhFwfWzE3X88-LOsT0QN4vquwAUx1vsJJmqAAAAAF-yezBjY2FyMzEzMQ==",
        credential: "a5e31b16-280d-11eb-89e3-0242ac140004",
        urls: ["turn:ss-turn2.xirsys.com:80?transport=udp", "turn:ss-turn2.xirsys.com:3478?transport=udp", "turn:ss-turn2.xirsys.com:80?transport=tcp", "turn:ss-turn2.xirsys.com:3478?transport=tcp", "turns:ss-turn2.xirsys.com:443?transport=tcp", "turns:ss-turn2.xirsys.com:5349?transport=tcp"]
      }]
    };
    broadcaster.peerConnection = new RTCPeerConnection(pc_config);
    broadcaster.peerConnection.createOffer({
      offerToReceiveVideo: 1,
      //for audio
      offerToReceiveAudio: 1
    }).then(sdp => {
      broadcaster.peerConnection.setLocalDescription(sdp);
      sendToPeer(socket, 'clientRequestVideoWithDealerSocketId', {
        sdp,
        dealerSocketId: broadcaster.dealerSocketId
      });
      return broadcaster;
    }).catch(x => {
      console.log('offer failed');
      return null;
    });
  } else {
    return null;
  }
}
function sendToPeer(socket, messageType, payload) {
  if (!!socket) {
    socket.emit(messageType, {
      senderId: socket.id,
      payload
    });
  }
}
function closeThePeerConnection(socket, peerConnection, previousDealerSocketId) {
  if (!!peerConnection && !!socket && !!previousDealerSocketId) {
    peerConnection.close();
    socket.emit('closeClientSocket', previousDealerSocketId);
  }
}
function syncReactionSummary(reactionLogs) {
  let reactionSummary = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.map(defaultReactions, function (reaction) {
    return {
      type: reaction,
      total: 0
    };
  });

  if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isArray(reactionLogs) && Object(_common_function__WEBPACK_IMPORTED_MODULE_1__["notEmptyLength"])(reactionLogs)) {
    reactionSummary = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.map(reactionSummary, function (summary) {
      let logs = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.filter(reactionLogs, ['type', summary.type]);

      let total = 0;

      lodash__WEBPACK_IMPORTED_MODULE_0___default.a.forEach(logs, function (log) {
        total += log.total;
      });

      return {
        type: summary.type,
        total: total
      };
    });
  }

  return reactionSummary;
}

/***/ }),

/***/ "./components/login/login.jsx":
/*!************************************!*\
  !*** ./components/login/login.jsx ***!
  \************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var styled_jsx_style__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! styled-jsx/style */ "styled-jsx/style");
/* harmony import */ var styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(styled_jsx_style__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! antd */ "antd");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(antd__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _ant_design_compatible__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ant-design/compatible */ "@ant-design/compatible");
/* harmony import */ var _ant_design_compatible__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_ant_design_compatible__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react-redux */ "react-redux");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var react_google_login__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react-google-login */ "react-google-login");
/* harmony import */ var react_google_login__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(react_google_login__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var react_facebook_login_dist_facebook_login_render_props__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! react-facebook-login/dist/facebook-login-render-props */ "react-facebook-login/dist/facebook-login-render-props");
/* harmony import */ var react_facebook_login_dist_facebook_login_render_props__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(react_facebook_login_dist_facebook_login_render_props__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _ant_design_icons__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @ant-design/icons */ "@ant-design/icons");
/* harmony import */ var _ant_design_icons__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(_ant_design_icons__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var _redux_actions_user_actions__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../redux/actions/user-actions */ "./redux/actions/user-actions.js");
/* harmony import */ var _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../redux/actions/app-actions */ "./redux/actions/app-actions.js");
/* harmony import */ var _feathers__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../feathers */ "./feathers.js");
/* harmony import */ var _functionContent__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../functionContent */ "./functionContent.js");
/* harmony import */ var _icon__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../icon */ "./icon.js");

var __jsx = react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement;

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }














const facebookId = Object(_functionContent__WEBPACK_IMPORTED_MODULE_12__["getFaceBookId"])(_feathers__WEBPACK_IMPORTED_MODULE_11__["default"].io.io.uri);
const googleClientId = Object(_functionContent__WEBPACK_IMPORTED_MODULE_12__["getGoogleId"])(_feathers__WEBPACK_IMPORTED_MODULE_11__["default"].io.io.uri);
const layout = {
  labelCol: {
    span: 8
  },
  wrapperCol: {
    span: 16
  }
};
const tailLayout = {
  wrapperCol: {
    offset: 8,
    span: 16
  }
};

class LoginModal extends react__WEBPACK_IMPORTED_MODULE_1___default.a.Component {
  // static getInitialProps({store}) {}
  constructor(props) {
    super(props);

    _defineProperty(this, "responseGoogle", response => {
      if (response.error) {
        return;
      }

      this.props.loading(true);
      _feathers__WEBPACK_IMPORTED_MODULE_11__["default"].authenticate({
        strategy: 'google',
        access_token: response.accessToken
      }).then(res => {
        this.props.loading(false);
        this.props.loginSuccessful(res);
        this.props.loginMode(false);
      }).catch(err => {
        this.props.loading(false);
        console.log(err); // message.error(err.message)
      });
    });

    _defineProperty(this, "responseFacebook", response => {
      this.props.loading(true);
      _feathers__WEBPACK_IMPORTED_MODULE_11__["default"].authenticate({
        strategy: 'facebook',
        access_token: response.accessToken
      }).then(res => {
        console.log(res);

        if (res.user.status === 'disabled') {
          this.props.loading(false);
          antd__WEBPACK_IMPORTED_MODULE_2__["message"].error('User Has Been Disabled.');
          this.props.loginMode(false);
        } else {
          this.props.loading(false);
          this.props.loginSuccessful(res);
          this.props.loginMode(false);
        }
      }).catch(err => {
        this.props.loading(false);
        console.log(err); // message.error(err.message)
      });
    });

    _defineProperty(this, "handleSubmit", e => {
      e.preventDefault();
      this.props.form.validateFields((err, values) => {
        if (!err) {
          this.props.loading(true);
          _feathers__WEBPACK_IMPORTED_MODULE_11__["default"].authenticate({
            strategy: 'local',
            username: values.username,
            password: values.password
          }).then(res => {
            this.props.loading(false);
            this.props.loginSuccessful(res);
            this.props.loginMode(false);
          }).catch(err => {
            this.props.loading(false);
            antd__WEBPACK_IMPORTED_MODULE_2__["message"].error(err.message);
          });
        }
      });
    });

    this.state = {
      tab: 'socialMediaLogin'
    };
  }

  render() {
    const {
      getFieldDecorator
    } = this.props.form;
    return __jsx(antd__WEBPACK_IMPORTED_MODULE_2__["Modal"] // title="Basic Modal"
    , {
      visible: lodash__WEBPACK_IMPORTED_MODULE_7___default.a.get(this.props, ['app', 'loginMode']),
      onOk: () => this.refClick.click(),
      onCancel: () => this.props.loginMode(false),
      style: {
        borderRadius: '100px',
        marginLeft: '60px'
      },
      footer: null,
      bodyStyle: {
        padding: 0
      },
      className: "modal-body-background-transparent relative-wrapper",
      centered: true,
      width: 300
    }, __jsx("div", {
      style: {
        backgroundImage: `url(${_icon__WEBPACK_IMPORTED_MODULE_13__["loginBackground"]})`,
        backgroundRepeat: 'no-repeat',
        backgroundSize: '100% 100%'
      },
      className: "jsx-2703617319" + " " + "padding-sm round-border relative-wrapper"
    }, __jsx(antd__WEBPACK_IMPORTED_MODULE_2__["Row"], null, __jsx(antd__WEBPACK_IMPORTED_MODULE_2__["Col"], {
      span: 24
    }, __jsx(antd__WEBPACK_IMPORTED_MODULE_2__["Row"], null, __jsx(antd__WEBPACK_IMPORTED_MODULE_2__["Col"], {
      xs: {
        span: 4,
        offset: 0
      },
      sm: {
        span: 4,
        offset: 0
      },
      md: {
        span: 3,
        offset: 4
      },
      lg: {
        span: 3,
        offset: 4
      },
      xl: {
        span: 3,
        offset: 4
      }
    }, __jsx("div", {
      className: "jsx-2703617319" + " " + "wrap-login-logo"
    }, __jsx("img", {
      style: {
        marginLeft: '48px'
      },
      alt: "ccar",
      src: "/assets/Ccar-logo.png",
      className: "jsx-2703617319" + " " + "w-100"
    }))), __jsx(antd__WEBPACK_IMPORTED_MODULE_2__["Col"], {
      xs: 20,
      sm: 20,
      md: 16,
      lg: 16,
      xl: 16
    }, __jsx("div", {
      className: "jsx-2703617319" + " " + "wrap-login-title flex-wrap"
    }, __jsx("p", {
      style: {
        marginBottom: '15px',
        textAlign: 'center',
        color: '#ffffff'
      },
      className: "jsx-2703617319"
    }, "Welcome to CCAR"), __jsx("p", {
      style: {
        textAlign: 'center',
        color: '#ffffff',
        marginTop: '30px',
        lineHeight: 1.5
      },
      className: "jsx-2703617319"
    }, `Connect with your ${this.state.tab == 'socialMediaLogin' ? 'social media' : 'dealer account'}`)))))), __jsx("div", {
      className: "jsx-2703617319" + " " + "width-100 relative-wrapper"
    }, this.state.tab == 'socialMediaLogin' ? __jsx("div", {
      key: "social-media-login-form",
      className: "jsx-2703617319" + " " + 'fill-parent'
    }, __jsx(antd__WEBPACK_IMPORTED_MODULE_2__["Row"], {
      gutter: [20, 20],
      className: "fill-parent",
      type: "flex",
      justify: "center",
      align: "middle"
    }, __jsx(antd__WEBPACK_IMPORTED_MODULE_2__["Col"], {
      xs: 24,
      sm: 24,
      md: 12,
      lg: 12,
      xl: 12
    }, __jsx(react_google_login__WEBPACK_IMPORTED_MODULE_5__["GoogleLogin"], {
      clientId: googleClientId,
      buttonText: "Login",
      render: renderProps => __jsx("button", {
        style: {
          backgroundColor: '#ffffff'
        },
        onClick: renderProps.onClick,
        disabled: renderProps.disabled,
        className: "jsx-2703617319" + " " + "google-btn w-100"
      }, __jsx("div", {
        className: "jsx-2703617319" + " " + "wrap-social-login-btn-child"
      }, __jsx("img", {
        src: _icon__WEBPACK_IMPORTED_MODULE_13__["googleLogo"],
        className: "jsx-2703617319"
      }), __jsx("span", {
        className: "jsx-2703617319"
      }, "GOOGLE"))),
      onSuccess: this.responseGoogle,
      onFailure: this.responseGoogle,
      cookiePolicy: 'single_host_origin'
    })), __jsx(antd__WEBPACK_IMPORTED_MODULE_2__["Col"], {
      xs: 24,
      sm: 24,
      md: 12,
      lg: 12,
      xl: 12
    }, __jsx(react_facebook_login_dist_facebook_login_render_props__WEBPACK_IMPORTED_MODULE_6___default.a, {
      appId: facebookId,
      isMobile: false,
      callback: this.responseFacebook,
      render: renderProps => __jsx("button", {
        onClick: renderProps.onClick,
        className: "jsx-2703617319" + " " + "facebook-btn w-100"
      }, __jsx("div", {
        className: "jsx-2703617319" + " " + "wrap-social-login-btn-child"
      }, __jsx("img", {
        src: "/assets/Social Media/Facebook @3x.png",
        className: "jsx-2703617319"
      }), __jsx("span", {
        className: "jsx-2703617319"
      }, "FACEBOOK")))
    })))) : __jsx("div", {
      key: "dealer-login-form",
      className: "jsx-2703617319"
    }, __jsx(_ant_design_compatible__WEBPACK_IMPORTED_MODULE_3__["Form"], {
      layout: "vertical",
      onSubmit: this.handleSubmit
    }, __jsx(antd__WEBPACK_IMPORTED_MODULE_2__["Row"], {
      gutter: [0, 10],
      className: "fill-parent",
      type: "flex",
      justify: "center",
      align: "middle"
    }, __jsx(antd__WEBPACK_IMPORTED_MODULE_2__["Col"], {
      xs: 24,
      sm: 24,
      md: 24,
      lg: 24,
      xl: 24
    }, __jsx("div", {
      className: "jsx-2703617319" + " " + "width-100 flex-justify-center flex-items-align-center"
    }, __jsx(_ant_design_compatible__WEBPACK_IMPORTED_MODULE_3__["Form"].Item, {
      style: {
        margin: '0px'
      }
    }, getFieldDecorator('username', {
      rules: [{
        required: true,
        message: 'Please input your username!'
      }]
    })(__jsx(antd__WEBPACK_IMPORTED_MODULE_2__["Input"], {
      prefix: __jsx(antd__WEBPACK_IMPORTED_MODULE_2__["Icon"], {
        type: "user"
      }),
      placeholder: "Username"
    }))))), __jsx(antd__WEBPACK_IMPORTED_MODULE_2__["Col"], {
      xs: 24,
      sm: 24,
      md: 24,
      lg: 24,
      xl: 24
    }, __jsx("div", {
      className: "jsx-2703617319" + " " + "width-100 flex-justify-center flex-items-align-center"
    }, __jsx(_ant_design_compatible__WEBPACK_IMPORTED_MODULE_3__["Form"].Item, {
      style: {
        margin: '0px'
      }
    }, getFieldDecorator('password', {
      rules: [{
        required: true,
        message: 'Please input your password!'
      }]
    })(__jsx(antd__WEBPACK_IMPORTED_MODULE_2__["Input"], {
      type: "password",
      prefix: __jsx(antd__WEBPACK_IMPORTED_MODULE_2__["Icon"], {
        type: "lock",
        theme: "filled"
      }),
      placeholder: "Password"
    }))))), __jsx(antd__WEBPACK_IMPORTED_MODULE_2__["Col"], {
      xs: 24,
      sm: 24,
      md: 24,
      lg: 24,
      xl: 24
    }, __jsx("div", {
      className: "jsx-2703617319" + " " + "width-100 flex-justify-center flex-items-align-center"
    }, __jsx(antd__WEBPACK_IMPORTED_MODULE_2__["Button"], {
      className: "padding-x-xl background-ccar-yellow border-ccar-yellow",
      htmlType: "submit"
    }, "Sign In"))))))), __jsx(antd__WEBPACK_IMPORTED_MODULE_2__["Divider"], {
      orientation: "center",
      style: {
        fontWeight: 'normal'
      }
    }, __jsx("div", {
      className: "jsx-2703617319"
    }, __jsx("p", {
      style: {
        marginBottom: 0,
        color: 'rgb(142, 142, 142)'
      },
      className: "jsx-2703617319"
    }, "or"))), __jsx("div", {
      className: "jsx-2703617319" + " " + "wrap-register-link"
    }, this.state.tab == 'socialMediaLogin' ? __jsx("a", {
      style: {
        color: '#ffffff'
      },
      onClick: e => {
        this.setState({
          tab: 'dealerLogin'
        });
      },
      className: "jsx-2703617319"
    }, " Login as Business Owner") : __jsx("a", {
      style: {
        color: '#ffffff'
      },
      onClick: e => {
        this.setState({
          tab: 'socialMediaLogin'
        });
      },
      className: "jsx-2703617319"
    }, " Login as Normal User")), __jsx(styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default.a, {
      id: "2703617319"
    }, ".ant-modal-content{border-radius:6px;}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\n/*@ sourceURL=/Users/faraheen/ccar-cms-next-mobile/components/login/login.jsx */"), __jsx("div", {
      className: "jsx-2703617319" + " " + "relative-wrapper"
    }, __jsx("img", {
      src: _icon__WEBPACK_IMPORTED_MODULE_13__["tbh"],
      style: {
        width: 166,
        height: 330,
        position: 'absolute',
        left: -102,
        bottom: -6,
        margin: 'auto'
      },
      className: "jsx-2703617319"
    }))));
  }

}

const mapStateToProps = state => ({
  app: state.app
});

const mapDispatchToProps = {
  loading: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_10__["loading"],
  loginMode: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_10__["loginMode"],
  loginSuccessful: _redux_actions_user_actions__WEBPACK_IMPORTED_MODULE_9__["loginSuccessful"]
};
/* harmony default export */ __webpack_exports__["default"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_4__["connect"])(mapStateToProps, mapDispatchToProps)(_ant_design_compatible__WEBPACK_IMPORTED_MODULE_3__["Form"].create()(LoginModal)));

/***/ }),

/***/ "./components/product-list/ProductList.jsx":
/*!*************************************************!*\
  !*** ./components/product-list/ProductList.jsx ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! antd */ "antd");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(antd__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! moment */ "moment");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var react_infinite_scroller__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react-infinite-scroller */ "react-infinite-scroller");
/* harmony import */ var react_infinite_scroller__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react_infinite_scroller__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react-redux */ "react-redux");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _params_stateList__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../params/stateList */ "./params/stateList.js");
/* harmony import */ var _icon__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../icon */ "./icon.js");
/* harmony import */ var _functionContent__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../functionContent */ "./functionContent.js");
/* harmony import */ var _common_function__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../common-function */ "./common-function.js");
/* harmony import */ var _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../redux/actions/app-actions */ "./redux/actions/app-actions.js");
/* harmony import */ var _redux_actions_user_actions__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../redux/actions/user-actions */ "./redux/actions/user-actions.js");
/* harmony import */ var _general_Loading__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../general/Loading */ "./components/general/Loading.jsx");
/* harmony import */ var _general_whatapps_button__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../general/whatapps-button */ "./components/general/whatapps-button.jsx");
/* harmony import */ var _general_contactList__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../general/contactList */ "./components/general/contactList.jsx");
/* harmony import */ var _general_registerCard__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../general/registerCard */ "./components/general/registerCard.jsx");
/* harmony import */ var _general_calculator_modal__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../general/calculator-modal */ "./components/general/calculator-modal.jsx");
/* harmony import */ var _general_add_compare_product_button__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../general/add-compare-product-button */ "./components/general/add-compare-product-button.jsx");
/* harmony import */ var _general_car_360_view_button__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../general/car-360-view-button */ "./components/general/car-360-view-button.jsx");
/* harmony import */ var next_dist_client_router__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! next/dist/client/router */ "./node_modules/next/dist/client/router.js");
/* harmony import */ var next_dist_client_router__WEBPACK_IMPORTED_MODULE_19___default = /*#__PURE__*/__webpack_require__.n(next_dist_client_router__WEBPACK_IMPORTED_MODULE_19__);
/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! next/link */ "./node_modules/next/link.js");
/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_20___default = /*#__PURE__*/__webpack_require__.n(next_link__WEBPACK_IMPORTED_MODULE_20__);
/* harmony import */ var _seller_SellerBusinessCard__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../seller/SellerBusinessCard */ "./components/seller/SellerBusinessCard.jsx");
/* harmony import */ var _route__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ../../route */ "./route.js");
var __jsx = react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement;
























const ProductList = props => {
  const {
    0: descriptionIndex,
    1: setDescriptionIndex
  } = Object(react__WEBPACK_IMPORTED_MODULE_3__["useState"])(-1);
  const {
    0: productList,
    1: setProductList
  } = Object(react__WEBPACK_IMPORTED_MODULE_3__["useState"])([]);
  Object(react__WEBPACK_IMPORTED_MODULE_3__["useEffect"])(() => {
    // processAddonProduct()
    processAddonProduct();
    var interval2 = setInterval(() => {
      processAddonProduct();
    }, 60000);
    return () => clearInterval(interval2);
  }, [props.data]);

  function processAddonProduct() {
    let currentDateTime = moment__WEBPACK_IMPORTED_MODULE_2___default()().format();

    if (Object(_common_function__WEBPACK_IMPORTED_MODULE_9__["notEmptyLength"])(props.data)) {
      if (props.data != productList) {
        setProductList([]);

        let inputDataList = lodash__WEBPACK_IMPORTED_MODULE_1___default.a.cloneDeep(props.data);

        inputDataList.map(function (v) {
          v.currentImg = 0;
          v.seeMore = false;
          v.addonSpotlight = lodash__WEBPACK_IMPORTED_MODULE_1___default.a.find(v.addon, {
            'addonType': 'spotlight'
          });
          v.addonSpicydeal = lodash__WEBPACK_IMPORTED_MODULE_1___default.a.find(v.addon, {
            'addonType': 'spicydeal'
          });
          v.addonKingadType = lodash__WEBPACK_IMPORTED_MODULE_1___default.a.find(v.addon, {
            'addonType': 'kingad',
            'showPrice': 'show'
          });
          v.addonKingadType2 = lodash__WEBPACK_IMPORTED_MODULE_1___default.a.find(v.addon, {
            'addonType': 'kingad',
            'showPrice': 'hide'
          });
          v.addonKingadType3 = lodash__WEBPACK_IMPORTED_MODULE_1___default.a.find(v.addon, {
            'addonType': 'kingad',
            'showPrice': 'highlight'
          });
          let priority = '';
          v.priority = '';

          if (priority === '') {
            if (v.addonKingadType) {
              if (currentDateTime > moment__WEBPACK_IMPORTED_MODULE_2___default()(v.addonKingadType.startDate).format() && currentDateTime < moment__WEBPACK_IMPORTED_MODULE_2___default()(v.addonKingadType.endDate).format()) {
                priority = 'addonKingadType';
                v.priority = 'addonKingadType';
                v.addonKingadType.endDate = moment__WEBPACK_IMPORTED_MODULE_2___default()(v.addonKingadType.endDate).format();
                v.addonKingadType.startDate = moment__WEBPACK_IMPORTED_MODULE_2___default()(v.addonKingadType.startDate).format();
              }
            }
          }

          if (priority === '') {
            if (v.addonKingadType2) {
              if (currentDateTime > moment__WEBPACK_IMPORTED_MODULE_2___default()(v.addonKingadType2.startDate).format() && currentDateTime < moment__WEBPACK_IMPORTED_MODULE_2___default()(v.addonKingadType2.endDate).format()) {
                priority = 'addonKingadType2';
                v.priority = 'addonKingadType2';
                v.addonKingadType2.startDate = moment__WEBPACK_IMPORTED_MODULE_2___default()(v.addonKingadType2.startDate).format();
                v.addonKingadType2.endDate = moment__WEBPACK_IMPORTED_MODULE_2___default()(v.addonKingadType2.endDate).format();
              }
            }
          }

          if (priority === '') {
            if (v.addonKingadType3) {
              if (currentDateTime > moment__WEBPACK_IMPORTED_MODULE_2___default()(v.addonKingadType3.startDate).format() && currentDateTime < moment__WEBPACK_IMPORTED_MODULE_2___default()(v.addonKingadType3.endDate).format()) {
                priority = 'addonKingadType3';
                v.priority = 'addonKingadType3';
                v.addonKingadType3.startDate = moment__WEBPACK_IMPORTED_MODULE_2___default()(v.addonKingadType3.startDate).format();
                v.addonKingadType3.endDate = moment__WEBPACK_IMPORTED_MODULE_2___default()(v.addonKingadType3.endDate).format();
              }
            }
          }

          if (priority === '') {
            if (v.addonSpicydeal) {
              if (currentDateTime > moment__WEBPACK_IMPORTED_MODULE_2___default()(v.addonSpicydeal.startDate).format() && currentDateTime < moment__WEBPACK_IMPORTED_MODULE_2___default()(v.addonSpicydeal.endDate).format()) {
                priority = 'addonSpicydeal';
                v.priority = 'addonSpicydeal';
                v.addonSpicydeal.startDate = moment__WEBPACK_IMPORTED_MODULE_2___default()(v.addonSpicydeal.startDate).format();
                v.addonSpicydeal.endDate = moment__WEBPACK_IMPORTED_MODULE_2___default()(v.addonSpicydeal.endDate).format();
              }
            }
          }

          if (priority === '') {
            if (v.addonSpotlight) {
              if (currentDateTime > moment__WEBPACK_IMPORTED_MODULE_2___default()(v.addonSpotlight.startDate).format() && currentDateTime < moment__WEBPACK_IMPORTED_MODULE_2___default()(v.addonSpotlight.endDate).format()) {
                priority = 'addonSpotlight';
                v.priority = 'addonSpotlight';
                v.addonSpotlight.startDate = moment__WEBPACK_IMPORTED_MODULE_2___default()(v.addonSpotlight.startDate).format();
                v.addonSpotlight.endDate = moment__WEBPACK_IMPORTED_MODULE_2___default()(v.addonSpotlight.endDate).format();
              }
            }
          }

          return v;
        });
        setProductList(inputDataList);
      }
    }
  }

  function setCurrentImg(id, imgIndex) {
    if (id != null && imgIndex != null) {
      let data = productList.map(function (item) {
        if (item._id == id) {
          item.currentImg = imgIndex;
        }

        return item;
      });
      setProductList(data);
    }
  }

  function toggleSeeMore(id) {
    if (id != null) {
      let data = productList.map(function (item) {
        if (item._id == id) {
          item.seeMore = !item.seeMore;
        }

        return item;
      });
      setProductList(data);
    }
  }

  const scrollToLeftBtn = (v, i) => {
    let minusOne = v.currentImg - 1;

    if (minusOne >= 0) {
      setCurrentImg(v._id, minusOne);
    } else {
      setCurrentImg(v._id, v.carUrl.length - 1);
    }
  };

  const scrollToRightBtn = (v, i) => {
    let plusOne = v.currentImg + 1;

    if (plusOne < v.carUrl.length) {
      setCurrentImg(v._id, plusOne);
    } else {
      setCurrentImg(v._id, 0);
    }
  };

  const renderCurrentImg = (v, i) => {
    if (Object(_common_function__WEBPACK_IMPORTED_MODULE_9__["notEmptyLength"])(v.carUrl)) {
      if (v.currentImg != null && v.currentImg < v.carUrl.length) {
        return __jsx(next_link__WEBPACK_IMPORTED_MODULE_20___default.a, {
          shallow: false,
          passHref: true,
          href: _route__WEBPACK_IMPORTED_MODULE_22__["routePaths"].viewCarDetails.to || '/',
          as: typeof _route__WEBPACK_IMPORTED_MODULE_22__["routePaths"].viewCarDetails.as == 'function' ? _route__WEBPACK_IMPORTED_MODULE_22__["routePaths"].viewCarDetails.as(v) : '/'
        }, __jsx("a", null, __jsx(react__WEBPACK_IMPORTED_MODULE_3___default.a.Fragment, null, __jsx("div", {
          className: "wrap-product-ads-img-horizontal"
        }, __jsx("img", {
          src: v.carUrl[v.currentImg].url,
          className: "head-product-ads-img"
        })))));
      } else {
        return __jsx(next_link__WEBPACK_IMPORTED_MODULE_20___default.a, {
          shallow: false,
          passHref: true,
          href: _route__WEBPACK_IMPORTED_MODULE_22__["routePaths"].viewCarDetails.to || '/',
          as: typeof _route__WEBPACK_IMPORTED_MODULE_22__["routePaths"].viewCarDetails.as == 'function' ? _route__WEBPACK_IMPORTED_MODULE_22__["routePaths"].viewCarDetails.as(v) : '/'
        }, __jsx("a", null, __jsx(react__WEBPACK_IMPORTED_MODULE_3___default.a.Fragment, null, __jsx("div", {
          className: "wrap-product-ads-img-horizontal"
        }, __jsx("div", {
          className: "overlay"
        }, __jsx("img", {
          src: "/assets/Ccar-logo.png"
        })), __jsx("img", {
          src: v.carUrl[0].url,
          className: "head-product-ads-img"
        })))));
      }
    } else {
      return __jsx(next_link__WEBPACK_IMPORTED_MODULE_20___default.a, {
        shallow: false,
        passHref: true,
        href: _route__WEBPACK_IMPORTED_MODULE_22__["routePaths"].viewCarDetails.to || '/',
        as: typeof _route__WEBPACK_IMPORTED_MODULE_22__["routePaths"].viewCarDetails.as == 'function' ? _route__WEBPACK_IMPORTED_MODULE_22__["routePaths"].viewCarDetails.as(v) : '/'
      }, __jsx("a", null, __jsx(react__WEBPACK_IMPORTED_MODULE_3___default.a.Fragment, null, __jsx("div", {
        className: "wrap-product-ads-img-horizontal"
      }, __jsx("div", {
        className: "overlay-condition"
      }, _renderCondition(v)), __jsx("div", {
        className: "overlay"
      }, __jsx("img", {
        src: "/assets/Ccar-logo.png"
      })), __jsx("img", {
        src: '/image-not-found.png',
        className: "head-product-ads-img"
      })))));
    }
  };

  const _renderImgList = (v, i) => {
    if (Object(_common_function__WEBPACK_IMPORTED_MODULE_9__["notEmptyLength"])(v.carUrl)) {
      var list = v.carUrl.map((item, index) => {
        return __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
          span: 6,
          key: index
        }, __jsx("div", {
          className: "wrap-product-ads-list-img-horizontal",
          onClick: () => {
            setCurrentImg(v._id, index);
          }
        }, __jsx("img", {
          src: item.url,
          style: {
            margin: 0
          },
          className: "head-product-ads-img w-100"
        })));
      });
      return __jsx("div", {
        className: "demo-infinite-container-list"
      }, __jsx(react_infinite_scroller__WEBPACK_IMPORTED_MODULE_4___default.a, {
        initialLoad: false,
        pageStart: 0
      }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Row"], {
        gutter: [10, 0]
      }, list)));
    } else {
      return null;
    }
  };

  const _renderState = v => {
    let value = v.state;
    return __jsx("div", {
      className: "margin-x-xs relative-wrapper",
      style: {
        height: '22px',
        width: '22%',
        float: 'right'
      }
    }, __jsx("img", {
      src: Object(_params_stateList__WEBPACK_IMPORTED_MODULE_6__["getStateIcon"])(value),
      className: "fill-parent absolute-center",
      style: {
        borderRadius: '5px'
      }
    }));
  };

  const _renderCondition = v => {
    let value = v.condition.toUpperCase();

    if (v.condition == 'new') {
      return __jsx("div", {
        className: "wrap-condition wrap-condition-new"
      }, __jsx("p", null, value));
    } else if (v.condition == 'used') {
      return __jsx("div", {
        className: "wrap-condition wrap-condition-used"
      }, __jsx("p", null, value));
    } else if (v.condition == 'recon') {
      return __jsx("div", {
        className: "wrap-condition wrap-condition-recon"
      }, __jsx("p", null, value));
    } else {
      return __jsx("div", {
        className: "wrap-condition wrap-condition-default"
      }, __jsx("p", null, value));
    }
  };

  const _renderShowHideBtn = (v, i) => {
    let count = v.description.length;
    return __jsx("div", null, __jsx("p", {
      style: {
        textDecoration: 'underline',
        textAlign: 'right'
      }
    }, count > 200 ? !v.seeMore ? __jsx("a", {
      onClick: event => {
        event.preventDefault();
        toggleSeeMore(v._id);
      }
    }, "See More") : __jsx("a", {
      onClick: event => {
        event.preventDefault();
        toggleSeeMore(v._id);
      }
    }, "Hide") : null));
  };

  const formatCountdown = (value, fixedPoint) => {
    if (value != null) {
      if (isNaN(parseFloat(value))) {
        return value;
      } else {
        value = value.toString().split('.');

        if (value[0]) {
          if (value[0].length > fixedPoint) {
            value[0] = value[0].slice(value[0].length - fixedPoint);
          }

          if (value[0].length < fixedPoint) {
            lodash__WEBPACK_IMPORTED_MODULE_1___default.a.forEach(lodash__WEBPACK_IMPORTED_MODULE_1___default.a.range(fixedPoint - value[0].length), function () {
              value[0] = '0' + value[0];
            });
          }

          return value[0];
        }

        return value;
      }
    } else {
      return value;
    }
  };

  const _renderTextTitle = v => {
    const addonSpotlight = lodash__WEBPACK_IMPORTED_MODULE_1___default.a.find(v.addon, {
      'addonType': 'spotlight'
    });

    const addonSpicydeal = lodash__WEBPACK_IMPORTED_MODULE_1___default.a.find(v.addon, {
      'addonType': 'spicydeal'
    });

    const currentDateTime = moment__WEBPACK_IMPORTED_MODULE_2___default()().format();

    if (v.addon) {
      if (v.addon && addonSpicydeal) {
        if (currentDateTime < addonSpicydeal.endDate) {
          return 'wrap-product-ads-title-horizontal';
        }
      }
    }
  };

  const _renderCountdown = v => {
    const duration = moment__WEBPACK_IMPORTED_MODULE_2___default.a.duration(moment__WEBPACK_IMPORTED_MODULE_2___default()(v).diff(moment__WEBPACK_IMPORTED_MODULE_2___default()()));
    const days = Math.floor(duration.asDays());
    const daysFormatted = days ? `${days}` : 0;
    const hours = duration.hours();
    const hoursFormatted = hours ? `${hours}` : 0;
    return __jsx("p", {
      style: {
        marginLeft: '10px',
        color: 'white',
        marginBottom: '0px'
      }
    }, __jsx("span", {
      style: {
        fontSize: '10px',
        verticalAlign: 'super'
      }
    }, "D "), __jsx("span", {
      style: {
        backgroundColor: '#d62828',
        borderRadius: '3px',
        fontWeight: '900',
        fontSize: '15px',
        padding: '1px 2px'
      }
    }, formatCountdown(daysFormatted, 2)), __jsx("span", {
      style: {
        fontSize: '10px',
        verticalAlign: 'super'
      }
    }, " H "), __jsx("span", {
      style: {
        backgroundColor: '#d62828',
        borderRadius: '3px',
        fontWeight: '900',
        fontSize: '15px',
        padding: '1px 2px'
      }
    }, formatCountdown(hoursFormatted, 2)));
  };

  const _renderPrice = v => {
    const currentDateTime = moment__WEBPACK_IMPORTED_MODULE_2___default()().format();

    const addon = lodash__WEBPACK_IMPORTED_MODULE_1___default.a.find(v.addon, {
      'addonType': 'spicydeal'
    });

    const addon2 = lodash__WEBPACK_IMPORTED_MODULE_1___default.a.find(v.addon, {
      'addonType': 'kingad'
    });

    if (v.addon && addon) {
      if (currentDateTime < addon.endDate) {
        if (addon.addonType === 'spicydeal' && addon.showPrice === 'show') {
          return __jsx("div", {
            className: "wrap-product-ads-price"
          }, __jsx("span", {
            style: {
              textDecoration: 'line-through',
              fontSize: '12px',
              color: '#000000'
            }
          }, "RM ", Object(_functionContent__WEBPACK_IMPORTED_MODULE_8__["formatMoney"])(v.price.toString())), " ", _renderDiscount(v), __jsx("h4", {
            style: {
              color: '#000000'
            }
          }, "RM ", Object(_functionContent__WEBPACK_IMPORTED_MODULE_8__["formatMoney"])(addon.discountedPrice.toString())));
        } else if (addon.addonType === 'spicydeal' && addon.showPrice === 'hide') {
          return __jsx("div", {
            className: "wrap-product-ads-countdown-spicydeal"
          }, __jsx("span", {
            style: {
              color: '#f9f5ef'
            }
          }, __jsx("span", null, "SuperDeal Ends in")), __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Row"], null, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
            xs: 24,
            sm: 24,
            md: 16,
            lg: 18,
            xl: 16
          }, _renderCountdown(addon.endDate))));
        } else {
          return __jsx("div", {
            className: "wrap-product-ads-price"
          }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Row"], null, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
            xs: 24,
            sm: 24,
            md: 16,
            lg: 18,
            xl: 16
          }, __jsx("p", {
            style: {
              color: '#000000',
              fontSize: '12px'
            }
          }, "RM ", Object(_functionContent__WEBPACK_IMPORTED_MODULE_8__["formatMoney"])(Object(_functionContent__WEBPACK_IMPORTED_MODULE_8__["calMonth"])(v.price).toString()), "/month"))), __jsx("h4", null, "RM ", Object(_functionContent__WEBPACK_IMPORTED_MODULE_8__["formatMoney"])(v.price.toString())));
        }
      } else if (v.addon && addon2) {
        if (currentDateTime < addon2.endDate) {
          if (addon2.addonType === 'kingad' && addon2.showPrice === 'show') {
            return __jsx("div", {
              className: "wrap-product-ads-price"
            }, __jsx("span", {
              style: {
                textDecoration: 'line-through',
                fontSize: '12px',
                color: '#000000'
              }
            }, "RM ", Object(_functionContent__WEBPACK_IMPORTED_MODULE_8__["formatMoney"])(v.price.toString())), " ", _renderDiscount(v), __jsx("h4", {
              style: {
                color: '#d62828'
              }
            }, "RM ", Object(_functionContent__WEBPACK_IMPORTED_MODULE_8__["formatMoney"])(addon2.discountedPrice.toString())), __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Row"], null, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
              xs: 24,
              sm: 24,
              md: 16,
              lg: 18,
              xl: 16
            }, __jsx("p", {
              style: {
                color: 'black',
                fontSize: '12px'
              }
            }, "RM ", Object(_functionContent__WEBPACK_IMPORTED_MODULE_8__["formatMoney"])(Object(_functionContent__WEBPACK_IMPORTED_MODULE_8__["calMonth"])(addon2.discountedPrice).toString()), "/month"))));
          } else if (addon2.addonType === 'kingad' && addon2.showPrice === 'hide') {
            return __jsx("div", {
              className: "wrap-product-ads-countdown-spicydeal"
            }, __jsx("span", {
              style: {
                color: '#f9f5ef'
              }
            }, __jsx("span", null, "SuperDeal Ends in")), "  ", __jsx("img", {
              src: _icon__WEBPACK_IMPORTED_MODULE_7__["flameRedShadow"]
            }), __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Row"], null, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
              xs: 24,
              sm: 24,
              md: 16,
              lg: 18,
              xl: 16
            }, _renderCountdown(addon2.endDate))));
          }
        }
      } else {
        return __jsx("div", {
          className: "wrap-product-ads-price"
        }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Row"], null, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
          xs: 24,
          sm: 24,
          md: 16,
          lg: 18,
          xl: 16
        }, __jsx("p", {
          style: {
            color: '#000000',
            fontSize: '12px'
          }
        }, "RM ", Object(_functionContent__WEBPACK_IMPORTED_MODULE_8__["formatMoney"])(Object(_functionContent__WEBPACK_IMPORTED_MODULE_8__["calMonth"])(v.price).toString()), "/month"))), __jsx("h4", null, "RM ", Object(_functionContent__WEBPACK_IMPORTED_MODULE_8__["formatMoney"])(v.price.toString())));
      }
    } else {
      return __jsx("div", {
        className: "wrap-product-ads-price"
      }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Row"], null, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
        xs: 24,
        sm: 24,
        md: 16,
        lg: 18,
        xl: 16
      }, __jsx("span", {
        style: {
          color: '#000000',
          fontSize: '12px'
        }
      }, "RM ", Object(_functionContent__WEBPACK_IMPORTED_MODULE_8__["formatMoney"])(Object(_functionContent__WEBPACK_IMPORTED_MODULE_8__["calMonth"])(v.price).toString()), "/month"))), __jsx("h4", null, "RM ", Object(_functionContent__WEBPACK_IMPORTED_MODULE_8__["formatMoney"])(v.price.toString())));
    }
  };

  const _renderDiscount = v => {
    const currentDateTime = moment__WEBPACK_IMPORTED_MODULE_2___default()().format();

    const addon = lodash__WEBPACK_IMPORTED_MODULE_1___default.a.find(v.addon, {
      'addonType': 'spicydeal'
    });

    const addon2 = lodash__WEBPACK_IMPORTED_MODULE_1___default.a.find(v.addon, {
      'addonType': 'kingad'
    });

    const pattern = /\.(\d*?)0+(\D*)$/gm;

    if (v.addon && addon) {
      if (currentDateTime < addon.endDate) {
        if (addon.addonType === 'spicydeal' && addon.showPrice === 'show') {
          return __jsx("span", {
            className: "wrap-condition wrap-product-ads-discount-spicydeal",
            style: {
              marginLeft: '5px'
            }
          }, addon ? (100 * (v.price - addon.discountedPrice) / v.price * -1).toFixed(1).toString().replace(pattern, '') + '%' : 0);
        }
      }
    } else if (v.addon && addon2) {
      if (currentDateTime < addon2.endDate) {
        if (addon2.addonType === 'kingad' && addon2.showPrice === 'show') {
          return __jsx("span", {
            className: "wrap-condition wrap-product-ads-discount-spicydeal",
            style: {
              marginLeft: '5px'
            }
          }, addon2 ? (100 * (v.price - addon2.discountedPrice) / v.price * -1).toFixed(1).toString().replace(pattern, '') + '%' : 0);
        }
      }
    }
  };

  const _renderImage = v => {
    const currentDateTime = moment__WEBPACK_IMPORTED_MODULE_2___default()().format();

    const addon = lodash__WEBPACK_IMPORTED_MODULE_1___default.a.find(v.addon, {
      'addonType': 'spicydeal'
    });

    const addon2 = lodash__WEBPACK_IMPORTED_MODULE_1___default.a.find(v.addon, {
      'addonType': 'kingad'
    });

    if (v.addon && addon) {
      if (currentDateTime < addon.endDate) {
        if (addon.addonType === 'spicydeal' && addon.showPrice === 'show' || addon.addonType === 'spicydeal' && addon.showPrice === 'hide') {
          return __jsx("div", {
            className: "red-flame1"
          }, __jsx("img", {
            src: _icon__WEBPACK_IMPORTED_MODULE_7__["flameRed"]
          }));
        }
      } else {
        return __jsx("img", {
          src: "/assets/Ccar-logo.png"
        });
      }
    } else if (v.addon && addon2) {
      if (currentDateTime < addon2.endDate) {
        if (addon2.addonType === 'kingad' && addon2.showPrice === 'show') {
          return __jsx("div", {
            className: "red-flame1"
          }, __jsx("img", {
            src: _icon__WEBPACK_IMPORTED_MODULE_7__["flameRed"]
          }));
        } else if (addon2.addonType === 'kingad' && addon2.showPrice === 'hide') {
          return __jsx("div", {
            className: "red-flame1"
          }, __jsx("img", {
            src: _icon__WEBPACK_IMPORTED_MODULE_7__["flameRed"]
          }));
        }
      } else {
        return __jsx("img", {
          src: "/assets/Ccar-logo.png"
        });
      }
    } else {
      return __jsx("img", {
        src: "/assets/Ccar-Spotlight.gif"
      });
    }
  };

  const _renderLayout = v => {
    if (!v.priority) {
      return 'wrap-product-ads';
    }

    if (v.priority === 'addonSpotlight' || v.priority === 'addonKingadType3') {
      return 'wrap-product-ads-spotlight';
    } else if (v.priority === 'addonSpicydeal' || v.priority === 'addonKingadType' || v.priority === 'addonKingadType2') {
      return 'wrap-product-ads-spicydeal';
    } else {
      return 'wrap-product-ads';
    }
  };

  const _renderList = data => {
    if (Object(_common_function__WEBPACK_IMPORTED_MODULE_9__["notEmptyLength"])(data)) {
      return data.map((v, i) => __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
        key: i,
        xs: 24,
        style: {
          marginBottom: '10px'
        },
        className: "gutter-row, box-shadow-thin",
        sm: 24,
        md: 24,
        lg: 24,
        xl: 24
      }, __jsx("div", {
        className: `${_renderLayout(v)} relative-wrapper`,
        id: _renderTextTitle(v)
      }, v.priority === 'addonKingadType' || v.priority === 'addonKingadType2' || v.priority === 'addonKingadType3' ? __jsx(next_link__WEBPACK_IMPORTED_MODULE_20___default.a, {
        href: _route__WEBPACK_IMPORTED_MODULE_22__["routePaths"].viewCarDetails.to || '/',
        as: typeof _route__WEBPACK_IMPORTED_MODULE_22__["routePaths"].viewCarDetails.as == 'function' ? _route__WEBPACK_IMPORTED_MODULE_22__["routePaths"].viewCarDetails.as(v) : '/'
      }, __jsx("a", {
        target: "_blank"
      }, __jsx("span", {
        className: "d-inline-block",
        style: {
          position: 'absolute',
          top: 0,
          left: 20,
          zIndex: 2
        }
      }, __jsx("img", {
        src: _icon__WEBPACK_IMPORTED_MODULE_7__["rayaLamp"],
        style: {
          width: 120,
          height: 150
        }
      })))) : null, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Row"], null, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
        span: 10
      }, __jsx("div", {
        className: "overlay-condition-list"
      }, _renderCondition(v)), __jsx("div", {
        className: "overlay-state-responsive"
      }, _renderState(v)), renderCurrentImg(v, i), __jsx("div", {
        className: "relative-wrapper fill-parent"
      }, __jsx("span", {
        className: "d-inline-block",
        style: {
          position: 'absolute',
          right: 0,
          bottom: 10
        }
      }, v.priority === 'addonSpicydeal' || v.priority === 'addonKingadType' || v.priority === 'addonKingadType2' ? __jsx("img", {
        src: _icon__WEBPACK_IMPORTED_MODULE_7__["rayaFlame"],
        style: {
          width: 50,
          height: 50
        }
      }) : v.priority === 'addonSpotlight' || v.priority === 'addonKingadType3' ? __jsx("img", {
        src: _icon__WEBPACK_IMPORTED_MODULE_7__["rayaFood"],
        style: {
          width: 50,
          height: 50
        }
      }) : __jsx("img", {
        src: "/assets/Ccar-Spotlight.gif",
        style: {
          width: 35,
          height: 35,
          padding: '4px'
        }
      }))), __jsx("span", {
        className: "text-align-right gridTopRight"
      }, props.topRight ? props.topRight(v) : null), lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(v, ['readyStock']) == 'Yes' ? __jsx("span", {
        className: "text-align-right avatar background-green readyStockDotList"
      }) : null), __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
        span: 14
      }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Row"], null, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
        span: 24,
        className: "relative-wrapper"
      }, v.priority === 'addonSpicydeal' || v.priority === 'addonKingadType' || v.priority === 'addonKingadType2' ? __jsx("img", {
        src: _icon__WEBPACK_IMPORTED_MODULE_7__["rayaMosque"],
        style: {
          width: 70,
          height: 70,
          position: 'absolute',
          bottom: 0,
          right: 0,
          zIndex: 0
        }
      }) : v.priority === 'addonSpotlight' || v.priority === 'addonKingadType3' ? __jsx("img", {
        src: _icon__WEBPACK_IMPORTED_MODULE_7__["rayaPeople"],
        style: {
          width: 70,
          height: 70,
          position: 'absolute',
          bottom: 0,
          right: 0,
          zIndex: 0
        }
      }) : null, __jsx("div", {
        className: "wrap-product-ads-title-horizontal relative-wrapper"
      }, __jsx(next_link__WEBPACK_IMPORTED_MODULE_20___default.a, {
        href: _route__WEBPACK_IMPORTED_MODULE_22__["routePaths"].viewCarDetails.to || '/',
        as: typeof _route__WEBPACK_IMPORTED_MODULE_22__["routePaths"].viewCarDetails.as == 'function' ? _route__WEBPACK_IMPORTED_MODULE_22__["routePaths"].viewCarDetails.as(v) : '/'
      }, __jsx("a", {
        target: "_blank"
      }, __jsx("div", {
        className: "text-truncate-twoline",
        style: {
          lineHeight: 1.2
        }
      }, __jsx("label", null, v.title)))), __jsx("div", {
        className: "relative-wrapper"
      }, __jsx("p", {
        style: {
          marginBottom: '0px'
        }
      }, v.carspecsAll ? v.carspecsAll.transmission + ' | ' + Object(_functionContent__WEBPACK_IMPORTED_MODULE_8__["renderMileageRange"])(v.mileage, v.mileage2) + ' | ' + (v.color ? v.color.toUpperCase() : '') : ''))), __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Row"], {
        gutter: 0,
        style: {
          paddingLeft: '10px',
          paddingRight: '10px'
        }
      }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
        xs: 24,
        sm: 24,
        md: 18,
        lg: 18,
        xl: 18
      }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Row"], null, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
        span: 24
      }, __jsx("p", {
        style: {
          marginBottom: '0px',
          fontWeight: '700',
          textOverflow: 'ellipsis',
          overflow: 'hidden',
          whiteSpace: 'nowrap',
          lineHeight: 1.2
        }
      }, v.createdBy ? v.createdBy.namePrefix : null, " ", v.createdBy ? v.createdBy.firstName : null, " ", v.createdBy ? v.createdBy.lastName : null, " "))), __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Row"], null, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
        span: 24
      }, __jsx("p", {
        style: {
          fontSize: '14px'
        },
        className: "product-ads-company"
      }, v.companys ? v.companys.name : null, " "))), __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Row"], {
        style: {
          height: '42px'
        }
      }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
        span: 24
      }, _renderPrice(v))))))), __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Row"], {
        gutter: [5, 0],
        className: "padding-x-sm padding-y-xs flex-items-align-end flex-justify-end"
      }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
        xs: 6,
        sm: 6,
        md: 6,
        lg: 6,
        xl: 6
      }, lodash__WEBPACK_IMPORTED_MODULE_1___default.a.isArray(v.registrationUrl) && Object(_common_function__WEBPACK_IMPORTED_MODULE_9__["notEmptyLength"])(v.registrationUrl) ? __jsx(_general_registerCard__WEBPACK_IMPORTED_MODULE_15__["default"], {
        key: "register",
        button: __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Button"], {
          type: "normal",
          className: "w-100 ads-purchase-button",
          style: {
            padding: 0,
            background: 'rgb(209 ,110, 132)',
            borderColor: 'rgb(209 ,110, 132)'
          }
        }, __jsx("img", {
          src: "/assets/CarListingIconMobile/registration-card.png"
        })),
        registrationUrl: v.registrationUrl
      }) : __jsx("div", {
        className: "width-100"
      }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Button"], {
        type: "normal",
        className: "width-100 ads-purchase-button cursor-not-allowed",
        style: {
          padding: 0,
          background: 'rgb(237, 236, 234)',
          borderColor: 'rgb(237, 236, 234)'
        }
      }, __jsx("img", {
        src: "/assets/CarListingIconMobile/registration-card.png"
      })))), __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
        xs: 6,
        sm: 6,
        md: 6,
        lg: 6,
        xl: 6
      }, __jsx(_general_calculator_modal__WEBPACK_IMPORTED_MODULE_16__["default"], {
        key: "calculator",
        button: () => {
          return __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Tooltip"], {
            placement: "top",
            title: `Calculate This Car Monthly Pay`
          }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Button"], {
            style: {
              paddingLeft: '9px',
              paddingRight: '9px'
            },
            className: "width-100"
          }, __jsx("div", {
            className: "fill-parent flex-items-align-center width-100 flex-justify-center"
          }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Icon"], {
            type: "calculator",
            className: "ccar-yellow cursor-pointer",
            style: {
              fontSize: '20px'
            }
          }))));
        },
        data: {
          price: v.price,
          downpayment: v.price * 0.1,
          loanPeriod: 9,
          interestRate: 3
        }
      }))), __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Row"], {
        gutter: [5, 0],
        className: "padding-sm"
      }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
        xs: 6,
        sm: 6,
        md: 6,
        lg: 6,
        xl: 6
      }, __jsx(_general_whatapps_button__WEBPACK_IMPORTED_MODULE_13__["default"], {
        mobileNumber: v ? v : null
      })), __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
        xs: 6,
        sm: 6,
        md: 6,
        lg: 6,
        xl: 6
      }, __jsx(_general_contactList__WEBPACK_IMPORTED_MODULE_14__["default"], {
        companys: v.companys ? v.companys : null,
        contactPerson: Object(_common_function__WEBPACK_IMPORTED_MODULE_9__["notEmptyLength"])(v.createdBy) ? v.createdBy : null
      })), __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
        xs: 6,
        sm: 6,
        md: 6,
        lg: 6,
        xl: 6
      }, __jsx(_general_add_compare_product_button__WEBPACK_IMPORTED_MODULE_17__["default"], {
        data: v
      })), __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
        xs: 6,
        sm: 6,
        md: 6,
        lg: 6,
        xl: 6
      }, __jsx(_general_car_360_view_button__WEBPACK_IMPORTED_MODULE_18__["default"], {
        id: v.xmlUrl ? v._id : null
      }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Button"], {
        type: "normal",
        className: `w-100 ads-purchase-button ${v.xmlUrl ? 'cursor-pointer' : 'cursor-not-allowed '}`,
        style: {
          padding: 0,
          background: v.xmlUrl ? 'rgb(85,204,212)' : 'rgb(237, 236, 234)',
          borderColor: v.xmlUrl ? 'rgb(85,204,212)' : 'rgb(237, 236, 234)'
        }
      }, __jsx("img", {
        src: "/assets/profile/icon-list/Ccar-360_1.gif"
      }))))))))));
    } else {
      return null;
    }
  };

  return __jsx("div", {
    className: props.className ? props.className : null,
    style: props.style ? props.style : null
  }, _renderList(Object(_common_function__WEBPACK_IMPORTED_MODULE_9__["notEmptyLength"])(productList) ? productList : []));
};

const mapStateToProps = state => ({
  app: state.app,
  user: state.user
});

const mapDispatchToProps = {
  loading: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_10__["loading"],
  setUser: _redux_actions_user_actions__WEBPACK_IMPORTED_MODULE_11__["setUser"]
};
/* harmony default export */ __webpack_exports__["default"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_5__["connect"])(mapStateToProps, mapDispatchToProps)(antd__WEBPACK_IMPORTED_MODULE_0__["Form"].create()(Object(next_dist_client_router__WEBPACK_IMPORTED_MODULE_19__["withRouter"])(ProductList))));

/***/ }),

/***/ "./components/product-list/grid-product-list.jsx":
/*!*******************************************************!*\
  !*** ./components/product-list/grid-product-list.jsx ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! antd */ "antd");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(antd__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! moment */ "moment");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react-redux */ "react-redux");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _params_common__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../params/common */ "./params/common.js");
/* harmony import */ var _params_stateList__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../params/stateList */ "./params/stateList.js");
/* harmony import */ var _common_function__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../common-function */ "./common-function.js");
/* harmony import */ var next_dist_client_router__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! next/dist/client/router */ "./node_modules/next/dist/client/router.js");
/* harmony import */ var next_dist_client_router__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(next_dist_client_router__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! next/link */ "./node_modules/next/link.js");
/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(next_link__WEBPACK_IMPORTED_MODULE_9__);
/* harmony import */ var _ant_design_compatible__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @ant-design/compatible */ "@ant-design/compatible");
/* harmony import */ var _ant_design_compatible__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(_ant_design_compatible__WEBPACK_IMPORTED_MODULE_10__);
/* harmony import */ var _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../redux/actions/app-actions */ "./redux/actions/app-actions.js");
/* harmony import */ var _functionContent__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../functionContent */ "./functionContent.js");
/* harmony import */ var _general_add_compare_product_button1__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../general/add-compare-product-button1 */ "./components/general/add-compare-product-button1.jsx");
/* harmony import */ var _general_car_360_view_button__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../general/car-360-view-button */ "./components/general/car-360-view-button.jsx");
/* harmony import */ var _icon__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../icon */ "./icon.js");
/* harmony import */ var _general_Loading__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../general/Loading */ "./components/general/Loading.jsx");
/* harmony import */ var _general_whatapps_button1__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../general/whatapps-button1 */ "./components/general/whatapps-button1.jsx");
/* harmony import */ var _general_contactList1__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../general/contactList1 */ "./components/general/contactList1.jsx");
/* harmony import */ var _general_registerCard__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../general/registerCard */ "./components/general/registerCard.jsx");
/* harmony import */ var _general_calculator_modal__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../general/calculator-modal */ "./components/general/calculator-modal.jsx");
/* harmony import */ var _skeleton_loader_GridProductSkeleton__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../skeleton-loader/GridProductSkeleton */ "./components/skeleton-loader/GridProductSkeleton.jsx");
/* harmony import */ var _route__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ../../route */ "./route.js");
var __jsx = react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement;























const currentDateTime = moment__WEBPACK_IMPORTED_MODULE_2___default()().format();

const GridProductList = props => {
  const {
    0: productList,
    1: setProductList
  } = Object(react__WEBPACK_IMPORTED_MODULE_3__["useState"])([]);
  const {
    0: initLoading,
    1: setInitLoading
  } = Object(react__WEBPACK_IMPORTED_MODULE_3__["useState"])(true);
  Object(react__WEBPACK_IMPORTED_MODULE_3__["useEffect"])(() => {
    // processAddonProduct()
    processAddonProduct();
    var interval2 = setInterval(() => {
      processAddonProduct();
    }, 60000);
    return () => clearInterval(interval2);
  }, [props.data]);

  function processAddonProduct() {
    let currentDateTime = moment__WEBPACK_IMPORTED_MODULE_2___default()().format();

    if (Object(_common_function__WEBPACK_IMPORTED_MODULE_7__["notEmptyLength"])(props.data)) {
      if (props.data != productList) {
        setProductList([]);

        let inputDataList = lodash__WEBPACK_IMPORTED_MODULE_1___default.a.cloneDeep(props.data);

        inputDataList.map(function (v) {
          v.addonSpotlight = lodash__WEBPACK_IMPORTED_MODULE_1___default.a.find(v.addon, {
            'addonType': 'spotlight'
          });
          v.addonSpicydeal = lodash__WEBPACK_IMPORTED_MODULE_1___default.a.find(v.addon, {
            'addonType': 'spicydeal'
          });
          v.addonKingadType = lodash__WEBPACK_IMPORTED_MODULE_1___default.a.find(v.addon, {
            'addonType': 'kingad',
            'showPrice': 'show'
          });
          v.addonKingadType2 = lodash__WEBPACK_IMPORTED_MODULE_1___default.a.find(v.addon, {
            'addonType': 'kingad',
            'showPrice': 'hide'
          });
          v.addonKingadType3 = lodash__WEBPACK_IMPORTED_MODULE_1___default.a.find(v.addon, {
            'addonType': 'kingad',
            'showPrice': 'highlight'
          });
          let priority = '';
          v.priority = '';

          if (priority === '') {
            if (v.addonKingadType) {
              if (currentDateTime > moment__WEBPACK_IMPORTED_MODULE_2___default()(v.addonKingadType.startDate).format() && currentDateTime < moment__WEBPACK_IMPORTED_MODULE_2___default()(v.addonKingadType.endDate).format()) {
                priority = 'addonKingadType';
                v.priority = 'addonKingadType';
                v.addonKingadType.endDate = moment__WEBPACK_IMPORTED_MODULE_2___default()(v.addonKingadType.endDate).format();
                v.addonKingadType.startDate = moment__WEBPACK_IMPORTED_MODULE_2___default()(v.addonKingadType.startDate).format();
              }
            }
          }

          if (priority === '') {
            if (v.addonKingadType2) {
              if (currentDateTime > moment__WEBPACK_IMPORTED_MODULE_2___default()(v.addonKingadType2.startDate).format() && currentDateTime < moment__WEBPACK_IMPORTED_MODULE_2___default()(v.addonKingadType2.endDate).format()) {
                priority = 'addonKingadType2';
                v.priority = 'addonKingadType2';
                v.addonKingadType2.startDate = moment__WEBPACK_IMPORTED_MODULE_2___default()(v.addonKingadType2.startDate).format();
                v.addonKingadType2.endDate = moment__WEBPACK_IMPORTED_MODULE_2___default()(v.addonKingadType2.endDate).format();
              }
            }
          }

          if (priority === '') {
            if (v.addonKingadType3) {
              if (currentDateTime > moment__WEBPACK_IMPORTED_MODULE_2___default()(v.addonKingadType3.startDate).format() && currentDateTime < moment__WEBPACK_IMPORTED_MODULE_2___default()(v.addonKingadType3.endDate).format()) {
                priority = 'addonKingadType3';
                v.priority = 'addonKingadType3';
                v.addonKingadType3.startDate = moment__WEBPACK_IMPORTED_MODULE_2___default()(v.addonKingadType3.startDate).format();
                v.addonKingadType3.endDate = moment__WEBPACK_IMPORTED_MODULE_2___default()(v.addonKingadType3.endDate).format();
              }
            }
          }

          if (priority === '') {
            if (v.addonSpicydeal) {
              if (currentDateTime > moment__WEBPACK_IMPORTED_MODULE_2___default()(v.addonSpicydeal.startDate).format() && currentDateTime < moment__WEBPACK_IMPORTED_MODULE_2___default()(v.addonSpicydeal.endDate).format()) {
                priority = 'addonSpicydeal';
                v.priority = 'addonSpicydeal';
                v.addonSpicydeal.startDate = moment__WEBPACK_IMPORTED_MODULE_2___default()(v.addonSpicydeal.startDate).format();
                v.addonSpicydeal.endDate = moment__WEBPACK_IMPORTED_MODULE_2___default()(v.addonSpicydeal.endDate).format();
              }
            }
          }

          if (priority === '') {
            if (v.addonSpotlight) {
              if (currentDateTime > moment__WEBPACK_IMPORTED_MODULE_2___default()(v.addonSpotlight.startDate).format() && currentDateTime < moment__WEBPACK_IMPORTED_MODULE_2___default()(v.addonSpotlight.endDate).format()) {
                priority = 'addonSpotlight';
                v.priority = 'addonSpotlight';
                v.addonSpotlight.startDate = moment__WEBPACK_IMPORTED_MODULE_2___default()(v.addonSpotlight.startDate).format();
                v.addonSpotlight.endDate = moment__WEBPACK_IMPORTED_MODULE_2___default()(v.addonSpotlight.endDate).format();
              }
            }
          }

          return v;
        });
        setProductList(inputDataList);
      }
    }
  }

  Object(react__WEBPACK_IMPORTED_MODULE_3__["useEffect"])(() => {
    setInitLoading(props.productsList.productListLoading);
  }, [props.productsList.productListLoading]);

  const _renderState = v => {
    let value = lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(v, ['companys', 'state']);

    let value2 = lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(v, ['createdBy', 'userstate']);

    if (lodash__WEBPACK_IMPORTED_MODULE_1___default.a.isEmpty(value2) === false) {
      value = value2;
    }

    return __jsx("div", {
      className: "width-20 relative-wrapper gridStateFloatRight",
      style: {
        width: '15%',
        height: '10%'
      }
    }, __jsx("img", {
      src: Object(_params_stateList__WEBPACK_IMPORTED_MODULE_6__["getStateIcon"])(value) || _params_common__WEBPACK_IMPORTED_MODULE_5__["imageNotFoundIcon"],
      className: "fill-parent absolute-center",
      style: {
        marginTop: '0px'
      }
    }));
  };

  const _renderCondition = v => {
    let value = v.condition.toUpperCase();

    if (v.condition == 'new') {
      return __jsx("div", {
        className: "wrap-condition wrap-condition-new"
      }, __jsx("p", null, value));
    } else if (v.condition == 'used') {
      return __jsx("div", {
        className: "wrap-condition wrap-condition-used"
      }, __jsx("p", null, value));
    } else if (v.condition == 'recon') {
      return __jsx("div", {
        className: "wrap-condition wrap-condition-recon"
      }, __jsx("p", null, value));
    } else {
      return __jsx("div", {
        className: "wrap-condition wrap-condition-default"
      }, __jsx("p", null, value));
    }
  };

  const formatCountdown = (value, fixedPoint) => {
    if (value != null) {
      if (isNaN(parseFloat(value))) {
        return value;
      } else {
        value = value.toString().split('.');

        if (value[0]) {
          if (value[0].length > fixedPoint) {
            value[0] = value[0].slice(value[0].length - fixedPoint);
          }

          if (value[0].length < fixedPoint) {
            lodash__WEBPACK_IMPORTED_MODULE_1___default.a.forEach(lodash__WEBPACK_IMPORTED_MODULE_1___default.a.range(fixedPoint - value[0].length), function () {
              value[0] = '0' + value[0];
            });
          }

          return value[0];
        }

        return value;
      }
    } else {
      return value;
    }
  };

  const _renderLayout = v => {
    if (!v.priority) {
      return 'wrap-product-ads';
    }

    if (v.priority === 'addonSpotlight' || v.priority === 'addonKingadType3') {
      return 'wrap-product-ads-spotlight';
    } else if (v.priority === 'addonSpicydeal' || v.priority === 'addonKingadType' || v.priority === 'addonKingadType2') {
      return 'wrap-product-ads-spicydeal';
    } else {
      return 'wrap-product-ads';
    }
  };

  const _renderPrice = v => {
    let normalPrice = __jsx("div", {
      className: "wrap-product-ads-price"
    }, __jsx("h4", null, "RM ", Object(_functionContent__WEBPACK_IMPORTED_MODULE_12__["formatMoney"])(v.price.toString())), __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Row"], null, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
      xs: 14,
      sm: 14,
      md: 16,
      lg: 16,
      xl: 16
    }, __jsx("span", {
      className: "installmentPrice"
    }, "RM ", Object(_functionContent__WEBPACK_IMPORTED_MODULE_12__["formatMoney"])(Object(_functionContent__WEBPACK_IMPORTED_MODULE_12__["calMonth"])(v.price).toString()), "/month"))));

    function renderShowPrice(price, discountedPrice) {
      const pattern = /\.(\d*?)0+(\D*)$/gm;
      return __jsx("div", {
        className: "wrap-product-ads-price"
      }, __jsx("div", {
        style: {
          display: 'inline-block',
          width: '49%'
        }
      }, __jsx("p", {
        style: {
          fontWeight: '700'
        },
        className: "gridMoneyText"
      }, " RM ", Object(_functionContent__WEBPACK_IMPORTED_MODULE_12__["formatMoney"])(price.toString())), __jsx("p", {
        style: {
          fontWeight: '700'
        },
        className: "gridMoneyText",
        style: {
          color: '#395589'
        }
      }, "RM ", Object(_functionContent__WEBPACK_IMPORTED_MODULE_12__["formatMoney"])(Object(_functionContent__WEBPACK_IMPORTED_MODULE_12__["calMonth"])(v.price).toString()), "/month")), __jsx("div", {
        style: {
          display: 'inline-block',
          width: '49%',
          marginLeft: '5px'
        }
      }, __jsx("p", {
        style: {
          color: '#000000',
          fontWeight: '700'
        }
      }, "RM ", Object(_functionContent__WEBPACK_IMPORTED_MODULE_12__["formatMoney"])(discountedPrice.toString())), __jsx("p", {
        style: {
          color: '#395589',
          fontWeight: '700'
        }
      }, " RM ", Object(_functionContent__WEBPACK_IMPORTED_MODULE_12__["formatMoney"])(Object(_functionContent__WEBPACK_IMPORTED_MODULE_12__["calMonth"])(discountedPrice).toString()), "/month ")));
    }

    function renderCountdown(endDate) {
      const duration = moment__WEBPACK_IMPORTED_MODULE_2___default.a.duration(moment__WEBPACK_IMPORTED_MODULE_2___default()(endDate).diff(moment__WEBPACK_IMPORTED_MODULE_2___default()()));
      const days = Math.floor(duration.asDays());
      const daysFormatted = days ? `${days}` : 0;
      const hours = duration.hours();
      const minutes = duration.minutes();
      const hoursFormatted = hours ? `${hours}` : 0;
      const minutesFormatted = minutes ? `${minutes}` : 0;
      return __jsx("div", {
        className: "wrap-product-ads-countdown-spicydeal"
      }, __jsx("span", {
        className: "gridAddonMainText"
      }, __jsx("span", null, "SuperDeal Ends in")), __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Row"], null, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
        xs: 14,
        sm: 14,
        md: 16,
        lg: 16,
        xl: 16
      }, __jsx("p", {
        className: "gridAddonDayHourSubText"
      }, __jsx("span", {
        className: "gridAddonDayHourText"
      }, "D "), __jsx("span", {
        className: "gridAddonDayHour"
      }, formatCountdown(daysFormatted, 2)), __jsx("span", {
        className: "gridAddonDayHourText"
      }, " H "), __jsx("span", {
        className: "gridAddonDayHour"
      }, formatCountdown(hoursFormatted, 2)), __jsx("span", {
        className: "gridAddonDayHourText"
      }, " M "), __jsx("span", {
        className: "gridAddonDayHour"
      }, formatCountdown(minutesFormatted, 2))))));
    }

    if (v.priority === 'addonKingadType') {
      return renderShowPrice(v.price, v.addonKingadType.discountedPrice);
    } else if (v.priority === 'addonKingadType2') {
      return renderCountdown(v.addonKingadType2.endDate);
    } else if (v.priority === 'addonSpicydeal') {
      if (v.addonSpicydeal.showPrice === 'show') {
        return renderShowPrice(v.price, v.addonSpicydeal.discountedPrice);
      }

      if (v.addonSpicydeal.showPrice === 'hide') {
        return renderCountdown(v.addonSpicydeal.endDate);
      }
    } else {
      return normalPrice;
    }
  };

  const _renderIcon = (v, type) => {
    let defaultIcon = __jsx("img", {
      src: "/assets/profile/icon-list/account-info-active.png",
      className: "fill-parent"
    });

    let blackIcon = __jsx("img", {
      src: "/assets/profile/icon-list/dealer.png",
      className: "fill-parent"
    });

    if (type === 'company') {
      defaultIcon = eval(__jsx("img", {
        src: "/assets/profile/icon-list/address-work.png",
        className: "fill-parent"
      }));
      blackIcon = eval(__jsx("img", {
        src: "/assets/profile/icon-list/company.png",
        className: "fill-parent"
      }));
    }

    if (type === 'area') {
      defaultIcon = eval(__jsx("img", {
        src: "/assets/profile/icon-list/location-latest.png",
        className: "fill-parent"
      }));
      blackIcon = eval(__jsx("img", {
        src: "/assets/profile/icon-list/location-long.png",
        className: "fill-parent"
      }));
    }

    if (v.priority === 'addonSpicydeal' || v.priority === 'addonKingadType' || v.priority === 'addonKingadType2' || v.priority === 'addonKingadType3' || v.priority === 'addonSpotlight') {
      return blackIcon;
    } else {
      return defaultIcon;
    }
  };

  const _renderImage = v => {
    if (v.priority === 'addonSpicydeal' || v.priority === 'addonKingadType' || v.priority === 'addonKingadType2' // ||  v.priority === 'addonKingadType3'
    ) {
        // return (<div className="red-flame"><img src={flameRed} /></div>)
        return __jsx("div", {
          className: "red-flame"
        }, __jsx("img", {
          src: _icon__WEBPACK_IMPORTED_MODULE_15__["rayaFlame"],
          style: {
            width: 50,
            height: 50
          }
        }));
      } else {
      // return (<div className="spotlight"><img src="/assets/Ccar-Spotlight.gif" /></div>)
      return __jsx("div", {
        className: "spotlight"
      }, __jsx("img", {
        src: _icon__WEBPACK_IMPORTED_MODULE_15__["rayaFood"],
        style: {
          width: 50,
          height: 50
        }
      }));
    }
  };

  const _renderList = data => {
    if (Object(_common_function__WEBPACK_IMPORTED_MODULE_7__["notEmptyLength"])(data)) {
      return __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Row"], {
        gutter: [20, 20]
      }, __jsx("div", {
        className: "d-flex scroller-type",
        style: {
          overflow: 'scroll'
        }
      }, data.map((v, i) => {
        if (v) {
          let companyName = v.companys ? v.companys.name : null;
          let areaName = v.companys ? v.companys.area : null;
          let userCompany = lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(v, ['createdBy', 'usercompanyName']) || '';

          if (lodash__WEBPACK_IMPORTED_MODULE_1___default.a.isEmpty(userCompany) === false) {
            companyName = userCompany;
          }

          let userarea = lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(v, ['createdBy', 'userarea']) || '';

          if (lodash__WEBPACK_IMPORTED_MODULE_1___default.a.isEmpty(userarea) === false) {
            areaName = userarea;
          } // let companyName = v.companys ? v.companys.name : null
          // let areaName = v.companys ? v.companys.area : null


          return __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
            key: 'product' + i,
            style: {
              padding: '5px'
            },
            className: "gridDataList",
            xs: props.xs ? props.xs : 24,
            sm: props.sm ? props.sm : 24,
            md: props.md ? props.md : 12,
            lg: props.lg ? props.lg : 8,
            xl: props.xl ? props.xl : 8
          }, __jsx("div", {
            className: "box-shadow-thin",
            key: 'listDiv' + i
          }, __jsx("div", {
            className: _renderLayout(v),
            style: {
              height: '400px'
            }
          }, __jsx("div", {
            className: "wrap-product-ads-img"
          }, __jsx(next_link__WEBPACK_IMPORTED_MODULE_9___default.a, {
            shallow: false,
            href: _route__WEBPACK_IMPORTED_MODULE_22__["routePaths"].viewCarDetails.to || '/',
            as: typeof _route__WEBPACK_IMPORTED_MODULE_22__["routePaths"].viewCarDetails.as == 'function' ? _route__WEBPACK_IMPORTED_MODULE_22__["routePaths"].viewCarDetails.as(v) : '/'
          }, __jsx("a", null, __jsx(react__WEBPACK_IMPORTED_MODULE_3___default.a.Fragment, null, __jsx("div", {
            className: "overlay-condition"
          }, _renderCondition(v)), __jsx("div", {
            className: "overlay-state"
          }, _renderState(v)), v.priority === 'addonKingadType' || v.priority === 'addonKingadType2' || v.priority === 'addonKingadType3' ? __jsx("div", {
            className: "flex-justify-center flex-items-align-start width-100",
            style: {
              position: 'absolute',
              top: 0,
              zIndex: 2
            }
          }, __jsx("img", {
            src: _icon__WEBPACK_IMPORTED_MODULE_15__["rayaLamp"],
            style: {
              width: 200,
              height: 200
            }
          })) : null, __jsx("div", {
            className: "width-100 cursor-pointer flex-justify-end flex-items-align-center",
            style: {
              position: 'absolute',
              bottom: 0,
              zIndex: 2
            }
          }, __jsx("span", {
            className: "d-inline-block margin-x-sm "
          }, v.priority === 'addonSpicydeal' || v.priority === 'addonKingadType' || v.priority === 'addonKingadType2' ? __jsx("img", {
            src: _icon__WEBPACK_IMPORTED_MODULE_15__["rayaFlame"],
            style: {
              width: 50,
              height: 50
            }
          }) : v.priority === 'addonSpotlight' || v.priority === 'addonKingadType3' ? __jsx("img", {
            src: _icon__WEBPACK_IMPORTED_MODULE_15__["rayaFood"],
            style: {
              width: 50,
              height: 50
            }
          }) : __jsx("img", {
            src: "/assets/Ccar-Spotlight.gif",
            style: {
              width: 30,
              height: 30,
              marginBottom: '10px',
              marginRight: '5px'
            }
          }))), __jsx("div", null, Object(_common_function__WEBPACK_IMPORTED_MODULE_7__["notEmptyLength"])(v.carUrl) ? __jsx("img", {
            src: v.carUrl[0].url,
            style: {
              maxInlineSize: '-webkit-fill-available'
            },
            className: "head-product-ads-img-grid",
            key: 0
          }) : __jsx("img", {
            src: '/image-not-found.png',
            className: "head-product-ads-img-grid",
            key: -1
          }))))), __jsx("span", {
            className: "text-align-right gridTopRight"
          }, props.topRight ? props.topRight(v) : null), lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(v, ['readyStock']) == 'Yes' ? __jsx("span", {
            className: "text-align-right avatar background-green readyStockDot"
          }) : null), __jsx("div", {
            className: "wrap-product-ads-text relative-wrapper"
          }, props.body ? props.body(v) : props.body === null ? null : __jsx(react__WEBPACK_IMPORTED_MODULE_3___default.a.Fragment, null, v.priority === 'addonSpicydeal' || v.priority === 'addonKingadType' || v.priority === 'addonKingadType2' ? __jsx("img", {
            src: _icon__WEBPACK_IMPORTED_MODULE_15__["rayaMosque"],
            style: {
              width: 100,
              height: 100,
              position: 'absolute',
              bottom: 50,
              right: 10
            }
          }) : v.priority === 'addonSpotlight' || v.priority === 'addonKingadType3' ? __jsx("img", {
            src: _icon__WEBPACK_IMPORTED_MODULE_15__["rayaPeople"],
            style: {
              width: 100,
              height: 100,
              position: 'absolute',
              bottom: 50,
              right: 10
            }
          }) : null, __jsx("div", {
            className: "wrap-product-ads-title"
          }, __jsx(next_link__WEBPACK_IMPORTED_MODULE_9___default.a, {
            shallow: false,
            passHref: true,
            href: _route__WEBPACK_IMPORTED_MODULE_22__["routePaths"].viewCarDetails.to || '/',
            as: typeof _route__WEBPACK_IMPORTED_MODULE_22__["routePaths"].viewCarDetails.as == 'function' ? _route__WEBPACK_IMPORTED_MODULE_22__["routePaths"].viewCarDetails.as(v) : '/'
          }, __jsx("a", null, __jsx("div", {
            className: "text-truncate-twoline"
          }, __jsx("label", {
            style: {
              fontSize: 16
            }
          }, v.title))))), __jsx("div", {
            className: "wrap-product-ads-title-p text-overflow-break"
          }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Row"], null, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
            span: 20
          }, __jsx("p", null, v.carspecsAll ? v.carspecsAll.transmission + ' | ' + Object(_functionContent__WEBPACK_IMPORTED_MODULE_12__["renderMileageRange"])(v.mileage, v.mileage2) + ' | ' + (v.color ? v.color.toUpperCase() : '') : '')))), __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Row"], {
            className: "margin-bottom-xs"
          }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
            xs: 24,
            sm: 24,
            md: 18,
            lg: 18,
            xl: 18
          }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Row"], null, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
            span: 20
          }, __jsx("p", {
            className: "gridDealerName"
          }, v.createdBy ? v.createdBy.namePrefix : null, v.createdBy ? v.createdBy.firstName : null, v.createdBy ? v.createdBy.lastName : null, " "))), __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Row"], null, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
            span: 20
          }, __jsx("p", {
            style: {
              fontSize: '14px'
            },
            className: "product-ads-company"
          }, companyName, " "))), __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Row"], {
            style: {
              height: '42px'
            }
          }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
            span: 24
          }, _renderPrice(v)))))), props.footer ? props.footer(v) : props.footer === null ? null : __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Row"], {
            type: "flex",
            justify: "start",
            align: "middle",
            className: "w-100",
            gutter: [2.5, 0]
          }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
            xs: 4,
            sm: 4,
            md: 4,
            lg: 4,
            xl: 4
          }, __jsx(_general_whatapps_button1__WEBPACK_IMPORTED_MODULE_17__["default"], {
            mobileNumber: v ? v : null
          })), __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
            xs: 4,
            sm: 4,
            md: 4,
            lg: 4,
            xl: 4
          }, __jsx(_general_contactList1__WEBPACK_IMPORTED_MODULE_18__["default"], {
            companys: v.companys ? v.companys : null,
            contactPerson: Object(_common_function__WEBPACK_IMPORTED_MODULE_7__["notEmptyLength"])(v.createdBy) ? v.createdBy : null
          })), __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
            xs: 4,
            sm: 4,
            md: 4,
            lg: 4,
            xl: 4
          }, __jsx(_general_add_compare_product_button1__WEBPACK_IMPORTED_MODULE_13__["default"], {
            data: v
          })), __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
            xs: 4,
            sm: 4,
            md: 4,
            lg: 4,
            xl: 4
          }, __jsx(_general_car_360_view_button__WEBPACK_IMPORTED_MODULE_14__["default"], {
            id: v.xmlUrl ? v._id : null
          }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Button"], {
            type: "normal",
            className: `w-100 ads-purchase-button ${v.xmlUrl ? 'cursor-pointer' : 'cursor-not-allowed '}`,
            style: {
              padding: 0,
              background: v.xmlUrl ? 'rgb(85,204,212)' : 'rgb(237, 236, 234)',
              borderColor: v.xmlUrl ? 'rgb(85,204,212)' : 'rgb(237, 236, 234)'
            }
          }, __jsx("img", {
            src: "/assets/profile/icon-list/Ccar-360_1.gif"
          })))), __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
            xs: 4,
            sm: 4,
            md: 4,
            lg: 4,
            xl: 4
          }, lodash__WEBPACK_IMPORTED_MODULE_1___default.a.isArray(v.registrationUrl) && Object(_common_function__WEBPACK_IMPORTED_MODULE_7__["notEmptyLength"])(v.registrationUrl) ? __jsx(_general_registerCard__WEBPACK_IMPORTED_MODULE_19__["default"], {
            key: "register",
            button: // [<Tooltip key='tooltipsregister' title="Registration Card">
            //   <Button type="normal" className="w-100 ads-purchase-button" style={{ padding: 0, background: 'rgb(209 ,110, 132)', borderColor: 'rgb(209 ,110, 132)' }}><img src="/assets/CarListingIconMobile/registration-card.png" /></Button>
            // </Tooltip>]
            [__jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Button"], {
              key: "btnRegister",
              type: "normal",
              className: "w-100 ads-purchase-button",
              style: {
                padding: 0,
                background: 'rgb(209 ,110, 132)',
                borderColor: 'rgb(209 ,110, 132)'
              }
            }, __jsx("img", {
              src: "/assets/profile/icon-list/carmarket-bar-icon/reg-card.png"
            }))],
            registrationUrl: v.registrationUrl
          }) : __jsx("div", {
            className: "width-100"
          }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Button"], {
            type: "normal",
            className: "width-100 ads-purchase-button cursor-not-allowed",
            style: {
              padding: 0,
              background: 'rgb(237, 236, 234)',
              borderColor: 'rgb(237, 236, 234)'
            }
          }, __jsx("img", {
            src: "/assets/profile/icon-list/carmarket-bar-icon/reg-card.png"
          })))), __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
            xs: 4,
            sm: 4,
            md: 4,
            lg: 4,
            xl: 4
          }, __jsx(_general_calculator_modal__WEBPACK_IMPORTED_MODULE_20__["default"], {
            key: "calculator",
            data: {
              price: v.searchPrice,
              downpayment: v.searchPrice * 0.1,
              loanPeriod: 9,
              interestRate: 3
            }
          })))))));
        } else {
          return null;
        }
      })));
    } else {
      return lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(props.productsList, ['productListLoading']) || initLoading ? __jsx(react__WEBPACK_IMPORTED_MODULE_3___default.a.Fragment, null, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Row"], null, lodash__WEBPACK_IMPORTED_MODULE_1___default.a.map(lodash__WEBPACK_IMPORTED_MODULE_1___default.a.range(0, 30), function (index) {
        return __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
          xs: 24,
          sm: 12,
          md: 12,
          lg: 8,
          xl: 8
        }, __jsx(_skeleton_loader_GridProductSkeleton__WEBPACK_IMPORTED_MODULE_21__["default"], null));
      }))) : __jsx("div", {
        style: {
          height: '15em',
          backgroundColor: '#FFFFFF'
        }
      }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Empty"], {
        style: {
          position: 'relative',
          top: '50%',
          transform: 'translateY(-50%)'
        },
        image: "/empty.png",
        imageStyle: {
          height: 60
        },
        description: __jsx("span", null, props.app.loading ? 'Getting Result' : 'No Result')
      }));
    }
  };

  return __jsx("div", {
    key: "listDiv2",
    className: props.className ? props.className : null,
    style: props.style ? props.style : null
  }, _renderList(Object(_common_function__WEBPACK_IMPORTED_MODULE_7__["notEmptyLength"])(productList) ? productList : []));
};

const mapStateToProps = state => ({
  app: state.app,
  user: state.user,
  productsList: state.productsList
});

const mapDispatchToProps = {
  loading: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_11__["loading"]
};
/* harmony default export */ __webpack_exports__["default"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_4__["connect"])(mapStateToProps, mapDispatchToProps)(_ant_design_compatible__WEBPACK_IMPORTED_MODULE_10__["Form"].create()(Object(next_dist_client_router__WEBPACK_IMPORTED_MODULE_8__["withRouter"])(GridProductList))));

/***/ }),

/***/ "./components/profile/CommunityBox.jsx":
/*!*********************************************!*\
  !*** ./components/profile/CommunityBox.jsx ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! antd */ "antd");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(antd__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-redux */ "react-redux");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _common_function__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../common-function */ "./common-function.js");
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next/router */ "next/router");
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_5__);
var __jsx = react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement;







const CommunityBox = props => {
  const {
    0: profile,
    1: setProfile
  } = Object(react__WEBPACK_IMPORTED_MODULE_2__["useState"])({});
  Object(react__WEBPACK_IMPORTED_MODULE_2__["useEffect"])(() => {
    if (lodash__WEBPACK_IMPORTED_MODULE_1___default.a.isPlainObject(props.data) && !lodash__WEBPACK_IMPORTED_MODULE_1___default.a.isEmpty(props.data)) {
      setProfile(props.data);
    } else {
      setProfile({});
    }
  }, [props.data]);

  const _renderComunityDetails = () => {
    try {
      return __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Row"], {
        type: "flex",
        align: "middle",
        justify: "center",
        gutter: [0, 10]
      }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
        span: 4
      }, __jsx("div", null, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Icon"], {
        type: "plus",
        style: {
          color: '#F9A825'
        }
      }))), __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
        span: 20
      }, __jsx("div", null, Object(_common_function__WEBPACK_IMPORTED_MODULE_4__["formatNumber"])(lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(profile, ['totalFollower']), 'auto', true, 0, true) || 0, " people follow this dealer")), __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
        span: 4
      }, __jsx("div", null, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Icon"], {
        type: "edit",
        style: {
          color: '#F9A825'
        }
      }))), __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
        span: 20
      }, __jsx("div", null, lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(profile, ['totalRating']) || 0, " people write review")));
    } catch (e) {
      return;
    }
  };

  return __jsx("div", null, __jsx("div", {
    style: {
      height: '30px'
    },
    className: "background-ccar-yellow round-border-top flex-items-align-center padding-lg"
  }, __jsx("div", {
    className: "headline   white font-weight-bold text-overflow-break"
  }, "Community")), __jsx("div", {
    style: {
      backgroundColor: '#FFFFFF'
    },
    className: "round-border-bottom flex-items-align-center padding-md"
  }, _renderComunityDetails()));
};

const mapStateToProps = state => ({
  app: state.app,
  user: state.user,
  sellerProfile: state.sellerProfile
});

const mapDispatchToProps = {};
/* harmony default export */ __webpack_exports__["default"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_3__["connect"])(mapStateToProps, mapDispatchToProps)(antd__WEBPACK_IMPORTED_MODULE_0__["Form"].create()(Object(next_router__WEBPACK_IMPORTED_MODULE_5__["withRouter"])(CommunityBox))));

/***/ }),

/***/ "./components/profile/CompanySummary.jsx":
/*!***********************************************!*\
  !*** ./components/profile/CompanySummary.jsx ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! antd */ "antd");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(antd__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-redux */ "react-redux");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/router */ "next/router");
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_3__);
var __jsx = react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement;





const CompanySummary = props => {
  return __jsx("div", {
    className: props.className ? props.className : null,
    style: props.style ? props.style : null
  }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Row"], {
    type: "flex",
    justify: "center",
    align: "middle",
    gutter: [0, 10]
  }, props.renderRating ? props.renderRating(props.rating ? props.rating : 0) : props.rating != null ? __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
    xs: 24,
    sm: 24,
    md: 8,
    lg: 8,
    xl: 8
  }, __jsx("div", {
    className: "h5 font-weight-bold text-align-center"
  }, props.rating, __jsx("div", {
    className: "headline   font-weight-normal"
  }, "Rating"))) : null, props.renderRecommended ? props.renderRecommended(props.recommended ? props.recommended : 0) : props.recommended != null ? __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
    xs: 24,
    sm: 24,
    md: 8,
    lg: 8,
    xl: 8
  }, __jsx("div", {
    className: "h5 font-weight-bold text-align-center"
  }, props.recommended, "%", __jsx("div", {
    className: "headline   font-weight-normal"
  }, "Rating"))) : null, props.renderRate ? props.renderRate(props.rating ? props.rating : 0) : props.rate != null ? __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
    xs: 24,
    sm: 24,
    md: 8,
    lg: 8,
    xl: 8
  }, __jsx("div", {
    className: ""
  })) : null, props.renderReview ? props.renderReview(props.review ? props.review : 0) : props.review != null ? __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
    xs: 24,
    sm: 24,
    md: 8,
    lg: 8,
    xl: 8
  }) : null));
};

const mapStateToProps = state => ({
  app: state.app,
  user: state.user
});

const mapDispatchToProps = {};
/* harmony default export */ __webpack_exports__["default"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_2__["connect"])(mapStateToProps, mapDispatchToProps)(antd__WEBPACK_IMPORTED_MODULE_0__["Form"].create()(Object(next_router__WEBPACK_IMPORTED_MODULE_3__["withRouter"])(CompanySummary))));

/***/ }),

/***/ "./components/profile/DealerProfile.jsx":
/*!**********************************************!*\
  !*** ./components/profile/DealerProfile.jsx ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! antd */ "antd");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(antd__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var next_dist_client_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/client/router */ "./node_modules/next/dist/client/router.js");
/* harmony import */ var next_dist_client_router__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_client_router__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react-redux */ "react-redux");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var react_responsive__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react-responsive */ "react-responsive");
/* harmony import */ var react_responsive__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(react_responsive__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _feathers__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../feathers */ "./feathers.js");
/* harmony import */ var _functionContent__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../functionContent */ "./functionContent.js");
/* harmony import */ var _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../redux/actions/app-actions */ "./redux/actions/app-actions.js");
/* harmony import */ var _redux_actions_productsList_actions__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../redux/actions/productsList-actions */ "./redux/actions/productsList-actions.js");
/* harmony import */ var _redux_actions_sellerProfile_actions__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../redux/actions/sellerProfile-actions */ "./redux/actions/sellerProfile-actions.js");
/* harmony import */ var _CommunityBox__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./CommunityBox */ "./components/profile/CommunityBox.jsx");
/* harmony import */ var _ProfileDetailsBox__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./ProfileDetailsBox */ "./components/profile/ProfileDetailsBox.jsx");
/* harmony import */ var _RatingBox__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./RatingBox */ "./components/profile/RatingBox.jsx");
/* harmony import */ var _RecommendDialog__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./RecommendDialog */ "./components/profile/RecommendDialog.jsx");
/* harmony import */ var _UserCarFreakPosts__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./UserCarFreakPosts */ "./components/profile/UserCarFreakPosts.jsx");
/* harmony import */ var _UserCarOnSale__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./UserCarOnSale */ "./components/profile/UserCarOnSale.jsx");
/* harmony import */ var _UserReceivedReview__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./UserReceivedReview */ "./components/profile/UserReceivedReview.jsx");
/* harmony import */ var _UserSavedCarFreakPosts__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./UserSavedCarFreakPosts */ "./components/profile/UserSavedCarFreakPosts.jsx");
/* harmony import */ var _UserSocialBoard__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./UserSocialBoard */ "./components/profile/UserSocialBoard.jsx");
/* harmony import */ var _UserSavedSocialBoard__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./UserSavedSocialBoard */ "./components/profile/UserSavedSocialBoard.jsx");
var __jsx = react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement;





















var frontUrl = Object(_functionContent__WEBPACK_IMPORTED_MODULE_7__["checkEnvReturnWebAdmin"])(_feathers__WEBPACK_IMPORTED_MODULE_6__["default"].io.io.uri);
const {
  TabPane
} = antd__WEBPACK_IMPORTED_MODULE_0__["Tabs"];
const adsverImg = '/buy-car-ads.png';

const DealerProfile = props => {
  const {
    0: profile,
    1: setProfile
  } = Object(react__WEBPACK_IMPORTED_MODULE_3__["useState"])({});
  const {
    0: videoTabKey,
    1: setVideoTabKey
  } = Object(react__WEBPACK_IMPORTED_MODULE_3__["useState"])('recordedLive');
  Object(react__WEBPACK_IMPORTED_MODULE_3__["useEffect"])(() => {
    if (lodash__WEBPACK_IMPORTED_MODULE_1___default.a.isPlainObject(props.data) && !lodash__WEBPACK_IMPORTED_MODULE_1___default.a.isEmpty(props.data)) {
      setProfile(props.data);
    } else {
      setProfile({});
    }
  }, [props.data]);
  Object(react__WEBPACK_IMPORTED_MODULE_3__["useEffect"])(() => {}, [profile]);

  const _renderDealerDetailsBox = () => {
    return __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Row"], {
      gutter: [20, 20]
    }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
      xs: 0,
      sm: 0,
      md: 24,
      lg: 24,
      xl: 24
    }, __jsx(_CommunityBox__WEBPACK_IMPORTED_MODULE_11__["default"], {
      data: profile
    })), __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
      xs: 0,
      sm: 0,
      md: 24,
      lg: 24,
      xl: 24
    }, __jsx(_RatingBox__WEBPACK_IMPORTED_MODULE_13__["default"], {
      data: profile
    })), __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
      xs: 0,
      sm: 0,
      md: 24,
      lg: 24,
      xl: 24
    }, __jsx("div", null, __jsx("img", {
      className: "w-100",
      src: adsverImg
    }))));
  };

  const _renderMenu = () => {
    return __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Row"], {
      type: "flex",
      align: "middle",
      className: "background-white"
    }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
      xs: 24,
      sm: 24,
      md: 24,
      lg: 24,
      xl: 24
    }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Tabs"], {
      defaultActiveKey: "1" // tabBarExtraContent={
      //     _.get(props.user, ['info', 'user', '_id']) && _.get(props.user, ['info', 'user', '_id']) == profile._id && (_.get(profile, ['role']) != 'normaluser' && _.get(profile, ['role']) != 'mobile-user') ?
      //         <Button className=" background-ccar-button-yellow black border-ccar-button-yellow text-align-center" shape="round" href={frontUrl} >Manage My Ads</Button>
      //         :
      //         null
      // }

    }, __jsx(TabPane, {
      tab: "Cars For Sale",
      key: "1"
    }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Row"], {
      gutter: [20, 10],
      className: "margin-top-md"
    }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
      xs: 24,
      sm: 24,
      md: 24,
      lg: 24,
      xl: 18
    }, __jsx(_UserCarOnSale__WEBPACK_IMPORTED_MODULE_16__["default"], {
      data: profile
    })))), __jsx(TabPane, {
      tab: "CarFreaks",
      key: "2"
    }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Row"], {
      gutter: [20, 10],
      className: "margin-top-md"
    }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
      xs: 24,
      sm: 24,
      md: 24,
      lg: 18,
      xl: 18
    }, __jsx(_UserCarFreakPosts__WEBPACK_IMPORTED_MODULE_15__["default"], {
      data: profile
    })))), __jsx(TabPane, {
      tab: "Social Board",
      key: "3"
    }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Row"], {
      gutter: [20, 10],
      className: "margin-top-md"
    }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
      xs: 24,
      sm: 24,
      md: 24,
      lg: 18,
      xl: 18
    }, __jsx(_UserSocialBoard__WEBPACK_IMPORTED_MODULE_19__["default"], {
      data: profile,
      className: "margin-y-lg"
    })))), lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(props.user, ['info', 'user', '_id']) && lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(props.user, ['info', 'user', '_id']) == lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(profile, ['_id']) ? __jsx(TabPane, {
      tab: "Saved CarFreaks",
      key: "4"
    }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
      xs: 18,
      sm: 18,
      md: 24,
      lg: 18,
      xl: 18
    }, __jsx(_UserSavedCarFreakPosts__WEBPACK_IMPORTED_MODULE_18__["default"], {
      data: profile,
      className: "margin-y-lg"
    }))) : null, lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(props.user, ['info', 'user', '_id']) && lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(props.user, ['info', 'user', '_id']) == lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(profile, ['_id']) ? __jsx(TabPane, {
      tab: "Saved Social Board",
      key: "5"
    }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
      xs: 18,
      sm: 18,
      md: 24,
      lg: 18,
      xl: 18
    }, __jsx(_UserSavedSocialBoard__WEBPACK_IMPORTED_MODULE_20__["default"], {
      data: profile,
      className: "margin-y-lg"
    })), __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
      xs: 6,
      sm: 6,
      md: 0,
      lg: 6,
      xl: 6
    }, _renderDealerDetailsBox())) : null, __jsx(TabPane, {
      tab: "Reviews",
      key: "6"
    }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Row"], {
      gutter: [20, 10],
      className: "margin-top-md padding-x-sm"
    }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
      xs: 24,
      sm: 24,
      md: 24,
      lg: 24,
      xl: 24
    }, _renderDealerDetailsBox()), __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
      xs: 24,
      sm: 24,
      md: 24,
      lg: 24,
      xl: 24
    }, __jsx(_UserReceivedReview__WEBPACK_IMPORTED_MODULE_17__["default"], {
      data: profile
    })))))));
  };

  return __jsx(react__WEBPACK_IMPORTED_MODULE_3___default.a.Fragment, null, __jsx("div", {
    className: "container-version3"
  }, __jsx("div", {
    className: "margin-bottom-lg margin-top-lg"
  }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Row"], null, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
    xs: 24,
    sm: 24,
    md: 24,
    lg: 24,
    xl: 24
  }, __jsx(_ProfileDetailsBox__WEBPACK_IMPORTED_MODULE_12__["default"], {
    data: profile,
    showProfileActions: props.isOwn,
    type: "dealer",
    onChangeCoverPhoto: res => {
      if (props.onChangeCoverPhoto) {
        props.onChangeCoverPhoto(res);
      }
    },
    onChange: res => {
      if (props.onChange) {
        props.onChange(res);
      }
    }
  })), __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
    xs: 24,
    sm: 24,
    md: 24,
    lg: 24,
    xl: 24
  }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Divider"], {
    className: "no-margin"
  }), _renderMenu())))), props.user.authenticated && !props.isOwn ? __jsx(_RecommendDialog__WEBPACK_IMPORTED_MODULE_14__["default"], {
    avatar: lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(profile, ['avatar']) || null,
    title: `${lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(profile, ['firstName']) || ''} ${lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(profile, ['lastName']) || ''}`,
    desc: "Would you like to recommend our shop to others?",
    type: "user",
    userId: lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(profile, ['_id']) || null,
    handleError: e => {
      antd__WEBPACK_IMPORTED_MODULE_0__["message"].error(e.message);
    }
  }) : null);
};

const mapStateToProps = state => ({
  sellCars: state.sellCars,
  productsList: state.productsList,
  app: state.app,
  user: state.user,
  sellerProfile: state.sellerProfile
});

const mapDispatchToProps = {
  updateActiveMenu: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_8__["updateActiveMenu"],
  fetchProductsList: _redux_actions_productsList_actions__WEBPACK_IMPORTED_MODULE_9__["fetchProductsList"],
  updateActiveIdProductList: _redux_actions_productsList_actions__WEBPACK_IMPORTED_MODULE_9__["updateActiveIdProductList"],
  filterCarBrandMode: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_8__["filterCarBrandMode"],
  filterCarModelMode: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_8__["filterCarModelMode"],
  filterCarSearchKeywords: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_8__["filterCarSearchKeywords"],
  quickSearchProductsList: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_8__["quickSearchProductsList"],
  loading: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_8__["loading"],
  setApplyYear: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_8__["setApplyYear"],
  setApplyPrice: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_8__["setApplyPrice"],
  setApplyMileage: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_8__["setApplyMileage"],
  updateSellerProfile: _redux_actions_sellerProfile_actions__WEBPACK_IMPORTED_MODULE_10__["updateSellerProfile"]
};
/* harmony default export */ __webpack_exports__["default"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_4__["connect"])(mapStateToProps, mapDispatchToProps)(antd__WEBPACK_IMPORTED_MODULE_0__["Form"].create()(Object(next_dist_client_router__WEBPACK_IMPORTED_MODULE_2__["withRouter"])(DealerProfile))));

/***/ }),

/***/ "./components/profile/FollowButton.jsx":
/*!*********************************************!*\
  !*** ./components/profile/FollowButton.jsx ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! antd */ "antd");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(antd__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-redux */ "react-redux");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _feathers__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../feathers */ "./feathers.js");
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next/router */ "next/router");
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _common_function__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../common-function */ "./common-function.js");
/* harmony import */ var _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../redux/actions/app-actions */ "./redux/actions/app-actions.js");
var __jsx = react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement;









const FollowButton = props => {
  const {
    0: follow,
    1: setFollowButton
  } = Object(react__WEBPACK_IMPORTED_MODULE_2__["useState"])([]);
  const {
    0: confirmModalState,
    1: setConfirmModalState
  } = Object(react__WEBPACK_IMPORTED_MODULE_2__["useState"])(false);
  const {
    0: isFollowed,
    1: setIsFollowed
  } = Object(react__WEBPACK_IMPORTED_MODULE_2__["useState"])(false);
  Object(react__WEBPACK_IMPORTED_MODULE_2__["useEffect"])(() => {
    init();
  }, [props.followerId, props[props.type + 'Id']]);

  function init() {
    if (!lodash__WEBPACK_IMPORTED_MODULE_1___default.a.isEmpty(props.followerId) && !lodash__WEBPACK_IMPORTED_MODULE_1___default.a.isEmpty(props[props.type + 'Id'])) {
      let query = {};
      query[props.type + 'Id'] = props[props.type + 'Id'];
      query.type = props.type;
      query.followerId = props.followerId;
      _feathers__WEBPACK_IMPORTED_MODULE_4__["default"].service('follows').find({
        query: query
      }).then(res => {
        if (Object(_common_function__WEBPACK_IMPORTED_MODULE_6__["notEmptyLength"])(res.data)) {
          setFollowButton(res.data[0]);
          setIsFollowed(true);
        } else {
          setFollowButton(null);
          setIsFollowed(false);
        }
      }).catch(err => {
        antd__WEBPACK_IMPORTED_MODULE_0__["message"].error(err.message);
      });
    }
  }

  function handleSuccess(success) {
    setConfirmModalState(false);

    if (props.handleSuccess) {
      props.handleSuccess(success);
    }
  }

  function handleError(error) {
    setConfirmModalState(false);

    if (props.handleError) {
      props.handleError(error);
    }
  }

  function handleSubmit() {
    if (!lodash__WEBPACK_IMPORTED_MODULE_1___default.a.isEmpty(props.followerId) && !lodash__WEBPACK_IMPORTED_MODULE_1___default.a.isEmpty(props[props.type + 'Id'])) {
      let promises = [];
      promises.push(_feathers__WEBPACK_IMPORTED_MODULE_4__["default"].authenticate());

      if (!isFollowed) {
        let data = {};
        data.type = props.type;
        data.followerId = props.followerId;
        data[props.type + 'Id'] = props[props.type + 'Id'];
        data.actionType = `follow${lodash__WEBPACK_IMPORTED_MODULE_1___default.a.capitalize(props.type)}`;
        promises.push(_feathers__WEBPACK_IMPORTED_MODULE_4__["default"].service('follows').create(data));
      } else {
        promises.push(_feathers__WEBPACK_IMPORTED_MODULE_4__["default"].service('follows').remove(follow._id));
      } //Write in follow model


      Promise.all(promises).then(([auth, followRes]) => {
        handleSuccess({
          type: isFollowed ? 'remove' : 'save',
          data: followRes
        });

        if (props.notify) {
          antd__WEBPACK_IMPORTED_MODULE_0__["message"].success(isFollowed ? 'Unfollowed' : 'Followed');
        }

        init();
      }).catch(error => {
        handleError({
          message: "Follow Failed"
        });

        if (props.notify) {
          antd__WEBPACK_IMPORTED_MODULE_0__["message"].error('Follow Failed');
        }
      });
    } else {
      if (props.notify) {
        antd__WEBPACK_IMPORTED_MODULE_0__["message"].error('Something Went Wrong!');
      }

      handleError({
        message: "Something Went Wrong!"
      });
    }
  }

  ;

  function handleChange() {
    if (!props.followerId) {
      handleError({
        message: 'Please login to follow.'
      });
      props.loginMode(true);
      return null;
    }

    if (!props[props.type + 'Id']) {
      handleError({
        message: 'Item not found!'
      });
      return null;
    }

    if (isFollowed) {
      setConfirmModalState(true);
    } else {
      handleSubmit();
    }
  }

  return __jsx("span", {
    className: props.className ? props.className : null,
    style: props.style ? props.style : null
  }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Modal"], {
    visible: confirmModalState,
    title: "Are you sure?",
    maskClosable: true,
    centered: true,
    onOk: e => {
      handleSubmit();
      setConfirmModalState(false);
    },
    onCancel: e => {
      setConfirmModalState(false);
    }
  }, __jsx("div", null, props.description || 'Do you want to unfollow?')), lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(props, ['userId']) == lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(props.user, ['info', 'user', '_id']) ? null : isFollowed ? __jsx("a", {
    onClick: () => {
      handleChange();
    }
  }, props.followingButton ? props.followingButton() : __jsx("span", null, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Icon"], {
    type: "check",
    style: {
      color: '#F57F17'
    },
    className: "margin-right-xs"
  }), "Following")) : __jsx("a", {
    onClick: () => {
      handleChange();
    }
  }, props.followButton ? props.followButton() : __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Button"], null, "+ Follow")));
};

const mapStateToProps = state => ({
  app: state.app,
  user: state.user
});

const mapDispatchToProps = {
  loginMode: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_7__["loginMode"]
};
/* harmony default export */ __webpack_exports__["default"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_3__["connect"])(mapStateToProps, mapDispatchToProps)(antd__WEBPACK_IMPORTED_MODULE_0__["Form"].create()(Object(next_router__WEBPACK_IMPORTED_MODULE_5__["withRouter"])(FollowButton))));

/***/ }),

/***/ "./components/profile/FollowerListModal.jsx":
/*!**************************************************!*\
  !*** ./components/profile/FollowerListModal.jsx ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! antd */ "antd");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(antd__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! axios */ "axios");
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react-redux */ "react-redux");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _feathers__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../feathers */ "./feathers.js");
/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./config */ "./components/profile/config.js");
/* harmony import */ var _common_function__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../common-function */ "./common-function.js");
/* harmony import */ var _general_UserAvatar__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../general/UserAvatar */ "./components/general/UserAvatar.jsx");
/* harmony import */ var _FollowButton__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./FollowButton */ "./components/profile/FollowButton.jsx");
/* harmony import */ var _general_ScrollLoadWrapper__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../general/ScrollLoadWrapper */ "./components/general/ScrollLoadWrapper.jsx");
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! next/router */ "next/router");
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_11__);
/* harmony import */ var _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../redux/actions/app-actions */ "./redux/actions/app-actions.js");
var __jsx = react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement;

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }














const PAGE_SIZE = 12;
const TYPING_TIMEOUT = 500;

const FollowerListModal = props => {
  const {
    0: visible,
    1: setVisible
  } = Object(react__WEBPACK_IMPORTED_MODULE_3__["useState"])(false);
  const {
    0: followers,
    1: setFollowers
  } = Object(react__WEBPACK_IMPORTED_MODULE_3__["useState"])([]);
  const {
    0: followerTotal,
    1: setFollowerTotal
  } = Object(react__WEBPACK_IMPORTED_MODULE_3__["useState"])(0);
  const {
    0: followerPage,
    1: setFollowerPage
  } = Object(react__WEBPACK_IMPORTED_MODULE_3__["useState"])(1);
  const {
    0: isLoading,
    1: setIsLoading
  } = Object(react__WEBPACK_IMPORTED_MODULE_3__["useState"])(false);
  const {
    0: searchWord,
    1: setSearchWord
  } = Object(react__WEBPACK_IMPORTED_MODULE_3__["useState"])('');
  const {
    0: typingTimeout,
    1: setTypingTimeout
  } = Object(react__WEBPACK_IMPORTED_MODULE_3__["useState"])();
  const {
    0: filterGroup,
    1: setFilterGroup
  } = Object(react__WEBPACK_IMPORTED_MODULE_3__["useState"])({
    keyword: '',
    type: null
  });
  Object(react__WEBPACK_IMPORTED_MODULE_3__["useEffect"])(() => {
    setVisible(props.visible);
  }, [props.visible]);
  Object(react__WEBPACK_IMPORTED_MODULE_3__["useEffect"])(() => {
    getFollowerList(props.userId, (followerPage - 1) * PAGE_SIZE);
  }, [followerPage]);
  Object(react__WEBPACK_IMPORTED_MODULE_3__["useEffect"])(() => {
    if (followerPage == 1) {
      getFollowerList(props.userId, (followerPage - 1) * PAGE_SIZE);
    } else {
      setFollowerPage(1);
    }
  }, [filterGroup]);
  Object(react__WEBPACK_IMPORTED_MODULE_3__["useEffect"])(() => {
    if (typingTimeout) {
      clearTimeout(typingTimeout);
    }

    setTypingTimeout(setTimeout(() => {
      setFilterGroup(filterGroup => {
        return _objectSpread(_objectSpread({}, filterGroup), {}, {
          keyword: searchWord
        });
      });
    }, TYPING_TIMEOUT));
  }, [searchWord]);
  Object(react__WEBPACK_IMPORTED_MODULE_3__["useEffect"])(() => {
    if (visible && props.userId) {
      getFollowerList(props.userId, 0);
    }
  }, [visible, props.userId, props.type]);

  function getFollowerList(userId, skip) {
    if (userId) {
      if (!Object(_common_function__WEBPACK_IMPORTED_MODULE_7__["isValidNumber"])(parseInt(skip))) {
        skip = 0;
      } else {
        skip = parseInt(skip);
      }

      setIsLoading(true);
      let filter = filterGroup;

      if (!filter.keyword) {
        delete filter.keyword;
      }

      if (!filter.type) {
        delete filter.type;
      }

      axios__WEBPACK_IMPORTED_MODULE_1___default.a.get(`${_feathers__WEBPACK_IMPORTED_MODULE_5__["default"].io.io.uri}getFollowerList`, {
        params: {
          followingId: userId,
          type: 'user',
          limit: PAGE_SIZE,
          skip: skip,
          match: filter
        }
      }).then(res => {
        setFollowers(lodash__WEBPACK_IMPORTED_MODULE_2___default.a.isArray(lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(res, ['data', 'data'])) && !lodash__WEBPACK_IMPORTED_MODULE_2___default.a.isEmpty(lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(res, ['data', 'data'])) ? followerPage <= 1 ? res.data.data : followers.concat(res.data.data) : []);
        setFollowerTotal(lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(res, ['data', 'total']));
        setIsLoading(false);
      }).catch(err => {
        antd__WEBPACK_IMPORTED_MODULE_0__["message"].error(err.message);
      });
    }
  }

  function closeModal() {
    setFollowers([]);

    if (props.onCancel) {
      props.onCancel();
    }
  }

  return __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Modal"], {
    visible: visible,
    footer: null,
    centered: true,
    maskClosable: false,
    width: 500,
    onCancel: () => {
      closeModal();
    }
  }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Row"], {
    className: "padding-top-lg margin-top-md",
    gutter: [10, 10]
  }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
    xs: 24,
    sm: 24,
    md: 24,
    lg: 24,
    xl: 24
  }, __jsx("div", {
    className: "flex-justify-space-between flex-items-align-center width-100"
  }, __jsx("span", {
    className: "d-inline-block font-weight-black h6"
  }, "Follower"), __jsx("span", {
    className: "d-inline-block"
  }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Radio"].Group, {
    className: "condition-form",
    style: {
      textAlign: 'center'
    },
    value: filterGroup.type || '',
    onChange: e => {
      setFilterGroup(_objectSpread(_objectSpread({}, filterGroup), {}, {
        type: lodash__WEBPACK_IMPORTED_MODULE_2___default.a.toLower(e.target.value)
      }));
    }
  }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Radio"].Button, {
    style: {
      paddingX: 10
    },
    className: "margin-right-md",
    value: "user",
    onClick: e => {
      if (filterGroup.type == 'user') {
        setFilterGroup(_objectSpread(_objectSpread({}, filterGroup), {}, {
          type: ''
        }));
      }
    }
  }, " ", __jsx("p", {
    style: {
      fontSize: "13px",
      textAlign: "center"
    }
  }, " User "), " "), __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Radio"].Button, {
    style: {
      paddingX: 10
    },
    value: "dealer",
    onClick: e => {
      if (filterGroup.type == 'dealer') {
        setFilterGroup(_objectSpread(_objectSpread({}, filterGroup), {}, {
          type: ''
        }));
      }
    }
  }, " ", __jsx("p", {
    style: {
      fontSize: "13px",
      textAlign: "center"
    }
  }, " Dealer"), " "))))), __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
    xs: 24,
    sm: 24,
    md: 24,
    lg: 24,
    xl: 24
  }, __jsx("div", {
    className: "width-100 thin-border round-border-big no-border-input padding-sm"
  }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Input"], {
    size: "small",
    value: searchWord,
    onChange: e => {
      setSearchWord(e.target.value);
    },
    placeholder: "Search...",
    suffix: __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Icon"], {
      type: "search"
    })
  }))), __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
    xs: 24,
    sm: 24,
    md: 24,
    lg: 24,
    xl: 24
  }, __jsx("div", {
    className: "width-100 padding-top-sm"
  }, __jsx(_general_ScrollLoadWrapper__WEBPACK_IMPORTED_MODULE_10__["default"], {
    style: {
      height: '50vh'
    },
    autoHide: true,
    onScrolledBottom: () => {
      if (Object(_common_function__WEBPACK_IMPORTED_MODULE_7__["arrayLengthCount"])(followers) < followerTotal) {
        setFollowerPage(followerPage + 1);
      }
    }
  }, __jsx("div", {
    className: "width-100"
  }, lodash__WEBPACK_IMPORTED_MODULE_2___default.a.isArray(followers) && !lodash__WEBPACK_IMPORTED_MODULE_2___default.a.isEmpty(followers) ? __jsx("div", {
    className: "width-100"
  }, lodash__WEBPACK_IMPORTED_MODULE_2___default.a.map(followers, function (follower) {
    let user = lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(follower, 'followerId');

    return __jsx("div", {
      className: "flex-justify-space-between flex-items-align-center margin-bottom-sm width-100"
    }, __jsx("span", {
      className: "flex-items-align-center width-80"
    }, __jsx(_general_UserAvatar__WEBPACK_IMPORTED_MODULE_8__["default"], {
      data: user,
      size: 50,
      redirectProfile: true,
      onRedirect: () => {
        closeModal();
      },
      avatarClassName: "flex-items-no-shrink",
      className: "margin-right-md"
    }), __jsx("span", {
      className: "d-inline-block text-truncate"
    }, __jsx("div", null, Object(_common_function__WEBPACK_IMPORTED_MODULE_7__["getUserName"])(user, 'freakId')), __jsx("div", null, `${Object(_common_function__WEBPACK_IMPORTED_MODULE_7__["getUserName"])(user, 'fullName')} ${Object(_config__WEBPACK_IMPORTED_MODULE_6__["isDealer"])(user) && lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(user, ['companys', 'name']) ? '|' : ''} ${Object(_config__WEBPACK_IMPORTED_MODULE_6__["isDealer"])(user) && lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(user, ['companys', 'name']) ? lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(user, ['companys', 'name']) : ''}`))), __jsx("span", {
      className: "d-inline-block"
    }, __jsx("div", {
      className: "flex-justify-end flex-items-align-center"
    }, __jsx(_FollowButton__WEBPACK_IMPORTED_MODULE_9__["default"], {
      userId: lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(user, ['_id']),
      type: "user",
      followerId: lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(props.user, ['info', 'user', '_id']),
      notify: true,
      followingButton: () => {
        return __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Button"], null, "Following");
      },
      followButton: () => {
        return __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Button"], {
          className: "background-ccar-yellow border-ccar-yellow black"
        }, "+ Follow");
      }
    }), "                                                                            ")));
  })) : __jsx("div", {
    className: "flex-justify-center flex-align-center padding-md"
  }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Empty"], null)))))), __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
    xs: 24,
    sm: 24,
    md: 24,
    lg: 24,
    xl: 24
  }, __jsx("div", {
    className: "width-100 flex-justify-center",
    style: {
      height: 20
    }
  }, isLoading ? __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Icon"], {
    type: "loading",
    style: {
      fontSize: 20
    }
  }) : null))));
};

const mapStateToProps = state => ({
  app: state.app,
  user: state.user,
  sellerProfile: state.sellerProfile
});

const mapDispatchToProps = {
  loading: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_12__["loading"]
};
/* harmony default export */ __webpack_exports__["default"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_4__["connect"])(mapStateToProps, mapDispatchToProps)(antd__WEBPACK_IMPORTED_MODULE_0__["Form"].create()(Object(next_router__WEBPACK_IMPORTED_MODULE_11__["withRouter"])(FollowerListModal))));

/***/ }),

/***/ "./components/profile/FollowingListModal.jsx":
/*!***************************************************!*\
  !*** ./components/profile/FollowingListModal.jsx ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! antd */ "antd");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(antd__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! axios */ "axios");
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react-redux */ "react-redux");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _feathers__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../feathers */ "./feathers.js");
/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./config */ "./components/profile/config.js");
/* harmony import */ var _common_function__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../common-function */ "./common-function.js");
/* harmony import */ var _general_UserAvatar__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../general/UserAvatar */ "./components/general/UserAvatar.jsx");
/* harmony import */ var _FollowButton__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./FollowButton */ "./components/profile/FollowButton.jsx");
/* harmony import */ var _general_ScrollLoadWrapper__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../general/ScrollLoadWrapper */ "./components/general/ScrollLoadWrapper.jsx");
/* harmony import */ var _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../redux/actions/app-actions */ "./redux/actions/app-actions.js");
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! next/router */ "next/router");
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_12__);
var __jsx = react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement;

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }














const PAGE_SIZE = 12;
const TYPING_TIMEOUT = 500;

const FollowingListModal = props => {
  const {
    0: visible,
    1: setVisible
  } = Object(react__WEBPACK_IMPORTED_MODULE_3__["useState"])(false);
  const {
    0: followings,
    1: setFollowings
  } = Object(react__WEBPACK_IMPORTED_MODULE_3__["useState"])([]);
  const {
    0: followingTotal,
    1: setFollowingTotal
  } = Object(react__WEBPACK_IMPORTED_MODULE_3__["useState"])(0);
  const {
    0: followingPage,
    1: setFollowingPage
  } = Object(react__WEBPACK_IMPORTED_MODULE_3__["useState"])(1);
  const {
    0: isLoading,
    1: setIsLoading
  } = Object(react__WEBPACK_IMPORTED_MODULE_3__["useState"])(false);
  const {
    0: searchWord,
    1: setSearchWord
  } = Object(react__WEBPACK_IMPORTED_MODULE_3__["useState"])('');
  const {
    0: typingTimeout,
    1: setTypingTimeout
  } = Object(react__WEBPACK_IMPORTED_MODULE_3__["useState"])();
  const {
    0: filterGroup,
    1: setFilterGroup
  } = Object(react__WEBPACK_IMPORTED_MODULE_3__["useState"])({
    keyword: '',
    type: null
  });
  Object(react__WEBPACK_IMPORTED_MODULE_3__["useEffect"])(() => {
    setVisible(props.visible);
  }, [props.visible]);
  Object(react__WEBPACK_IMPORTED_MODULE_3__["useEffect"])(() => {
    getFollowingList(props.userId, (followingPage - 1) * PAGE_SIZE);
  }, [followingPage]);
  Object(react__WEBPACK_IMPORTED_MODULE_3__["useEffect"])(() => {
    if (followingPage == 1) {
      getFollowingList(props.userId, (followingPage - 1) * PAGE_SIZE);
    } else {
      setFollowingPage(1);
    }
  }, [filterGroup]);
  Object(react__WEBPACK_IMPORTED_MODULE_3__["useEffect"])(() => {
    if (typingTimeout) {
      clearTimeout(typingTimeout);
    }

    setTypingTimeout(setTimeout(() => {
      setFilterGroup(filterGroup => {
        return _objectSpread(_objectSpread({}, filterGroup), {}, {
          keyword: searchWord
        });
      });
    }, TYPING_TIMEOUT));
  }, [searchWord]);
  Object(react__WEBPACK_IMPORTED_MODULE_3__["useEffect"])(() => {
    if (visible && props.userId) {
      getFollowingList(props.userId, 0);
    }
  }, [visible, props.userId, props.type]);

  function getFollowingList(userId, skip) {
    if (userId) {
      if (!Object(_common_function__WEBPACK_IMPORTED_MODULE_7__["isValidNumber"])(parseInt(skip))) {
        skip = 0;
      } else {
        skip = parseInt(skip);
      }

      setIsLoading(true);
      let filter = filterGroup;

      if (!filter.keyword) {
        delete filter.keyword;
      }

      if (!filter.type) {
        delete filter.type;
      }

      axios__WEBPACK_IMPORTED_MODULE_1___default.a.get(`${_feathers__WEBPACK_IMPORTED_MODULE_5__["default"].io.io.uri}getFollowingList`, {
        params: {
          followerId: userId,
          type: 'user',
          limit: PAGE_SIZE,
          skip: skip,
          match: filter
        }
      }).then(res => {
        setFollowings(lodash__WEBPACK_IMPORTED_MODULE_2___default.a.isArray(lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(res, ['data', 'data'])) && !lodash__WEBPACK_IMPORTED_MODULE_2___default.a.isEmpty(lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(res, ['data', 'data'])) ? followingPage <= 1 ? res.data.data : followings.concat(res.data.data) : []);
        setFollowingTotal(lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(res, ['data', 'total']));
        setIsLoading(false);
      }).catch(err => {
        antd__WEBPACK_IMPORTED_MODULE_0__["message"].error(err.message);
      });
    }
  }

  function closeModal() {
    setFollowings([]);

    if (props.onCancel) {
      props.onCancel();
    }
  }

  return __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Modal"], {
    visible: visible,
    footer: null,
    centered: true,
    maskClosable: false,
    width: 400,
    onCancel: () => {
      closeModal();
    }
  }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Row"], {
    className: "padding-top-lg margin-top-md",
    gutter: [10, 10]
  }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
    xs: 24,
    sm: 24,
    md: 24,
    lg: 24,
    xl: 24
  }, __jsx("div", {
    className: "flex-justify-space-between flex-items-align-center width-100"
  }, __jsx("span", {
    className: "d-inline-block font-weight-black h6"
  }, "Following"), __jsx("span", {
    className: "d-inline-block"
  }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Radio"].Group, {
    className: "condition-form",
    style: {
      textAlign: 'center'
    },
    value: filterGroup.type || '',
    onChange: e => {
      setFilterGroup(_objectSpread(_objectSpread({}, filterGroup), {}, {
        type: lodash__WEBPACK_IMPORTED_MODULE_2___default.a.toLower(e.target.value)
      }));
    }
  }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Radio"].Button, {
    style: {
      paddingX: 10
    },
    className: "margin-right-md",
    value: "user",
    onClick: e => {
      if (filterGroup.type == 'user') {
        setFilterGroup(_objectSpread(_objectSpread({}, filterGroup), {}, {
          type: ''
        }));
      }
    }
  }, " ", __jsx("p", {
    style: {
      fontSize: "13px",
      textAlign: "center"
    }
  }, " User "), " "), __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Radio"].Button, {
    style: {
      paddingX: 10
    },
    value: "dealer",
    onClick: e => {
      if (filterGroup.type == 'dealer') {
        setFilterGroup(_objectSpread(_objectSpread({}, filterGroup), {}, {
          type: ''
        }));
      }
    }
  }, " ", __jsx("p", {
    style: {
      fontSize: "13px",
      textAlign: "center"
    }
  }, " Dealer"), " "))))), __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
    xs: 24,
    sm: 24,
    md: 24,
    lg: 24,
    xl: 24
  }, __jsx("div", {
    className: "width-100 thin-border round-border-big no-border-input padding-sm"
  }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Input"], {
    size: "small",
    value: searchWord,
    onChange: e => {
      setSearchWord(e.target.value);
    },
    placeholder: "Search...",
    suffix: __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Icon"], {
      type: "search"
    })
  }))), __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
    xs: 24,
    sm: 24,
    md: 24,
    lg: 24,
    xl: 24
  }, __jsx("div", {
    className: "width-100 padding-top-sm"
  }, __jsx(_general_ScrollLoadWrapper__WEBPACK_IMPORTED_MODULE_10__["default"], {
    style: {
      height: '50vh'
    },
    onScrolledBottom: () => {
      if (Object(_common_function__WEBPACK_IMPORTED_MODULE_7__["arrayLengthCount"])(followings) < followingTotal) {
        setFollowingPage(followingPage + 1);
      }
    }
  }, __jsx("div", {
    className: "width-100"
  }, lodash__WEBPACK_IMPORTED_MODULE_2___default.a.isArray(followings) && !lodash__WEBPACK_IMPORTED_MODULE_2___default.a.isEmpty(followings) ? __jsx("div", {
    className: "width-100"
  }, lodash__WEBPACK_IMPORTED_MODULE_2___default.a.map(followings, function (following) {
    let user = lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(following, 'userId');

    return __jsx("div", {
      className: "flex-justify-space-between flex-items-align-center margin-bottom-sm width-100"
    }, __jsx("span", {
      className: "flex-items-align-center width-80"
    }, __jsx(_general_UserAvatar__WEBPACK_IMPORTED_MODULE_8__["default"], {
      data: user,
      size: 50,
      redirectProfile: true,
      onRedirect: () => {
        closeModal();
      },
      avatarClassName: "flex-items-no-shrink",
      className: "margin-right-md"
    }), __jsx("span", {
      className: "d-inline-block text-truncate"
    }, __jsx("div", null, Object(_common_function__WEBPACK_IMPORTED_MODULE_7__["getUserName"])(user, 'freakId')), __jsx("div", null, `${Object(_common_function__WEBPACK_IMPORTED_MODULE_7__["getUserName"])(user, 'fullName')} ${Object(_config__WEBPACK_IMPORTED_MODULE_6__["isDealer"])(user) && lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(user, ['companys', 'name']) ? '|' : ''} ${Object(_config__WEBPACK_IMPORTED_MODULE_6__["isDealer"])(user) && lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(user, ['companys', 'name']) ? lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(user, ['companys', 'name']) : ''}`))), __jsx("span", {
      className: "d-inline-block"
    }, __jsx("div", {
      className: "flex-justify-end flex-items-align-center"
    }, __jsx(_FollowButton__WEBPACK_IMPORTED_MODULE_9__["default"], {
      userId: lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(user, ['_id']),
      type: "user",
      followerId: lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(props.user, ['info', 'user', '_id']),
      notify: true,
      followingButton: () => {
        return __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Button"], null, "Following");
      },
      followButton: () => {
        return __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Button"], {
          className: "background-ccar-yellow border-ccar-yellow black"
        }, "+ Follow");
      }
    }), "                                                                            ")));
  })) : __jsx("div", {
    className: "flex-justify-center flex-align-center padding-md"
  }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Empty"], null)))))), __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
    xs: 24,
    sm: 24,
    md: 24,
    lg: 24,
    xl: 24
  }, __jsx("div", {
    className: "width-100 flex-justify-center",
    style: {
      height: 20
    }
  }, isLoading ? __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Icon"], {
    type: "loading",
    style: {
      fontSize: 20
    }
  }) : null))));
};

const mapStateToProps = state => ({
  app: state.app,
  user: state.user,
  sellerProfile: state.sellerProfile
});

const mapDispatchToProps = {
  loading: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_11__["loading"]
};
/* harmony default export */ __webpack_exports__["default"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_4__["connect"])(mapStateToProps, mapDispatchToProps)(antd__WEBPACK_IMPORTED_MODULE_0__["Form"].create()(Object(next_router__WEBPACK_IMPORTED_MODULE_12__["withRouter"])(FollowingListModal))));

/***/ }),

/***/ "./components/profile/ProfileDetailsBox.jsx":
/*!**************************************************!*\
  !*** ./components/profile/ProfileDetailsBox.jsx ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! antd */ "antd");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(antd__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! axios */ "axios");
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var react_custom_scrollbars__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react-custom-scrollbars */ "react-custom-scrollbars");
/* harmony import */ var react_custom_scrollbars__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react_custom_scrollbars__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react-redux */ "react-redux");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var react_responsive__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! react-responsive */ "react-responsive");
/* harmony import */ var react_responsive__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(react_responsive__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! uuid */ "uuid");
/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(uuid__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _icon__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../icon */ "./icon.js");
/* harmony import */ var _carFreak_components_club_club_avatar__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../carFreak/components/club/club-avatar */ "./components/carFreak/components/club/club-avatar.jsx");
/* harmony import */ var _feathers__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../feathers */ "./feathers.js");
/* harmony import */ var _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../redux/actions/app-actions */ "./redux/actions/app-actions.js");
/* harmony import */ var _redux_actions_productsList_actions__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../redux/actions/productsList-actions */ "./redux/actions/productsList-actions.js");
/* harmony import */ var _redux_actions_user_actions__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../redux/actions/user-actions */ "./redux/actions/user-actions.js");
/* harmony import */ var _general_UserAvatar__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../general/UserAvatar */ "./components/general/UserAvatar.jsx");
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! next/router */ "next/router");
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_15__);
/* harmony import */ var _redux_actions_sellerProfile_actions__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../redux/actions/sellerProfile-actions */ "./redux/actions/sellerProfile-actions.js");
/* harmony import */ var _common_function__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../../common-function */ "./common-function.js");
/* harmony import */ var _FollowButton__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./FollowButton */ "./components/profile/FollowButton.jsx");
/* harmony import */ var _general_light_box_gallery__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../general/light-box-gallery */ "./components/general/light-box-gallery.jsx");
/* harmony import */ var _general_ShareButtonDialog__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../general/ShareButtonDialog */ "./components/general/ShareButtonDialog.jsx");
/* harmony import */ var _FollowingListModal__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./FollowingListModal */ "./components/profile/FollowingListModal.jsx");
/* harmony import */ var _FollowerListModal__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./FollowerListModal */ "./components/profile/FollowerListModal.jsx");
var __jsx = react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement;
























var moment = __webpack_require__(/*! moment */ "moment");

const CLUB_SIZE = 6;

const ProfileDetailsBox = props => {
  const {
    0: profile,
    1: setProfile
  } = Object(react__WEBPACK_IMPORTED_MODULE_3__["useState"])({});
  const {
    0: clubs,
    1: setClubs
  } = Object(react__WEBPACK_IMPORTED_MODULE_3__["useState"])([]);
  const {
    0: clubTotal,
    1: setClubTotal
  } = Object(react__WEBPACK_IMPORTED_MODULE_3__["useState"])(0);
  const {
    0: followerModalVisible,
    1: setFollowerModalVisible
  } = Object(react__WEBPACK_IMPORTED_MODULE_3__["useState"])(false);
  const {
    0: followingModalVisible,
    1: setFollowingModalVisible
  } = Object(react__WEBPACK_IMPORTED_MODULE_3__["useState"])(false);
  const {
    0: visible,
    1: setVisible
  } = Object(react__WEBPACK_IMPORTED_MODULE_3__["useState"])(false);
  Object(react__WEBPACK_IMPORTED_MODULE_3__["useEffect"])(() => {
    if (lodash__WEBPACK_IMPORTED_MODULE_2___default.a.isPlainObject(props.data) && !lodash__WEBPACK_IMPORTED_MODULE_2___default.a.isEmpty(props.data)) {
      props.data.newCompanyName = lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(props.data, ['companyId', 'name']) || '';
      props.data.newArea = lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(props.data, ['companyId', 'area']) || '';
      props.data.newAddress = (lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(props.data, ['companyId', 'address']) || '') + ',' + (lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(props.data, ['companyId', 'area']) || '') + ',' + (lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(props.data, ['companyId', 'postCode']) || '') + ',' + (lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(props.data, ['companyId', 'state']) || '');
      let newCompanyName = lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(props.data, ['usercompanyName']) || '';
      let newArea = lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(props.data, ['userarea']) || '';
      let newAddress = (lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(props.data, ['useraddress']) || '') + ',' + (lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(props.data, ['userarea']) || '') + ',' + (lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(props.data, ['userpostCode']) || '') + ',' + (lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(props.data, ['userstate']) || '');

      if (lodash__WEBPACK_IMPORTED_MODULE_2___default.a.isEmpty(newCompanyName) === false) {
        props.data.newCompanyName = newCompanyName;
      }

      if (lodash__WEBPACK_IMPORTED_MODULE_2___default.a.isEmpty(newArea) === false) {
        props.data.newArea = newArea;
      }

      if (lodash__WEBPACK_IMPORTED_MODULE_2___default.a.isEmpty(newAddress) === false) {
        if (newAddress !== ',,,') {
          props.data.newAddress = newAddress;
        }
      }

      setProfile(props.data);
    } else {
      setProfile({});
    }
  }, [props.data]);

  function showModal() {
    setVisible(true);
  }

  const onClose = () => {
    setVisible(false);
  };

  function handleSumbitCoverPhoto(coverPhoto) {
    if (coverPhoto && lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(profile, ['_id'])) {
      props.loading(true);
      _feathers__WEBPACK_IMPORTED_MODULE_10__["default"].authenticate().then(res => {
        let formData = new FormData();
        var fileName = Object(uuid__WEBPACK_IMPORTED_MODULE_7__["v4"])() + "-" + coverPhoto.name.split('.').join("-") + "-" + new Date().getTime();
        formData.append('images', coverPhoto.originFileObj, fileName); //Upload Image

        axios__WEBPACK_IMPORTED_MODULE_1___default.a.post(`${_feathers__WEBPACK_IMPORTED_MODULE_10__["default"].io.io.uri}upload-images-array`, formData, {
          headers: {
            'Authorization': _feathers__WEBPACK_IMPORTED_MODULE_10__["default"].settings.storage.storage.storage['feathers-jwt'],
            'Content-Type': 'multipart/form-data'
          }
        }).then(res => {
          if (Object(_common_function__WEBPACK_IMPORTED_MODULE_17__["notEmptyLength"])(lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(res, ['data', 'result']))) {
            coverPhoto = res.data.result[0].url;
          } else {
            coverPhoto = null;
          }

          _feathers__WEBPACK_IMPORTED_MODULE_10__["default"].service('users').patch(profile._id, {
            profileCoverPhoto: coverPhoto
          }).then(res => {
            props.loading(false);

            if (props.onChange) {
              props.onChange(res);
            }

            if (props.onChangeCoverPhoto) {
              props.onChangeCoverPhoto(lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(res, ['profileCoverPhoto']));
            }
          }).catch(err => {
            props.loading(false);
            antd__WEBPACK_IMPORTED_MODULE_0__["message"].error(err.message);
          });
        });
      }).catch(err => {
        props.loading(false);
        antd__WEBPACK_IMPORTED_MODULE_0__["message"].error(err.message);
      });
    }
  }

  Object(react__WEBPACK_IMPORTED_MODULE_3__["useEffect"])(() => {
    if (lodash__WEBPACK_IMPORTED_MODULE_2___default.a.isPlainObject(profile) && !lodash__WEBPACK_IMPORTED_MODULE_2___default.a.isEmpty(profile)) {
      getClubs(lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(profile, ['_id']));
    } else {
      setClubs([]);
    }
  }, [profile]);

  function getClubs(id, skip) {
    if (id) {
      if (!Object(_common_function__WEBPACK_IMPORTED_MODULE_17__["isValidNumber"])(parseInt(skip))) {
        skip = 0;
      } else {
        skip = parseInt(skip);
      }

      _feathers__WEBPACK_IMPORTED_MODULE_10__["default"].service('clubjoin').find({
        query: {
          userId: id,
          status: 'approved',
          $sort: {
            createdAt: -1
          },
          $limit: CLUB_SIZE,
          $skip: skip,
          $populate: ['clubId']
        }
      }).then(res => {
        setClubs(lodash__WEBPACK_IMPORTED_MODULE_2___default.a.isArray(res.data) && !lodash__WEBPACK_IMPORTED_MODULE_2___default.a.isEmpty(res.data) ? lodash__WEBPACK_IMPORTED_MODULE_2___default.a.uniqBy(lodash__WEBPACK_IMPORTED_MODULE_2___default.a.map(res.data, 'clubId') || [], '_id') : []);
        setClubTotal(res.total || 0);
      }).catch(err => {});
    }
  }

  const _renderBusinessHour = data => {
    if (Object(_common_function__WEBPACK_IMPORTED_MODULE_17__["notEmptyLength"])(data) && Object(_common_function__WEBPACK_IMPORTED_MODULE_17__["isObject"])(data)) {
      let days = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];
      let groupedDay = [];
      let dayLayout = [];
      let keys = Object.keys(data);
      days.forEach(function (day, index) {
        let temp = {};
        let start = keys.find(function (key) {
          return key == day + 'Start';
        });
        let end = keys.find(function (key) {
          return key == day + 'End';
        });
        temp.day = day;
        temp.dayCount = index;

        if (start != null) {
          temp.startTime = data[start];
        } else {
          temp.startTime = null;
        }

        if (end != null) {
          temp.endTime = data[end];
        } else {
          temp.endTime = null;
        }

        groupedDay.push(temp);
      });
      let isSame = true;
      let sameStartDay = null;
      groupedDay.forEach(function (item, index) {
        if (index != 0) {
          if (moment(groupedDay[index].startTime).format("h:mm a") == moment(groupedDay[index - 1].startTime).format("h:mm a") && moment(groupedDay[index].endTime).format("h:mm a") == moment(groupedDay[index - 1].endTime).format("h:mm a")) {
            isSame = true;
          } else {
            isSame = false;
          }
        }

        if (!Object(_common_function__WEBPACK_IMPORTED_MODULE_17__["notEmptyLength"])(dayLayout) || !isSame) {
          let layout = __jsx("div", {
            className: "flex-justify-start flex-items-align-center fill-parent"
          }, __jsx("span", {
            className: "headline   d-inline-block ",
            style: {
              width: '140px'
            }
          }, item.day ? item.day : null), __jsx("span", {
            className: "headline   d-inline-block "
          }, ":"), __jsx("span", {
            className: "headline   d-inline-block text-overflow-break text-align-center",
            style: {
              width: '140px'
            }
          }, item.startTime ? moment(item.startTime).format("h:mm a") : null, " - ", item.endTime ? moment(item.endTime).format("h:mm a") : null));

          isSame = true;
          sameStartDay = item.day;
          dayLayout.push(layout);
        } else {
          dayLayout.pop();

          let layout = __jsx("div", {
            className: "flex-justify-start flex-items-align-center fill-parent"
          }, __jsx("span", {
            className: "headline   d-inline-block margin-right-md",
            style: {
              width: '140px'
            }
          }, sameStartDay, " - ", item.day ? item.day : null), __jsx("span", {
            className: "headline   d-inline-block margin-right-sm"
          }, ":"), __jsx("span", {
            className: "headline   d-inline-block text-overflow-break text-align-center",
            style: {
              width: '140px'
            }
          }, item.startTime ? moment(item.startTime).format("h:mm a") : null, " - ", item.endTime ? moment(item.endTime).format("h:mm a") : null));

          dayLayout.push(layout);
        }
      });
      return __jsx("div", {
        className: "fill-parent d-inline-block text-overflow-break"
      }, dayLayout);
    } else {
      return null;
    }
  };

  return __jsx(react__WEBPACK_IMPORTED_MODULE_3___default.a.Fragment, null, __jsx("div", {
    className: "relative-wrapper",
    style: {
      backgroundImage: `url("${lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(profile, ['profileCoverPhoto']) || _icon__WEBPACK_IMPORTED_MODULE_8__["defaultProfileBackground"]}")`,
      backgroundRepeat: 'no-repeat',
      backgroundSize: lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(profile, ['profileCoverPhoto']) ? 'cover' : '100% 100%'
    }
  }, __jsx("div", {
    className: "background-black opacity-60 absolute-center"
  }), __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Row"], {
    className: "padding-md",
    style: {
      minHeight: '100px'
    }
  }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
    xs: 24,
    sm: 24,
    md: 8,
    lg: 8,
    xl: 6
  }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Row"], null, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
    xs: 4,
    sm: 4,
    md: 4,
    lg: 4,
    xl: 4
  }, __jsx("div", {
    className: "fill-parent flex-justify-center flex-items-align-center"
  }, __jsx(_general_UserAvatar__WEBPACK_IMPORTED_MODULE_14__["default"], {
    showPreview: true,
    data: profile,
    size: 50
  }))), __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
    xs: 20,
    sm: 20,
    md: 20,
    lg: 20,
    xl: 20
  }, __jsx("div", {
    className: "flex-items-no-shrink text-align-start white font-weight-bold subtitle1 margin-x-sm margin-bottom-sm width-100"
  }, Object(_common_function__WEBPACK_IMPORTED_MODULE_17__["getUserName"])(profile, 'freakId')), props.showProfileActions ? __jsx("div", null, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
    className: "margin-bottom-md",
    xs: 24,
    sm: 24,
    md: 24,
    lg: 24,
    xl: 24,
    style: {
      marginLeft: '8px'
    }
  }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Button"], {
    onClick: e => {
      if (lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(profile, ['userurlId'])) {
        props.router.push(`/profile/${profile.userurlId}/details`);
      }
    },
    className: "round-border white background-grey-opacity-30",
    style: {
      paddingRight: '5px',
      paddingLeft: '5px'
    }
  }, "Edit Profile"))) : null, !props.showProfileActions ? __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
    xs: 24,
    sm: 24,
    md: 24,
    lg: 24,
    xl: 24,
    style: {
      marginTop: '10px'
    }
  }, __jsx("div", {
    className: "fill-parent flex-justify-start flex-items-align-start"
  }, __jsx(_FollowButton__WEBPACK_IMPORTED_MODULE_18__["default"], {
    type: "user",
    userId: lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(profile, ['_id']) || '',
    followerId: lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(props.user, ['authenticated']) ? lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(props, ['user', 'info', 'user', '_id']) || null : null,
    handleError: e => {
      antd__WEBPACK_IMPORTED_MODULE_0__["message"].error(e.message);
    },
    handleSuccess: e => {
      antd__WEBPACK_IMPORTED_MODULE_0__["message"].success(e.type == 'remove' ? 'Unfollowed successful' : 'Followed successful');
    },
    className: "margin-right-md",
    followButton: () => {
      return __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Button"], {
        className: "background-ccar-yellow black border-ccar-yellow"
      }, "+ Follow");
    }
  }), __jsx(_general_ShareButtonDialog__WEBPACK_IMPORTED_MODULE_20__["default"], {
    className: "padding-x-md"
  }))) : null))), props.type == 'dealer' ? [__jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
    span: 24,
    style: {
      marginTop: '10px'
    }
  }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Row"], {
    className: "fill-parent"
  }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
    span: 24
  }, __jsx("div", {
    className: "width-100 flex-justify-start flex-items-align-start"
  }, __jsx("span", {
    className: "d-inline-block relative-wrapper margin-right-sm flex-items-no-shrink",
    style: {
      height: '20px',
      width: '20px'
    }
  }, __jsx("img", {
    src: _icon__WEBPACK_IMPORTED_MODULE_8__["phone"],
    className: "fill-parent absolute-center"
  })), __jsx("span", {
    className: "d-inline-block white margin-right-md flex-items-align-center flex-justify-start headline  "
  }, `${lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(profile, ['contactNoPrimary']) || ''}`))), __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
    span: 24
  }, __jsx("div", {
    className: "width-100  flex-justify-start flex-items-align-start"
  }, __jsx("span", {
    className: "d-inline-block relative-wrapper margin-right-sm",
    style: {
      height: '20px',
      width: '20px'
    }
  }, __jsx("img", {
    src: _icon__WEBPACK_IMPORTED_MODULE_8__["email"],
    className: "fill-parent absolute-center flex-items-no-shrink"
  })), __jsx("span", {
    className: "d-inline-block white margin-right-md flex-items-align-center flex-justify-start headline  "
  }, `${lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(profile, ['email']) || ''}`)))))] : null, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
    xs: 18,
    sm: 18,
    md: 18,
    lg: 18,
    xl: 18,
    style: {
      marginTop: '10px'
    }
  }, __jsx(react_custom_scrollbars__WEBPACK_IMPORTED_MODULE_4___default.a, {
    style: {
      height: 30,
      maxWidth: '100%'
    },
    autoHide: true
  }, __jsx("div", {
    className: "width-100 flex-justify-start flex-items-align-start text-overflow-break headline white"
  }, lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(profile, ['bio']) || ''))), __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
    span: 6
  }, props.type == 'dealer' ? [__jsx("div", {
    className: "avatar flex-justify-center flex-items-align-center",
    style: {
      float: 'right',
      backgroundColor: '#FFCC32',
      height: '25px',
      width: '25px'
    },
    onClick: () => {
      showModal();
    }
  }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Icon"], {
    type: "info",
    style: {
      color: '#000000',
      marginLeft: '1px'
    }
  }))] : null), __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
    span: 24,
    className: "margin-bottom-sm margin-top-sm"
  }, __jsx("div", {
    className: "flex-justify-center flex-items-align-center fill-parent"
  }, __jsx("span", {
    className: "d-inline-block"
  }, __jsx("div", {
    className: "white font-weight-light text-align-center"
  }, !Object(_common_function__WEBPACK_IMPORTED_MODULE_17__["isValidNumber"])(lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(profile, ['totalPost'])) ? 0 : Object(_common_function__WEBPACK_IMPORTED_MODULE_17__["formatNumber"])(lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(profile, ['totalPost']), null, false, 0, false)), __jsx("div", {
    className: "white subtitle1 text-align-center"
  }, "Posts")), __jsx("span", {
    className: "d-inline-block margin-x-sm height-100"
  }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Divider"], {
    orientation: "center",
    type: "vertical",
    className: "background-color-white border-white thin-border",
    style: {
      height: '30px'
    }
  })), __jsx("span", {
    className: "d-inline-block cursor-pointer",
    onClick: e => {
      setFollowerModalVisible(true);
    }
  }, __jsx("div", {
    className: "white font-weight-light text-align-center"
  }, !Object(_common_function__WEBPACK_IMPORTED_MODULE_17__["isValidNumber"])(lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(profile, ['totalFollower'])) ? 0 : Object(_common_function__WEBPACK_IMPORTED_MODULE_17__["formatNumber"])(lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(profile, ['totalFollower']), 'auto', true, 0, true)), __jsx("div", {
    className: "white subtitle1 text-align-center"
  }, "Followers")), __jsx("span", {
    className: "d-inline-block margin-x-sm"
  }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Divider"], {
    orientation: "center",
    type: "vertical",
    className: "background-color-white border-white thin-border",
    style: {
      height: '30px'
    }
  })), __jsx("span", {
    className: "d-inline-block cursor-pointer",
    onClick: () => {
      setFollowingModalVisible(true);
    }
  }, __jsx("div", {
    className: "white font-weight-light text-align-center"
  }, !Object(_common_function__WEBPACK_IMPORTED_MODULE_17__["isValidNumber"])(lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(profile, ['totalFollowingUser'])) ? 0 : Object(_common_function__WEBPACK_IMPORTED_MODULE_17__["formatNumber"])(lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(profile, ['totalFollowingUser']), 'auto', true, 0, true)), __jsx("div", {
    className: "white subtitle1 text-align-center"
  }, "Following"))))), __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Drawer"], {
    title: null,
    placement: "right",
    closable: true,
    onClose: onClose,
    visible: visible,
    width: '100%',
    className: "login-drawer"
  }, props.type == 'dealer' ? __jsx("div", {
    style: {
      backgroundColor: '#ffffff'
    },
    className: "padding-md"
  }, __jsx("div", {
    className: "relative-wrapper background-black-opacity-40",
    style: {
      height: 150,
      width: 400,
      maxWidth: '100%',
      maxHeight: '20%'
    }
  }, __jsx("img", {
    src: lodash__WEBPACK_IMPORTED_MODULE_2___default.a.isArray(lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(profile, ['companyId', 'bannerUrl'])) && Object(_common_function__WEBPACK_IMPORTED_MODULE_17__["notEmptyLength"])(lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(profile, ['companyId', 'bannerUrl'])) ? profile.companyId.bannerUrl[0].url : _icon__WEBPACK_IMPORTED_MODULE_8__["ccarWebLogo400X150"],
    className: `fill-parent ${lodash__WEBPACK_IMPORTED_MODULE_2___default.a.isArray(lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(profile, ['companyId', 'bannerUrl'])) && Object(_common_function__WEBPACK_IMPORTED_MODULE_17__["notEmptyLength"])(lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(profile, ['companyId', 'bannerUrl'])) ? 'absolute-center-img-no-stretch' : 'absolute-center'}`
  })), __jsx("div", null, __jsx("p", {
    style: {
      marginBottom: '0px'
    }
  }, "Address"), __jsx("div", {
    className: "thickBorder round-border padding-sm"
  }, `${lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(profile, ['companyId', 'address']) || ''}, ${lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(profile, ['companyId', 'area']) || ''}, ${lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(profile, ['companyId', 'postCode']) || ''}, ${lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(profile, ['companyId', 'state']) || ''}`), __jsx("p", {
    style: {
      marginBottom: '0px',
      marginTop: '5px'
    }
  }, "Location"), __jsx("div", {
    className: "thickBorder round-border padding-sm"
  }, `${lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(profile, ['companyId', 'area']) || ''}`), __jsx("p", {
    style: {
      marginBottom: '0px',
      marginTop: '5px'
    }
  }, "Working Hours"), __jsx("div", {
    className: "thickBorder round-border padding-sm"
  }, _renderBusinessHour(lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(profile, ['companyId', 'businessHour']) || [])), __jsx("p", {
    style: {
      marginBottom: '0px',
      marginTop: '5px'
    }
  }, "Mobile No."), __jsx("div", {
    className: "thickBorder round-border padding-sm"
  }, `${lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(profile, ['contactNoPrimary']) || ''}`), __jsx("p", {
    style: {
      marginBottom: '0px',
      marginTop: '5px'
    }
  }, "Office No."), __jsx("div", {
    className: "thickBorder round-border padding-sm"
  }, "company no"), __jsx("p", {
    style: {
      marginBottom: '0px',
      marginTop: '5px'
    }
  }, "Email"), __jsx("div", {
    className: "thickBorder round-border padding-sm"
  }, `${lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(profile, ['email']) || ''}`), __jsx("p", {
    style: {
      marginBottom: '0px',
      marginTop: '5px'
    }
  }, "Website"), __jsx("div", {
    className: "thickBorder round-border padding-sm"
  }, `${lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(profile, ['companyId', 'website']) || ''}`))) : null)), __jsx(_FollowerListModal__WEBPACK_IMPORTED_MODULE_22__["default"], {
    userId: lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(profile, ['_id']),
    visible: followerModalVisible,
    onCancel: () => {
      setFollowerModalVisible(false);
    }
  }), __jsx(_FollowingListModal__WEBPACK_IMPORTED_MODULE_21__["default"], {
    userId: lodash__WEBPACK_IMPORTED_MODULE_2___default.a.get(profile, ['_id']),
    visible: followingModalVisible,
    onCancel: () => {
      setFollowingModalVisible(false);
    }
  }));
};

const mapStateToProps = state => ({
  sellCars: state.sellCars,
  productsList: state.productsList,
  app: state.app,
  user: state.user,
  sellerProfile: state.sellerProfile
});

const mapDispatchToProps = {
  updateActiveMenu: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_11__["updateActiveMenu"],
  fetchProductsList: _redux_actions_productsList_actions__WEBPACK_IMPORTED_MODULE_12__["fetchProductsList"],
  updateActiveIdProductList: _redux_actions_productsList_actions__WEBPACK_IMPORTED_MODULE_12__["updateActiveIdProductList"],
  filterCarBrandMode: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_11__["filterCarBrandMode"],
  filterCarModelMode: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_11__["filterCarModelMode"],
  filterCarSearchKeywords: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_11__["filterCarSearchKeywords"],
  quickSearchProductsList: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_11__["quickSearchProductsList"],
  loading: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_11__["loading"],
  setApplyYear: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_11__["setApplyYear"],
  setApplyPrice: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_11__["setApplyPrice"],
  setApplyMileage: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_11__["setApplyMileage"],
  updateSellerProfile: _redux_actions_sellerProfile_actions__WEBPACK_IMPORTED_MODULE_16__["updateSellerProfile"],
  loginMode: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_11__["loginMode"],
  setUser: _redux_actions_user_actions__WEBPACK_IMPORTED_MODULE_13__["setUser"]
};
/* harmony default export */ __webpack_exports__["default"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_5__["connect"])(mapStateToProps, mapDispatchToProps)(antd__WEBPACK_IMPORTED_MODULE_0__["Form"].create()(Object(next_router__WEBPACK_IMPORTED_MODULE_15__["withRouter"])(ProfileDetailsBox))));

/***/ }),

/***/ "./components/profile/ProfileNotFound.jsx":
/*!************************************************!*\
  !*** ./components/profile/ProfileNotFound.jsx ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! antd */ "antd");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(antd__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-redux */ "react-redux");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/router */ "next/router");
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../redux/actions/app-actions */ "./redux/actions/app-actions.js");
/* harmony import */ var _redux_actions_productsList_actions__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../redux/actions/productsList-actions */ "./redux/actions/productsList-actions.js");
var __jsx = react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement;







const ProfileNotFoundPage = props => {
  return __jsx(react__WEBPACK_IMPORTED_MODULE_1___default.a.Fragment, null, __jsx("div", {
    className: "width-100",
    style: {
      height: 700
    }
  }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Empty"], null, "Profile Not Found")));
};

const mapStateToProps = state => ({
  sellCars: state.sellCars,
  productsList: state.productsList,
  app: state.app,
  user: state.user
});

const mapDispatchToProps = {
  loginMode: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_4__["loginMode"],
  updateActiveMenu: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_4__["updateActiveMenu"],
  fetchProductsList: _redux_actions_productsList_actions__WEBPACK_IMPORTED_MODULE_5__["fetchProductsList"],
  updateActiveIdProductList: _redux_actions_productsList_actions__WEBPACK_IMPORTED_MODULE_5__["updateActiveIdProductList"],
  filterCarBrandMode: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_4__["filterCarBrandMode"],
  filterCarModelMode: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_4__["filterCarModelMode"],
  filterCarSearchKeywords: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_4__["filterCarSearchKeywords"],
  quickSearchProductsList: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_4__["quickSearchProductsList"],
  loading: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_4__["loading"]
};
/* harmony default export */ __webpack_exports__["default"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_2__["connect"])(mapStateToProps, mapDispatchToProps)(antd__WEBPACK_IMPORTED_MODULE_0__["Form"].create()(Object(next_router__WEBPACK_IMPORTED_MODULE_3__["withRouter"])(ProfileNotFoundPage))));

/***/ }),

/***/ "./components/profile/RatingBox.jsx":
/*!******************************************!*\
  !*** ./components/profile/RatingBox.jsx ***!
  \******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! antd */ "antd");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(antd__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-redux */ "react-redux");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! next/router */ "next/router");
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _common_function__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../common-function */ "./common-function.js");
/* harmony import */ var _CompanySummary__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./CompanySummary */ "./components/profile/CompanySummary.jsx");
/* harmony import */ var _RatingProgress__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./RatingProgress */ "./components/profile/RatingProgress.jsx");
var __jsx = react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement;








_RatingProgress__WEBPACK_IMPORTED_MODULE_7__["default"];

const RatingBox = props => {
  const {
    0: profile,
    1: setProfile
  } = Object(react__WEBPACK_IMPORTED_MODULE_2__["useState"])({});
  Object(react__WEBPACK_IMPORTED_MODULE_2__["useEffect"])(() => {
    if (lodash__WEBPACK_IMPORTED_MODULE_1___default.a.isPlainObject(props.data) && !lodash__WEBPACK_IMPORTED_MODULE_1___default.a.isEmpty(props.data)) {
      setProfile(props.data);
    } else {
      setProfile({});
    }
  }, [props.data]);

  const _renderRatingDetails = () => {
    try {
      return __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Row"], {
        gutter: [10, 10]
      }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
        xs: 24,
        sm: 24,
        md: 24,
        lg: 24,
        xl: 24
      }, __jsx(_CompanySummary__WEBPACK_IMPORTED_MODULE_6__["default"], {
        rating: lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(profile, ['avgRating'] || false),
        recommended: Object(_common_function__WEBPACK_IMPORTED_MODULE_5__["formatNumber"])(lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(profile, ['recommendedRate']), null, true, 2, true) || 0 // chat={77}
        ,
        renderRating: rating => {
          return __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
            xs: 24,
            sm: 24,
            md: 24,
            lg: 24,
            xl: 24
          }, __jsx("div", {
            className: "h5 font-weight-bold text-align-center"
          }, rating, __jsx("div", {
            className: "headline   font-weight-normal"
          }, "Rating")));
        },
        renderRecommended: recommended => {
          return lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(profile, ['totalRecommended']) > 0 ? __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
            xs: 24,
            sm: 24,
            md: 24,
            lg: 24,
            xl: 24
          }, __jsx("div", {
            className: "h5 font-weight-bold text-align-center"
          }, (parseFloat(recommended) || 0) * 100, "%", __jsx("div", {
            className: "headline   font-weight-normal"
          }, "Recommended"))) : null;
        } // renderChat={
        //     (chat) => {
        //         return (
        //             <Col xs={24} sm={24} md={24} lg={24} xl={24}>
        //                 <div className="h5 font-weight-bold text-align-center">
        //                     {chat}
        //                     <div className="headline   font-weight-normal">Chat Response</div>
        //                 </div>
        //             </Col>
        //         )
        //     }
        // }

      })), __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
        xs: 24,
        sm: 24,
        md: 24,
        lg: 24,
        xl: 24
      }, __jsx(_RatingProgress__WEBPACK_IMPORTED_MODULE_7__["default"], {
        size: 5,
        startFrom: 1,
        data: Object(_common_function__WEBPACK_IMPORTED_MODULE_5__["sortByDesc"])(lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(profile, ['ratingCategory']), 'label') || [],
        total: lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(profile, ['totalRating']) || 0,
        className: "fill-parent"
      })), __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
        xs: 0,
        sm: 0,
        md: 24,
        lg: 24,
        xl: 24
      }, __jsx("div", {
        className: "headline   text-align-center text-overflow-break"
      }, "Based on ", lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(profile, ['totalRating']) || 0, " customer reviews")));
    } catch (e) {
      return null;
    }
  };

  return __jsx("div", null, __jsx("div", {
    style: {
      height: '30px'
    },
    className: "background-ccar-yellow round-border-top flex-items-align-center padding-lg"
  }, __jsx("div", {
    className: "headline   white font-weight-bold text-overflow-break"
  }, "Seller Rating")), __jsx("div", {
    style: {
      backgroundColor: '#FFFFFF'
    },
    className: "round-border-bottom flex-items-align-center padding-md"
  }, _renderRatingDetails()));
};

const mapStateToProps = state => ({
  app: state.app,
  user: state.user,
  sellerProfile: state.sellerProfile
});

const mapDispatchToProps = {};
/* harmony default export */ __webpack_exports__["default"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_3__["connect"])(mapStateToProps, mapDispatchToProps)(antd__WEBPACK_IMPORTED_MODULE_0__["Form"].create()(Object(next_router__WEBPACK_IMPORTED_MODULE_4__["withRouter"])(RatingBox))));

/***/ }),

/***/ "./components/profile/RatingProgress.jsx":
/*!***********************************************!*\
  !*** ./components/profile/RatingProgress.jsx ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! antd */ "antd");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(antd__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-redux */ "react-redux");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/router */ "next/router");
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _common_function__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../common-function */ "./common-function.js");
var __jsx = react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement;






const RatingProgress = props => {
  function setToSize(data, size, startFrom) {
    if (isNaN(parseInt(startFrom))) {
      startFrom = 0;
    } else {
      startFrom = parseInt(startFrom);
    }

    if (!isNaN(parseInt(size)) && data.length < parseInt(size)) {
      data = data.map((item, index) => {
        if (isNaN(parseInt(item.position))) {
          if (Object(_common_function__WEBPACK_IMPORTED_MODULE_4__["isObject"])(item)) {
            item.position = index + startFrom;
          } else {
            item = {
              label: index + startFrom,
              position: index + startFrom,
              total: item
            };
          }
        }

        return item;
      });
      let finaldata = [];

      for (let index = 0; index < size; index++) {
        let replace = data.find(function (item) {
          return item.position == index + startFrom;
        });

        if (replace) {
          finaldata[index] = replace;
        } else {
          finaldata[index] = {
            label: index + startFrom,
            position: index + startFrom,
            total: 0
          };
        }
      }

      finaldata = finaldata.reverse();
      return finaldata;
    } else {
      return data;
    }
  }

  const _renderRatingProgress = (data, total, size, startFrom) => {
    if (isNaN(parseInt(total))) {
      total = 100;
    } else {
      total = parseInt(total);
    }

    if (isNaN(parseInt(startFrom))) {
      startFrom = 0;
    } else {
      startFrom = parseInt(startFrom);
    }

    if (Object(_common_function__WEBPACK_IMPORTED_MODULE_4__["notEmptyLength"])(data)) {
      if (size) {
        data = setToSize(data, size, startFrom);
      }

      return data.map(function (item, index) {
        if (item != null) {
          var num = 0;

          if (Object(_common_function__WEBPACK_IMPORTED_MODULE_4__["isObject"])(item)) {
            if (item.total && !isNaN(parseFloat(item.total))) {
              num = item.total;
            } else {
              num = 0;
            }
          } else {
            if (!isNaN(parseFloat(item))) {
              num = parseFloat(item);
            } else {
              num = 0;
            }
          }

          return __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
            span: 24
          }, __jsx("div", null, __jsx("span", {
            className: "headline   font-weight-bold margin-right-md"
          }, item.label != null ? item.label : index + startFrom), __jsx("span", null, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Progress"], {
            percent: parseFloat(num / total) * 100,
            type: "line",
            showInfo: false,
            strokeColor: "#F9A825",
            style: {
              display: 'inline-block',
              width: '80%'
            }
          }))));
        } else {
          return null;
        }
      });
    } else {
      return null;
    }
  };

  return __jsx("div", {
    className: props.className ? props.className : null,
    style: props.style ? props.style : null
  }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Row"], {
    type: "flex",
    justify: "center",
    align: "middle",
    gutter: [0, 0]
  }, props.render ? props.render(Object(_common_function__WEBPACK_IMPORTED_MODULE_4__["notEmptyLength"])(props.data) ? props.data : [], props.total ? props.total : null) : _renderRatingProgress(Object(_common_function__WEBPACK_IMPORTED_MODULE_4__["notEmptyLength"])(props.data) ? props.data : [], props.total ? props.total : null, props.size ? props.size : null, props.startFrom ? props.startFrom : null)));
};

const mapStateToProps = state => ({
  app: state.app,
  user: state.user
});

const mapDispatchToProps = {};
/* harmony default export */ __webpack_exports__["default"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_2__["connect"])(mapStateToProps, mapDispatchToProps)(antd__WEBPACK_IMPORTED_MODULE_0__["Form"].create()(Object(next_router__WEBPACK_IMPORTED_MODULE_3__["withRouter"])(RatingProgress))));

/***/ }),

/***/ "./components/profile/RecommendDialog.jsx":
/*!************************************************!*\
  !*** ./components/profile/RecommendDialog.jsx ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! antd */ "antd");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(antd__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-redux */ "react-redux");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../redux/actions/app-actions */ "./redux/actions/app-actions.js");
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next/router */ "next/router");
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _feathers__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../feathers */ "./feathers.js");
var __jsx = react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement;







const minTimeout = 1000;
const popoutPercentage = [true, true, false, false, false, false, false, false, false, false]; // const popoutPercentage = [true, true, true, true, true, true, true, true, true, true]
// const popoutPercentage = [false, false, false, false, false, false, false, false, false, false]

const types = ['company', 'product', 'user'];

const RecommendDialog = props => {
  const {
    0: confirmModalState,
    1: setConfirmModalState
  } = Object(react__WEBPACK_IMPORTED_MODULE_2__["useState"])(false);
  Object(react__WEBPACK_IMPORTED_MODULE_2__["useEffect"])(() => {
    let timeout = minTimeout * Math.random() * 10;
    setTimeout(function () {
      setConfirmModalState(lodash__WEBPACK_IMPORTED_MODULE_1___default.a.sample(lodash__WEBPACK_IMPORTED_MODULE_1___default.a.shuffle(popoutPercentage), 1));
    }, timeout);
  }, []);

  function close(e) {
    setConfirmModalState(false);
  }

  function createRecommended(type, id, isRecommended) {
    if (props[type + 'Id'] == null) {
      if (props.handleError) {
        props.handleError({
          message: 'Invalid recommend item.'
        });
      }

      return null;
    }

    if (!props.user.authenticated) {
      if (props.handleError) {
        props.handleError({
          message: 'Please Login First.'
        });
      }

      return null;
    }

    let data = {};
    data.type = type;
    data[type + 'Id'] = id;
    data.reviewerId = props.user.info.user._id;
    data.isRecommended = isRecommended;
    props.loading(true);
    setTimeout(() => {
      _feathers__WEBPACK_IMPORTED_MODULE_6__["default"].authenticate().then(res => {
        _feathers__WEBPACK_IMPORTED_MODULE_6__["default"].service('recommendeds').create(data).then(res => {
          props.loading(false);
          antd__WEBPACK_IMPORTED_MODULE_0__["message"].success(isRecommended ? 'Thank you for recommending us.' : 'Kindly provide your feedback to us. We will try our best to improve our services.');

          if (props.handleSuccess) {
            props.handleSuccess(res);
          }

          close();
        });
      }).catch(err => {
        props.loading(false);
        console.log(err);
        antd__WEBPACK_IMPORTED_MODULE_0__["message"].error(err.message);

        if (props.handleError) {
          props.handleError(err);
        }

        close();
      });
    }, 1000);
  }

  return __jsx("span", {
    className: props.className ? props.className : null,
    style: props.style ? props.style : null
  }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Modal"], {
    visible: confirmModalState,
    closable: true,
    centered: true,
    maskClosable: false,
    footer: null,
    onCancel: close
  }, __jsx("div", {
    className: "padding-md fill-parent"
  }, props.renderAvatar ? props.renderAvatar(props.avatar ? props.avatar : null) : props.avatar ? __jsx("div", {
    className: "flex-justify-center flex-items-align-center fill-parent padding-y-sm"
  }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Avatar"], {
    size: 100,
    src: props.avatar
  })) : null, props.renderTitle ? props.renderTitle(props.title ? props.title : null) : props.title ? __jsx("div", {
    className: "flex-justify-center flex-items-align-center text-overflow-break headline   font-weight-bold fill-parent padding-y-sm margin-bottom-lg"
  }, props.title) : null, props.renderDesc ? props.renderDesc(props.desc ? props.desc : null) : props.desc ? __jsx("div", {
    className: "flex-justify-center flex-items-align-center text-overflow-break subtitle1 fill-parent padding-y-sm margin-bottom-sm"
  }, props.desc) : null, __jsx("div", {
    className: props.buttonClass ? props.buttonClass : "flex-justify-center flex-items-align-center fill-parent padding-y-sm"
  }, __jsx("a", {
    className: "margin-x-sm",
    onClick: e => {
      if (!props.app.loading) {
        createRecommended(props.type ? props.type : null, props[`${props.type}Id`] ? props[`${props.type}Id`] : null, true);
      }
    }
  }, props.renderYesButton ? props.renderYesButton() : __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Button"], {
    style: {
      backgroundColor: "#F9A825"
    }
  }, props.okText ? props.okText : "Yes")), __jsx("a", {
    className: "margin-x-sm",
    onClick: e => {
      if (!props.app.loading) {
        createRecommended(props.type ? props.type : null, props[`${props.type}Id`] ? props[`${props.type}Id`] : null, false);
      }
    }
  }, props.renderNoButton ? props.renderNoButton() : __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Button"], null, props.noText ? props.noText : "No"))))));
};

const mapStateToProps = state => ({
  app: state.app,
  user: state.user
});

const mapDispatchToProps = {
  loading: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_4__["loading"]
};
/* harmony default export */ __webpack_exports__["default"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_3__["connect"])(mapStateToProps, mapDispatchToProps)(antd__WEBPACK_IMPORTED_MODULE_0__["Form"].create()(Object(next_router__WEBPACK_IMPORTED_MODULE_5__["withRouter"])(RecommendDialog))));

/***/ }),

/***/ "./components/profile/UserCarFreakPosts.jsx":
/*!**************************************************!*\
  !*** ./components/profile/UserCarFreakPosts.jsx ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! antd */ "antd");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(antd__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/router */ "next/router");
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react-redux */ "react-redux");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _common_function__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../common-function */ "./common-function.js");
/* harmony import */ var _feathers__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../feathers */ "./feathers.js");
/* harmony import */ var _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../redux/actions/app-actions */ "./redux/actions/app-actions.js");
/* harmony import */ var _redux_actions_sellerProfile_actions__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../redux/actions/sellerProfile-actions */ "./redux/actions/sellerProfile-actions.js");
/* harmony import */ var _general_WindowScrollLoadWrapper__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../general/WindowScrollLoadWrapper */ "./components/general/WindowScrollLoadWrapper.jsx");
/* harmony import */ var _UserPosts__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./UserPosts */ "./components/profile/UserPosts.jsx");
/* harmony import */ var _general_InfiniteScrollWrapper__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../general/InfiniteScrollWrapper */ "./components/general/InfiniteScrollWrapper.jsx");
var __jsx = react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement;













var moment = __webpack_require__(/*! moment */ "moment");

const POSTSIZE = 11;

const UserCarFreakPosts = props => {
  const {
    0: profile,
    1: setProfile
  } = Object(react__WEBPACK_IMPORTED_MODULE_3__["useState"])({});
  const {
    0: postLikes,
    1: setPostLikes
  } = Object(react__WEBPACK_IMPORTED_MODULE_3__["useState"])([]);
  const {
    0: posts,
    1: setPosts
  } = Object(react__WEBPACK_IMPORTED_MODULE_3__["useState"])([]);
  const {
    0: postTotal,
    1: setPostTotal
  } = Object(react__WEBPACK_IMPORTED_MODULE_3__["useState"])(0);
  const {
    0: postPage,
    1: setPostPage
  } = Object(react__WEBPACK_IMPORTED_MODULE_3__["useState"])(1);
  const {
    0: postLoading,
    1: setPostLoading
  } = Object(react__WEBPACK_IMPORTED_MODULE_3__["useState"])(false);
  Object(react__WEBPACK_IMPORTED_MODULE_3__["useEffect"])(() => {
    getUserChatLikes(lodash__WEBPACK_IMPORTED_MODULE_1___default.a.map(posts, '_id'));
  }, [props.user.authenticated]);
  Object(react__WEBPACK_IMPORTED_MODULE_3__["useEffect"])(() => {
    if (lodash__WEBPACK_IMPORTED_MODULE_1___default.a.isPlainObject(props.data) && !lodash__WEBPACK_IMPORTED_MODULE_1___default.a.isEmpty(props.data)) {
      setProfile(props.data);
    } else {
      setProfile({});
    }
  }, [props.data]);
  Object(react__WEBPACK_IMPORTED_MODULE_3__["useEffect"])(() => {
    if (lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(profile, ['_id'])) {
      if (postPage == 1) {
        getPosts(0);
      } else {
        setPostPage(1);
      }
    } else {
      setPosts([]);
      setPostTotal(0);
      setPostPage(1);
    }
  }, [profile]);
  Object(react__WEBPACK_IMPORTED_MODULE_3__["useEffect"])(() => {}, [posts, postTotal, postLoading]);
  Object(react__WEBPACK_IMPORTED_MODULE_3__["useEffect"])(() => {
    getPosts((postPage - 1) * POSTSIZE);
  }, [postPage]);

  function getPosts(skip) {
    if (lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(profile, ['_id'])) {
      if (lodash__WEBPACK_IMPORTED_MODULE_1___default.a.isNumber(skip)) {
        skip = parseInt(skip);
      } else {
        skip = 0;
      }

      setPostLoading(true);
      _feathers__WEBPACK_IMPORTED_MODULE_6__["default"].service('chats').find({
        query: {
          createdBy: lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(profile, ['_id']),
          chatType: 'carfreaks',
          $and: [{
            parentType: {
              $ne: 'club'
            }
          }, {
            parentType: {
              $ne: 'clubEvent'
            }
          }],
          $sort: {
            createdAt: -1
          },
          $limit: POSTSIZE,
          $populate: 'userId',
          $skip: skip
        }
      }).then(res => {
        setPostLoading(false);

        if (Object(_common_function__WEBPACK_IMPORTED_MODULE_5__["notEmptyLength"])(res.data)) {
          setPosts(postPage == 1 ? res.data : posts.concat(res.data));
          setPostTotal(res.total);
          getUserChatLikes(lodash__WEBPACK_IMPORTED_MODULE_1___default.a.map(res.data, '_id'), true);
        }
      }).catch(err => {
        setPostLoading(false);
        antd__WEBPACK_IMPORTED_MODULE_0__["message"].error(err.message);
      });
    }
  }

  function getUserChatLikes(ids, concat) {
    if (lodash__WEBPACK_IMPORTED_MODULE_1___default.a.isArray(ids) && !lodash__WEBPACK_IMPORTED_MODULE_1___default.a.isEmpty(ids) && lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(props.user, ['authenticated']) && lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(props.user, ['info', 'user', '_id'])) {
      _feathers__WEBPACK_IMPORTED_MODULE_6__["default"].service('chatlikes').find({
        query: {
          chatId: {
            $in: ids || []
          },
          userId: lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(props.user, ['info', 'user', '_id'])
        }
      }).then(res => {
        setPostLikes(concat ? lodash__WEBPACK_IMPORTED_MODULE_1___default.a.concat(postLikes, res.data) : res.data);
      });
    }
  }

  return __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Row"], {
    className: "margin-top-md"
  }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
    xs: 24,
    sm: 24,
    md: 24,
    lg: 24,
    xl: 24
  }, __jsx(_general_InfiniteScrollWrapper__WEBPACK_IMPORTED_MODULE_11__["default"], {
    onScrolledBottom: () => {
      if (Object(_common_function__WEBPACK_IMPORTED_MODULE_5__["arrayLengthCount"])(posts) < postTotal && !postLoading) {
        setPostPage(postPage + 1);
      }
    },
    hasMore: !postLoading && Object(_common_function__WEBPACK_IMPORTED_MODULE_5__["arrayLengthCount"])(posts) < postTotal
  }, __jsx(_UserPosts__WEBPACK_IMPORTED_MODULE_10__["default"], {
    posts: posts,
    postLikes: postLikes,
    showAddPostCard: lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(props.user, ['authenticated']) ? lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(profile, ['_id']) == lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(props.user, ['info', 'user', '_id']) : false,
    onUpdatePost: data => {
      if (lodash__WEBPACK_IMPORTED_MODULE_1___default.a.isPlainObject(data) && !lodash__WEBPACK_IMPORTED_MODULE_1___default.a.isEmpty(data)) {
        let newPosts = lodash__WEBPACK_IMPORTED_MODULE_1___default.a.map(posts, function (post) {
          return post._id == data._id ? data : post;
        });

        setPosts(newPosts);
      }
    },
    onCreatePost: data => {
      if (lodash__WEBPACK_IMPORTED_MODULE_1___default.a.isPlainObject(data) && !lodash__WEBPACK_IMPORTED_MODULE_1___default.a.isEmpty(data)) {
        let newPosts = lodash__WEBPACK_IMPORTED_MODULE_1___default.a.concat([data], posts);

        setPosts(newPosts);
      }
    },
    onUpdatePostLikes: data => {
      if (lodash__WEBPACK_IMPORTED_MODULE_1___default.a.isArray(data) && !lodash__WEBPACK_IMPORTED_MODULE_1___default.a.isEmpty(data)) {
        setPostLikes(data);
      }
    }
  }))));
};

const mapStateToProps = state => ({
  app: state.app,
  user: state.user,
  sellerProfile: state.sellerProfile
});

const mapDispatchToProps = {
  loading: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_7__["loading"],
  updateSellerProfile: _redux_actions_sellerProfile_actions__WEBPACK_IMPORTED_MODULE_8__["updateSellerProfile"]
};
/* harmony default export */ __webpack_exports__["default"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_4__["connect"])(mapStateToProps, mapDispatchToProps)(antd__WEBPACK_IMPORTED_MODULE_0__["Form"].create()(Object(next_router__WEBPACK_IMPORTED_MODULE_2__["withRouter"])(UserCarFreakPosts))));

/***/ }),

/***/ "./components/profile/UserCarOnSale.jsx":
/*!**********************************************!*\
  !*** ./components/profile/UserCarOnSale.jsx ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _ant_design_icons__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ant-design/icons */ "@ant-design/icons");
/* harmony import */ var _ant_design_icons__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_ant_design_icons__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! antd */ "antd");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(antd__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! axios */ "axios");
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react-redux */ "react-redux");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var react_responsive__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! react-responsive */ "react-responsive");
/* harmony import */ var react_responsive__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(react_responsive__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _feathers__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../feathers */ "./feathers.js");
/* harmony import */ var _params_carBrandsList__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../params/carBrandsList */ "./params/carBrandsList.js");
/* harmony import */ var _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../redux/actions/app-actions */ "./redux/actions/app-actions.js");
/* harmony import */ var _common_function__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../common-function */ "./common-function.js");
/* harmony import */ var _product_list_grid_product_list__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../product-list/grid-product-list */ "./components/product-list/grid-product-list.jsx");
/* harmony import */ var _product_list_ProductList__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../product-list/ProductList */ "./components/product-list/ProductList.jsx");
/* harmony import */ var _redux_actions_productsList_actions__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../redux/actions/productsList-actions */ "./redux/actions/productsList-actions.js");
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! next/router */ "next/router");
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_14__);
var __jsx = react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement;

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

















const Desktop = ({
  children
}) => {
  const isDesktop = Object(react_responsive__WEBPACK_IMPORTED_MODULE_6__["useMediaQuery"])({
    minWidth: 992
  });
  return isDesktop ? children : null;
};

const Tablet = ({
  children
}) => {
  const isTablet = Object(react_responsive__WEBPACK_IMPORTED_MODULE_6__["useMediaQuery"])({
    minWidth: 768,
    maxWidth: 991
  });
  return isTablet ? children : null;
};

const Mobile = ({
  children
}) => {
  const isMobile = Object(react_responsive__WEBPACK_IMPORTED_MODULE_6__["useMediaQuery"])({
    maxWidth: 767
  });
  return isMobile ? children : null;
};

const Default = ({
  children
}) => {
  const isNotMobile = Object(react_responsive__WEBPACK_IMPORTED_MODULE_6__["useMediaQuery"])({
    minWidth: 768
  });
  return isNotMobile ? children : null;
};

const PAGESIZE = 30;
const adsverImg = '/buy-car-ads.png';
const filterTypes = ['make', 'model'];

const UserCarOnSale = props => {
  const {
    0: moreOptionModalVisible,
    1: setMoreOptionModalVisible
  } = Object(react__WEBPACK_IMPORTED_MODULE_4__["useState"])(false);
  const {
    0: profile,
    1: setProfile
  } = Object(react__WEBPACK_IMPORTED_MODULE_4__["useState"])({});
  const {
    0: productLoading,
    1: setProductLoading
  } = Object(react__WEBPACK_IMPORTED_MODULE_4__["useState"])(false);
  const {
    0: view,
    1: setView
  } = Object(react__WEBPACK_IMPORTED_MODULE_4__["useState"])('gridView');
  const {
    0: productList,
    1: setProductList
  } = Object(react__WEBPACK_IMPORTED_MODULE_4__["useState"])([]);
  const {
    0: filterGroup,
    1: setFilterGroup
  } = Object(react__WEBPACK_IMPORTED_MODULE_4__["useState"])({});
  const {
    0: isDropDownOpen,
    1: setIsDropDownOpen
  } = Object(react__WEBPACK_IMPORTED_MODULE_4__["useState"])(false);
  const {
    0: mainConfig,
    1: setMainConfig
  } = Object(react__WEBPACK_IMPORTED_MODULE_4__["useState"])({
    sorting: {},
    page: 1
  });
  const {
    0: total,
    1: setTotal
  } = Object(react__WEBPACK_IMPORTED_MODULE_4__["useState"])(0);
  const {
    0: availableFilterOptions,
    1: setAvailableFilterOptions
  } = Object(react__WEBPACK_IMPORTED_MODULE_4__["useState"])({});
  Object(react__WEBPACK_IMPORTED_MODULE_4__["useEffect"])(() => {
    if (lodash__WEBPACK_IMPORTED_MODULE_3___default.a.isPlainObject(props.data) && !lodash__WEBPACK_IMPORTED_MODULE_3___default.a.isEmpty(props.data)) {
      setProfile(props.data);
    } else {
      setProfile({});
    }
  }, [props.data]);
  Object(react__WEBPACK_IMPORTED_MODULE_4__["useEffect"])(() => {}, [availableFilterOptions]); // useEffect(() => {
  //     // Bind the event listener
  //     document.addEventListener("mousedown", handleClickOutside);
  //     return () => {
  //         // Unbind the event listener on clean up
  //         document.removeEventListener("mousedown", handleClickOutside);
  //     };
  // }, [isDropDownOpen])

  Object(react__WEBPACK_IMPORTED_MODULE_4__["useEffect"])(() => {
    if (lodash__WEBPACK_IMPORTED_MODULE_3___default.a.isPlainObject(profile) && !lodash__WEBPACK_IMPORTED_MODULE_3___default.a.isEmpty(profile)) {
      if (lodash__WEBPACK_IMPORTED_MODULE_3___default.a.get(mainConfig, ['page']) == 1) {
        getData();
        getAvailableOptions();
      } else {
        setMainConfig(_objectSpread(_objectSpread({}, mainConfig), {}, {
          page: 1
        }));
      }
    } else {
      setProductList([]);
    }
  }, [filterGroup, profile]);
  Object(react__WEBPACK_IMPORTED_MODULE_4__["useEffect"])(() => {
    getData();
  }, [mainConfig]);

  function scrollToCarOnSale() {
    var elmnt = document.getElementById("user-car-on-sale-container");
    var offset = -100;
    var elementPosition = lodash__WEBPACK_IMPORTED_MODULE_3___default.a.get(elmnt.getBoundingClientRect(), ['top']) || 0;
    var offsetPosition = elementPosition - offset;
    window.scrollTo({
      top: offsetPosition,
      behavior: "smooth"
    });
  }

  function pushParameterToUrl(data, config) {
    let path = Object(_common_function__WEBPACK_IMPORTED_MODULE_10__["convertParameterToProductListUrl"])(data, config);

    if (path != `${props.location.pathname}${props.location.search}`) {
      props.loading(true);
      props.router.replace(path);
    }
  } // function handleClickOutside(event) {
  //     if ((!containerRef.current || !containerRef.current.contains(event.target))) {
  //         setMoreOptionModalVisible(false)
  //     }
  // }


  function getData() {
    //     let query = queryString.parse(props.location.search);
    //   if (!query) {
    //     query = {};
    //   }
    //     let sorting = query.sorting ? JSON.parse(query.sorting) : { createdAt: -1 };
    //     let config = {
    //         page: query.page,
    //         view: query.view,
    //         sorting: sorting
    //       }
    if (lodash__WEBPACK_IMPORTED_MODULE_3___default.a.get(profile, ['_id'])) {
      let sorting = lodash__WEBPACK_IMPORTED_MODULE_3___default.a.cloneDeep(Object(_common_function__WEBPACK_IMPORTED_MODULE_10__["objectRemoveEmptyValue"])(mainConfig.sorting));

      if (lodash__WEBPACK_IMPORTED_MODULE_3___default.a.isPlainObject(lodash__WEBPACK_IMPORTED_MODULE_3___default.a.pick(sorting, ['searchPrice', 'mileageFilter', 'carspec.year'])) && !lodash__WEBPACK_IMPORTED_MODULE_3___default.a.isEmpty(lodash__WEBPACK_IMPORTED_MODULE_3___default.a.pick(sorting, ['searchPrice', 'mileageFilter', 'carspec.year']))) {} else {
        sorting = {};
      }

      props.loading(true);
      let match = {
        $match: _objectSpread(_objectSpread({}, Object(_common_function__WEBPACK_IMPORTED_MODULE_10__["objectRemoveEmptyValue"])(filterGroup)), {}, {
          'createdBy': lodash__WEBPACK_IMPORTED_MODULE_3___default.a.get(profile, ['_id'])
        })
      };
      axios__WEBPACK_IMPORTED_MODULE_2___default.a.get(`${_feathers__WEBPACK_IMPORTED_MODULE_7__["default"].io.io.uri}carAdsFilterV3`, {
        params: {
          match,
          sorting: sorting,
          limit: PAGESIZE,
          skip: (mainConfig.page - 1) * PAGESIZE
        }
      }).then(res => {
        props.loading(false);

        if (Object(_common_function__WEBPACK_IMPORTED_MODULE_10__["notEmptyLength"])(res.data.data)) {
          setProductList(res.data.data);
          setTotal(res.data.total);
        } else {
          setProductList([]);
          setTotal(0);
        }
      }).catch(err => {
        props.loading(false);
        antd__WEBPACK_IMPORTED_MODULE_1__["message"].error(err.message);
      });
    } // if (!filterGroup.state) {
    //      setMainConfig(config);
    //     return null;
    //   }

  }

  function getAvailableOptions() {
    if (lodash__WEBPACK_IMPORTED_MODULE_3___default.a.get(profile, ['_id'])) {
      let promises = [];
      let match = {
        $match: _objectSpread(_objectSpread({}, Object(_common_function__WEBPACK_IMPORTED_MODULE_10__["objectRemoveEmptyValue"])(filterGroup)), {}, {
          'createdBy': lodash__WEBPACK_IMPORTED_MODULE_3___default.a.get(profile, ['_id'])
        })
      };

      lodash__WEBPACK_IMPORTED_MODULE_3___default.a.forEach(filterTypes, function (filterType) {
        promises.push(axios__WEBPACK_IMPORTED_MODULE_2___default.a.get(`${_feathers__WEBPACK_IMPORTED_MODULE_7__["default"].io.io.uri}brandFilterTotalV3`, {
          params: {
            filterType: filterType,
            match
          },
          headers: {
            'Authorization': _feathers__WEBPACK_IMPORTED_MODULE_7__["default"].settings.storage.storage.storage['feathers-jwt']
          }
        }));
      });

      Promise.all(promises).then(responses => {
        if (lodash__WEBPACK_IMPORTED_MODULE_3___default.a.isArray(responses) && !lodash__WEBPACK_IMPORTED_MODULE_3___default.a.isEmpty(responses)) {
          let options = {};

          lodash__WEBPACK_IMPORTED_MODULE_3___default.a.forEach(responses, function (response, index) {
            options[`${filterTypes[index]}List`] = response.data.uniqueInfo[`${filterTypes[index]}List`];
          });

          setAvailableFilterOptions(options);
        }
      }).catch(err => {// message.error(err.message);
      });
    }
  }

  const _renderGridView = () => {
    return __jsx(_product_list_ProductList__WEBPACK_IMPORTED_MODULE_12__["default"], {
      data: productList
    });
  };

  const _renderCarOnSale = () => {
    return __jsx("div", {
      style: {
        minHeight: 800
      }
    }, __jsx("span", {
      className: "flex-items-align-center flex-justify-space-around"
    }, __jsx("span", {
      className: "flex-justify-center flex-items-align-center margin-x-xs"
    }, __jsx("span", {
      style: {
        fontSize: '12px'
      },
      className: "d-inline-block "
    }, "360\xB0 View:"), __jsx("span", {
      className: "d-inline-block margin-left-xs"
    }, __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Switch"], {
      checked: lodash__WEBPACK_IMPORTED_MODULE_3___default.a.get(filterGroup, ['car360View']),
      onChange: checked => {
        scrollToCarOnSale();
        setFilterGroup(_objectSpread(_objectSpread({}, filterGroup), {}, {
          car360View: checked
        }));
      }
    }))), __jsx("span", {
      className: "flex-justify-center flex-items-align-center margin-x-xs"
    }, __jsx("span", {
      style: {
        fontSize: '12px'
      },
      className: "d-inline-block"
    }, "Ready Stock:"), __jsx("span", {
      className: "d-inline-block margin-left-xs"
    }, __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Switch"], {
      checked: filterGroup.readyStock,
      onChange: checked => {
        props.loading(true);
        setFilterGroup(_objectSpread(_objectSpread({}, filterGroup), {}, {
          readyStock: checked ? 'yes' : null
        }));
      }
    }))), __jsx("span", {
      className: "flex-justify-center flex-items-align-center margin-x-xs"
    }, __jsx("span", {
      style: {
        fontSize: '12px'
      },
      className: "d-inline-block"
    }, "Reg Card:"), __jsx("span", {
      className: "margin-left-xs"
    }, __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Switch"], {
      checked: lodash__WEBPACK_IMPORTED_MODULE_3___default.a.get(filterGroup, ['registrationUrl']),
      onChange: checked => {
        scrollToCarOnSale();
        setFilterGroup(_objectSpread(_objectSpread({}, filterGroup), {}, {
          registrationUrl: checked
        }));
      }
    })))), __jsx("span", {
      className: "flex-items-align-center flex-justify-space-around margin-top-sm margin-x-xs"
    }, __jsx("span", {
      className: "flex-justify-center flex-items-align-center margin-x-xs"
    }, __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Select"], {
      allowClear: true,
      value: lodash__WEBPACK_IMPORTED_MODULE_3___default.a.get(filterGroup, ['make']),
      style: {
        width: 120
      },
      dropdownMatchSelectWidth: false,
      placeholder: "Brand",
      className: "padding-right-sm",
      onChange: value => {
        setFilterGroup(_objectSpread(_objectSpread({}, filterGroup), {}, {
          make: lodash__WEBPACK_IMPORTED_MODULE_3___default.a.toLower(value) || undefined,
          model: undefined
        }));
      }
    }, lodash__WEBPACK_IMPORTED_MODULE_3___default.a.map(lodash__WEBPACK_IMPORTED_MODULE_3___default.a.isArray(lodash__WEBPACK_IMPORTED_MODULE_3___default.a.get(availableFilterOptions, ['makeList'])) && !lodash__WEBPACK_IMPORTED_MODULE_3___default.a.isEmpty(lodash__WEBPACK_IMPORTED_MODULE_3___default.a.get(availableFilterOptions, ['makeList'])) ? lodash__WEBPACK_IMPORTED_MODULE_3___default.a.sortBy(lodash__WEBPACK_IMPORTED_MODULE_3___default.a.get(availableFilterOptions, ['makeList']), 'value') : [], function (item) {
      return __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Select"].Option, {
        value: lodash__WEBPACK_IMPORTED_MODULE_3___default.a.get(item, ['value']),
        className: "capitalize"
      }, lodash__WEBPACK_IMPORTED_MODULE_3___default.a.get(Object(_params_carBrandsList__WEBPACK_IMPORTED_MODULE_8__["getCarBrand"])(lodash__WEBPACK_IMPORTED_MODULE_3___default.a.get(item, ['value'])), ['value']) || lodash__WEBPACK_IMPORTED_MODULE_3___default.a.get(item, ['value']) || '', " (", Object(_common_function__WEBPACK_IMPORTED_MODULE_10__["formatNumber"])(lodash__WEBPACK_IMPORTED_MODULE_3___default.a.get(item, ['count']), 'auto', true, 0, true) || 0, ")");
    }))), __jsx("span", {
      className: "flex-justify-center flex-items-align-center margin-x-xs"
    }, __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Select"], {
      allowClear: true,
      value: lodash__WEBPACK_IMPORTED_MODULE_3___default.a.get(filterGroup, ['model']),
      style: {
        width: 120
      },
      dropdownMatchSelectWidth: false,
      placeholder: "Model",
      className: "padding-right-sm",
      onChange: value => {
        setFilterGroup(_objectSpread(_objectSpread({}, filterGroup), {}, {
          model: lodash__WEBPACK_IMPORTED_MODULE_3___default.a.toLower(value) || undefined
        }));
      },
      disabled: !filterGroup.make
    }, lodash__WEBPACK_IMPORTED_MODULE_3___default.a.map(lodash__WEBPACK_IMPORTED_MODULE_3___default.a.isArray(lodash__WEBPACK_IMPORTED_MODULE_3___default.a.get(availableFilterOptions, ['modelList'])) && !lodash__WEBPACK_IMPORTED_MODULE_3___default.a.isEmpty(lodash__WEBPACK_IMPORTED_MODULE_3___default.a.get(availableFilterOptions, ['modelList'])) ? lodash__WEBPACK_IMPORTED_MODULE_3___default.a.sortBy(lodash__WEBPACK_IMPORTED_MODULE_3___default.a.get(availableFilterOptions, ['modelList']), 'value') : [], function (item) {
      return __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Select"].Option, {
        value: lodash__WEBPACK_IMPORTED_MODULE_3___default.a.get(item, ['value']),
        className: "capitalize"
      }, lodash__WEBPACK_IMPORTED_MODULE_3___default.a.get(item, ['value']) || '', " (", Object(_common_function__WEBPACK_IMPORTED_MODULE_10__["formatNumber"])(lodash__WEBPACK_IMPORTED_MODULE_3___default.a.get(item, ['count']), 'auto', true, 0, true) || 0, ")");
    }))), __jsx("span", {
      className: "flex-justify-center flex-items-align-center margin-x-xs"
    }, __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Select"], {
      defaultValue: "",
      style: {
        width: 120
      },
      dropdownMatchSelectWidth: false,
      dropdownStyle: {
        alignContent: 'left'
      },
      onChange: e => {
        let sorting = {};
        let str = e.split(':') || [];
        sorting[str[0]] = parseInt(str[1]);
        setMainConfig(_objectSpread(_objectSpread({}, mainConfig), {}, {
          sorting: sorting,
          page: 1
        }));
      },
      value: lodash__WEBPACK_IMPORTED_MODULE_3___default.a.isPlainObject(mainConfig.sorting) && !lodash__WEBPACK_IMPORTED_MODULE_3___default.a.isEmpty(Object(_common_function__WEBPACK_IMPORTED_MODULE_10__["objectRemoveEmptyValue"])(mainConfig.sorting)) ? `${lodash__WEBPACK_IMPORTED_MODULE_3___default.a.get(Object.entries(mainConfig.sorting), [0, 0])}:${mainConfig.sorting[lodash__WEBPACK_IMPORTED_MODULE_3___default.a.get(Object.entries(mainConfig.sorting), [0, 0])]}` : ''
    }, __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Select"].Option, {
      value: ""
    }, "Best Value"), __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Select"].Option, {
      value: "price:1"
    }, "Price (Low to High)"), __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Select"].Option, {
      value: "price:-1"
    }, "Price (High to Low)"), __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Select"].Option, {
      value: "carspec.year:-1"
    }, "Year (New to Old)"), __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Select"].Option, {
      value: "carspec.year:1"
    }, "Year (Old to New)"), __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Select"].Option, {
      value: "mileage:1"
    }, "Mileage (Low to High)"), __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Select"].Option, {
      value: "mileage:-1"
    }, "Mileage (High to Low)")))), __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Col"], {
      span: 24,
      className: "margin-top-lg"
    }, __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Row"], {
      gutter: [10, 10]
    }, _renderGridView())));
  };

  return __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Row"], {
    type: "flex",
    align: "start",
    justify: "center",
    gutter: [20, 10]
  }, __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Col"], {
    xs: {
      order: 1,
      span: 24
    },
    sm: {
      order: 1,
      span: 24
    },
    md: {
      order: 1,
      span: 24
    },
    lg: {
      order: 1,
      span: 24
    },
    xl: {
      order: 1,
      span: 24
    }
  }, __jsx("div", {
    id: "user-car-on-sale-container",
    style: {
      minHeight: "1000px",
      padding: '0px'
    }
  }, _renderCarOnSale()), __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Row"], {
    gutter: [10, 10]
  }, __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Col"], {
    className: "margin-md",
    style: {
      textAlign: 'center'
    },
    span: 24
  }, __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Pagination"], {
    current: mainConfig.page,
    defaultCurrent: 1,
    pageSize: PAGESIZE,
    onChange: page => {
      scrollToCarOnSale();
      setMainConfig(_objectSpread(_objectSpread({}, mainConfig), {}, {
        page: page
      }));
    },
    total: total
  })))));
};

const mapStateToProps = state => ({
  sellCars: state.sellCars,
  productsList: state.productsList,
  app: state.app,
  user: state.user,
  sellerProfile: state.sellerProfile
});

const mapDispatchToProps = {
  loading: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_9__["loading"],
  updateActiveMenu: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_9__["updateActiveMenu"],
  fetchProductsList: _redux_actions_productsList_actions__WEBPACK_IMPORTED_MODULE_13__["fetchProductsList"],
  updateActiveIdProductList: _redux_actions_productsList_actions__WEBPACK_IMPORTED_MODULE_13__["updateActiveIdProductList"],
  filterCarBrandMode: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_9__["filterCarBrandMode"],
  filterCarModelMode: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_9__["filterCarModelMode"],
  filterCarSearchKeywords: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_9__["filterCarSearchKeywords"],
  quickSearchProductsList: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_9__["quickSearchProductsList"],
  setApplyYear: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_9__["setApplyYear"],
  setApplyPrice: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_9__["setApplyPrice"],
  setApplyMileage: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_9__["setApplyMileage"],
  filterCarBrands: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_9__["filterCarBrands"],
  filterCarModels: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_9__["filterCarModels"],
  filterColors: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_9__["filterColors"],
  filterBodyTypes: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_9__["filterBodyTypes"],
  filterDrivenWheels: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_9__["filterDrivenWheels"],
  filterFuelTypes: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_9__["filterFuelTypes"],
  filterStates: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_9__["filterStates"]
};
/* harmony default export */ __webpack_exports__["default"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_5__["connect"])(mapStateToProps, mapDispatchToProps)(antd__WEBPACK_IMPORTED_MODULE_1__["Form"].create()(Object(next_router__WEBPACK_IMPORTED_MODULE_14__["withRouter"])(UserCarOnSale))));

/***/ }),

/***/ "./components/profile/UserPost.jsx":
/*!*****************************************!*\
  !*** ./components/profile/UserPost.jsx ***!
  \*****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! antd */ "antd");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(antd__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/router */ "next/router");
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react-redux */ "react-redux");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _common_function__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../common-function */ "./common-function.js");
/* harmony import */ var _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../redux/actions/app-actions */ "./redux/actions/app-actions.js");
/* harmony import */ var _live_config__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../live/config */ "./components/live/config.js");
/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./config */ "./components/profile/config.js");
var __jsx = react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement;

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }











var moment = __webpack_require__(/*! moment */ "moment");

const UserPost = props => {
  const {
    0: post,
    1: setPost
  } = Object(react__WEBPACK_IMPORTED_MODULE_3__["useState"])({});
  Object(react__WEBPACK_IMPORTED_MODULE_3__["useEffect"])(() => {
    if (lodash__WEBPACK_IMPORTED_MODULE_1___default.a.isPlainObject(props.post) && !lodash__WEBPACK_IMPORTED_MODULE_1___default.a.isEmpty(props.post)) {
      setPost(props.post);
    } else {
      setPost({});
    }
  }, [props.post]);

  function handleOnClick() {
    if (props.onClick) {
      props.onClick(post);
    }
  }

  return __jsx(react__WEBPACK_IMPORTED_MODULE_3___default.a.Fragment, null, __jsx("div", {
    className: `width-100 cursor-pointer ${props.className || ''}`,
    style: _objectSpread({
      height: props.height || 400
    }, props.style),
    onClick: e => {
      handleOnClick();
    }
  }, __jsx("div", {
    className: "fill-parent relative-wrapper"
  }, __jsx("img", {
    src: lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(post, ['mediaList', 0, 'url']) || _config__WEBPACK_IMPORTED_MODULE_8__["imageNotFound"],
    className: "img-cover fill-parent"
  }), __jsx("div", {
    className: "stack-element-opacity-100 absolute-center fill-parent flex-justify-center flex-items-align-center background-black-opacity-50"
  }, __jsx("span", {
    className: "flex-justify-center flex-items-align-center white margin-right-xl"
  }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Icon"], {
    type: "heart",
    theme: "filled",
    className: "white margin-right-sm",
    style: {
      fontSize: 20
    }
  }), lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(post, ['totalLike']) ? Object(_common_function__WEBPACK_IMPORTED_MODULE_5__["formatNumber"])(lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(post, ['totalLike']), 'auto', true, 0, true) : 0), __jsx("span", {
    className: "flex-justify-center flex-items-align-center white"
  }, __jsx("img", {
    src: _live_config__WEBPACK_IMPORTED_MODULE_7__["commentIcon"],
    style: {
      width: 20,
      height: 20
    },
    className: "margin-right-sm"
  }), lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(post, ['totalReply']) ? Object(_common_function__WEBPACK_IMPORTED_MODULE_5__["formatNumber"])(lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(post, ['totalReply']), 'auto', true, 0, true) : 0)))));
};

const mapStateToProps = state => ({
  sellCars: state.sellCars,
  productsList: state.productsList,
  app: state.app,
  user: state.user,
  sellerProfile: state.sellerProfile
});

const mapDispatchToProps = {
  updateActiveMenu: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_6__["updateActiveMenu"],
  loading: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_6__["loading"],
  loginMode: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_6__["loginMode"]
};
/* harmony default export */ __webpack_exports__["default"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_4__["connect"])(mapStateToProps, mapDispatchToProps)(antd__WEBPACK_IMPORTED_MODULE_0__["Form"].create()(Object(next_router__WEBPACK_IMPORTED_MODULE_2__["withRouter"])(UserPost))));

/***/ }),

/***/ "./components/profile/UserPosts.jsx":
/*!******************************************!*\
  !*** ./components/profile/UserPosts.jsx ***!
  \******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! antd */ "antd");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(antd__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/router */ "next/router");
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react-redux */ "react-redux");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _common_function__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../common-function */ "./common-function.js");
/* harmony import */ var _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../redux/actions/app-actions */ "./redux/actions/app-actions.js");
/* harmony import */ var _carFreak_components_post_modal__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../carFreak/components/post-modal */ "./components/carFreak/components/post-modal.jsx");
/* harmony import */ var _carFreak_components_write_post_modal__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../carFreak/components/write-post-modal */ "./components/carFreak/components/write-post-modal.jsx");
/* harmony import */ var _UserPost__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./UserPost */ "./components/profile/UserPost.jsx");
var __jsx = react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement;











var moment = __webpack_require__(/*! moment */ "moment");

const defaultHeight = 100;

const UserPosts = props => {
  const {
    0: posts,
    1: setPosts
  } = Object(react__WEBPACK_IMPORTED_MODULE_3__["useState"])([]);
  const {
    0: postLikes,
    1: setPostLikes
  } = Object(react__WEBPACK_IMPORTED_MODULE_3__["useState"])([]);
  const {
    0: writePostVisible,
    1: setWritePostVisible
  } = Object(react__WEBPACK_IMPORTED_MODULE_3__["useState"])(false);
  const {
    0: postVisible,
    1: setPostVisible
  } = Object(react__WEBPACK_IMPORTED_MODULE_3__["useState"])(false);
  const {
    0: selectedPost,
    1: setSelectedPost
  } = Object(react__WEBPACK_IMPORTED_MODULE_3__["useState"])({});
  Object(react__WEBPACK_IMPORTED_MODULE_3__["useEffect"])(() => {
    if (lodash__WEBPACK_IMPORTED_MODULE_1___default.a.isArray(props.posts) && Object(_common_function__WEBPACK_IMPORTED_MODULE_5__["notEmptyLength"])(props.posts)) {
      setPosts(props.posts);
    } else {
      setPosts([]);
    }
  }, [props.posts]);
  Object(react__WEBPACK_IMPORTED_MODULE_3__["useEffect"])(() => {
    if (lodash__WEBPACK_IMPORTED_MODULE_1___default.a.isArray(props.postLikes) && Object(_common_function__WEBPACK_IMPORTED_MODULE_5__["notEmptyLength"])(props.postLikes)) {
      setPostLikes(props.postLikes);
    } else {
      setPostLikes([]);
    }
  }, [props.postLikes]);
  return __jsx(react__WEBPACK_IMPORTED_MODULE_3___default.a.Fragment, null, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Row"], {
    type: "flex",
    gutter: props.gutter ? props.gutter : [10, 10]
  }, props.showAddPostCard ? __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
    xs: props.xs ? props.xs : 24,
    sm: props.sm ? props.sm : 24,
    md: props.md ? props.md : 12,
    lg: props.lg ? props.lg : 6,
    xl: props.xl ? props.xl : 6
  }, __jsx("div", {
    className: "width-100 background-white relative-wrapper cursor-pointer",
    style: {
      height: defaultHeight,
      position: 'relative'
    },
    onClick: e => {
      setWritePostVisible(true);
    }
  }, __jsx("img", {
    src: "/assets/upload_photo.png",
    style: {
      width: defaultHeight * 0.5,
      height: defaultHeight * 0.5
    },
    className: "absolute-center"
  }), __jsx("div", {
    className: "flex-justify-center flex-items-align-center subtitle1 absolute-center",
    style: {
      paddingTop: defaultHeight * 0.5 + 30
    }
  }, "POST / UPLOAD PHOTO"))) : null, posts.map(function (post, i) {
    return __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
      key: 'colPost' + i,
      xs: props.xs ? props.xs : 8,
      sm: props.sm ? props.sm : 8,
      md: props.md ? props.md : 12,
      lg: props.lg ? props.lg : 6,
      xl: props.xl ? props.xl : 6
    }, __jsx(_UserPost__WEBPACK_IMPORTED_MODULE_9__["default"], {
      height: defaultHeight,
      post: post,
      onClick: post => {
        setSelectedPost(post);
        setPostVisible(true);
      }
    }));
  }), !props.showAddPostCard && Object(_common_function__WEBPACK_IMPORTED_MODULE_5__["arrayLengthCount"])(posts) <= 0 ? __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
    xs: 24,
    sm: 24,
    md: 24,
    lg: 24,
    xl: 24
  }, __jsx("div", {
    className: "width-100",
    style: {
      height: 400
    }
  }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Empty"], null))) : null), __jsx(_carFreak_components_write_post_modal__WEBPACK_IMPORTED_MODULE_8__["default"], {
    visibleMode: writePostVisible,
    changeVisibleMode: e => {
      setWritePostVisible(e);
    },
    chatType: 'carfreaks',
    onCreatePost: data => {
      if (props.onCreatePost) {
        props.onCreatePost(data);
      }
    }
  }), __jsx(_carFreak_components_post_modal__WEBPACK_IMPORTED_MODULE_7__["default"], {
    postLike: lodash__WEBPACK_IMPORTED_MODULE_1___default.a.find(postLikes, {
      chatId: selectedPost._id
    }),
    onPostLikeChange: (liked, data) => {
      let newPostLikes = postLikes;

      if (liked) {
        newPostLikes = lodash__WEBPACK_IMPORTED_MODULE_1___default.a.concat(newPostLikes, [data]);
      } else {
        newPostLikes = lodash__WEBPACK_IMPORTED_MODULE_1___default.a.filter(newPostLikes, function (like) {
          return lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(like, ['chatId']) != lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(data, ['chatId']);
        });
      }

      if (props.onUpdatePostLikes) {
        props.onUpdatePostLikes(newPostLikes);
      }
    },
    visibleMode: postVisible,
    changeVisibleMode: e => {
      setPostVisible(e);
      setSelectedPost({});
    },
    chatInfo: lodash__WEBPACK_IMPORTED_MODULE_1___default.a.isPlainObject(selectedPost) && !lodash__WEBPACK_IMPORTED_MODULE_1___default.a.isEmpty(selectedPost) ? selectedPost : {},
    onUpdatePost: data => {
      if (props.onUpdatePost) {
        props.onUpdatePost(data);
      }
    }
  }));
};

const mapStateToProps = state => ({
  sellCars: state.sellCars,
  productsList: state.productsList,
  app: state.app,
  user: state.user,
  sellerProfile: state.sellerProfile
});

const mapDispatchToProps = {
  updateActiveMenu: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_6__["updateActiveMenu"],
  loading: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_6__["loading"],
  loginMode: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_6__["loginMode"]
};
/* harmony default export */ __webpack_exports__["default"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_4__["connect"])(mapStateToProps, mapDispatchToProps)(antd__WEBPACK_IMPORTED_MODULE_0__["Form"].create()(Object(next_router__WEBPACK_IMPORTED_MODULE_2__["withRouter"])(UserPosts))));

/***/ }),

/***/ "./components/profile/UserProfile.jsx":
/*!********************************************!*\
  !*** ./components/profile/UserProfile.jsx ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! antd */ "antd");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(antd__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-redux */ "react-redux");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var next_dist_client_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! next/dist/client/router */ "./node_modules/next/dist/client/router.js");
/* harmony import */ var next_dist_client_router__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(next_dist_client_router__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../redux/actions/app-actions */ "./redux/actions/app-actions.js");
/* harmony import */ var _redux_actions_productsList_actions__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../redux/actions/productsList-actions */ "./redux/actions/productsList-actions.js");
/* harmony import */ var _redux_actions_sellerProfile_actions__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../redux/actions/sellerProfile-actions */ "./redux/actions/sellerProfile-actions.js");
/* harmony import */ var _ProfileDetailsBox__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./ProfileDetailsBox */ "./components/profile/ProfileDetailsBox.jsx");
/* harmony import */ var _UserCarFreakPosts__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./UserCarFreakPosts */ "./components/profile/UserCarFreakPosts.jsx");
/* harmony import */ var _UserSavedCarFreakPosts__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./UserSavedCarFreakPosts */ "./components/profile/UserSavedCarFreakPosts.jsx");
/* harmony import */ var _UserSocialBoard__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./UserSocialBoard */ "./components/profile/UserSocialBoard.jsx");
/* harmony import */ var _UserSavedSocialBoard__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./UserSavedSocialBoard */ "./components/profile/UserSavedSocialBoard.jsx");
var __jsx = react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement;













const {
  TabPane
} = antd__WEBPACK_IMPORTED_MODULE_0__["Tabs"];

const UserProfile = props => {
  const {
    0: profile,
    1: setProfile
  } = Object(react__WEBPACK_IMPORTED_MODULE_2__["useState"])({}); //initial render

  Object(react__WEBPACK_IMPORTED_MODULE_2__["useEffect"])(() => {
    if (lodash__WEBPACK_IMPORTED_MODULE_1___default.a.isPlainObject(props.data) && !lodash__WEBPACK_IMPORTED_MODULE_1___default.a.isEmpty(props.data)) {
      setProfile(props.data);
    } else {
      setProfile({});
    }
  }, [props.data]);

  const _renderMenu = profile => {
    return __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Row"], {
      type: "flex",
      align: "middle",
      className: "background-white"
    }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
      xs: 24,
      sm: 24,
      md: 24,
      lg: 24,
      xl: 24
    }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Tabs"], {
      defaultActiveKey: "1"
    }, __jsx(TabPane, {
      tab: "CarFreaks",
      key: "1"
    }, __jsx(_UserCarFreakPosts__WEBPACK_IMPORTED_MODULE_9__["default"], {
      data: profile
    })), __jsx(TabPane, {
      tab: "Social Board",
      key: "2"
    }, __jsx(_UserSocialBoard__WEBPACK_IMPORTED_MODULE_11__["default"], {
      data: profile,
      className: "margin-y-lg"
    })), lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(props.user, ['info', 'user', '_id']) && lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(props.user, ['info', 'user', '_id']) == lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(profile, ['_id']) ? __jsx(TabPane, {
      tab: "Saved CarFreaks",
      key: "3"
    }, __jsx(_UserSavedCarFreakPosts__WEBPACK_IMPORTED_MODULE_10__["default"], {
      data: profile,
      className: "margin-y-lg"
    })) : null, lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(props.user, ['info', 'user', '_id']) && lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(props.user, ['info', 'user', '_id']) == lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(profile, ['_id']) ? __jsx(TabPane, {
      tab: "Saved Social Board",
      key: "4"
    }, __jsx(_UserSavedSocialBoard__WEBPACK_IMPORTED_MODULE_12__["default"], {
      data: profile,
      className: "margin-y-lg"
    })) : null)));
  };

  return __jsx(react__WEBPACK_IMPORTED_MODULE_2___default.a.Fragment, null, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Row"], null, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
    xs: 24,
    sm: 24,
    md: 24,
    lg: 24,
    xl: 24
  }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Divider"], {
    className: "no-margin"
  }), __jsx(_ProfileDetailsBox__WEBPACK_IMPORTED_MODULE_8__["default"], {
    data: profile,
    showProfileActions: props.isOwn,
    type: "user",
    onChangeCoverPhoto: res => {
      if (props.onChangeCoverPhoto) {
        props.onChangeCoverPhoto(res);
      }
    },
    onChange: res => {
      if (props.onChange) {
        props.onChange(res);
      }
    }
  })), __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
    xs: 24,
    sm: 24,
    md: 24,
    lg: 24,
    xl: 24
  }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Divider"], {
    className: "no-margin"
  }), _renderMenu(profile))));
};

const mapStateToProps = state => ({
  sellCars: state.sellCars,
  productsList: state.productsList,
  app: state.app,
  sellerProfile: state.sellerProfile,
  user: state.user
});

const mapDispatchToProps = {
  updateActiveMenu: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_5__["updateActiveMenu"],
  fetchProductsList: _redux_actions_productsList_actions__WEBPACK_IMPORTED_MODULE_6__["fetchProductsList"],
  updateActiveIdProductList: _redux_actions_productsList_actions__WEBPACK_IMPORTED_MODULE_6__["updateActiveIdProductList"],
  filterCarBrandMode: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_5__["filterCarBrandMode"],
  filterCarModelMode: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_5__["filterCarModelMode"],
  filterCarSearchKeywords: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_5__["filterCarSearchKeywords"],
  quickSearchProductsList: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_5__["quickSearchProductsList"],
  loading: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_5__["loading"],
  setApplyYear: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_5__["setApplyYear"],
  setApplyPrice: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_5__["setApplyPrice"],
  setApplyMileage: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_5__["setApplyMileage"],
  updateSellerProfile: _redux_actions_sellerProfile_actions__WEBPACK_IMPORTED_MODULE_7__["updateSellerProfile"],
  loginMode: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_5__["loginMode"]
};
/* harmony default export */ __webpack_exports__["default"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_3__["connect"])(mapStateToProps, mapDispatchToProps)(antd__WEBPACK_IMPORTED_MODULE_0__["Form"].create()(Object(next_dist_client_router__WEBPACK_IMPORTED_MODULE_4__["withRouter"])(UserProfile))));

/***/ }),

/***/ "./components/profile/UserReceivedReview.jsx":
/*!***************************************************!*\
  !*** ./components/profile/UserReceivedReview.jsx ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! antd */ "antd");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(antd__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-redux */ "react-redux");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _feathers__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../feathers */ "./feathers.js");
/* harmony import */ var _redux_actions_sellerProfile_actions__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../redux/actions/sellerProfile-actions */ "./redux/actions/sellerProfile-actions.js");
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! next/router */ "next/router");
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../redux/actions/app-actions */ "./redux/actions/app-actions.js");
/* harmony import */ var _redux_actions_user_actions__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../redux/actions/user-actions */ "./redux/actions/user-actions.js");
/* harmony import */ var _general_WindowScrollLoadWrapper__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../general/WindowScrollLoadWrapper */ "./components/general/WindowScrollLoadWrapper.jsx");
/* harmony import */ var _common_function__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../common-function */ "./common-function.js");
/* harmony import */ var _rating_ReviewList__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../rating/ReviewList */ "./components/rating/ReviewList.jsx");
/* harmony import */ var _rating_WriteReviewButton__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../rating/WriteReviewButton */ "./components/rating/WriteReviewButton.jsx");
/* harmony import */ var _general_InfiniteScrollWrapper__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../general/InfiniteScrollWrapper */ "./components/general/InfiniteScrollWrapper.jsx");
var __jsx = react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement;















var moment = __webpack_require__(/*! moment */ "moment");

const RATINGPAGESIZE = 4;
const reviewContainerRef = react__WEBPACK_IMPORTED_MODULE_2___default.a.createRef();

const UserReceivedReview = props => {
  const {
    0: reviewLoading,
    1: setReviewLoading
  } = Object(react__WEBPACK_IMPORTED_MODULE_2__["useState"])(false);
  const {
    0: ratings,
    1: setRatings
  } = Object(react__WEBPACK_IMPORTED_MODULE_2__["useState"])([]);
  const {
    0: ratingPage,
    1: setRatingPage
  } = Object(react__WEBPACK_IMPORTED_MODULE_2__["useState"])(1);
  const {
    0: ratingTotal,
    1: setRatingTotal
  } = Object(react__WEBPACK_IMPORTED_MODULE_2__["useState"])(0);
  const {
    0: ownRating,
    1: setOwnRating
  } = Object(react__WEBPACK_IMPORTED_MODULE_2__["useState"])([]);
  const {
    0: profile,
    1: setProfile
  } = Object(react__WEBPACK_IMPORTED_MODULE_2__["useState"])({});
  Object(react__WEBPACK_IMPORTED_MODULE_2__["useEffect"])(() => {}, []);
  Object(react__WEBPACK_IMPORTED_MODULE_2__["useEffect"])(() => {
    getRatings((ratingPage - 1) * RATINGPAGESIZE);
  }, [ratingPage]);
  Object(react__WEBPACK_IMPORTED_MODULE_2__["useEffect"])(() => {
    setRatingPage(1);
    setRatingTotal(0);
    getRatings(0);
    getOwnRating();
  }, [profile, props.user]);
  Object(react__WEBPACK_IMPORTED_MODULE_2__["useEffect"])(() => {
    if (lodash__WEBPACK_IMPORTED_MODULE_1___default.a.isPlainObject(props.data) && !lodash__WEBPACK_IMPORTED_MODULE_1___default.a.isEmpty(props.data)) {
      setProfile(props.data);
    } else {
      setProfile({});
    }
  }, [props.data]);

  function init() {
    if (profile._id) {
      _feathers__WEBPACK_IMPORTED_MODULE_4__["default"].service('users').find({
        query: {
          _id: profile._id,
          $populate: [{
            path: 'companyId',
            ref: 'companys'
          }]
        }
      }).then(res => {
        if (Object(_common_function__WEBPACK_IMPORTED_MODULE_10__["notEmptyLength"])(res.data)) {
          props.updateSellerProfile(res.data[0]);
        }
      }).catch(err => {
        antd__WEBPACK_IMPORTED_MODULE_0__["message"].error(err.message);
      });
    }
  }

  function getOwnRating() {
    if (lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(profile, ['_id']) && lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(props.user, ['authenticated']) && lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(props.user, ['info', 'user', '_id'])) {
      setReviewLoading(true);
      _feathers__WEBPACK_IMPORTED_MODULE_4__["default"].service('rating').find({
        query: {
          // companyId: props.sellerProfile.company._id,
          userId: lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(profile, ['_id']),
          reviewerId: lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(props.user, ['info', 'user', '_id']),
          $populate: [{
            path: 'companyId',
            ref: 'companys'
          }, {
            path: 'userId',
            ref: 'users'
          }, {
            path: 'reviewerId',
            ref: 'users'
          }],
          $limit: 1
        }
      }).then(res => {
        setTimeout(() => {
          setReviewLoading(false);
        }, 1000);

        if (Object(_common_function__WEBPACK_IMPORTED_MODULE_10__["notEmptyLength"])(res.data)) {
          setOwnRating(res.data);
        } else {
          setOwnRating([]);
        }
      }).catch(err => {
        setTimeout(() => {
          setReviewLoading(false);
        }, 1000);
        antd__WEBPACK_IMPORTED_MODULE_0__["message"].error(err.message);
      });
    } else {
      setOwnRating([]);
    }
  }

  function getRatings(skip) {
    if (lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(profile, ['_id'])) {
      let query = {
        // companyId: profile.companyId._id,
        userId: lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(profile, ['_id']),
        $populate: [{
          path: 'companyId',
          ref: 'companys'
        }, {
          path: 'reviewerId',
          ref: 'users'
        }],
        $sort: {
          createdAt: -1
        },
        $limit: RATINGPAGESIZE,
        $skip: skip
      }; //exclude auth user own rating and hide rating

      if (lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(props.user, ['authenticated']) && lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(props.user, ['info', 'user', '_id'])) {
        query.reviewerId = {
          $ne: lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(props.user, ['info', 'user', '_id'])
        };
        query["hideBy.userId"] = {
          $ne: lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(props.user, ['info', 'user', '_id'])
        };
      }

      setReviewLoading(true);
      _feathers__WEBPACK_IMPORTED_MODULE_4__["default"].service('rating').find({
        query: query
      }).then(res => {
        setTimeout(() => {
          setReviewLoading(false);
        }, 1000);

        if (Object(_common_function__WEBPACK_IMPORTED_MODULE_10__["notEmptyLength"])(res.data)) {
          let data;

          if (skip == 0) {
            data = res.data;
          } else {
            data = ratings.concat(res.data);
          }

          setRatingTotal(res.total);
          setRatings(data);
        }
      }).catch(err => {
        setTimeout(() => {
          setReviewLoading(false);
        }, 1000);
        antd__WEBPACK_IMPORTED_MODULE_0__["message"].error(err.message);
      });
    } else {
      setRatingTotal(0);
      setRatings([]);
    }
  }

  const _renderReviews = data => {
    if (lodash__WEBPACK_IMPORTED_MODULE_1___default.a.isPlainObject(data) && !lodash__WEBPACK_IMPORTED_MODULE_1___default.a.isEmpty(profile)) {
      return __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Row"], {
        type: "flex",
        justify: "center",
        align: "middle",
        gutter: [10, 10]
      }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
        span: 12
      }, __jsx("div", null, __jsx("span", {
        className: "padding-left-xs flex-items-align-center h6 font-weight-bold"
      }, "USER REVIEWS"))), __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
        span: 12
      }, __jsx("div", {
        className: " text-align-right"
      }, !lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(profile, ['_id']) || Object(_common_function__WEBPACK_IMPORTED_MODULE_10__["notEmptyLength"])(ownRating) || lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(profile, ['_id']) == lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(props.user, ['info', 'user', '_id']) ? null : __jsx(_rating_WriteReviewButton__WEBPACK_IMPORTED_MODULE_12__["default"], {
        data: {
          type: 'user',
          userId: profile ? profile._id : null,
          reviewerId: props.user.info.user ? props.user.info.user._id : null
        },
        mode: "add",
        handleSuccess: v => {
          init();
        },
        handleError: e => {
          antd__WEBPACK_IMPORTED_MODULE_0__["message"].error(e.message);
        }
      }))), __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
        span: 24
      }, Object(_common_function__WEBPACK_IMPORTED_MODULE_10__["notEmptyLength"])(ratings) || Object(_common_function__WEBPACK_IMPORTED_MODULE_10__["notEmptyLength"])(ownRating) ? __jsx("div", null, __jsx("div", {
        className: "width-100"
      }, __jsx(_rating_ReviewList__WEBPACK_IMPORTED_MODULE_11__["default"], {
        data: Object(_common_function__WEBPACK_IMPORTED_MODULE_10__["notEmptyLength"])(ownRating) ? ownRating : [],
        handleChange: v => {
          init();
        }
      })), Object(_common_function__WEBPACK_IMPORTED_MODULE_10__["notEmptyLength"])(ratings) ? __jsx(_general_InfiniteScrollWrapper__WEBPACK_IMPORTED_MODULE_13__["default"], {
        onScrolledBottom: () => {
          if (Object(_common_function__WEBPACK_IMPORTED_MODULE_10__["arrayLengthCount"])(ratings) < ratingTotal) {
            setRatingPage(ratingPage + 1);
          }
        },
        hasMore: !reviewLoading && Object(_common_function__WEBPACK_IMPORTED_MODULE_10__["arrayLengthCount"])(ratings) < ratingTotal
      }, __jsx("div", null, __jsx(_rating_ReviewList__WEBPACK_IMPORTED_MODULE_11__["default"], {
        data: ratings,
        handleChange: v => {
          init();
        }
      }))) : null) : __jsx("div", {
        style: {
          height: '15em',
          backgroundColor: '#FFFFFF'
        }
      }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Empty"], {
        style: {
          position: 'relative',
          top: '50%',
          transform: 'translateY(-50%)'
        },
        image: "/empty.png",
        imageStyle: {
          height: 60
        },
        description: __jsx("span", null, "No Review Yet")
      }))));
    } else {
      return null;
    }
  };

  return __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Row"], {
    type: "flex",
    justify: "center",
    gutter: [20, 10]
  }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
    xs: {
      order: 1,
      span: 24
    },
    sm: {
      order: 1,
      span: 24
    },
    md: {
      order: 1,
      span: 24
    },
    lg: {
      order: 1,
      span: 24
    },
    xl: {
      order: 1,
      span: 24
    }
  }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Row"], {
    gutter: [20, 10]
  }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
    xs: 24,
    sm: 24,
    md: 24,
    lg: 24,
    xl: 24
  }, _renderReviews(profile)))));
};

const mapStateToProps = state => ({
  app: state.app,
  user: state.user,
  sellerProfile: state.sellerProfile
});

const mapDispatchToProps = {
  loading: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_7__["loading"],
  setUser: _redux_actions_user_actions__WEBPACK_IMPORTED_MODULE_8__["setUser"],
  updateSellerProfile: _redux_actions_sellerProfile_actions__WEBPACK_IMPORTED_MODULE_5__["updateSellerProfile"]
};
/* harmony default export */ __webpack_exports__["default"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_3__["connect"])(mapStateToProps, mapDispatchToProps)(antd__WEBPACK_IMPORTED_MODULE_0__["Form"].create()(Object(next_router__WEBPACK_IMPORTED_MODULE_6__["withRouter"])(UserReceivedReview))));

/***/ }),

/***/ "./components/profile/UserSavedCarFreakPosts.jsx":
/*!*******************************************************!*\
  !*** ./components/profile/UserSavedCarFreakPosts.jsx ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! antd */ "antd");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(antd__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-redux */ "react-redux");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _feathers__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../feathers */ "./feathers.js");
/* harmony import */ var _UserPosts__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./UserPosts */ "./components/profile/UserPosts.jsx");
/* harmony import */ var _common_function__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../common-function */ "./common-function.js");
/* harmony import */ var _general_WindowScrollLoadWrapper__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../general/WindowScrollLoadWrapper */ "./components/general/WindowScrollLoadWrapper.jsx");
/* harmony import */ var _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../redux/actions/app-actions */ "./redux/actions/app-actions.js");
/* harmony import */ var _redux_actions_user_actions__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../redux/actions/user-actions */ "./redux/actions/user-actions.js");
/* harmony import */ var _redux_actions_sellerProfile_actions__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../redux/actions/sellerProfile-actions */ "./redux/actions/sellerProfile-actions.js");
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! next/router */ "next/router");
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_11__);
/* harmony import */ var _general_InfiniteScrollWrapper__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../general/InfiniteScrollWrapper */ "./components/general/InfiniteScrollWrapper.jsx");
var __jsx = react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement;














var moment = __webpack_require__(/*! moment */ "moment");

const POSTSIZE = 11;

const UserSavedCarFreakPosts = props => {
  const {
    0: profile,
    1: setProfile
  } = Object(react__WEBPACK_IMPORTED_MODULE_2__["useState"])({});
  const {
    0: postLikes,
    1: setPostLikes
  } = Object(react__WEBPACK_IMPORTED_MODULE_2__["useState"])([]);
  const {
    0: posts,
    1: setPosts
  } = Object(react__WEBPACK_IMPORTED_MODULE_2__["useState"])([]);
  const {
    0: postTotal,
    1: setPostTotal
  } = Object(react__WEBPACK_IMPORTED_MODULE_2__["useState"])(0);
  const {
    0: postPage,
    1: setPostPage
  } = Object(react__WEBPACK_IMPORTED_MODULE_2__["useState"])(1);
  const {
    0: postLoading,
    1: setPostLoading
  } = Object(react__WEBPACK_IMPORTED_MODULE_2__["useState"])(false);
  Object(react__WEBPACK_IMPORTED_MODULE_2__["useEffect"])(() => {
    getUserChatLikes(lodash__WEBPACK_IMPORTED_MODULE_1___default.a.map(posts, '_id'));
  }, [props.user.authenticated]);
  Object(react__WEBPACK_IMPORTED_MODULE_2__["useEffect"])(() => {
    if (lodash__WEBPACK_IMPORTED_MODULE_1___default.a.isPlainObject(props.data) && !lodash__WEBPACK_IMPORTED_MODULE_1___default.a.isEmpty(props.data)) {
      setProfile(props.data);
    } else {
      setProfile({});
    }
  }, [props.data]);
  Object(react__WEBPACK_IMPORTED_MODULE_2__["useEffect"])(() => {
    if (lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(profile, ['_id'])) {
      if (postPage == 1) {
        getPosts(0);
      } else {
        setPostPage(1);
      }
    } else {
      setPosts([]);
      setPostTotal(0);
      setPostPage(1);
    }
  }, [profile]);
  Object(react__WEBPACK_IMPORTED_MODULE_2__["useEffect"])(() => {
    getPosts((postPage - 1) * POSTSIZE);
  }, [postPage]);

  function getPosts(skip) {
    if (lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(profile, ['_id'])) {
      if (lodash__WEBPACK_IMPORTED_MODULE_1___default.a.isNumber(skip)) {
        skip = parseInt(skip);
      } else {
        skip = 0;
      }

      setPostLoading(true);
      _feathers__WEBPACK_IMPORTED_MODULE_4__["default"].service('savedpost').find({
        query: {
          userId: lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(profile, ['_id']),
          chatType: 'carfreaks',
          $sort: {
            createdAt: -1
          },
          $limit: POSTSIZE,
          $populate: [{
            path: 'chatId',
            ref: 'chats',
            populate: [{
              path: 'userId',
              ref: 'users'
            }]
          }],
          $skip: skip
        }
      }).then(res => {
        setPostLoading(false);

        if (Object(_common_function__WEBPACK_IMPORTED_MODULE_6__["notEmptyLength"])(res.data)) {
          setPosts(postPage == 1 ? lodash__WEBPACK_IMPORTED_MODULE_1___default.a.map(res.data, 'chatId') : posts.concat(lodash__WEBPACK_IMPORTED_MODULE_1___default.a.map(res.data, 'chatId')));
          getUserChatLikes(lodash__WEBPACK_IMPORTED_MODULE_1___default.a.map(res.data, 'chatId._id'), true);
        }

        setPostTotal(res.total);
      }).catch(err => {
        setPostLoading(false);
        antd__WEBPACK_IMPORTED_MODULE_0__["message"].error(err.message);
      });
    }
  }

  function getUserChatLikes(ids, concat) {
    if (lodash__WEBPACK_IMPORTED_MODULE_1___default.a.isArray(ids) && !lodash__WEBPACK_IMPORTED_MODULE_1___default.a.isEmpty(ids) && lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(props.user, ['authenticated']) && lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(props.user, ['info', 'user', '_id'])) {
      _feathers__WEBPACK_IMPORTED_MODULE_4__["default"].service('chatlikes').find({
        query: {
          chatId: {
            $in: ids || []
          },
          userId: lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(props.user, ['info', 'user', '_id'])
        }
      }).then(res => {
        setPostLikes(concat ? lodash__WEBPACK_IMPORTED_MODULE_1___default.a.concat(postLikes, res.data) : res.data);
      });
    }
  }

  return __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Row"], {
    className: "margin-top-md"
  }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
    xs: 24,
    sm: 24,
    md: 24,
    lg: 24,
    xl: 24
  }, __jsx(_general_InfiniteScrollWrapper__WEBPACK_IMPORTED_MODULE_12__["default"], {
    onScrolledBottom: () => {
      if (Object(_common_function__WEBPACK_IMPORTED_MODULE_6__["arrayLengthCount"])(posts) < postTotal && !postLoading) {
        setPostPage(postPage + 1);
      }
    },
    hasMore: !postLoading && Object(_common_function__WEBPACK_IMPORTED_MODULE_6__["arrayLengthCount"])(posts) < postTotal
  }, __jsx(_UserPosts__WEBPACK_IMPORTED_MODULE_5__["default"], {
    posts: posts,
    showAddPostCard: false,
    postLikes: postLikes,
    onUpdatePost: data => {
      if (lodash__WEBPACK_IMPORTED_MODULE_1___default.a.isPlainObject(data) && !lodash__WEBPACK_IMPORTED_MODULE_1___default.a.isEmpty(data)) {
        let newPosts = lodash__WEBPACK_IMPORTED_MODULE_1___default.a.map(posts, function (post) {
          return post._id == data._id ? data : post;
        });

        setPosts(newPosts);
      }
    },
    onUpdatePostLikes: data => {
      if (lodash__WEBPACK_IMPORTED_MODULE_1___default.a.isArray(data) && !lodash__WEBPACK_IMPORTED_MODULE_1___default.a.isEmpty(data)) {
        setPostLikes(data);
      }
    }
  }))));
};

const mapStateToProps = state => ({
  app: state.app,
  user: state.user,
  sellerProfile: state.sellerProfile
});

const mapDispatchToProps = {
  loading: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_8__["loading"],
  setUser: _redux_actions_user_actions__WEBPACK_IMPORTED_MODULE_9__["setUser"],
  updateSellerProfile: _redux_actions_sellerProfile_actions__WEBPACK_IMPORTED_MODULE_10__["updateSellerProfile"]
};
/* harmony default export */ __webpack_exports__["default"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_3__["connect"])(mapStateToProps, mapDispatchToProps)(antd__WEBPACK_IMPORTED_MODULE_0__["Form"].create()(Object(next_router__WEBPACK_IMPORTED_MODULE_11__["withRouter"])(UserSavedCarFreakPosts))));

/***/ }),

/***/ "./components/profile/UserSavedSocialBoard.jsx":
/*!*****************************************************!*\
  !*** ./components/profile/UserSavedSocialBoard.jsx ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! antd */ "antd");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(antd__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-redux */ "react-redux");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _feathers__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../feathers */ "./feathers.js");
/* harmony import */ var _carFreak_components_social_board_card__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../carFreak/components/social-board-card */ "./components/carFreak/components/social-board-card.jsx");
/* harmony import */ var _carFreak_components_write_post_modal__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../carFreak/components/write-post-modal */ "./components/carFreak/components/write-post-modal.jsx");
/* harmony import */ var _common_function__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../common-function */ "./common-function.js");
/* harmony import */ var _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../redux/actions/app-actions */ "./redux/actions/app-actions.js");
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! next/router */ "next/router");
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_9__);
/* harmony import */ var _general_InfiniteScrollWrapper__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../general/InfiniteScrollWrapper */ "./components/general/InfiniteScrollWrapper.jsx");
var __jsx = react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement;












var moment = __webpack_require__(/*! moment */ "moment");

const POSTSIZE = 11;

const UserSocialBoard = props => {
  const {
    0: profile,
    1: setProfile
  } = Object(react__WEBPACK_IMPORTED_MODULE_2__["useState"])({});
  const {
    0: posts,
    1: setPosts
  } = Object(react__WEBPACK_IMPORTED_MODULE_2__["useState"])([]);
  const {
    0: postTotal,
    1: setPostTotal
  } = Object(react__WEBPACK_IMPORTED_MODULE_2__["useState"])(0);
  const {
    0: postPage,
    1: setPostPage
  } = Object(react__WEBPACK_IMPORTED_MODULE_2__["useState"])(1);
  const {
    0: postLoading,
    1: setPostLoading
  } = Object(react__WEBPACK_IMPORTED_MODULE_2__["useState"])(false);
  const {
    0: editMode,
    1: setEditMode
  } = Object(react__WEBPACK_IMPORTED_MODULE_2__["useState"])();
  const {
    0: writeModalVisible,
    1: setWriteModalVisible
  } = Object(react__WEBPACK_IMPORTED_MODULE_2__["useState"])(false);
  const {
    0: selectedPost,
    1: setSelectedPost
  } = Object(react__WEBPACK_IMPORTED_MODULE_2__["useState"])({});
  Object(react__WEBPACK_IMPORTED_MODULE_2__["useEffect"])(() => {
    if (lodash__WEBPACK_IMPORTED_MODULE_1___default.a.isPlainObject(props.data) && !lodash__WEBPACK_IMPORTED_MODULE_1___default.a.isEmpty(props.data)) {
      setProfile(props.data);
    } else {
      setProfile({});
    }
  }, [props.data]);
  Object(react__WEBPACK_IMPORTED_MODULE_2__["useEffect"])(() => {
    if (lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(profile, ['_id'])) {
      if (postPage == 1) {
        getPosts(0);
      } else {
        setPostPage(1);
      }
    } else {
      setPosts([]);
      setPostTotal(0);
      setPostPage(1);
    }
  }, [profile]);
  Object(react__WEBPACK_IMPORTED_MODULE_2__["useEffect"])(() => {
    getPosts((postPage - 1) * POSTSIZE);
  }, [postPage]);
  Object(react__WEBPACK_IMPORTED_MODULE_2__["useEffect"])(() => {}, [posts, postLoading, postTotal]);

  function getPosts(skip) {
    if (lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(profile, ['_id'])) {
      if (lodash__WEBPACK_IMPORTED_MODULE_1___default.a.isNumber(skip)) {
        skip = parseInt(skip);
      } else {
        skip = 0;
      }

      setPostLoading(true);
      _feathers__WEBPACK_IMPORTED_MODULE_4__["default"].service('savedpost').find({
        query: {
          userId: lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(profile, ['_id']),
          chatType: 'socialboard',
          $sort: {
            createdAt: -1
          },
          $limit: POSTSIZE,
          $populate: [{
            path: 'chatId',
            ref: 'chats',
            populate: [{
              path: 'userId',
              ref: 'users'
            }]
          }],
          $skip: skip
        }
      }).then(res => {
        setPostLoading(false);

        if (Object(_common_function__WEBPACK_IMPORTED_MODULE_7__["notEmptyLength"])(res.data)) {
          setPosts(postPage == 1 ? lodash__WEBPACK_IMPORTED_MODULE_1___default.a.map(res.data, 'chatId') : posts.concat(lodash__WEBPACK_IMPORTED_MODULE_1___default.a.map(res.data, 'chatId')));
        }

        setPostTotal(res.total);
      }).catch(err => {
        setPostLoading(false);
        antd__WEBPACK_IMPORTED_MODULE_0__["message"].error(err.message);
      });
    }
  }

  function confirmDelete(v) {
    if (v._id) {
      _feathers__WEBPACK_IMPORTED_MODULE_4__["default"].service('chats').remove(v._id).then(res => {
        antd__WEBPACK_IMPORTED_MODULE_0__["message"].success('Record Deleted');
        handleRemoveSocialBoardPost(v);
      }).catch(err => {
        console.log('Unable to delete Chat.');
      });
    }
  }

  function handleSocialBoardPostChange(post) {
    let newPosts = lodash__WEBPACK_IMPORTED_MODULE_1___default.a.map(posts, function (chat) {
      return chat._id == lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(post, ['_id']) ? post : chat;
    });

    setPosts(newPosts);
  }

  function handleSocialBoardAddPost(post) {
    if (lodash__WEBPACK_IMPORTED_MODULE_1___default.a.isPlainObject(post) && !lodash__WEBPACK_IMPORTED_MODULE_1___default.a.isEmpty(post)) {
      let newPosts = lodash__WEBPACK_IMPORTED_MODULE_1___default.a.concat([post], posts);

      setPosts(newPosts);
    }
  }

  function handleRemoveSocialBoardPost(post) {
    let newPosts = lodash__WEBPACK_IMPORTED_MODULE_1___default.a.filter(posts, function (chat) {
      return chat._id != lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(post, ['_id']);
    });

    setPosts(newPosts);
  }

  return __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Row"], {
    className: `${props.className || ''}`
  }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
    xs: 24,
    sm: 24,
    md: 24,
    lg: 24,
    xl: 24
  }, __jsx(_general_InfiniteScrollWrapper__WEBPACK_IMPORTED_MODULE_10__["default"], {
    onScrolledBottom: () => {
      if (Object(_common_function__WEBPACK_IMPORTED_MODULE_7__["arrayLengthCount"])(posts) < postTotal) {
        setPostPage(postPage + 1);
      }
    },
    hasMore: !postLoading && Object(_common_function__WEBPACK_IMPORTED_MODULE_7__["arrayLengthCount"])(posts) < postTotal
  }, lodash__WEBPACK_IMPORTED_MODULE_1___default.a.isArray(posts) && !lodash__WEBPACK_IMPORTED_MODULE_1___default.a.isEmpty(posts) ? __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Row"], {
    gutter: [10, 20],
    className: "padding-md"
  }, lodash__WEBPACK_IMPORTED_MODULE_1___default.a.map(posts, function (post) {
    return __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
      xs: 12,
      sm: 12,
      md: 12,
      lg: 12,
      xl: 12
    }, __jsx(_carFreak_components_social_board_card__WEBPACK_IMPORTED_MODULE_5__["default"], {
      data: post,
      redirectPost: true,
      onEditClick: post => {
        setWriteModalVisible(true);
        setSelectedPost(post);
        setEditMode('edit');
      },
      onRemoveClick: post => {
        confirmDelete(post);
      }
    }));
  })) : __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Empty"], null))), __jsx(_carFreak_components_write_post_modal__WEBPACK_IMPORTED_MODULE_6__["default"], {
    currentRecord: selectedPost,
    editMode: editMode,
    hideImage: true,
    chatType: 'socialboard',
    visibleMode: writeModalVisible,
    onUpdatePost: data => {
      handleSocialBoardPostChange(data);
    },
    onCreatePost: data => {
      handleSocialBoardAddPost(data);
    },
    changeVisibleMode: v => {
      setWriteModalVisible(v);

      if (!v) {
        setSelectedPost({});
      }
    }
  }));
};

const mapStateToProps = state => ({
  app: state.app,
  user: state.user,
  sellerProfile: state.sellerProfile
});

const mapDispatchToProps = {
  loading: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_8__["loading"]
};
/* harmony default export */ __webpack_exports__["default"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_3__["connect"])(mapStateToProps, mapDispatchToProps)(antd__WEBPACK_IMPORTED_MODULE_0__["Form"].create()(Object(next_router__WEBPACK_IMPORTED_MODULE_9__["withRouter"])(UserSocialBoard))));

/***/ }),

/***/ "./components/profile/UserSocialBoard.jsx":
/*!************************************************!*\
  !*** ./components/profile/UserSocialBoard.jsx ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! antd */ "antd");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(antd__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-redux */ "react-redux");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _feathers__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../feathers */ "./feathers.js");
/* harmony import */ var _carFreak_components_social_board_card__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../carFreak/components/social-board-card */ "./components/carFreak/components/social-board-card.jsx");
/* harmony import */ var _carFreak_components_write_post_modal__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../carFreak/components/write-post-modal */ "./components/carFreak/components/write-post-modal.jsx");
/* harmony import */ var _common_function__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../common-function */ "./common-function.js");
/* harmony import */ var _general_WindowScrollLoadWrapper__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../general/WindowScrollLoadWrapper */ "./components/general/WindowScrollLoadWrapper.jsx");
/* harmony import */ var _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../redux/actions/app-actions */ "./redux/actions/app-actions.js");
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! next/router */ "next/router");
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_10__);
/* harmony import */ var _general_InfiniteScrollWrapper__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../general/InfiniteScrollWrapper */ "./components/general/InfiniteScrollWrapper.jsx");
var __jsx = react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement;













var moment = __webpack_require__(/*! moment */ "moment");

const POSTSIZE = 11;

const UserSocialBoard = props => {
  const {
    0: profile,
    1: setProfile
  } = Object(react__WEBPACK_IMPORTED_MODULE_2__["useState"])({});
  const {
    0: posts,
    1: setPosts
  } = Object(react__WEBPACK_IMPORTED_MODULE_2__["useState"])([]);
  const {
    0: postTotal,
    1: setPostTotal
  } = Object(react__WEBPACK_IMPORTED_MODULE_2__["useState"])(0);
  const {
    0: postPage,
    1: setPostPage
  } = Object(react__WEBPACK_IMPORTED_MODULE_2__["useState"])(1);
  const {
    0: postLoading,
    1: setPostLoading
  } = Object(react__WEBPACK_IMPORTED_MODULE_2__["useState"])(false);
  const {
    0: editMode,
    1: setEditMode
  } = Object(react__WEBPACK_IMPORTED_MODULE_2__["useState"])();
  const {
    0: writeModalVisible,
    1: setWriteModalVisible
  } = Object(react__WEBPACK_IMPORTED_MODULE_2__["useState"])(false);
  const {
    0: selectedPost,
    1: setSelectedPost
  } = Object(react__WEBPACK_IMPORTED_MODULE_2__["useState"])({});
  Object(react__WEBPACK_IMPORTED_MODULE_2__["useEffect"])(() => {
    if (lodash__WEBPACK_IMPORTED_MODULE_1___default.a.isPlainObject(props.data) && !lodash__WEBPACK_IMPORTED_MODULE_1___default.a.isEmpty(props.data)) {
      setProfile(props.data);
    } else {
      setProfile({});
    }
  }, [props.data]);
  Object(react__WEBPACK_IMPORTED_MODULE_2__["useEffect"])(() => {
    if (lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(profile, ['_id'])) {
      if (postPage == 1) {
        getPosts(0);
      } else {
        setPostPage(1);
      }
    } else {
      setPosts([]);
      setPostTotal(0);
      setPostPage(1);
    }
  }, [profile]);
  Object(react__WEBPACK_IMPORTED_MODULE_2__["useEffect"])(() => {
    getPosts((postPage - 1) * POSTSIZE);
  }, [postPage]);
  Object(react__WEBPACK_IMPORTED_MODULE_2__["useEffect"])(() => {}, [posts, postLoading, postTotal]);

  function getPosts(skip) {
    if (lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(profile, ['_id'])) {
      if (lodash__WEBPACK_IMPORTED_MODULE_1___default.a.isNumber(skip)) {
        skip = parseInt(skip);
      } else {
        skip = 0;
      }

      setPostLoading(true);
      _feathers__WEBPACK_IMPORTED_MODULE_4__["default"].service('chats').find({
        query: {
          createdBy: lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(profile, ['_id']),
          chatType: 'socialboard',
          $and: [{
            parentType: {
              $ne: 'club'
            }
          }, {
            parentType: {
              $ne: 'clubEvent'
            }
          }],
          $sort: {
            createdAt: -1
          },
          $limit: POSTSIZE,
          $populate: 'userId',
          $skip: skip
        }
      }).then(res => {
        setPostLoading(false);

        if (Object(_common_function__WEBPACK_IMPORTED_MODULE_7__["notEmptyLength"])(res.data)) {
          setPosts(postPage == 1 ? res.data : posts.concat(res.data));
        }

        setPostTotal(res.total);
      }).catch(err => {
        setPostLoading(false);
        antd__WEBPACK_IMPORTED_MODULE_0__["message"].error(err.message);
      });
    }
  }

  function confirmDelete(v) {
    if (v._id) {
      _feathers__WEBPACK_IMPORTED_MODULE_4__["default"].service('chats').remove(v._id).then(res => {
        antd__WEBPACK_IMPORTED_MODULE_0__["message"].success('Record Deleted');
        handleRemoveSocialBoardPost(v);
      }).catch(err => {
        console.log('Unable to delete Chat.');
      });
    }
  }

  function handleSocialBoardPostChange(post) {
    let newPosts = lodash__WEBPACK_IMPORTED_MODULE_1___default.a.map(posts, function (chat) {
      return chat._id == lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(post, ['_id']) ? post : chat;
    });

    setPosts(newPosts);
  }

  function handleSocialBoardAddPost(post) {
    if (lodash__WEBPACK_IMPORTED_MODULE_1___default.a.isPlainObject(post) && !lodash__WEBPACK_IMPORTED_MODULE_1___default.a.isEmpty(post)) {
      let newPosts = lodash__WEBPACK_IMPORTED_MODULE_1___default.a.concat([post], posts);

      setPosts(newPosts);
    }
  }

  function handleRemoveSocialBoardPost(post) {
    let newPosts = lodash__WEBPACK_IMPORTED_MODULE_1___default.a.filter(posts, function (chat) {
      return chat._id != lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(post, ['_id']);
    });

    setPosts(newPosts);
  }

  return __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Row"], {
    className: `${props.className || ''}`
  }, lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(props.user, ['info', 'user', '_id']) && lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(props.user, ['info', 'user', '_id']) == lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(profile, ['_id']) ? __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
    xs: 24,
    sm: 24,
    md: 24,
    lg: 24,
    xl: 24,
    className: "margin-bottom-md"
  }, __jsx("div", {
    className: "flex-justify-end flex-items-align-center"
  }, __jsx("span", {
    className: "d-inline-block margin-right-md"
  }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Button"], {
    size: "medium",
    className: "border-ccar-yellow",
    onClick: e => {
      setEditMode(null);
      setWriteModalVisible(true);
      setSelectedPost(null);
    }
  }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Icon"], {
    type: "edit"
  }), " Write a Post")))) : null, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
    xs: 24,
    sm: 24,
    md: 24,
    lg: 24,
    xl: 24
  }, __jsx(_general_InfiniteScrollWrapper__WEBPACK_IMPORTED_MODULE_11__["default"], {
    onScrolledBottom: () => {
      if (Object(_common_function__WEBPACK_IMPORTED_MODULE_7__["arrayLengthCount"])(posts) < postTotal) {
        setPostPage(postPage + 1);
      }
    },
    hasMore: !postLoading && Object(_common_function__WEBPACK_IMPORTED_MODULE_7__["arrayLengthCount"])(posts) < postTotal
  }, lodash__WEBPACK_IMPORTED_MODULE_1___default.a.isArray(posts) && !lodash__WEBPACK_IMPORTED_MODULE_1___default.a.isEmpty(posts) ? __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Row"], {
    gutter: [10, 20],
    className: "padding-md"
  }, lodash__WEBPACK_IMPORTED_MODULE_1___default.a.map(posts, function (post) {
    return __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
      xs: 24,
      sm: 24,
      md: 24,
      lg: 24,
      xl: 24
    }, __jsx(_carFreak_components_social_board_card__WEBPACK_IMPORTED_MODULE_5__["default"], {
      data: post,
      redirectPost: true,
      onEditClick: post => {
        setWriteModalVisible(true);
        setSelectedPost(post);
        setEditMode('edit');
      },
      onRemoveClick: post => {
        confirmDelete(post);
      }
    }));
  })) : __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Empty"], null))), __jsx(_carFreak_components_write_post_modal__WEBPACK_IMPORTED_MODULE_6__["default"], {
    currentRecord: selectedPost,
    editMode: editMode,
    hideImage: true,
    chatType: 'socialboard',
    visibleMode: writeModalVisible,
    onUpdatePost: data => {
      handleSocialBoardPostChange(data);
    },
    onCreatePost: data => {
      handleSocialBoardAddPost(data);
    },
    changeVisibleMode: v => {
      setWriteModalVisible(v);

      if (!v) {
        setSelectedPost({});
      }
    }
  }));
};

const mapStateToProps = state => ({
  app: state.app,
  user: state.user,
  sellerProfile: state.sellerProfile
});

const mapDispatchToProps = {
  loading: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_9__["loading"]
};
/* harmony default export */ __webpack_exports__["default"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_3__["connect"])(mapStateToProps, mapDispatchToProps)(antd__WEBPACK_IMPORTED_MODULE_0__["Form"].create()(Object(next_router__WEBPACK_IMPORTED_MODULE_10__["withRouter"])(UserSocialBoard))));

/***/ }),

/***/ "./components/profile/config.js":
/*!**************************************!*\
  !*** ./components/profile/config.js ***!
  \**************************************/
/*! exports provided: ccarWebLogo, imageNotFound, facebookLogo, googleLogo, ccarLogo, isDealer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ccarWebLogo", function() { return ccarWebLogo; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "imageNotFound", function() { return imageNotFound; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "facebookLogo", function() { return facebookLogo; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "googleLogo", function() { return googleLogo; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ccarLogo", function() { return ccarLogo; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isDealer", function() { return isDealer; });
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);

const ccarWebLogo = '/assets/ccar-web-logo.png';
const imageNotFound = '/image-not-found.png';
const facebookLogo = '/assets/Social Media/Facebook @3x.png';
const googleLogo = '/assets/Social Media/google-icon.png';
const ccarLogo = '/logo192.png';
function isDealer(user) {
  if (!lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(user, ['role'])) {
    return lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(user, ['role']) != 'normaluser' && lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(user, ['role']) != 'mobile-user';
  } else {
    return false;
  }
}

/***/ }),

/***/ "./components/profile/page/ProfileHomePage.jsx":
/*!*****************************************************!*\
  !*** ./components/profile/page/ProfileHomePage.jsx ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! antd */ "antd");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(antd__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var next_dist_client_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/client/router */ "./node_modules/next/dist/client/router.js");
/* harmony import */ var next_dist_client_router__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_client_router__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react-redux */ "react-redux");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var react_responsive__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react-responsive */ "react-responsive");
/* harmony import */ var react_responsive__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(react_responsive__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _common_function__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../common-function */ "./common-function.js");
/* harmony import */ var _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../redux/actions/app-actions */ "./redux/actions/app-actions.js");
/* harmony import */ var _redux_actions_productsList_actions__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../redux/actions/productsList-actions */ "./redux/actions/productsList-actions.js");
/* harmony import */ var _redux_actions_user_actions__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../redux/actions/user-actions */ "./redux/actions/user-actions.js");
/* harmony import */ var _general_LayoutV2__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../general/LayoutV2 */ "./components/general/LayoutV2.jsx");
/* harmony import */ var _DealerProfile__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../DealerProfile */ "./components/profile/DealerProfile.jsx");
/* harmony import */ var _ProfileNotFound__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../ProfileNotFound */ "./components/profile/ProfileNotFound.jsx");
/* harmony import */ var _UserProfile__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../UserProfile */ "./components/profile/UserProfile.jsx");
/* harmony import */ var _feathers__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../../feathers */ "./feathers.js");
var __jsx = react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement;

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
















const {
  Meta
} = antd__WEBPACK_IMPORTED_MODULE_0__["Card"];

const ProfileHomePage = props => {
  const {
    0: userType,
    1: setUserType
  } = Object(react__WEBPACK_IMPORTED_MODULE_3__["useState"])('user');
  const {
    0: profile,
    1: setProfile
  } = Object(react__WEBPACK_IMPORTED_MODULE_3__["useState"])({});
  const {
    0: isOwn,
    1: setIsOwn
  } = Object(react__WEBPACK_IMPORTED_MODULE_3__["useState"])(false);
  Object(react__WEBPACK_IMPORTED_MODULE_3__["useEffect"])(() => {}, []);
  Object(react__WEBPACK_IMPORTED_MODULE_3__["useEffect"])(() => {
    getProfile();
  }, [props.router.query.id]);
  Object(react__WEBPACK_IMPORTED_MODULE_3__["useEffect"])(() => {}, [isOwn]);
  Object(react__WEBPACK_IMPORTED_MODULE_3__["useEffect"])(() => {
    setIsOwn(lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(props.user, ['authenticated']) && lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(props.user, ['info', 'user', '_id']) == lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(profile, ['_id']));
  }, [props.user.authenticated, profile]);
  Object(react__WEBPACK_IMPORTED_MODULE_3__["useEffect"])(() => {
    if (lodash__WEBPACK_IMPORTED_MODULE_1___default.a.isPlainObject(profile) && !lodash__WEBPACK_IMPORTED_MODULE_1___default.a.isEmpty(profile)) {
      Object(_redux_actions_user_actions__WEBPACK_IMPORTED_MODULE_9__["setUser"])(profile);
    }
  }, [profile]);

  function getProfile() {
    props.loading(true);
    _feathers__WEBPACK_IMPORTED_MODULE_14__["default"].service('users').find({
      query: {
        userurlId: props.router.query.id,
        $populate: [{
          path: 'companyId',
          ref: 'companys'
        }]
      }
    }).then(res => {
      props.loading(false);
      setProfile(lodash__WEBPACK_IMPORTED_MODULE_1___default.a.isArray(res.data) && Object(_common_function__WEBPACK_IMPORTED_MODULE_6__["notEmptyLength"])(res.data) ? res.data[0] : {});
      setIsOwn(lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(props.user, ['authenticated']) && lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(props.user, ['info', 'user', '_id']) == props.router.query.id);
      setUserType(lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(res, ['data', 0, 'role']) ? lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(res, ['data', 0, 'role']) == 'mobile-user' || lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(res, ['data', 0, 'role']) == 'normaluser' ? 'user' : 'dealer' : '');
    }).catch(err => {
      props.loading(false);
      antd__WEBPACK_IMPORTED_MODULE_0__["message"].error(err.message);
    });
  }

  return __jsx(_general_LayoutV2__WEBPACK_IMPORTED_MODULE_10__["default"], null, __jsx("div", {
    className: "section-version3"
  }, __jsx("div", {
    className: "container-version3",
    style: {
      touchAction: 'pan-y'
    }
  }, userType == 'user' ? __jsx(_UserProfile__WEBPACK_IMPORTED_MODULE_13__["default"], {
    data: profile,
    isOwn: isOwn,
    onChangeCoverPhoto: url => {
      setProfile(_objectSpread(_objectSpread({}, profile), {}, {
        profileCoverPhoto: url
      }));
    }
  }) : userType == 'dealer' ? __jsx(_DealerProfile__WEBPACK_IMPORTED_MODULE_11__["default"], {
    data: profile,
    isOwn: isOwn,
    onChangeCoverPhoto: url => {
      setProfile(_objectSpread(_objectSpread({}, profile), {}, {
        profileCoverPhoto: url
      }));
    }
  }) : __jsx(_ProfileNotFound__WEBPACK_IMPORTED_MODULE_12__["default"], null))));
};

const mapStateToProps = state => ({
  sellCars: state.sellCars,
  productsList: state.productsList,
  app: state.app,
  user: state.user
});

const mapDispatchToProps = {
  loginMode: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_7__["loginMode"],
  updateActiveMenu: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_7__["updateActiveMenu"],
  fetchProductsList: _redux_actions_productsList_actions__WEBPACK_IMPORTED_MODULE_8__["fetchProductsList"],
  updateActiveIdProductList: _redux_actions_productsList_actions__WEBPACK_IMPORTED_MODULE_8__["updateActiveIdProductList"],
  filterCarBrandMode: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_7__["filterCarBrandMode"],
  filterCarModelMode: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_7__["filterCarModelMode"],
  filterCarSearchKeywords: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_7__["filterCarSearchKeywords"],
  quickSearchProductsList: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_7__["quickSearchProductsList"],
  loading: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_7__["loading"],
  setUser: _redux_actions_user_actions__WEBPACK_IMPORTED_MODULE_9__["setUser"]
};
/* harmony default export */ __webpack_exports__["default"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_4__["connect"])(mapStateToProps, mapDispatchToProps)(antd__WEBPACK_IMPORTED_MODULE_0__["Form"].create()(Object(next_dist_client_router__WEBPACK_IMPORTED_MODULE_2__["withRouter"])(ProfileHomePage))));

/***/ }),

/***/ "./components/rating/HideReviewButton.jsx":
/*!************************************************!*\
  !*** ./components/rating/HideReviewButton.jsx ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! antd */ "antd");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(antd__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-redux */ "react-redux");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _feathers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../feathers */ "./feathers.js");
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! next/router */ "next/router");
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../redux/actions/app-actions */ "./redux/actions/app-actions.js");
/* harmony import */ var _common_function__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../common-function */ "./common-function.js");
var __jsx = react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement;








const HideReviewButton = props => {
  const {
    0: confirmModalState,
    1: setConfirmModalState
  } = Object(react__WEBPACK_IMPORTED_MODULE_1__["useState"])(false);

  function hideReview(data) {
    if (props.user.authenticated && Object(_common_function__WEBPACK_IMPORTED_MODULE_6__["notEmptyLength"])(data) && data._id) {
      if (Object(_common_function__WEBPACK_IMPORTED_MODULE_6__["notEmptyLength"])(data.hideBy)) {
        let existed = data.hideBy.some(function (item) {
          return item.userId == props.user.info.user._id;
        });

        if (!existed) {
          props.loading(true);
          _feathers__WEBPACK_IMPORTED_MODULE_3__["default"].authenticate().then(res => {
            props.loading(false);
            _feathers__WEBPACK_IMPORTED_MODULE_3__["default"].service('rating').patch(data._id, {
              hideBy: data.hideBy.concat([{
                userId: props.user.info.user._id
              }])
            }).then(res => {
              antd__WEBPACK_IMPORTED_MODULE_0__["message"].success('You hide the review.');

              if (props.handleSuccess) {
                props.handleSuccess(res);
              }
            });
          }).catch(err => {
            props.loading(false);
            antd__WEBPACK_IMPORTED_MODULE_0__["message"].error(err.message);

            if (props.handleError) {
              props.handleError(err);
            }
          });
        }
      } else {
        props.loading(true);
        _feathers__WEBPACK_IMPORTED_MODULE_3__["default"].authenticate().then(res => {
          props.loading(false);
          _feathers__WEBPACK_IMPORTED_MODULE_3__["default"].service('rating').patch(data._id, {
            hideBy: [{
              userId: props.user.info.user._id
            }]
          }).then(res => {
            antd__WEBPACK_IMPORTED_MODULE_0__["message"].success('You hide the review.');

            if (props.handleSuccess) {
              props.handleSuccess(res);
            }
          });
        }).catch(err => {
          props.loading(false);
          antd__WEBPACK_IMPORTED_MODULE_0__["message"].error(err.message);

          if (props.handleError) {
            props.handleError(err);
          }
        });
      }
    } else {
      props.loginMode(true);
      antd__WEBPACK_IMPORTED_MODULE_0__["message"].error('Please login to hide this review.');

      if (props.handleError) {
        props.handleError({
          message: 'Please login to hide this review.'
        });
      }
    }
  }

  return __jsx("span", {
    className: props.className ? props.className : null,
    style: props.style ? props.style : null
  }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Modal"], {
    visible: confirmModalState,
    title: "Are you sure?",
    maskClosable: true,
    centered: true,
    onOk: e => {
      hideReview(props.data ? props.data : null);
      setConfirmModalState(false);
    },
    onCancel: e => {
      setConfirmModalState(false);
    }
  }, __jsx("div", null, "Do you want to hide this review ?")), __jsx("a", {
    onClick: () => {
      setConfirmModalState(true);
    }
  }, props.button ? props.button() : __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Button"], {
    type: "warning",
    icon: "eye-invisible"
  }, "Hide post")));
};

const mapStateToProps = state => ({
  app: state.app,
  user: state.user
});

const mapDispatchToProps = {
  loginMode: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_5__["loginMode"],
  loading: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_5__["loading"]
};
/* harmony default export */ __webpack_exports__["default"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_2__["connect"])(mapStateToProps, mapDispatchToProps)(antd__WEBPACK_IMPORTED_MODULE_0__["Form"].create()(Object(next_router__WEBPACK_IMPORTED_MODULE_4__["withRouter"])(HideReviewButton))));

/***/ }),

/***/ "./components/rating/RemoveReviewButton.jsx":
/*!**************************************************!*\
  !*** ./components/rating/RemoveReviewButton.jsx ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! antd */ "antd");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(antd__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! axios */ "axios");
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-redux */ "react-redux");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _feathers__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../feathers */ "./feathers.js");
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next/router */ "next/router");
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../redux/actions/app-actions */ "./redux/actions/app-actions.js");
/* harmony import */ var _common_function__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../common-function */ "./common-function.js");
var __jsx = react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement;









const RemoveReviewButton = props => {
  const {
    0: confirmModalState,
    1: setConfirmModalState
  } = Object(react__WEBPACK_IMPORTED_MODULE_2__["useState"])(false);
  const {
    0: review,
    1: setReview
  } = Object(react__WEBPACK_IMPORTED_MODULE_2__["useState"])({});
  Object(react__WEBPACK_IMPORTED_MODULE_2__["useEffect"])(() => {
    _feathers__WEBPACK_IMPORTED_MODULE_4__["default"].service('rating').get(props.id).then(res => {
      if (Object(_common_function__WEBPACK_IMPORTED_MODULE_7__["notEmptyLength"])(res)) {
        setReview(res);
      } else {
        setReview({});
      }
    }).catch(err => {
      antd__WEBPACK_IMPORTED_MODULE_0__["message"].error(err.message);
    });
  }, [props.id]);

  function removeReview() {
    if (props.user.authenticated && review._id) {
      let promises = [];
      promises.push(_feathers__WEBPACK_IMPORTED_MODULE_4__["default"].authenticate());
      promises.push(_feathers__WEBPACK_IMPORTED_MODULE_4__["default"].service('rating').remove(review._id));
      props.loading(true);

      if (Object(_common_function__WEBPACK_IMPORTED_MODULE_7__["notEmptyLength"])(review.images)) {
        promises.push(axios__WEBPACK_IMPORTED_MODULE_1___default.a.post(`${_feathers__WEBPACK_IMPORTED_MODULE_4__["default"].io.io.uri}deleteImageS3`, {
          params: {
            imageUrl: review.images
          },
          headers: {
            'Content-Type': 'text/xml; charset=utf-8',
            'Content-Length': 'length'
          }
        }));
      }

      if (Object(_common_function__WEBPACK_IMPORTED_MODULE_7__["notEmptyLength"])(review.videos)) {
        promises.push(axios__WEBPACK_IMPORTED_MODULE_1___default.a.post(`${_feathers__WEBPACK_IMPORTED_MODULE_4__["default"].io.io.uri}deleteVideoS3`, {
          params: {
            videoUrl: review.videos
          },
          headers: {
            'Content-Type': 'text/xml; charset=utf-8',
            'Content-Length': 'length'
          }
        }));
      }

      Promise.all(promises).then(responses => {
        props.loading(false);
        antd__WEBPACK_IMPORTED_MODULE_0__["message"].success('Review removed.');

        if (props.handleSuccess) {
          props.handleSuccess(responses[1]);
        }
      }).catch(err => {
        props.loading(false);

        if (props.handleError) {
          props.handleError(err);
        }

        antd__WEBPACK_IMPORTED_MODULE_0__["message"].error(err.message);
      });
    } else {
      props.loginMode(true);
      antd__WEBPACK_IMPORTED_MODULE_0__["message"].error('Please login to remove this review.');

      if (props.handleError) {
        props.handleError({
          message: 'Please login to remove this review.'
        });
      }
    }
  }

  return __jsx("span", {
    className: props.className ? props.className : null,
    style: props.style ? props.style : null
  }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Modal"], {
    visible: confirmModalState,
    title: "Are you sure?",
    maskClosable: true,
    centered: true,
    onOk: e => {
      removeReview();
      setConfirmModalState(false);
    },
    onCancel: e => {
      setConfirmModalState(false);
    }
  }, __jsx("div", null, "Do you want to remove this review?")), __jsx("a", {
    onClick: () => {
      setConfirmModalState(true);
    }
  }, props.button ? props.button() : __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Button"], {
    type: "danger",
    icon: "delete"
  }, "Remove post")));
};

const mapStateToProps = state => ({
  app: state.app,
  user: state.user
});

const mapDispatchToProps = {
  loginMode: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_6__["loginMode"],
  loading: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_6__["loading"]
};
/* harmony default export */ __webpack_exports__["default"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_3__["connect"])(mapStateToProps, mapDispatchToProps)(antd__WEBPACK_IMPORTED_MODULE_0__["Form"].create()(Object(next_router__WEBPACK_IMPORTED_MODULE_5__["withRouter"])(RemoveReviewButton))));

/***/ }),

/***/ "./components/rating/ReviewList.jsx":
/*!******************************************!*\
  !*** ./components/rating/ReviewList.jsx ***!
  \******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! antd */ "antd");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(antd__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/router */ "next/router");
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var react_custom_scrollbars__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react-custom-scrollbars */ "react-custom-scrollbars");
/* harmony import */ var react_custom_scrollbars__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react_custom_scrollbars__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var react_indiana_drag_scroll__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react-indiana-drag-scroll */ "react-indiana-drag-scroll");
/* harmony import */ var react_indiana_drag_scroll__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(react_indiana_drag_scroll__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var react_player__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! react-player */ "react-player");
/* harmony import */ var react_player__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(react_player__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! react-redux */ "react-redux");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _common_function__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../common-function */ "./common-function.js");
/* harmony import */ var _general_light_box_gallery__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../general/light-box-gallery */ "./components/general/light-box-gallery.jsx");
/* harmony import */ var _HideReviewButton__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./HideReviewButton */ "./components/rating/HideReviewButton.jsx");
/* harmony import */ var _RemoveReviewButton__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./RemoveReviewButton */ "./components/rating/RemoveReviewButton.jsx");
/* harmony import */ var _WriteReviewButton__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./WriteReviewButton */ "./components/rating/WriteReviewButton.jsx");
var __jsx = react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement;

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }














const {
  TextArea
} = antd__WEBPACK_IMPORTED_MODULE_0__["Input"];
const {
  Option
} = antd__WEBPACK_IMPORTED_MODULE_0__["Select"];

var moment = __webpack_require__(/*! moment */ "moment");

const containerRef = react__WEBPACK_IMPORTED_MODULE_3___default.a.createRef();

const ReviewList = props => {
  const {
    0: reviews,
    1: setReviews
  } = Object(react__WEBPACK_IMPORTED_MODULE_3__["useState"])([]);
  const {
    0: stop,
    1: setStop
  } = Object(react__WEBPACK_IMPORTED_MODULE_3__["useState"])(false); //initial render

  Object(react__WEBPACK_IMPORTED_MODULE_3__["useEffect"])(() => {
    if (Object(_common_function__WEBPACK_IMPORTED_MODULE_8__["notEmptyLength"])(props.data)) {
      setStop(false); //Set up Ref for Text truncate

      let data = props.data.map(item => {
        item.textRef = react__WEBPACK_IMPORTED_MODULE_3___default.a.createRef();
        item.seeMore = false;
        item.showText = false;
        return item;
      });
      setReviews(data);
    } else {
      setReviews([]);
    }
  }, [props.data]);
  Object(react__WEBPACK_IMPORTED_MODULE_3__["useEffect"])(() => {
    if (Object(_common_function__WEBPACK_IMPORTED_MODULE_8__["notEmptyLength"])(reviews)) {
      if (!stop) {
        checkForOverFlow();
      }
    }
  });

  function isEllipsisActive(e) {
    //Use outside container width to compare span overflow width
    if (!containerRef || !containerRef.current) {
      return false;
    } else {
      return containerRef.current.clientWidth < e.clientWidth;
    }
  }

  function checkForOverFlow() {
    let done = true;
    let data;

    if (Object(_common_function__WEBPACK_IMPORTED_MODULE_8__["notEmptyLength"])(reviews)) {
      if (reviews[0].textRef) {
        data = reviews.map(function (item) {
          if (item.textRef.current) {
            item.seeMore = isEllipsisActive(item.textRef.current);
          } else {
            done = false;
            item.seeMore = false;
          }

          return item;
        });
      }
    }

    if (done) {
      setReviews(data);
      setStop(done);
    }
  }

  function updateRatings(rating) {
    if (Object(_common_function__WEBPACK_IMPORTED_MODULE_8__["notEmptyLength"])(reviews)) {
      let data = reviews.map(function (item) {
        if (item._id == rating._id) {
          item = rating;
        }

        return item;
      });
      setReviews(data);
    }
  }

  function handleChange(e) {
    if (props.handleChange) {
      props.handleChange(e);
    }
  }

  function handleError(e) {
    antd__WEBPACK_IMPORTED_MODULE_0__["message"].error(e.message);
  }

  function isOwnReview(data) {
    if (props.user.authenticated) {
      if (Object(_common_function__WEBPACK_IMPORTED_MODULE_8__["isObject"])(data.reviewerId) && data.reviewerId._id == props.user.info.user._id) {
        return true;
      } else if (data.reviewerId == props.user.info.user._id) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }

  const menu = data => {
    return isOwnReview(data) ? __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Menu"], null, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Menu"].Item, null, __jsx(_WriteReviewButton__WEBPACK_IMPORTED_MODULE_12__["default"], {
      data: data,
      mode: "edit",
      button: () => {
        return __jsx("div", null, __jsx("img", {
          src: "https://img.icons8.com/color/24/000000/edit.png",
          style: {
            display: 'inline-block',
            width: "100"
          }
        }), __jsx("p", {
          style: {
            display: 'inline-block',
            marginLeft: '10px',
            color: '#616161'
          }
        }, "  Edit post "));
      },
      handleSuccess: handleChange,
      handleError: handleError
    })), __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Menu"].Item, null, __jsx(_RemoveReviewButton__WEBPACK_IMPORTED_MODULE_11__["default"], {
      id: data._id,
      handleSuccess: handleChange,
      button: () => {
        return __jsx("div", null, __jsx("img", {
          src: "https://img.icons8.com/color/24/000000/delete-forever.png",
          style: {
            display: 'inline-block',
            width: "100"
          }
        }), __jsx("p", {
          style: {
            display: 'inline-block',
            marginLeft: '10px',
            color: '#616161'
          }
        }, " Remove post "));
      }
    }))) : __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Menu"], null, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Menu"].Item, null, __jsx(_HideReviewButton__WEBPACK_IMPORTED_MODULE_10__["default"], {
      data: data,
      button: () => {
        return __jsx("div", null, __jsx("img", {
          src: "https://img.icons8.com/metro/24/F1C40F/sleep.png",
          style: {
            display: 'inline-block',
            width: "100",
            color: 'yellow'
          }
        }), __jsx("p", {
          style: {
            display: 'inline-block',
            marginLeft: '10px',
            color: '#616161'
          }
        }, "  Not interested in this post "));
      },
      handleSuccess: handleChange
    })));
  };

  const _renderReviewList = data => {
    let list = null;

    if (Object(_common_function__WEBPACK_IMPORTED_MODULE_8__["notEmptyLength"])(data)) {
      list = data.map(function (item, i) {
        return __jsx("div", {
          key: 'divReview1' + i,
          className: "review1"
        }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Row"], null, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
          span: 18
        }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Row"], {
          gutter: [30, 0]
        }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
          span: 24
        }, __jsx("div", {
          className: "flex-justify-start flex-items-align-center padding-x-sm"
        }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Avatar"], {
          src: !item.reviewerId || !item.reviewerId.avatar ? null : item.reviewerId.avatar,
          icon: !item.reviewerId || !item.reviewerId.avatar ? 'user' : null
        }), __jsx("span", {
          className: "headline   margin-x-md text-overflow-break"
        }, !item.reviewerId ? null : item.reviewerId.firstName + ' ' + item.reviewerId.lastName), item.state ? __jsx("span", {
          className: "headline blue"
        }, item.state) : null)), lodash__WEBPACK_IMPORTED_MODULE_1___default.a.isPlainObject(lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(item, ['carspecId'])) && !lodash__WEBPACK_IMPORTED_MODULE_1___default.a.isEmpty(lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(item, ['carspecId'])) ? __jsx("div", {
          className: "info flex-justify-start flex-items-align-center"
        }, props.renderCarspec ? props.renderCarspec(item) : __jsx("div", {
          className: "font-weight-bold padding-left-md padding-top-md subtitle1"
        }, lodash__WEBPACK_IMPORTED_MODULE_1___default.a.trim(`${lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(item, 'carspecId.make') || ''} ${lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(item, 'carspecId.model') || ''} ${lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(item, 'carspecId.variant') || ''}`))) : null, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
          span: 24
        }, __jsx("div", {
          className: "info flex-justify-start flex-items-align-center"
        }, props.renderRate ? props.renderRate(item) : __jsx("div", null, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Rate"], {
          allowHalf: true,
          value: item.rating,
          disabled: true
        })))))), __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
          span: 6
        }, __jsx("div", {
          className: "review2"
        }, __jsx("span", {
          style: {
            fontSize: '12px'
          },
          className: "margin-x-sm d-inline-block"
        }, moment(item.createdAt).format('D MMMM Y')), __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Dropdown"], {
          overlay: menu(item),
          placement: "bottomRight"
        }, __jsx("a", {
          className: "ant-dropdown-link ",
          onClick: e => e.preventDefault()
        }, __jsx("img", {
          src: "https://img.icons8.com/material-rounded/24/000000/menu-2.png"
        }))))), item.title && item.comment ? __jsx("div", null, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
          span: 24
        }, __jsx("div", {
          className: "subtitle1 font-weight-bold margin-bottom-sm padding-x-sm"
        }, item.title)), __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
          span: 24
        }, __jsx("div", {
          style: {
            overflowX: "hidden",
            maxWidth: '97%'
          },
          className: "padding-x-sm",
          ref: containerRef
        }, __jsx("span", {
          ref: item.textRef,
          className: item.showText ? "headline   text-overflow-break d-inline-block" : "headline   text-truncate d-inline-block "
        }, item.comment)), __jsx("div", null, item.seeMore && !item.showText ? __jsx("span", null, __jsx("a", {
          onClick: () => {
            updateRatings(_objectSpread(_objectSpread({}, item), {}, {
              showText: true
            }));
          }
        }, "...See More")) : null, item.seeMore && item.showText ? __jsx("span", null, __jsx("a", {
          onClick: () => {
            updateRatings(_objectSpread(_objectSpread({}, item), {}, {
              showText: false
            }));
          }
        }, "...See Less")) : null))) : null, Object(_common_function__WEBPACK_IMPORTED_MODULE_8__["notEmptyLength"])(item.images) || Object(_common_function__WEBPACK_IMPORTED_MODULE_8__["notEmptyLength"])(item.videos) ? __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
          span: 24
        }, __jsx("div", {
          key: "imageDiv",
          className: "padding-x-sm margin-top-md"
        }, __jsx(react_indiana_drag_scroll__WEBPACK_IMPORTED_MODULE_5___default.a, {
          className: "d-flex",
          vertical: false
        }, Object(_common_function__WEBPACK_IMPORTED_MODULE_8__["notEmptyLength"])(item.videos) ? item.videos.map(function (video, i) {
          return __jsx("span", {
            key: 'videoDiv' + i,
            className: "d-inline-block margin-sm flex-items-no-shrink ",
            style: {
              width: "150px",
              height: '100px',
              border: 'solid',
              borderColor: 'rgba(150, 150, 150, 0.5)'
            }
          }, __jsx(react_player__WEBPACK_IMPORTED_MODULE_6___default.a, {
            width: "100%",
            height: "100%",
            controls: true,
            url: video.url
          }));
        }) : null, Object(_common_function__WEBPACK_IMPORTED_MODULE_8__["notEmptyLength"])(item.images) ? __jsx(_general_light_box_gallery__WEBPACK_IMPORTED_MODULE_9__["default"], {
          images: lodash__WEBPACK_IMPORTED_MODULE_1___default.a.compact(lodash__WEBPACK_IMPORTED_MODULE_1___default.a.map(item.images, function (v) {
            return lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(v, ['url']) || null;
          }))
        }, (state, setCurrentIndex, setVisible) => {
          return __jsx(react_custom_scrollbars__WEBPACK_IMPORTED_MODULE_4__["Scrollbars"], {
            style: {
              width: '100%',
              height: '120px'
            }
          }, __jsx("div", {
            className: "flex-justify-start flex-items-align-center fill-parent"
          }, lodash__WEBPACK_IMPORTED_MODULE_1___default.a.map(state.images, function (v, index) {
            return __jsx("span", {
              className: "d-inline-block margin-right-md cursor-pointer",
              onClick: e => {
                setCurrentIndex(index);
                setVisible(true);
              }
            }, __jsx("img", {
              src: v,
              style: {
                width: 100,
                height: 100
              },
              className: " img-cover"
            }));
          })));
        }) : null))) : null));
      });
    }

    return list;
  };

  return __jsx(react__WEBPACK_IMPORTED_MODULE_3___default.a.Fragment, null, _renderReviewList(reviews));
};

const mapStateToProps = state => ({
  app: state.app,
  user: state.user
});

const mapDispatchToProps = {};
/* harmony default export */ __webpack_exports__["default"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_7__["connect"])(mapStateToProps, mapDispatchToProps)(antd__WEBPACK_IMPORTED_MODULE_0__["Form"].create()(Object(next_router__WEBPACK_IMPORTED_MODULE_2__["withRouter"])(ReviewList))));

/***/ }),

/***/ "./components/rating/WriteReviewButton.jsx":
/*!*************************************************!*\
  !*** ./components/rating/WriteReviewButton.jsx ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! antd */ "antd");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(antd__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! axios */ "axios");
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var form_data__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! form-data */ "form-data");
/* harmony import */ var form_data__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(form_data__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! next/router */ "next/router");
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var rc_queue_anim__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! rc-queue-anim */ "rc-queue-anim");
/* harmony import */ var rc_queue_anim__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(rc_queue_anim__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var react_highlight_words__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! react-highlight-words */ "react-highlight-words");
/* harmony import */ var react_highlight_words__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(react_highlight_words__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var react_indiana_drag_scroll__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! react-indiana-drag-scroll */ "react-indiana-drag-scroll");
/* harmony import */ var react_indiana_drag_scroll__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(react_indiana_drag_scroll__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var react_player__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! react-player */ "react-player");
/* harmony import */ var react_player__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(react_player__WEBPACK_IMPORTED_MODULE_9__);
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! react-redux */ "react-redux");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_10__);
/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! uuid */ "uuid");
/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(uuid__WEBPACK_IMPORTED_MODULE_11__);
/* harmony import */ var _common_function__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../common-function */ "./common-function.js");
/* harmony import */ var _feathers__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../feathers */ "./feathers.js");
/* harmony import */ var _params_stateList__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../params/stateList */ "./params/stateList.js");
/* harmony import */ var _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../redux/actions/app-actions */ "./redux/actions/app-actions.js");
var __jsx = react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement;

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

















const {
  TextArea
} = antd__WEBPACK_IMPORTED_MODULE_0__["Input"];

var moment = __webpack_require__(/*! moment */ "moment");

const FORM_CONTAINER_SIZE = 500;
const IMAGELIMIT = 7;
const VIDEOLIMIT = 1;

const WriteReviewButton = props => {
  const {
    0: visible,
    1: setVisible
  } = Object(react__WEBPACK_IMPORTED_MODULE_6__["useState"])(false);
  const {
    0: title,
    1: setTitle
  } = Object(react__WEBPACK_IMPORTED_MODULE_6__["useState"])("Add Post");
  const {
    0: run,
    1: setRun
  } = Object(react__WEBPACK_IMPORTED_MODULE_6__["useState"])(true);
  const {
    0: timeoutFunction,
    1: setTimeoutFunction
  } = Object(react__WEBPACK_IMPORTED_MODULE_6__["useState"])();
  const {
    0: previewType,
    1: setPreviewType
  } = Object(react__WEBPACK_IMPORTED_MODULE_6__["useState"])('image');
  const {
    0: previewVisible,
    1: setPreviewVisible
  } = Object(react__WEBPACK_IMPORTED_MODULE_6__["useState"])(false);
  const {
    0: previewImage,
    1: setPreviewImage
  } = Object(react__WEBPACK_IMPORTED_MODULE_6__["useState"])({});
  const {
    0: previewVideo,
    1: setPreviewVideo
  } = Object(react__WEBPACK_IMPORTED_MODULE_6__["useState"])({});
  const {
    getFieldDecorator,
    getFieldsError,
    getFieldError,
    isFieldTouched,
    isFieldValidating
  } = props.form;
  const {
    0: view,
    1: setView
  } = Object(react__WEBPACK_IMPORTED_MODULE_6__["useState"])('add');
  const {
    0: reviewForm,
    1: setReviewForm
  } = Object(react__WEBPACK_IMPORTED_MODULE_6__["useState"])({
    rating: null,
    title: null,
    comment: null,
    type: null,
    productId: null,
    userId: null,
    reviewerId: null,
    companyId: null,
    carspecId: null,
    images: [],
    videos: [],
    state: null
  });
  const {
    0: filteredState,
    1: setFilteredState
  } = Object(react__WEBPACK_IMPORTED_MODULE_6__["useState"])([]);
  const {
    0: searchStateWords,
    1: setSearchStateWords
  } = Object(react__WEBPACK_IMPORTED_MODULE_6__["useState"])([]);
  const {
    0: origImages,
    1: setOrigImages
  } = Object(react__WEBPACK_IMPORTED_MODULE_6__["useState"])([]);
  const {
    0: origVideos,
    1: setOrigVideos
  } = Object(react__WEBPACK_IMPORTED_MODULE_6__["useState"])([]);
  const {
    0: writer,
    1: setWriter
  } = Object(react__WEBPACK_IMPORTED_MODULE_6__["useState"])({});
  const {
    0: mode,
    1: setMode
  } = Object(react__WEBPACK_IMPORTED_MODULE_6__["useState"])('add');
  const {
    0: buttonLoading,
    1: setButtonLoading
  } = Object(react__WEBPACK_IMPORTED_MODULE_6__["useState"])(false); // Only show error after a field is touched.

  const ratingError = (isFieldTouched('rating') || !isFieldValidating('rating')) && getFieldError('rating');
  const commentError = (isFieldTouched('comment') || !isFieldValidating('comment')) && getFieldError('comment');
  const titleError = (isFieldTouched('title') || !isFieldValidating('title')) && getFieldError('title');
  const selectionError = (isFieldTouched('selection') || !isFieldValidating('selection')) && getFieldError('selection');
  Object(react__WEBPACK_IMPORTED_MODULE_6__["useEffect"])(() => {
    if (props.mode) {
      if (props.mode == 'edit') {
        setMode('edit');
      } else {
        setMode('add');
      }
    }
  }, [props.mode]);
  Object(react__WEBPACK_IMPORTED_MODULE_6__["useEffect"])(() => {
    props.form.setFieldsValue(reviewForm);

    switch (view) {
      case 'edit':
        setTitle('Edit Post');
        break;

      case 'add':
        setTitle('Add Post');
        break;

      case 'state':
        setTitle(__jsx(react__WEBPACK_IMPORTED_MODULE_6___default.a.Fragment, null, __jsx("span", {
          className: "margin-right-sm "
        }, __jsx("a", {
          onClick: () => {
            setView(props.mode == "edit" ? "edit" : "add");
          },
          className: "black"
        }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Icon"], {
          type: "left"
        }))), __jsx("span", {
          className: "margin-x-sm"
        }, "Select State")));
        filterState(null);
        break;

      default:
        setTitle('Add Post');
        break;
    }
  }, [view]);
  Object(react__WEBPACK_IMPORTED_MODULE_6__["useEffect"])(() => {
    if (props.mode == 'edit') {
      setReviewForm(_objectSpread(_objectSpread({}, reviewForm), {}, {
        _id: props.data._id,
        rating: props.data.rating ? props.data.rating : null,
        title: props.data.title ? props.data.title : null,
        comment: props.data.comment ? props.data.comment : null,
        state: props.data.state ? props.data.state : null,
        type: props.data.type ? props.data.type : null,
        userId: props.data.userId ? props.data.userId : null,
        reviewerId: props.data.reviewerId ? props.data.reviewerId : null,
        companyId: props.data.companyId ? props.data.companyId : null,
        productId: props.data.productId ? props.data.productId : null,
        carspecId: props.data.carspecId ? props.data.carspecId : null,
        createdAt: props.data.createdAt ? props.data.createdAt : null,
        images: props.data.images ? props.data.images : [],
        videos: props.data.videos ? props.data.videos : []
      }));
      setOrigImages(props.data.images ? props.data.images : []);
      setOrigVideos(props.data.videos ? props.data.videos : []);
    } else {
      setReviewForm(_objectSpread(_objectSpread({}, reviewForm), {}, {
        rating: null,
        comment: null,
        title: null,
        state: null,
        type: props.data.type ? props.data.type : null,
        userId: props.data.userId ? props.data.userId : null,
        reviewerId: props.data.reviewerId ? props.data.reviewerId : null,
        companyId: props.data.companyId ? props.data.companyId : null,
        productId: props.data.productId ? props.data.productId : null,
        carspecId: props.data.carspecId ? props.data.carspecId : null,
        images: props.data.images ? props.data.images : [],
        videos: props.data.videos ? props.data.videos : []
      }));
      setOrigImages([]);
      setOrigVideos([]);
    }
  }, [props.data]);
  Object(react__WEBPACK_IMPORTED_MODULE_6__["useEffect"])(() => {
    let form = lodash__WEBPACK_IMPORTED_MODULE_3___default.a.cloneDeep(reviewForm);

    form.selection = reviewForm[reviewForm.type + 'Id'];

    if (visible && props.data.reviewerId) {
      props.form.setFieldsValue({
        selection: form.selection
      });
    }
  }, [reviewForm]);
  Object(react__WEBPACK_IMPORTED_MODULE_6__["useEffect"])(() => {
    if (run) {
      setRun(false); //only run every 2 seconds

      setTimeout(() => {
        setRun(true);
      }, 2000);

      if (visible && !props.data.reviewerId) {
        props.loginMode(true);
        handleError({
          message: 'Please login to write review'
        });
      }

      if (mode == 'add') {
        if (visible && !props.data[props.data.type + 'Id'] && !Object(_common_function__WEBPACK_IMPORTED_MODULE_12__["notEmptyLength"])(props.selection)) {
          handleError({
            message: 'Item not Found'
          });
        }
      }
    }
  });
  Object(react__WEBPACK_IMPORTED_MODULE_6__["useEffect"])(() => {
    setView(mode == 'edit' ? 'edit' : 'add');
  }, [mode]);
  Object(react__WEBPACK_IMPORTED_MODULE_6__["useEffect"])(() => {
    if (reviewForm.reviewerId) {
      props.loading(true);
      _feathers__WEBPACK_IMPORTED_MODULE_13__["default"].authenticate().then(res => {
        props.loading(false);
        _feathers__WEBPACK_IMPORTED_MODULE_13__["default"].service('users').get(reviewForm.reviewerId).then(res => {
          if (res) {
            setWriter(res);
          } else {
            setWriter({});
          }
        });
      }).catch(err => {
        props.loading(false);
        setButtonLoading(false);
        handleError({
          message: 'Error on getting user.'
        });
      });
    } else {
      setWriter({});
    }
  }, [reviewForm.reviewerId]);

  function handleCancel() {
    setPreviewVisible(false);
  }

  function getBase64(file) {
    return new Promise((resolve, reject) => {
      const reader = new FileReader();
      reader.readAsDataURL(file);

      reader.onload = () => resolve(reader.result);

      reader.onerror = error => reject(error);
    });
  }

  async function handlePreview(file, type) {
    if (type == 'video') {
      setPreviewType('video');
      setPreviewVisible(true);
      setPreviewVideo({
        url: file.url,
        name: file.name
      });
    } else {
      setPreviewType('image');
      setPreviewVisible(true);
      setPreviewImage({
        url: file.url,
        name: file.name
      });
    }
  }

  function handleDelete(file, type) {
    if (!file || !file._id) {
      //handle Error
      antd__WEBPACK_IMPORTED_MODULE_0__["message"].error(type == 'video' ? "Video not found." : 'Image not found.');
    } else {
      if (type == 'video') {
        let data = lodash__WEBPACK_IMPORTED_MODULE_3___default.a.filter(reviewForm.videos, function (item) {
          return item._id != file._id;
        });

        if (Object(_common_function__WEBPACK_IMPORTED_MODULE_12__["notEmptyLength"])(data)) {
          setReviewForm(_objectSpread(_objectSpread({}, reviewForm), {}, {
            videos: data
          }));
        } else {
          setReviewForm(_objectSpread(_objectSpread({}, reviewForm), {}, {
            videos: []
          }));
        }
      } else {
        let data = lodash__WEBPACK_IMPORTED_MODULE_3___default.a.filter(reviewForm.images, function (item) {
          return item._id != file._id;
        });

        if (Object(_common_function__WEBPACK_IMPORTED_MODULE_12__["notEmptyLength"])(data)) {
          setReviewForm(_objectSpread(_objectSpread({}, reviewForm), {}, {
            images: data
          }));
        } else {
          setReviewForm(_objectSpread(_objectSpread({}, reviewForm), {}, {
            images: []
          }));
        }
      }
    }
  }

  function handleSuccess(success) {
    setVisible(false);

    if (props.handleSuccess) {
      props.handleSuccess(success);
    }
  }

  function handleError(error) {
    setVisible(false);

    if (props.handleError) {
      props.handleError(error);
    }
  }

  function timeout(func, time) {
    if (!Object(_common_function__WEBPACK_IMPORTED_MODULE_12__["isValidNumber"])(time)) {
      time = 500;
    }

    clearTimeout(timeoutFunction);
    setTimeoutFunction(setTimeout(() => {
      return func;
    }, parseInt(time)));
  }

  function filterState(v) {
    if (v) {
      let regex = new RegExp(`^.*${v}.*$`, 'i');
      setFilteredState(_params_stateList__WEBPACK_IMPORTED_MODULE_14__["StateList"].filter(function (state) {
        return regex.test(state.value);
      }));
      setSearchStateWords([v]);
    } else {
      setSearchStateWords([]);
      setFilteredState(_params_stateList__WEBPACK_IMPORTED_MODULE_14__["StateList"]);
    }
  }

  function reset() {
    setView(mode == "edit" ? "edit" : "add");
    props.form.resetFields();
    setReviewForm(_objectSpread(_objectSpread({}, reviewForm), {}, {
      images: origImages,
      videos: origVideos,
      state: props.data.state ? props.data.state : null
    }));
    setButtonLoading(false);
  }

  function reviewModalVisible() {
    if (props.data.reviewerId) {
      setVisible(true);
    } else {
      props.loginMode(true);
      handleError({
        message: 'Please login to write review'
      });
    }
  }

  function onChangeImage(fileList) {
    if (Object(_common_function__WEBPACK_IMPORTED_MODULE_12__["notEmptyLength"])(fileList)) {
      if (fileList.length > IMAGELIMIT) {
        fileList = fileList.slice(0, IMAGELIMIT);
      }

      let data = fileList.map(function (file) {
        if (file.originFileObj) {
          getBase64(file.originFileObj).then(res => {
            file.url = res;
          });
          file._id = file.uid;
        }

        return file;
      });
      data = lodash__WEBPACK_IMPORTED_MODULE_3___default.a.union(data, reviewForm.images);
      setReviewForm(_objectSpread(_objectSpread({}, reviewForm), {}, {
        images: data
      }));
    }
  }

  function onChangeVideo(fileList) {
    if (Object(_common_function__WEBPACK_IMPORTED_MODULE_12__["notEmptyLength"])(fileList)) {
      if (fileList.length > VIDEOLIMIT) {
        fileList = fileList.slice(0, VIDEOLIMIT);
      }

      let data = fileList.map(function (file) {
        if (file.originFileObj) {
          getBase64(file.originFileObj).then(res => {
            file.url = res;
          });
          file._id = file.uid;
        }

        return file;
      });
      data = lodash__WEBPACK_IMPORTED_MODULE_3___default.a.union(data, reviewForm.videos);
      setReviewForm(_objectSpread(_objectSpread({}, reviewForm), {}, {
        videos: data
      }));
    }
  }

  function hasErrors(fieldsError) {
    return Object.keys(fieldsError).some(field => fieldsError[field]);
  }

  function handleSubmit(e) {
    e.preventDefault();
    setButtonLoading(true);
    props.form.validateFields((err, values) => {
      if (!err) {
        let insertImages = [];
        let removeImages = [];
        let insertVideos = [];
        let removeVideos = [];

        let finalData = lodash__WEBPACK_IMPORTED_MODULE_3___default.a.cloneDeep(reviewForm);

        let images = lodash__WEBPACK_IMPORTED_MODULE_3___default.a.cloneDeep(reviewForm.images);

        let videos = lodash__WEBPACK_IMPORTED_MODULE_3___default.a.cloneDeep(reviewForm.videos);

        let promises = []; //get new upload images

        if (Object(_common_function__WEBPACK_IMPORTED_MODULE_12__["notEmptyLength"])(images)) {
          insertImages = insertImages.concat(images.filter(function (image) {
            return lodash__WEBPACK_IMPORTED_MODULE_3___default.a.has(image, "originFileObj");
          }));

          if (insertImages.length > 0) {
            let formData = new form_data__WEBPACK_IMPORTED_MODULE_2___default.a();

            for (let i = 0; i < insertImages.length; i++) {
              var fileName = Object(uuid__WEBPACK_IMPORTED_MODULE_11__["v4"])() + "-" + insertImages[i].name.split('.').join("-") + "-" + new Date().getTime();
              formData.append('images', insertImages[i].originFileObj, fileName);
            } //Upload Image


            promises.push(axios__WEBPACK_IMPORTED_MODULE_1___default.a.post(`${_feathers__WEBPACK_IMPORTED_MODULE_13__["default"].io.io.uri}upload-images-array`, formData, {
              headers: {
                'Authorization': _feathers__WEBPACK_IMPORTED_MODULE_13__["default"].settings.storage.storage.storage['feathers-jwt'],
                'Content-Type': 'multipart/form-data'
              }
            }));
          }
        } //get new upload videos


        if (Object(_common_function__WEBPACK_IMPORTED_MODULE_12__["notEmptyLength"])(videos)) {
          insertVideos = insertVideos.concat(videos.filter(function (video) {
            return lodash__WEBPACK_IMPORTED_MODULE_3___default.a.has(video, "originFileObj");
          }));

          if (insertVideos.length > 0) {
            let formData = new form_data__WEBPACK_IMPORTED_MODULE_2___default.a();

            for (let i = 0; i < insertVideos.length; i++) {
              var fileName = Object(uuid__WEBPACK_IMPORTED_MODULE_11__["v4"])() + "-" + insertVideos[i].name.split('.').join("-") + "-" + new Date().getTime();
              formData.append('videos', insertVideos[i].originFileObj, fileName);
            } //Upload Image


            promises.push(axios__WEBPACK_IMPORTED_MODULE_1___default.a.post(`${_feathers__WEBPACK_IMPORTED_MODULE_13__["default"].io.io.uri}upload-videos-array`, formData, {
              headers: {
                'Authorization': _feathers__WEBPACK_IMPORTED_MODULE_13__["default"].settings.storage.storage.storage['feathers-jwt'],
                'Content-Type': 'multipart/form-data'
              }
            }));
          }
        } //get removed images


        if (mode == 'edit') {
          let diffIds = lodash__WEBPACK_IMPORTED_MODULE_3___default.a.map(lodash__WEBPACK_IMPORTED_MODULE_3___default.a.differenceBy(origImages, images, '_id'), "_id");

          removeImages = removeImages.concat(lodash__WEBPACK_IMPORTED_MODULE_3___default.a.filter(origImages, function (image) {
            return lodash__WEBPACK_IMPORTED_MODULE_3___default.a.includes(diffIds, image._id);
          }));
          diffIds = lodash__WEBPACK_IMPORTED_MODULE_3___default.a.map(lodash__WEBPACK_IMPORTED_MODULE_3___default.a.differenceBy(origVideos, videos, '_id'), "_id");
          removeVideos = removeVideos.concat(lodash__WEBPACK_IMPORTED_MODULE_3___default.a.filter(origVideos, function (video) {
            return lodash__WEBPACK_IMPORTED_MODULE_3___default.a.includes(diffIds, video._id);
          }));
        }

        props.loading(true); //Upload new images to server first

        Promise.all(promises).then(responses => {
          props.loading(false);

          lodash__WEBPACK_IMPORTED_MODULE_3___default.a.forEach(responses, function (res) {
            if (res.config.url == `${_feathers__WEBPACK_IMPORTED_MODULE_13__["default"].io.io.uri}upload-videos-array`) {
              if (Object(_common_function__WEBPACK_IMPORTED_MODULE_12__["notEmptyLength"])(res.data.result)) {
                //Replace new upload videos with url
                videos = videos.filter(function (video) {
                  return !lodash__WEBPACK_IMPORTED_MODULE_3___default.a.has(video, "originFileObj");
                });
                videos = videos.concat(res.data.result);
                finalData.videos = videos;
              }
            } else {
              if (Object(_common_function__WEBPACK_IMPORTED_MODULE_12__["notEmptyLength"])(res.data.result)) {
                //Replace new upload images with url
                images = images.filter(function (image) {
                  return !lodash__WEBPACK_IMPORTED_MODULE_3___default.a.has(image, "originFileObj");
                });
                images = images.concat(res.data.result);
                finalData.images = images;
              }
            }
          });

          promises = [];
          promises.push(_feathers__WEBPACK_IMPORTED_MODULE_13__["default"].authenticate());

          if (mode == 'add') {
            promises.push(_feathers__WEBPACK_IMPORTED_MODULE_13__["default"].service('rating').create(finalData));
          } else {
            promises.push(_feathers__WEBPACK_IMPORTED_MODULE_13__["default"].service('rating').patch(finalData._id, finalData));
          } //Write in rating model


          if (finalData[finalData.type + "Id"] != null) {
            props.loading(true);
            Promise.all(promises).then(([auth, reviewRes]) => {
              props.loading(false);
              antd__WEBPACK_IMPORTED_MODULE_0__["message"].success(mode == "edit" ? 'Edit Successful' : 'Create Successful');
              handleSuccess(reviewRes);
              setButtonLoading(false);
              setOrigImages(reviewRes.images);
              setOrigVideos(reviewRes.videos); //Remove useless images

              if (Object(_common_function__WEBPACK_IMPORTED_MODULE_12__["notEmptyLength"])(removeImages)) {
                axios__WEBPACK_IMPORTED_MODULE_1___default.a.post(`${_feathers__WEBPACK_IMPORTED_MODULE_13__["default"].io.io.uri}deleteImageS3`, {
                  params: {
                    imageUrl: removeImages
                  },
                  headers: {
                    'Content-Type': 'text/xml; charset=utf-8',
                    'Content-Length': 'length'
                  }
                }).then(res => {});
              } //Remove useless videos


              if (Object(_common_function__WEBPACK_IMPORTED_MODULE_12__["notEmptyLength"])(removeVideos)) {
                axios__WEBPACK_IMPORTED_MODULE_1___default.a.post(`${_feathers__WEBPACK_IMPORTED_MODULE_13__["default"].io.io.uri}deleteVideoS3`, {
                  params: {
                    videoUrl: removeVideos
                  },
                  headers: {
                    'Content-Type': 'text/xml; charset=utf-8',
                    'Content-Length': 'length'
                  }
                });
              }
            });
          }
        }).catch(err => {
          props.loading(false);
          setButtonLoading(false);
          console.log('err');
          console.log(err);
          antd__WEBPACK_IMPORTED_MODULE_0__["message"].error(err.message);
        });
      } else {
        props.loading(false);
        setButtonLoading(false);

        lodash__WEBPACK_IMPORTED_MODULE_3___default.a.map(err, function (err) {
          return antd__WEBPACK_IMPORTED_MODULE_0__["message"].error(err.errors[0].message);
        });
      }
    });
  }

  ;

  const _renderImageCard = data => {
    if (Object(_common_function__WEBPACK_IMPORTED_MODULE_12__["notEmptyLength"])(data)) {
      return data.map(function (item) {
        return __jsx("span", {
          className: "d-inline-block thin-border margin-right-xs margin-bottom-xs background-white flex-items-no-shrink",
          style: {
            width: '70px',
            height: '70px'
          }
        }, __jsx("div", {
          className: "relative-wrapper fill-parent"
        }, __jsx("div", {
          className: "absolute-center"
        }, __jsx("img", {
          src: item.url,
          className: "fill-parent"
        })), __jsx("div", {
          className: "absolute-center background-grey-darken-4 stack-element-opacity-50 flex-items-align-center flex-justify-center"
        }, __jsx("a", {
          onClick: e => {
            handlePreview(item, 'image');
          }
        }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Icon"], {
          type: "eye",
          className: "white margin-x-xs",
          style: {
            fontSize: '20px'
          }
        })), __jsx("a", {
          onClick: e => {
            handleDelete(item, 'image');
          }
        }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Icon"], {
          type: "delete",
          className: "white margin-x-xs",
          style: {
            fontSize: '20px'
          }
        })))));
      });
    } else {
      return null;
    }
  };

  const _renderVideoCard = data => {
    if (Object(_common_function__WEBPACK_IMPORTED_MODULE_12__["notEmptyLength"])(data)) {
      return data.map(function (item) {
        return __jsx("span", {
          className: "d-inline-block thin-border margin-right-xs margin-bottom-xs background-white flex-items-no-shrink",
          style: {
            width: '70px',
            height: '70px'
          }
        }, __jsx("div", {
          className: "relative-wrapper fill-parent"
        }, __jsx("div", {
          className: "absolute-center"
        }, __jsx(react_player__WEBPACK_IMPORTED_MODULE_9___default.a, {
          width: "100%",
          height: "100%",
          url: item.url
        })), __jsx("div", {
          className: "absolute-center background-grey-darken-4 stack-element-opacity-50 flex-items-align-center flex-justify-center"
        }, __jsx("a", {
          onClick: e => {
            handlePreview(item, 'video');
          }
        }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Icon"], {
          type: "eye",
          className: "white margin-x-xs",
          style: {
            fontSize: '20px'
          }
        })), __jsx("a", {
          onClick: e => {
            handleDelete(item, 'video');
          }
        }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Icon"], {
          type: "delete",
          className: "white margin-x-xs",
          style: {
            fontSize: '20px'
          }
        })))));
      });
    } else {
      return null;
    }
  };

  const _renderSelection = (data, text) => {
    if (Object(_common_function__WEBPACK_IMPORTED_MODULE_12__["notEmptyLength"])(data)) {
      let idType = `${reviewForm.type}Id`;
      return __jsx(react__WEBPACK_IMPORTED_MODULE_6___default.a.Fragment, null, __jsx("div", {
        className: "headline  "
      }, text != null ? text : 'Please select item to review'), __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Form"].Item, {
        required: false,
        validateStatus: selectionError ? 'error' : '',
        help: selectionError || '',
        style: {
          margin: 0
        }
      }, getFieldDecorator('selection', {
        rules: [{
          required: true,
          message: 'Please pick 1 item to review!'
        }],
        initialValue: props.data[idType]
      })(__jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Select"], {
        onChange: v => {
          let stateObj = lodash__WEBPACK_IMPORTED_MODULE_3___default.a.cloneDeep(reviewForm);

          stateObj[idType] = v;
          setReviewForm(stateObj);
        }
      }, data.map(function (item) {
        return __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Select"].Option, {
          key: item._id,
          value: item._id
        }, item.name);
      })))));
    } else {
      return null;
    }
  };

  const _renderForm = () => {
    return __jsx("div", {
      key: "form"
    }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Form"], {
      onSubmit: handleSubmit
    }, __jsx("div", {
      style: {
        height: FORM_CONTAINER_SIZE * 0.15 + 'px'
      },
      className: "scroll-y-wrapper padding-x-sm "
    }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Form"].Item, {
      style: {
        margin: 0
      }
    }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Row"], {
      type: "flex",
      align: "top"
    }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
      span: 12
    }, __jsx("div", {
      className: "flex-items-align-start"
    }, __jsx("span", {
      className: "d-inline-block margin-right-sm"
    }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Avatar"], {
      size: 50,
      src: writer.avatar ? writer.avatar : null,
      icon: writer.avatar ? null : 'user'
    })), __jsx("span", {
      className: "d-inline-block flex-items-align-center"
    }, __jsx("span", {
      className: "d-inline-block"
    }, writer.firstName ? writer.firstName : null, " ", writer.lastName ? writer.lastName : null), reviewForm.state ? __jsx("span", {
      className: "blue d-inline-block margin-right-sm flex-items-align-center padding-left-xs"
    }, " ", reviewForm.state) : null))), __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
      span: 12
    }, __jsx("div", {
      className: "review2"
    }, __jsx("p", null, reviewForm.createdAt ? moment(reviewForm.createdAt).format('D MMMM Y') : moment().format('D MMMM Y'))))))), __jsx("div", {
      style: {
        height: FORM_CONTAINER_SIZE * 0.75 + 'px'
      },
      className: "scroll-y-wrapper padding-x-sm"
    }, Object(_common_function__WEBPACK_IMPORTED_MODULE_12__["notEmptyLength"])(props.selection) ? _renderSelection(props.selection, props.selectionText) : null, lodash__WEBPACK_IMPORTED_MODULE_3___default.a.isPlainObject(lodash__WEBPACK_IMPORTED_MODULE_3___default.a.get(props.data, 'carspecId')) && !lodash__WEBPACK_IMPORTED_MODULE_3___default.a.isEmpty(lodash__WEBPACK_IMPORTED_MODULE_3___default.a.get(props.data, 'carspecId')) ? __jsx("div", {
      className: "headline font-weight-bold"
    }, lodash__WEBPACK_IMPORTED_MODULE_3___default.a.trim(`${lodash__WEBPACK_IMPORTED_MODULE_3___default.a.get(props.data, 'carspecId.make') || ''} ${lodash__WEBPACK_IMPORTED_MODULE_3___default.a.get(props.data, 'carspecId.model') || ''} ${lodash__WEBPACK_IMPORTED_MODULE_3___default.a.get(props.data, 'carspecId.variant') || ''}`)) : null, __jsx("div", {
      className: "headline  "
    }, "How awesome this?"), __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Form"].Item, {
      required: false,
      validateStatus: ratingError ? 'error' : '',
      help: ratingError || '',
      style: {
        margin: 0
      }
    }, getFieldDecorator('rating', {
      rules: [{
        required: true,
        message: 'Please rate this store!'
      }],
      initialValue: !props.data || !props.data.rating ? null : props.data.rating
    })(__jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Rate"], {
      allowHalf: true,
      onChange: v => {
        setReviewForm(_objectSpread(_objectSpread({}, reviewForm), {}, {
          rating: v
        }));
      }
    }))), __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Form"].Item, {
      required: false,
      validateStatus: titleError ? 'error' : '',
      help: titleError || '',
      style: {
        margin: 0
      }
    }, getFieldDecorator('title', {
      initialValue: props.data ? props.data.title : null
    })(__jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Input"], {
      placeholder: "Title",
      maxLength: 300,
      onChange: e => {
        setReviewForm(_objectSpread(_objectSpread({}, reviewForm), {}, {
          title: e.target.value
        }));
      }
    }))), __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Form"].Item, {
      required: false,
      validateStatus: commentError ? 'error' : '',
      help: commentError || '',
      style: {
        margin: 0
      }
    }, getFieldDecorator('comment', {
      initialValue: props.data ? props.data.comment : null
    })(__jsx(TextArea, {
      rows: 4,
      maxLength: 1000,
      placeholder: "Write your review....",
      onChange: e => {
        setReviewForm(_objectSpread(_objectSpread({}, reviewForm), {}, {
          comment: e.target.value
        }));
      }
    }))), __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Form"].Item, {
      style: {
        margin: 0
      }
    }, __jsx(react_indiana_drag_scroll__WEBPACK_IMPORTED_MODULE_8___default.a, {
      style: {
        height: '70px',
        width: "100%"
      },
      className: "d-flex margin-y-sm",
      vertical: false
    }, _renderVideoCard(reviewForm.videos), _renderImageCard(reviewForm.images))), __jsx("div", {
      className: "margin-y-sm"
    }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Form"].Item, {
      style: {
        margin: 0
      }
    }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Row"], {
      className: "thin-border round-border padding-sm",
      gutter: [10, 20]
    }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
      xs: 24,
      sm: 24,
      md: 12,
      lg: 12,
      xl: 12
    }, __jsx("div", {
      className: "fill-parent  headline   text-overflow-break"
    }, " Add to your post")), __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
      xs: 24,
      sm: 24,
      md: 12,
      lg: 12,
      xl: 12
    }, __jsx("div", {
      className: "fill-parent flex-justify-end flex-items-align-center flex-align-center text-overflow-break"
    }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Upload"], {
      accept: "image/*",
      onChange: ({
        fileList
      }) => {
        onChangeImage(fileList);
      },
      multiple: true,
      fileList: reviewForm.images,
      showUploadList: false,
      beforeUpload: file => false,
      disabled: Object(_common_function__WEBPACK_IMPORTED_MODULE_12__["notEmptyLength"])(reviewForm.images) ? reviewForm.images.length >= IMAGELIMIT : false
    }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Tooltip"], {
      placement: "top",
      title: `Maximum ${IMAGELIMIT} images upload`
    }, __jsx("img", {
      src: "/assets/add-post/image.png",
      style: {
        width: '25px',
        height: '25px'
      },
      className: `margin-x-sm margin-bottom-sm ${reviewForm.images.length >= IMAGELIMIT ? 'cursor-not-allowed' : 'cursor-pointer'}`
    }))))))))), __jsx("div", {
      style: {
        height: FORM_CONTAINER_SIZE * 0.1 + 'px'
      },
      className: "flex-items-align-center"
    }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Button"], {
      htmlType: "submit",
      loading: buttonLoading,
      type: "primary",
      style: {
        color: 'white',
        width: '100%'
      }
    }, mode == 'add' ? "Add Post" : "Edit Post"))));
  };

  const _renderState = () => {
    return __jsx("div", {
      key: "state"
    }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Row"], {
      gutter: [0, 10]
    }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
      xs: 24,
      sm: 24,
      md: 24,
      lg: 24,
      xl: 24
    }, __jsx("div", {
      className: "fill-parent"
    }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Input"], {
      placeholder: "Where are you?",
      onChange: e => {
        filterState(e.target.value);
      }
    }))), __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
      xs: 24,
      sm: 24,
      md: 24,
      lg: 24,
      xl: 24
    }, __jsx("div", {
      style: {
        height: FORM_CONTAINER_SIZE * 0.85 + 'px'
      },
      className: "scroll-y-wrapper "
    }, filteredState.map(function (state) {
      return __jsx("div", {
        className: `flex-justify-start flex-items-align-center margin-y-md hover-background-yellow-lighten-3 cursor-pointer ${lodash__WEBPACK_IMPORTED_MODULE_3___default.a.toLower(reviewForm.state) == lodash__WEBPACK_IMPORTED_MODULE_3___default.a.toLower(state.value) ? 'background-yellow-lighten-2' : ''}`,
        onClick: e => {
          setReviewForm(_objectSpread(_objectSpread({}, reviewForm), {}, {
            state: state.value
          }));
          setView(mode == 'edit' ? 'edit' : 'add');
        }
      }, __jsx("span", {
        className: "d-inline-block relative-wrapper margin-x-md",
        style: {
          width: '30px',
          height: '20px'
        }
      }, __jsx("img", {
        src: Object(_params_stateList__WEBPACK_IMPORTED_MODULE_14__["getStateIcon"])(state.value),
        className: "fill-parent absolute-center"
      })), __jsx("span", {
        className: "d-inline-block"
      }, __jsx(react_highlight_words__WEBPACK_IMPORTED_MODULE_7___default.a, {
        highlightStyle: {
          color: '#ffc069',
          padding: 0
        },
        textToHighlight: state.value,
        autoEscape: true,
        className: "subtitle1",
        searchWords: searchStateWords
      })));
    })))));
  };

  const _renderView = data => {
    switch (data) {
      case 'state':
        return _renderState();

      case 'edit':
        return _renderForm();

      case 'add':
        return _renderForm();

      default:
        return null;
        break;
    }
  };

  return __jsx("span", {
    className: props.className ? props.className : null,
    style: props.style ? props.style : null
  }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Modal"], {
    visible: visible,
    title: props.title && (view == 'add' || view == 'edit') ? props.title : title,
    maskClosable: true,
    centered: true,
    closable: true,
    footer: null,
    onCancel: e => {
      setVisible(false);
    },
    afterClose: () => {
      reset();
    }
  }, __jsx("div", {
    style: {
      height: FORM_CONTAINER_SIZE + 'px'
    },
    className: "scroll-y-wrapper"
  }, __jsx(rc_queue_anim__WEBPACK_IMPORTED_MODULE_5___default.a, {
    type: "bottom"
  }, view == 'add' || view == 'edit' ? _renderForm() : _renderState()))), __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Modal"], {
    visible: previewVisible,
    footer: null,
    onCancel: handleCancel,
    centered: true,
    closable: true,
    title: previewType == 'image' ? previewImage.name : previewVideo.name,
    width: 400
  }, previewType == 'video' ? __jsx(react_player__WEBPACK_IMPORTED_MODULE_9___default.a, {
    width: "100%",
    height: "200px",
    controls: true,
    url: previewVideo.url,
    config: {
      file: {
        forceVideo: true
      }
    }
  }) : __jsx("img", {
    alt: "example",
    style: {
      width: '100%'
    },
    src: previewImage.url
  })), __jsx("a", {
    onClick: props.readOnly ? null : reviewModalVisible
  }, props.button ? props.button() : __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Button"], {
    style: {
      color: '#F57F17'
    }
  }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Avatar"], {
    src: '/assets/add-post/create-post.png',
    shape: "square",
    size: "small"
  }))));
};

const mapStateToProps = state => ({
  app: state.app,
  user: state.user
});

const mapDispatchToProps = {
  loginMode: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_15__["loginMode"],
  loading: _redux_actions_app_actions__WEBPACK_IMPORTED_MODULE_15__["loading"]
};
/* harmony default export */ __webpack_exports__["default"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_10__["connect"])(mapStateToProps, mapDispatchToProps)(antd__WEBPACK_IMPORTED_MODULE_0__["Form"].create()(Object(next_router__WEBPACK_IMPORTED_MODULE_4__["withRouter"])(WriteReviewButton))));

/***/ }),

/***/ "./components/seller/SellerBusinessCard.jsx":
/*!**************************************************!*\
  !*** ./components/seller/SellerBusinessCard.jsx ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! antd */ "antd");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(antd__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-redux */ "react-redux");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _general_UserAvatar__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../general/UserAvatar */ "./components/general/UserAvatar.jsx");
/* harmony import */ var next_dist_client_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! next/dist/client/router */ "./node_modules/next/dist/client/router.js");
/* harmony import */ var next_dist_client_router__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(next_dist_client_router__WEBPACK_IMPORTED_MODULE_4__);
var __jsx = react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement;






const SellerBusinessCard = props => {
  //props.data=company
  //props.data1=createdBy
  let areaName = !props.data || !props.data.area ? null : props.data.area;
  let companyName = !props.data || !props.data.name ? null : props.data.name;
  let userarea = !props.data1 || !props.data1.userarea ? null : props.data1.userarea;

  if (_.isEmpty(userarea) === false) {
    areaName = userarea;
  }

  let usercompany = !props.data1 || !props.data1.usercompanyName ? null : props.data1.usercompanyName;

  if (_.isEmpty(usercompany) === false) {
    companyName = usercompany;
  }

  return __jsx("div", {
    className: `thin-border ${props.className || ''}`
  }, __jsx("a", {
    href: props.readOnly ? null : !props.data1 || !props.data1._id ? null : '/dealer/' + (props.data1.companyurlId || '') + '/' + (props.data1.userurlId || ''),
    className: "grey-darken-2 font-weight-normal"
  }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Row"], null, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
    span: 12
  }, __jsx("img", {
    src: "/Artboard.png",
    style: {
      width: '10%',
      float: 'left',
      marginLeft: '5px',
      marginBottom: '-5px',
      marginTop: '5px'
    }
  })), __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
    span: 12,
    style: {
      float: 'right'
    }
  }, __jsx("img", {
    src: "/Artboard.png",
    style: {
      width: '10%',
      float: 'right',
      marginRight: '5px',
      marginBottom: '-5px',
      marginTop: '5px'
    }
  }))), __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Row"], {
    style: {
      paddingLeft: '30px'
    },
    type: "flex",
    align: "middle"
  }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
    xs: 5,
    sm: 5,
    md: 0,
    lg: 0,
    xl: 5
  }, __jsx("div", {
    className: "fill-parent flex-justify-center flex-items-align-center"
  }, __jsx(_general_UserAvatar__WEBPACK_IMPORTED_MODULE_3__["default"], {
    redirectProfile: true,
    data: props.data1,
    size: 50
  }))), __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
    xs: 18,
    sm: 18,
    md: 18,
    lg: 24,
    xl: 18,
    style: {
      marginLeft: '10px'
    }
  }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Row"], null, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
    xs: 4,
    sm: 4,
    md: 0,
    lg: 0,
    xl: 4,
    style: {
      marginRight: '-4px',
      marginTop: '-3px'
    }
  }, __jsx("img", {
    src: "/assets/profile/account-info-active.png",
    className: "fill-parent",
    style: {
      width: '55%'
    }
  })), __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
    span: 20
  }, __jsx("h4", {
    style: {
      marginBottom: '0px',
      marginLeft: '-5px',
      textOverflow: 'ellipsis',
      overflow: 'hidden',
      whiteSpace: 'nowrap'
    }
  }, " ", !props.data1 || !props.data1.namePrefix ? null : props.data1.namePrefix, " ", !props.data1 || !props.data1.firstName ? null : props.data1.firstName, " ", !props.data1 || !props.data1.lastName ? null : props.data1.lastName))), __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Row"], null, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
    xs: 4,
    sm: 4,
    md: 0,
    lg: 0,
    xl: 4,
    style: {
      marginRight: '-5px',
      marginTop: '-3px'
    }
  }, __jsx("img", {
    src: "/assets/profile/address-work.png",
    className: "fill-parent",
    style: {
      width: '50%'
    }
  })), __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
    span: 20
  }, __jsx("div", {
    style: {
      marginBottom: '0px',
      fontSize: '13px',
      fontWeight: '500',
      whiteSpace: 'nowrap',
      textOverflow: 'ellipsis',
      overflow: 'hidden',
      marginLeft: '-4px'
    }
  }, companyName))), __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Row"], null, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
    xs: 4,
    sm: 4,
    md: 0,
    lg: 0,
    xl: 4,
    span: 4,
    style: {
      marginTop: '1px'
    }
  }, __jsx("img", {
    src: "/assets/carDetails/Location@3x.png",
    className: "fill-parent",
    style: {
      width: '60%'
    }
  })), __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
    span: 20,
    style: {
      marginLeft: '-8px'
    }
  }, __jsx("span", {
    className: "caption text-overflow-break text-align-left"
  }, areaName))), __jsx("div", {
    className: "flex-items-align-center width-100"
  }))), __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Row"], null, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
    span: 12
  }, __jsx("img", {
    src: "/Artboard.png",
    style: {
      width: '10%',
      float: 'left',
      marginLeft: '5px',
      marginBottom: '5px',
      marginTop: '-5px'
    }
  })), __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
    span: 12,
    style: {
      float: 'right'
    }
  }, __jsx("img", {
    src: "/Artboard.png",
    style: {
      width: '10%',
      float: 'right',
      marginRight: '5px',
      marginBottom: '5px',
      marginTop: '-5px'
    }
  })))));
};

const mapStateToProps = state => ({
  app: state.app,
  user: state.user
});

const mapDispatchToProps = {};
/* harmony default export */ __webpack_exports__["default"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_2__["connect"])(mapStateToProps, mapDispatchToProps)(antd__WEBPACK_IMPORTED_MODULE_0__["Form"].create()(Object(next_dist_client_router__WEBPACK_IMPORTED_MODULE_4__["withRouter"])(SellerBusinessCard))));

/***/ }),

/***/ "./components/skeleton-loader/GridProductSkeleton.jsx":
/*!************************************************************!*\
  !*** ./components/skeleton-loader/GridProductSkeleton.jsx ***!
  \************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! antd */ "antd");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(antd__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-redux */ "react-redux");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var next_dist_client_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/dist/client/router */ "./node_modules/next/dist/client/router.js");
/* harmony import */ var next_dist_client_router__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_dist_client_router__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var react_loading_skeleton__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react-loading-skeleton */ "react-loading-skeleton");
/* harmony import */ var react_loading_skeleton__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react_loading_skeleton__WEBPACK_IMPORTED_MODULE_4__);
var __jsx = react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement;






const GridProductSkeleton = props => {
  return __jsx(react__WEBPACK_IMPORTED_MODULE_1___default.a.Fragment, null, __jsx(react_loading_skeleton__WEBPACK_IMPORTED_MODULE_4__["SkeletonTheme"], null, __jsx("div", {
    className: "gridDataList"
  }, __jsx("div", {
    className: "box-shadow-normal",
    style: {
      height: 400
    }
  }, __jsx("div", {
    className: "wrap-product-ads"
  }, __jsx("div", {
    className: "wrap-product-ads-img padding-x-md"
  }, __jsx(react_loading_skeleton__WEBPACK_IMPORTED_MODULE_4___default.a, {
    className: "fill-parent"
  })), __jsx("div", {
    className: "wrap-product-ads-text"
  }, __jsx("div", {
    className: "wrap-product-ads-title"
  }, __jsx(react_loading_skeleton__WEBPACK_IMPORTED_MODULE_4___default.a, {
    className: "text-truncate-twoline",
    style: {
      fontSize: 16
    },
    count: 2
  })), __jsx("div", {
    className: "wrap-product-ads-title-p text-overflow-break"
  }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Row"], null, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
    span: 20
  }, __jsx(react_loading_skeleton__WEBPACK_IMPORTED_MODULE_4___default.a, {
    count: 1
  })))), __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Row"], {
    className: "margin-bottom-xs"
  }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
    xs: 24,
    sm: 24,
    md: 18,
    lg: 18,
    xl: 18
  }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Row"], null, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
    className: "icon-res",
    span: 3,
    style: {
      marginTop: '-3px'
    }
  }, __jsx(react_loading_skeleton__WEBPACK_IMPORTED_MODULE_4___default.a, {
    circle: true
  })), __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
    span: 20
  }, __jsx(react_loading_skeleton__WEBPACK_IMPORTED_MODULE_4___default.a, {
    className: "gridDealerName",
    count: 1
  }))), __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Row"], null, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
    className: "icon-res",
    span: 3
  }, __jsx(react_loading_skeleton__WEBPACK_IMPORTED_MODULE_4___default.a, {
    circle: true
  })), __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
    span: 20
  }, __jsx(react_loading_skeleton__WEBPACK_IMPORTED_MODULE_4___default.a, {
    style: {
      marginLeft: '5px',
      fontSize: '14px'
    },
    className: "product-ads-company",
    count: 1
  }))), __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Row"], null, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
    span: 3,
    className: "icon-res"
  }, __jsx(react_loading_skeleton__WEBPACK_IMPORTED_MODULE_4___default.a, {
    circle: true
  })), __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
    span: 20
  }, __jsx(react_loading_skeleton__WEBPACK_IMPORTED_MODULE_4___default.a, {
    style: {
      marginLeft: '5px',
      fontSize: '14px',
      textTransform: 'uppercase'
    },
    className: "product-ads-company",
    count: 1
  }))))), __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Row"], {
    type: "flex",
    justify: "start",
    align: "middle",
    className: "w-100",
    gutter: [2.5, 0]
  }, __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
    xs: 4,
    sm: 4,
    md: 4,
    lg: 4,
    xl: 4
  }, __jsx(react_loading_skeleton__WEBPACK_IMPORTED_MODULE_4___default.a, {
    count: 1,
    height: 30
  })), __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
    xs: 4,
    sm: 4,
    md: 4,
    lg: 4,
    xl: 4
  }, __jsx(react_loading_skeleton__WEBPACK_IMPORTED_MODULE_4___default.a, {
    count: 1,
    height: 30
  })), __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
    xs: 4,
    sm: 4,
    md: 4,
    lg: 4,
    xl: 4
  }, __jsx(react_loading_skeleton__WEBPACK_IMPORTED_MODULE_4___default.a, {
    count: 1,
    height: 30
  })), __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
    xs: 4,
    sm: 4,
    md: 4,
    lg: 4,
    xl: 4
  }, __jsx(react_loading_skeleton__WEBPACK_IMPORTED_MODULE_4___default.a, {
    count: 1,
    height: 30
  })), __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
    xs: 4,
    sm: 4,
    md: 4,
    lg: 4,
    xl: 4
  }, __jsx(react_loading_skeleton__WEBPACK_IMPORTED_MODULE_4___default.a, {
    count: 1,
    height: 30
  })), __jsx(antd__WEBPACK_IMPORTED_MODULE_0__["Col"], {
    xs: 4,
    sm: 4,
    md: 4,
    lg: 4,
    xl: 4
  }, __jsx(react_loading_skeleton__WEBPACK_IMPORTED_MODULE_4___default.a, {
    count: 1,
    height: 30
  })))))))));
};

const mapStateToProps = state => ({
  app: state.app,
  user: state.user
});

const mapDispatchToProps = {};
/* harmony default export */ __webpack_exports__["default"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_2__["connect"])(mapStateToProps, mapDispatchToProps)(antd__WEBPACK_IMPORTED_MODULE_0__["Form"].create()(Object(next_dist_client_router__WEBPACK_IMPORTED_MODULE_3__["withRouter"])(GridProductSkeleton))));

/***/ }),

/***/ "./feathers.js":
/*!*********************!*\
  !*** ./feathers.js ***!
  \*********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var socket_io_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! socket.io-client */ "socket.io-client");
/* harmony import */ var socket_io_client__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(socket_io_client__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _feathersjs_feathers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @feathersjs/feathers */ "@feathersjs/feathers");
/* harmony import */ var _feathersjs_feathers__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_feathersjs_feathers__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _feathersjs_socketio_client__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @feathersjs/socketio-client */ "@feathersjs/socketio-client");
/* harmony import */ var _feathersjs_socketio_client__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_feathersjs_socketio_client__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _feathersjs_authentication_client__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @feathersjs/authentication-client */ "@feathersjs/authentication-client");
/* harmony import */ var _feathersjs_authentication_client__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_feathersjs_authentication_client__WEBPACK_IMPORTED_MODULE_3__);



 // const socket = io('http://localhost:3030/');   // local/
// const socket = io('https://uat2-api.ccar.my/');  //uat
// const socket = io('https://api.ccar.my/');   // live

const socket = socket_io_client__WEBPACK_IMPORTED_MODULE_0___default()('https://preprod-api.ccar.my/'); // live

const client = _feathersjs_feathers__WEBPACK_IMPORTED_MODULE_1___default()();
client.configure(_feathersjs_socketio_client__WEBPACK_IMPORTED_MODULE_2___default()(socket), {
  pingTimeOut: 60000
}); // client.configure(authentication({
//   storage: window.localStorage
// }));

client.configure(_feathersjs_authentication_client__WEBPACK_IMPORTED_MODULE_3___default()());
/* harmony default export */ __webpack_exports__["default"] = (client);

/***/ }),

/***/ "./functionContent.js":
/*!****************************!*\
  !*** ./functionContent.js ***!
  \****************************/
/*! exports provided: formatMoney, calMonth, formatNumber, getFaceBookId, getGoogleId, renderMileageRange, checkEnv, checkEnvReturnWebAdmin, checkEnvReturnCmsUrl */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "formatMoney", function() { return formatMoney; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "calMonth", function() { return calMonth; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "formatNumber", function() { return formatNumber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getFaceBookId", function() { return getFaceBookId; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getGoogleId", function() { return getGoogleId; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "renderMileageRange", function() { return renderMileageRange; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "checkEnv", function() { return checkEnv; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "checkEnvReturnWebAdmin", function() { return checkEnvReturnWebAdmin; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "checkEnvReturnCmsUrl", function() { return checkEnvReturnCmsUrl; });
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);

function formatMoney(amount, decimalCount = 2, decimal = ".", thousands = ",") {
  try {
    decimalCount = Math.abs(decimalCount);
    decimalCount = isNaN(decimalCount) ? 2 : decimalCount;
    const negativeSign = amount < 0 ? "-" : "";
    let i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();
    let j = i.length > 3 ? i.length % 3 : 0;
    return negativeSign + (j ? i.substr(0, j) + thousands : '') + i.substr(j).replace(/(\d{3})(?=\d)/g, "$1" + thousands) + (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : "");
  } catch (e) {}
}
;
function calMonth(v) {
  let LoanAmount = v * 0.9; // 10% down payment

  let LoanPeriod = 9;
  let Interest = 3;
  let totalInterest = Interest / 100 * LoanAmount * LoanPeriod;
  let monthlyInterest = totalInterest / (LoanPeriod * 12);
  let monthlyInstalment = (LoanAmount + totalInterest) / (LoanPeriod * 12);
  return monthlyInstalment;
}
function formatNumber(amount) {
  try {
    return Math.abs(amount) > 999 ? Math.sign(amount) * (Math.abs(amount) / 1000).toFixed(1) : Math.sign(amount) * Math.abs(amount);
  } catch (e) {}
}
;
function getFaceBookId(url) {
  let appId = ''; // appId="694458901283391" //fara
  // appId="275484527150948"
  //  appId="616173029318134" //siangsiong
  // appId="747178012753410" //live
  // appId="185229086079189"//local :3001 --cf     
  // appId="703731107216979" //uat2 --cf  

  if (url === 'http://localhost:3030/') {
    appId = '694458901283391';
  } else if (url === 'https://uat2-api.ccar.my/') {
    appId = '703731107216979';
  } else if (url === 'https://api.ccar.my/') {
    appId = '747178012753410';
  } else if (url === 'https://preprod-api.ccar.my/') {
    appId = '694458901283391';
  } else {
    appId = '694458901283391';
  } //default prod


  return appId;
}
;
function getGoogleId(url) {
  let clientId = ''; // clientId="827147986430-e28c63qftj91sp506r8km2v1snccnt36.apps.googleusercontent.com" // live
  // clientId="182924119044-53k3g8cuv45u5j67cticevvo15g7846i.apps.googleusercontent.com"//uat2

  if (url === 'http://localhost:3030/') {
    clientId = '182924119044-53k3g8cuv45u5j67cticevvo15g7846i.apps.googleusercontent.com';
  } else if (url === 'https://preprod-api.ccar.my/') {
    clientId = '182924119044-53k3g8cuv45u5j67cticevvo15g7846i.apps.googleusercontent.com';
  } else if (url === 'https://uat2-api.ccar.my/') {
    clientId = '182924119044-53k3g8cuv45u5j67cticevvo15g7846i.apps.googleusercontent.com';
  } else if (url === 'https://preprod-api.ccar.my/') {
    clientId = '182924119044-53k3g8cuv45u5j67cticevvo15g7846i.apps.googleusercontent.com';
  } else if (url === 'https://api.ccar.my/') {
    clientId = '827147986430-e28c63qftj91sp506r8km2v1snccnt36.apps.googleusercontent.com';
  } else {
    clientId = '827147986430-e28c63qftj91sp506r8km2v1snccnt36.apps.googleusercontent.com';
  }

  return clientId;
}
;
function renderMileageRange(mileage, mileage2) {
  let mileageRange = 0,
      useMileage = 'no',
      useMileage2 = 'no';

  if (mileage) {
    if (mileage > 0) {
      mileageRange = mileage;
      useMileage = 'yes';
    }
  }

  if (mileage2) {
    if (mileage2 > 0) {
      mileageRange = mileage2;
      useMileage2 = 'yes';
    }
  }

  if (typeof mileageRange === 'string') {
    try {
      mileageRange = parseFloat(mileageRange);
    } catch (err) {
      return mileageRange;
    }
  }

  if (useMileage === 'yes') {
    if (typeof mileageRange === 'number') {
      let mileageFrom = (mileageRange - 2500) / 1000;
      let mileageTo = (mileageRange + 2500) / 1000;
      mileageRange = mileageFrom + '-' + mileageTo + 'K KM';
    }

    if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isEmpty(mileageRange) === true) {
      mileageRange = '0 KM';
    }

    return mileageRange;
  } else {
    mileageRange = mileageRange / 1000;
    return mileageRange + ' KM';
  }
}
;
function checkEnv(url) {
  let env = '';

  if (url === 'http://localhost:3030/') {
    env = 'local';
  } else if (url === 'https://uat2-api.ccar.my/') {
    env = 'uat';
  } else if (url === 'https://preprod-api.ccar.my/') {
    env = 'preprod';
  } else if (url === 'https://api.ccar.my/') {
    env = 'prod';
  } else {
    env = 'prod';
  }

  return env;
}
;
function checkEnvReturnWebAdmin(url) {
  let frontEndUrl = '';

  if (url === 'http://localhost:3030/') {
    frontEndUrl = 'http://localhost:3000/';
  } else if (url === 'https://uat2-api.ccar.my/') {
    frontEndUrl = 'http://uat2-adm.ccar.my/';
  } else if (url === 'https://preprod-api.ccar.my/') {
    frontEndUrl = 'http://preprod-adm.ccar.my/';
  } else if (url === 'https://api.ccar.my/') {
    frontEndUrl = 'https://adm.ccar.my/';
  }

  return frontEndUrl;
}
;
function checkEnvReturnCmsUrl(url) {
  let frontEndUrl = 'https://uat2ssr.ccar.my';

  if (url === 'http://localhost:3030/') {
    frontEndUrl = 'http://localhost:3011';
  } else if (url === 'https://uat2-api.ccar.my/') {
    frontEndUrl = 'https://uat2ssr.ccar.my';
  } else if (url === 'https://preprod-api.ccar.my/') {
    frontEndUrl = 'https://preprod-api.ccar.my';
  } else if (url === 'https://api.ccar.my/') {
    frontEndUrl = 'https://ccar.my';
  }

  return frontEndUrl;
}
;

/***/ }),

/***/ "./icon.js":
/*!*****************!*\
  !*** ./icon.js ***!
  \*****************/
/*! exports provided: writePostIcon, imageNotFoundIcon, raceFlagIcon, allIcon, carFreakLikeIcon, carFreakLikeGreyIcon, carFreakCommentIcon, followingGreyIcon, followingYellowIcon, earthGreyIcon, earthYellowIcon, clubNonMember, uploadPhoto, calendarIcon, pinIcon, carspecNotFoundImage, flameRed, flameRedShadow, flame, soldOutIcon, rayaFlame, rayaFood, rayaLamp, rayaMosque, rayaPeople, ccarWebLogo400X150, ccarLogo, ccarLogo2, ccarWebLogo2, loginBackground, tbhCny, tbh1Cny, tbh2Cny, cnyLionHead, cnyLogo, googleLogo, cnyLogo2, tbh, defaultProfileBackground, phone, email, help, address, location, wishList, wishlistIconActived, faqDiceBanner, faqBanner, faqBuyCarIcon, faqCarFreakIcon, faqCstarIcon, faqMyAccountIcon, faqOurFeaturesIcon, faqSellCarIcon, searchBoxImg, sortingImg, filterFormImg, allNewCarImg, carBrandImg, newCarFilterFormImg, carMoreInfoImg, cstarListImg, cstarAnimationImg, bellInactive, ratingBanner, menuLogin */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "writePostIcon", function() { return writePostIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "imageNotFoundIcon", function() { return imageNotFoundIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "raceFlagIcon", function() { return raceFlagIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "allIcon", function() { return allIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "carFreakLikeIcon", function() { return carFreakLikeIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "carFreakLikeGreyIcon", function() { return carFreakLikeGreyIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "carFreakCommentIcon", function() { return carFreakCommentIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "followingGreyIcon", function() { return followingGreyIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "followingYellowIcon", function() { return followingYellowIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "earthGreyIcon", function() { return earthGreyIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "earthYellowIcon", function() { return earthYellowIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "clubNonMember", function() { return clubNonMember; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "uploadPhoto", function() { return uploadPhoto; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "calendarIcon", function() { return calendarIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pinIcon", function() { return pinIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "carspecNotFoundImage", function() { return carspecNotFoundImage; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "flameRed", function() { return flameRed; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "flameRedShadow", function() { return flameRedShadow; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "flame", function() { return flame; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "soldOutIcon", function() { return soldOutIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rayaFlame", function() { return rayaFlame; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rayaFood", function() { return rayaFood; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rayaLamp", function() { return rayaLamp; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rayaMosque", function() { return rayaMosque; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rayaPeople", function() { return rayaPeople; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ccarWebLogo400X150", function() { return ccarWebLogo400X150; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ccarLogo", function() { return ccarLogo; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ccarLogo2", function() { return ccarLogo2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ccarWebLogo2", function() { return ccarWebLogo2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "loginBackground", function() { return loginBackground; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tbhCny", function() { return tbhCny; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tbh1Cny", function() { return tbh1Cny; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tbh2Cny", function() { return tbh2Cny; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cnyLionHead", function() { return cnyLionHead; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cnyLogo", function() { return cnyLogo; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "googleLogo", function() { return googleLogo; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cnyLogo2", function() { return cnyLogo2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tbh", function() { return tbh; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "defaultProfileBackground", function() { return defaultProfileBackground; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "phone", function() { return phone; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "email", function() { return email; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "help", function() { return help; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "address", function() { return address; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "location", function() { return location; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "wishList", function() { return wishList; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "wishlistIconActived", function() { return wishlistIconActived; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "faqDiceBanner", function() { return faqDiceBanner; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "faqBanner", function() { return faqBanner; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "faqBuyCarIcon", function() { return faqBuyCarIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "faqCarFreakIcon", function() { return faqCarFreakIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "faqCstarIcon", function() { return faqCstarIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "faqMyAccountIcon", function() { return faqMyAccountIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "faqOurFeaturesIcon", function() { return faqOurFeaturesIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "faqSellCarIcon", function() { return faqSellCarIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "searchBoxImg", function() { return searchBoxImg; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sortingImg", function() { return sortingImg; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "filterFormImg", function() { return filterFormImg; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "allNewCarImg", function() { return allNewCarImg; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "carBrandImg", function() { return carBrandImg; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newCarFilterFormImg", function() { return newCarFilterFormImg; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "carMoreInfoImg", function() { return carMoreInfoImg; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cstarListImg", function() { return cstarListImg; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cstarAnimationImg", function() { return cstarAnimationImg; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bellInactive", function() { return bellInactive; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ratingBanner", function() { return ratingBanner; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "menuLogin", function() { return menuLogin; });
const writePostIcon = '/assets/new-car-screen/create-post.png';
const imageNotFoundIcon = '/image-not-found copy.png';
const raceFlagIcon = '/race-flag.jpg';
const allIcon = '/grid.svg'; //CarFreak

const carFreakLikeIcon = '/assets/car-freak/carfreaks-like.png';
const carFreakLikeGreyIcon = '/assets/car-freak/carfreaks-like-grey.png';
const carFreakCommentIcon = '/assets/car-freak/comment.svg';
const followingGreyIcon = '/assets/car-freak/follow-grey.png';
const followingYellowIcon = '/assets/car-freak/follow-yellow.png';
const earthGreyIcon = '/assets/car-freak/public-grey.png';
const earthYellowIcon = '/assets/car-freak/public-yellow.png';
const clubNonMember = '/assets/car-freak/non-member.png';
const uploadPhoto = '/assets/upload_photo.png';
const calendarIcon = '/assets/car-freak/calendar.png';
const pinIcon = '/assets/car-freak/pin.png'; //Car Market

const carspecNotFoundImage = '/coming-soon.png';
const flameRed = '/assets/CarListingIcon/Fire-04(NoShadow).gif';
const flameRedShadow = '/assets/CarListingIcon/Fire-04.gif';
const flame = '/assets/carDetails/flame.gif';
const soldOutIcon = '/sold out@3x.png';
const rayaFlame = '/assets/productList/Flame_01.gif';
const rayaFood = '/assets/productList/Food(Final)_1.gif';
const rayaLamp = '/assets/productList/Lamp_Final_.gif';
const rayaMosque = '/assets/productList/Mosque(Final).gif';
const rayaPeople = '/assets/productList/Orang(Final).gif';
const ccarWebLogo400X150 = '/assets/profile/400x150-icon.png';
const ccarLogo = '/logo192.png';
const ccarLogo2 = '/assets/Ccar-logo.png';
const ccarWebLogo2 = '/ccar-web-logo.png'; //Login

const loginBackground = '/assets/login/ramadhan.png';
const tbhCny = '/assets/login/tbh.png';
const tbh1Cny = '/assets/login/tbh-01.png';
const tbh2Cny = '/assets/login/tbh-02.png';
const cnyLionHead = '/assets/login/lion-dance.png';
const cnyLogo = '/assets/login/ccar-cny-logo.png';
const googleLogo = '/google.png';
const cnyLogo2 = '/ccar cny 2.svg';
const tbh = '/assets/login/fara.png'; //Profile

const defaultProfileBackground = '/assets/profile/1280x450.png';
const phone = "/assets/sellerProfile/phone.png";
const email = "/assets/sellerProfile/email.png";
const help = "/assets/sellerProfile/help.png";
const address = "/assets/sellerProfile/address-home.png";
const location = "/assets/sellerProfile/Location@3x.png";
const wishList = "/assets/profile/wishlist.png";
const wishlistIconActived = "/assets/profile/wishlist-active.png"; //FAQ

const faqDiceBanner = '/assets/faq/many-falling-blocks-with-question-marks-3d-illustration.jpg';
const faqBanner = '/assets/faq/FAQ-bg.jpg';
const faqBuyCarIcon = '/assets/faq/buy-a-car.png';
const faqCarFreakIcon = '/assets/faq/carfreaks.png';
const faqCstarIcon = '/assets/faq/cstar.png';
const faqMyAccountIcon = '/assets/faq/my-account.png';
const faqOurFeaturesIcon = '/assets/faq/our-features.png';
const faqSellCarIcon = '/assets/faq/sell-a-car.png';
const searchBoxImg = '/assets/faq/Homepage.png';
const sortingImg = '/assets/faq/carmarket filter.png';
const filterFormImg = '/assets/faq/Carmarket quick filter box.png';
const allNewCarImg = '/assets/faq/all-newcar brand.png';
const carBrandImg = '/assets/faq/sell-a-car.png';
const newCarFilterFormImg = '/assets/faq/all-newcar filter.png';
const carMoreInfoImg = '/assets/faq/sell-a-car.png';
const cstarListImg = '/assets/faq/sell-a-car.png';
const cstarAnimationImg = '/assets/faq/sell-a-car.png'; //Notification

const bellInactive = '/assets/notification/bell.png'; //Review

const ratingBanner = '/assets/car-review/rating.png'; //Menu

const menuLogin = '/assets/menu-icon/Nologin.png';

/***/ }),

/***/ "./node_modules/next/dist/client/link.js":
/*!***********************************************!*\
  !*** ./node_modules/next/dist/client/link.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/next/node_modules/@babel/runtime/helpers/interopRequireDefault.js");

var _interopRequireWildcard = __webpack_require__(/*! @babel/runtime/helpers/interopRequireWildcard */ "./node_modules/next/node_modules/@babel/runtime/helpers/interopRequireWildcard.js");

exports.__esModule = true;
exports.default = void 0;

var _react = _interopRequireWildcard(__webpack_require__(/*! react */ "react"));

var _url = __webpack_require__(/*! url */ "url");

var _utils = __webpack_require__(/*! ../next-server/lib/utils */ "../next-server/lib/utils");

var _router = _interopRequireDefault(__webpack_require__(/*! ./router */ "./node_modules/next/dist/client/router.js"));

var _router2 = __webpack_require__(/*! ../next-server/lib/router/router */ "./node_modules/next/dist/next-server/lib/router/router.js");

function isLocal(href) {
  var url = (0, _url.parse)(href, false, true);
  var origin = (0, _url.parse)((0, _utils.getLocationOrigin)(), false, true);
  return !url.host || url.protocol === origin.protocol && url.host === origin.host;
}

function memoizedFormatUrl(formatFunc) {
  var lastHref = null;
  var lastAs = null;
  var lastResult = null;
  return (href, as) => {
    if (lastResult && href === lastHref && as === lastAs) {
      return lastResult;
    }

    var result = formatFunc(href, as);
    lastHref = href;
    lastAs = as;
    lastResult = result;
    return result;
  };
}

function formatUrl(url) {
  return url && typeof url === 'object' ? (0, _utils.formatWithValidation)(url) : url;
}

var observer;
var listeners = new Map();
var IntersectionObserver = false ? undefined : null;
var prefetched = {};

function getObserver() {
  // Return shared instance of IntersectionObserver if already created
  if (observer) {
    return observer;
  } // Only create shared IntersectionObserver if supported in browser


  if (!IntersectionObserver) {
    return undefined;
  }

  return observer = new IntersectionObserver(entries => {
    entries.forEach(entry => {
      if (!listeners.has(entry.target)) {
        return;
      }

      var cb = listeners.get(entry.target);

      if (entry.isIntersecting || entry.intersectionRatio > 0) {
        observer.unobserve(entry.target);
        listeners.delete(entry.target);
        cb();
      }
    });
  }, {
    rootMargin: '200px'
  });
}

var listenToIntersections = (el, cb) => {
  var observer = getObserver();

  if (!observer) {
    return () => {};
  }

  observer.observe(el);
  listeners.set(el, cb);
  return () => {
    try {
      observer.unobserve(el);
    } catch (err) {
      console.error(err);
    }

    listeners.delete(el);
  };
};

class Link extends _react.Component {
  constructor(props) {
    super(props);
    this.p = void 0;

    this.cleanUpListeners = () => {};

    this.formatUrls = memoizedFormatUrl((href, asHref) => {
      return {
        href: (0, _router2.addBasePath)(formatUrl(href)),
        as: asHref ? (0, _router2.addBasePath)(formatUrl(asHref)) : asHref
      };
    });

    this.linkClicked = e => {
      var {
        nodeName,
        target
      } = e.currentTarget;

      if (nodeName === 'A' && (target && target !== '_self' || e.metaKey || e.ctrlKey || e.shiftKey || e.nativeEvent && e.nativeEvent.which === 2)) {
        // ignore click for new tab / new window behavior
        return;
      }

      var {
        href,
        as
      } = this.formatUrls(this.props.href, this.props.as);

      if (!isLocal(href)) {
        // ignore click if it's outside our scope (e.g. https://google.com)
        return;
      }

      var {
        pathname
      } = window.location;
      href = (0, _url.resolve)(pathname, href);
      as = as ? (0, _url.resolve)(pathname, as) : href;
      e.preventDefault(); //  avoid scroll for urls with anchor refs

      var {
        scroll
      } = this.props;

      if (scroll == null) {
        scroll = as.indexOf('#') < 0;
      } // replace state instead of push if prop is present


      _router.default[this.props.replace ? 'replace' : 'push'](href, as, {
        shallow: this.props.shallow
      }).then(success => {
        if (!success) return;

        if (scroll) {
          window.scrollTo(0, 0);
          document.body.focus();
        }
      });
    };

    if (true) {
      if (props.prefetch) {
        console.warn('Next.js auto-prefetches automatically based on viewport. The prefetch attribute is no longer needed. More: https://err.sh/zeit/next.js/prefetch-true-deprecated');
      }
    }

    this.p = props.prefetch !== false;
  }

  componentWillUnmount() {
    this.cleanUpListeners();
  }

  getPaths() {
    var {
      pathname
    } = window.location;
    var {
      href: parsedHref,
      as: parsedAs
    } = this.formatUrls(this.props.href, this.props.as);
    var resolvedHref = (0, _url.resolve)(pathname, parsedHref);
    return [resolvedHref, parsedAs ? (0, _url.resolve)(pathname, parsedAs) : resolvedHref];
  }

  handleRef(ref) {
    if (this.p && IntersectionObserver && ref && ref.tagName) {
      this.cleanUpListeners();
      var isPrefetched = prefetched[this.getPaths().join( // Join on an invalid URI character
      '%')];

      if (!isPrefetched) {
        this.cleanUpListeners = listenToIntersections(ref, () => {
          this.prefetch();
        });
      }
    }
  } // The function is memoized so that no extra lifecycles are needed
  // as per https://reactjs.org/blog/2018/06/07/you-probably-dont-need-derived-state.html


  prefetch(options) {
    if (!this.p || true) return; // Prefetch the JSON page if asked (only in the client)

    var paths = this.getPaths(); // We need to handle a prefetch error here since we may be
    // loading with priority which can reject but we don't
    // want to force navigation since this is only a prefetch

    _router.default.prefetch(paths[
    /* href */
    0], paths[
    /* asPath */
    1], options).catch(err => {
      if (true) {
        // rethrow to show invalid URL errors
        throw err;
      }
    });

    prefetched[paths.join( // Join on an invalid URI character
    '%')] = true;
  }

  render() {
    var {
      children
    } = this.props;
    var {
      href,
      as
    } = this.formatUrls(this.props.href, this.props.as); // Deprecated. Warning shown by propType check. If the children provided is a string (<Link>example</Link>) we wrap it in an <a> tag

    if (typeof children === 'string') {
      children = /*#__PURE__*/_react.default.createElement("a", null, children);
    } // This will return the first child, if multiple are provided it will throw an error


    var child = _react.Children.only(children);

    var props = {
      ref: el => {
        this.handleRef(el);

        if (child && typeof child === 'object' && child.ref) {
          if (typeof child.ref === 'function') child.ref(el);else if (typeof child.ref === 'object') {
            child.ref.current = el;
          }
        }
      },
      onMouseEnter: e => {
        if (child.props && typeof child.props.onMouseEnter === 'function') {
          child.props.onMouseEnter(e);
        }

        this.prefetch({
          priority: true
        });
      },
      onClick: e => {
        if (child.props && typeof child.props.onClick === 'function') {
          child.props.onClick(e);
        }

        if (!e.defaultPrevented) {
          this.linkClicked(e);
        }
      }
    }; // If child is an <a> tag and doesn't have a href attribute, or if the 'passHref' property is
    // defined, we specify the current 'href', so that repetition is not needed by the user

    if (this.props.passHref || child.type === 'a' && !('href' in child.props)) {
      props.href = as || href;
    } // Add the ending slash to the paths. So, we can serve the
    // "<page>/index.html" directly.


    if (false) { var rewriteUrlForNextExport; }

    return _react.default.cloneElement(child, props);
  }

}

if (true) {
  var warn = (0, _utils.execOnce)(console.error); // This module gets removed by webpack.IgnorePlugin

  var PropTypes = __webpack_require__(/*! prop-types */ "prop-types");

  var exact = __webpack_require__(/*! prop-types-exact */ "prop-types-exact"); // @ts-ignore the property is supported, when declaring it on the class it outputs an extra bit of code which is not needed.


  Link.propTypes = exact({
    href: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired,
    as: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),
    prefetch: PropTypes.bool,
    replace: PropTypes.bool,
    shallow: PropTypes.bool,
    passHref: PropTypes.bool,
    scroll: PropTypes.bool,
    children: PropTypes.oneOfType([PropTypes.element, (props, propName) => {
      var value = props[propName];

      if (typeof value === 'string') {
        warn("Warning: You're using a string directly inside <Link>. This usage has been deprecated. Please add an <a> tag as child of <Link>");
      }

      return null;
    }]).isRequired
  });
}

var _default = Link;
exports.default = _default;

/***/ }),

/***/ "./node_modules/next/dist/client/router.js":
/*!*************************************************!*\
  !*** ./node_modules/next/dist/client/router.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireWildcard = __webpack_require__(/*! @babel/runtime/helpers/interopRequireWildcard */ "./node_modules/next/node_modules/@babel/runtime/helpers/interopRequireWildcard.js");

var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/next/node_modules/@babel/runtime/helpers/interopRequireDefault.js");

exports.__esModule = true;
exports.useRouter = useRouter;
exports.makePublicRouterInstance = makePublicRouterInstance;
exports.createRouter = exports.withRouter = exports.default = void 0;

var _react = _interopRequireDefault(__webpack_require__(/*! react */ "react"));

var _router2 = _interopRequireWildcard(__webpack_require__(/*! ../next-server/lib/router/router */ "./node_modules/next/dist/next-server/lib/router/router.js"));

exports.Router = _router2.default;
exports.NextRouter = _router2.NextRouter;

var _routerContext = __webpack_require__(/*! ../next-server/lib/router-context */ "../next-server/lib/router-context");

var _withRouter = _interopRequireDefault(__webpack_require__(/*! ./with-router */ "./node_modules/next/dist/client/with-router.js"));

exports.withRouter = _withRouter.default;
/* global window */

var singletonRouter = {
  router: null,
  // holds the actual router instance
  readyCallbacks: [],

  ready(cb) {
    if (this.router) return cb();

    if (false) {}
  }

}; // Create public properties and methods of the router in the singletonRouter

var urlPropertyFields = ['pathname', 'route', 'query', 'asPath', 'components', 'isFallback', 'basePath'];
var routerEvents = ['routeChangeStart', 'beforeHistoryChange', 'routeChangeComplete', 'routeChangeError', 'hashChangeStart', 'hashChangeComplete'];
var coreMethodFields = ['push', 'replace', 'reload', 'back', 'prefetch', 'beforePopState']; // Events is a static property on the router, the router doesn't have to be initialized to use it

Object.defineProperty(singletonRouter, 'events', {
  get() {
    return _router2.default.events;
  }

});
urlPropertyFields.forEach(field => {
  // Here we need to use Object.defineProperty because, we need to return
  // the property assigned to the actual router
  // The value might get changed as we change routes and this is the
  // proper way to access it
  Object.defineProperty(singletonRouter, field, {
    get() {
      var router = getRouter();
      return router[field];
    }

  });
});
coreMethodFields.forEach(field => {
  // We don't really know the types here, so we add them later instead
  ;

  singletonRouter[field] = function () {
    var router = getRouter();
    return router[field](...arguments);
  };
});
routerEvents.forEach(event => {
  singletonRouter.ready(() => {
    _router2.default.events.on(event, function () {
      var eventField = "on" + event.charAt(0).toUpperCase() + event.substring(1);
      var _singletonRouter = singletonRouter;

      if (_singletonRouter[eventField]) {
        try {
          _singletonRouter[eventField](...arguments);
        } catch (err) {
          // tslint:disable-next-line:no-console
          console.error("Error when running the Router event: " + eventField); // tslint:disable-next-line:no-console

          console.error(err.message + "\n" + err.stack);
        }
      }
    });
  });
});

function getRouter() {
  if (!singletonRouter.router) {
    var message = 'No router instance found.\n' + 'You should only use "next/router" inside the client side of your app.\n';
    throw new Error(message);
  }

  return singletonRouter.router;
} // Export the singletonRouter and this is the public API.


var _default = singletonRouter; // Reexport the withRoute HOC

exports.default = _default;

function useRouter() {
  return _react.default.useContext(_routerContext.RouterContext);
} // INTERNAL APIS
// -------------
// (do not use following exports inside the app)
// Create a router and assign it as the singleton instance.
// This is used in client side when we are initilizing the app.
// This should **not** use inside the server.


var createRouter = function createRouter() {
  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }

  singletonRouter.router = new _router2.default(...args);
  singletonRouter.readyCallbacks.forEach(cb => cb());
  singletonRouter.readyCallbacks = [];
  return singletonRouter.router;
}; // This function is used to create the `withRouter` router instance


exports.createRouter = createRouter;

function makePublicRouterInstance(router) {
  var _router = router;
  var instance = {};

  for (var property of urlPropertyFields) {
    if (typeof _router[property] === 'object') {
      instance[property] = Object.assign({}, _router[property]); // makes sure query is not stateful

      continue;
    }

    instance[property] = _router[property];
  } // Events is a static property on the router, the router doesn't have to be initialized to use it


  instance.events = _router2.default.events;
  coreMethodFields.forEach(field => {
    instance[field] = function () {
      return _router[field](...arguments);
    };
  });
  return instance;
}

/***/ }),

/***/ "./node_modules/next/dist/client/with-router.js":
/*!******************************************************!*\
  !*** ./node_modules/next/dist/client/with-router.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/next/node_modules/@babel/runtime/helpers/interopRequireDefault.js");

exports.__esModule = true;
exports.default = withRouter;

var _react = _interopRequireDefault(__webpack_require__(/*! react */ "react"));

var _router = __webpack_require__(/*! ./router */ "./node_modules/next/dist/client/router.js");

function withRouter(ComposedComponent) {
  function WithRouterWrapper(props) {
    return /*#__PURE__*/_react.default.createElement(ComposedComponent, Object.assign({
      router: (0, _router.useRouter)()
    }, props));
  }

  WithRouterWrapper.getInitialProps = ComposedComponent.getInitialProps // This is needed to allow checking for custom getInitialProps in _app
  ;
  WithRouterWrapper.origGetInitialProps = ComposedComponent.origGetInitialProps;

  if (true) {
    var name = ComposedComponent.displayName || ComposedComponent.name || 'Unknown';
    WithRouterWrapper.displayName = "withRouter(" + name + ")";
  }

  return WithRouterWrapper;
}

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/mitt.js":
/*!********************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/mitt.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/*
MIT License

Copyright (c) Jason Miller (https://jasonformat.com/)

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
*/

Object.defineProperty(exports, "__esModule", {
  value: true
});

function mitt() {
  const all = Object.create(null);
  return {
    on(type, handler) {
      ;
      (all[type] || (all[type] = [])).push(handler);
    },

    off(type, handler) {
      if (all[type]) {
        // tslint:disable-next-line:no-bitwise
        all[type].splice(all[type].indexOf(handler) >>> 0, 1);
      }
    },

    emit(type, ...evts) {
      // eslint-disable-next-line array-callback-return
      ;
      (all[type] || []).slice().map(handler => {
        handler(...evts);
      });
    }

  };
}

exports.default = mitt;

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/router/router.js":
/*!*****************************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/router/router.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var __importDefault = this && this.__importDefault || function (mod) {
  return mod && mod.__esModule ? mod : {
    "default": mod
  };
};

Object.defineProperty(exports, "__esModule", {
  value: true
});

const url_1 = __webpack_require__(/*! url */ "url");

const mitt_1 = __importDefault(__webpack_require__(/*! ../mitt */ "./node_modules/next/dist/next-server/lib/mitt.js"));

const utils_1 = __webpack_require__(/*! ../utils */ "./node_modules/next/dist/next-server/lib/utils.js");

const is_dynamic_1 = __webpack_require__(/*! ./utils/is-dynamic */ "./node_modules/next/dist/next-server/lib/router/utils/is-dynamic.js");

const route_matcher_1 = __webpack_require__(/*! ./utils/route-matcher */ "./node_modules/next/dist/next-server/lib/router/utils/route-matcher.js");

const route_regex_1 = __webpack_require__(/*! ./utils/route-regex */ "./node_modules/next/dist/next-server/lib/router/utils/route-regex.js");

const basePath =  false || '';

function addBasePath(path) {
  return path.indexOf(basePath) !== 0 ? basePath + path : path;
}

exports.addBasePath = addBasePath;

function delBasePath(path) {
  return path.indexOf(basePath) === 0 ? path.substr(basePath.length) || '/' : path;
}

exports.delBasePath = delBasePath;

function toRoute(path) {
  return path.replace(/\/$/, '') || '/';
}

const prepareRoute = path => toRoute(!path || path === '/' ? '/index' : path);

function fetchNextData(pathname, query, isServerRender, cb) {
  let attempts = isServerRender ? 3 : 1;

  function getResponse() {
    return fetch(utils_1.formatWithValidation({
      pathname: addBasePath( // @ts-ignore __NEXT_DATA__
      `/_next/data/${__NEXT_DATA__.buildId}${delBasePath(pathname)}.json`),
      query
    }), {
      // Cookies are required to be present for Next.js' SSG "Preview Mode".
      // Cookies may also be required for `getServerSideProps`.
      //
      // > `fetch` won’t send cookies, unless you set the credentials init
      // > option.
      // https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch
      //
      // > For maximum browser compatibility when it comes to sending &
      // > receiving cookies, always supply the `credentials: 'same-origin'`
      // > option instead of relying on the default.
      // https://github.com/github/fetch#caveats
      credentials: 'same-origin'
    }).then(res => {
      if (!res.ok) {
        if (--attempts > 0 && res.status >= 500) {
          return getResponse();
        }

        throw new Error(`Failed to load static props`);
      }

      return res.json();
    });
  }

  return getResponse().then(data => {
    return cb ? cb(data) : data;
  }).catch(err => {
    // We should only trigger a server-side transition if this was caused
    // on a client-side transition. Otherwise, we'd get into an infinite
    // loop.
    if (!isServerRender) {
      ;
      err.code = 'PAGE_LOAD_ERROR';
    }

    throw err;
  });
}

class Router {
  constructor(pathname, query, as, {
    initialProps,
    pageLoader,
    App,
    wrapApp,
    Component,
    err,
    subscription,
    isFallback
  }) {
    // Static Data Cache
    this.sdc = {};

    this.onPopState = e => {
      if (!e.state) {
        // We get state as undefined for two reasons.
        //  1. With older safari (< 8) and older chrome (< 34)
        //  2. When the URL changed with #
        //
        // In the both cases, we don't need to proceed and change the route.
        // (as it's already changed)
        // But we can simply replace the state with the new changes.
        // Actually, for (1) we don't need to nothing. But it's hard to detect that event.
        // So, doing the following for (1) does no harm.
        const {
          pathname,
          query
        } = this;
        this.changeState('replaceState', utils_1.formatWithValidation({
          pathname,
          query
        }), utils_1.getURL());
        return;
      } // Make sure we don't re-render on initial load,
      // can be caused by navigating back from an external site


      if (e.state && this.isSsr && e.state.as === this.asPath && url_1.parse(e.state.url).pathname === this.pathname) {
        return;
      } // If the downstream application returns falsy, return.
      // They will then be responsible for handling the event.


      if (this._bps && !this._bps(e.state)) {
        return;
      }

      const {
        url,
        as,
        options
      } = e.state;

      if (true) {
        if (typeof url === 'undefined' || typeof as === 'undefined') {
          console.warn('`popstate` event triggered but `event.state` did not have `url` or `as` https://err.sh/zeit/next.js/popstate-state-empty');
        }
      }

      this.replace(url, as, options);
    };

    this._getStaticData = asPath => {
      const pathname = prepareRoute(url_1.parse(asPath).pathname);
      return  false ? undefined : fetchNextData(pathname, null, this.isSsr, data => this.sdc[pathname] = data);
    };

    this._getServerData = asPath => {
      let {
        pathname,
        query
      } = url_1.parse(asPath, true);
      pathname = prepareRoute(pathname);
      return fetchNextData(pathname, query, this.isSsr);
    }; // represents the current component key


    this.route = toRoute(pathname); // set up the component cache (by route keys)

    this.components = {}; // We should not keep the cache, if there's an error
    // Otherwise, this cause issues when when going back and
    // come again to the errored page.

    if (pathname !== '/_error') {
      this.components[this.route] = {
        Component,
        props: initialProps,
        err,
        __N_SSG: initialProps && initialProps.__N_SSG,
        __N_SSP: initialProps && initialProps.__N_SSP
      };
    }

    this.components['/_app'] = {
      Component: App
    }; // Backwards compat for Router.router.events
    // TODO: Should be remove the following major version as it was never documented

    this.events = Router.events;
    this.pageLoader = pageLoader;
    this.pathname = pathname;
    this.query = query; // if auto prerendered and dynamic route wait to update asPath
    // until after mount to prevent hydration mismatch

    this.asPath = // @ts-ignore this is temporarily global (attached to window)
    is_dynamic_1.isDynamicRoute(pathname) && __NEXT_DATA__.autoExport ? pathname : as;
    this.basePath = basePath;
    this.sub = subscription;
    this.clc = null;
    this._wrapApp = wrapApp; // make sure to ignore extra popState in safari on navigating
    // back from external site

    this.isSsr = true;
    this.isFallback = isFallback;

    if (false) {}
  } // @deprecated backwards compatibility even though it's a private method.


  static _rewriteUrlForNextExport(url) {
    if (false) {} else {
      return url;
    }
  }

  update(route, mod) {
    const Component = mod.default || mod;
    const data = this.components[route];

    if (!data) {
      throw new Error(`Cannot update unavailable route: ${route}`);
    }

    const newData = Object.assign(Object.assign({}, data), {
      Component,
      __N_SSG: mod.__N_SSG,
      __N_SSP: mod.__N_SSP
    });
    this.components[route] = newData; // pages/_app.js updated

    if (route === '/_app') {
      this.notify(this.components[this.route]);
      return;
    }

    if (route === this.route) {
      this.notify(newData);
    }
  }

  reload() {
    window.location.reload();
  }
  /**
   * Go back in history
   */


  back() {
    window.history.back();
  }
  /**
   * Performs a `pushState` with arguments
   * @param url of the route
   * @param as masks `url` for the browser
   * @param options object you can define `shallow` and other options
   */


  push(url, as = url, options = {}) {
    return this.change('pushState', url, as, options);
  }
  /**
   * Performs a `replaceState` with arguments
   * @param url of the route
   * @param as masks `url` for the browser
   * @param options object you can define `shallow` and other options
   */


  replace(url, as = url, options = {}) {
    return this.change('replaceState', url, as, options);
  }

  change(method, _url, _as, options) {
    return new Promise((resolve, reject) => {
      if (!options._h) {
        this.isSsr = false;
      } // marking route changes as a navigation start entry


      if (utils_1.ST) {
        performance.mark('routeChange');
      } // If url and as provided as an object representation,
      // we'll format them into the string version here.


      let url = typeof _url === 'object' ? utils_1.formatWithValidation(_url) : _url;
      let as = typeof _as === 'object' ? utils_1.formatWithValidation(_as) : _as;
      url = addBasePath(url);
      as = addBasePath(as); // Add the ending slash to the paths. So, we can serve the
      // "<page>/index.html" directly for the SSR page.

      if (false) {}

      this.abortComponentLoad(as); // If the url change is only related to a hash change
      // We should not proceed. We should only change the state.
      // WARNING: `_h` is an internal option for handing Next.js client-side
      // hydration. Your app should _never_ use this property. It may change at
      // any time without notice.

      if (!options._h && this.onlyAHashChange(as)) {
        this.asPath = as;
        Router.events.emit('hashChangeStart', as);
        this.changeState(method, url, as, options);
        this.scrollToHash(as);
        Router.events.emit('hashChangeComplete', as);
        return resolve(true);
      }

      const {
        pathname,
        query,
        protocol
      } = url_1.parse(url, true);

      if (!pathname || protocol) {
        if (true) {
          throw new Error(`Invalid href passed to router: ${url} https://err.sh/zeit/next.js/invalid-href-passed`);
        }

        return resolve(false);
      } // If asked to change the current URL we should reload the current page
      // (not location.reload() but reload getInitialProps and other Next.js stuffs)
      // We also need to set the method = replaceState always
      // as this should not go into the history (That's how browsers work)
      // We should compare the new asPath to the current asPath, not the url


      if (!this.urlIsNew(as)) {
        method = 'replaceState';
      }

      const route = toRoute(pathname);
      const {
        shallow = false
      } = options;

      if (is_dynamic_1.isDynamicRoute(route)) {
        const {
          pathname: asPathname
        } = url_1.parse(as);
        const routeRegex = route_regex_1.getRouteRegex(route);
        const routeMatch = route_matcher_1.getRouteMatcher(routeRegex)(asPathname);

        if (!routeMatch) {
          const missingParams = Object.keys(routeRegex.groups).filter(param => !query[param]);

          if (missingParams.length > 0) {
            if (true) {
              console.warn(`Mismatching \`as\` and \`href\` failed to manually provide ` + `the params: ${missingParams.join(', ')} in the \`href\`'s \`query\``);
            }

            return reject(new Error(`The provided \`as\` value (${asPathname}) is incompatible with the \`href\` value (${route}). ` + `Read more: https://err.sh/zeit/next.js/incompatible-href-as`));
          }
        } else {
          // Merge params into `query`, overwriting any specified in search
          Object.assign(query, routeMatch);
        }
      }

      Router.events.emit('routeChangeStart', as); // If shallow is true and the route exists in the router cache we reuse the previous result

      this.getRouteInfo(route, pathname, query, as, shallow).then(routeInfo => {
        const {
          error
        } = routeInfo;

        if (error && error.cancelled) {
          return resolve(false);
        }

        Router.events.emit('beforeHistoryChange', as);
        this.changeState(method, url, as, options);

        if (true) {
          const appComp = this.components['/_app'].Component;
          window.next.isPrerendered = appComp.getInitialProps === appComp.origGetInitialProps && !routeInfo.Component.getInitialProps;
        }

        this.set(route, pathname, query, as, routeInfo);

        if (error) {
          Router.events.emit('routeChangeError', error, as);
          throw error;
        }

        Router.events.emit('routeChangeComplete', as);
        return resolve(true);
      }, reject);
    });
  }

  changeState(method, url, as, options = {}) {
    if (true) {
      if (typeof window.history === 'undefined') {
        console.error(`Warning: window.history is not available.`);
        return;
      }

      if (typeof window.history[method] === 'undefined') {
        console.error(`Warning: window.history.${method} is not available`);
        return;
      }
    }

    if (method !== 'pushState' || utils_1.getURL() !== as) {
      window.history[method]({
        url,
        as,
        options
      }, // Most browsers currently ignores this parameter, although they may use it in the future.
      // Passing the empty string here should be safe against future changes to the method.
      // https://developer.mozilla.org/en-US/docs/Web/API/History/replaceState
      '', as);
    }
  }

  getRouteInfo(route, pathname, query, as, shallow = false) {
    const cachedRouteInfo = this.components[route]; // If there is a shallow route transition possible
    // If the route is already rendered on the screen.

    if (shallow && cachedRouteInfo && this.route === route) {
      return Promise.resolve(cachedRouteInfo);
    }

    const handleError = (err, loadErrorFail) => {
      return new Promise(resolve => {
        if (err.code === 'PAGE_LOAD_ERROR' || loadErrorFail) {
          // If we can't load the page it could be one of following reasons
          //  1. Page doesn't exists
          //  2. Page does exist in a different zone
          //  3. Internal error while loading the page
          // So, doing a hard reload is the proper way to deal with this.
          window.location.href = as; // Changing the URL doesn't block executing the current code path.
          // So, we need to mark it as a cancelled error and stop the routing logic.

          err.cancelled = true; // @ts-ignore TODO: fix the control flow here

          return resolve({
            error: err
          });
        }

        if (err.cancelled) {
          // @ts-ignore TODO: fix the control flow here
          return resolve({
            error: err
          });
        }

        resolve(this.fetchComponent('/_error').then(res => {
          const {
            page: Component
          } = res;
          const routeInfo = {
            Component,
            err
          };
          return new Promise(resolve => {
            this.getInitialProps(Component, {
              err,
              pathname,
              query
            }).then(props => {
              routeInfo.props = props;
              routeInfo.error = err;
              resolve(routeInfo);
            }, gipErr => {
              console.error('Error in error page `getInitialProps`: ', gipErr);
              routeInfo.error = err;
              routeInfo.props = {};
              resolve(routeInfo);
            });
          });
        }).catch(err => handleError(err, true)));
      });
    };

    return new Promise((resolve, reject) => {
      if (cachedRouteInfo) {
        return resolve(cachedRouteInfo);
      }

      this.fetchComponent(route).then(res => resolve({
        Component: res.page,
        __N_SSG: res.mod.__N_SSG,
        __N_SSP: res.mod.__N_SSP
      }), reject);
    }).then(routeInfo => {
      const {
        Component,
        __N_SSG,
        __N_SSP
      } = routeInfo;

      if (true) {
        const {
          isValidElementType
        } = __webpack_require__(/*! react-is */ "react-is");

        if (!isValidElementType(Component)) {
          throw new Error(`The default export is not a React Component in page: "${pathname}"`);
        }
      }

      return this._getData(() => __N_SSG ? this._getStaticData(as) : __N_SSP ? this._getServerData(as) : this.getInitialProps(Component, // we provide AppTree later so this needs to be `any`
      {
        pathname,
        query,
        asPath: as
      })).then(props => {
        routeInfo.props = props;
        this.components[route] = routeInfo;
        return routeInfo;
      });
    }).catch(handleError);
  }

  set(route, pathname, query, as, data) {
    this.isFallback = false;
    this.route = route;
    this.pathname = pathname;
    this.query = query;
    this.asPath = as;
    this.notify(data);
  }
  /**
   * Callback to execute before replacing router state
   * @param cb callback to be executed
   */


  beforePopState(cb) {
    this._bps = cb;
  }

  onlyAHashChange(as) {
    if (!this.asPath) return false;
    const [oldUrlNoHash, oldHash] = this.asPath.split('#');
    const [newUrlNoHash, newHash] = as.split('#'); // Makes sure we scroll to the provided hash if the url/hash are the same

    if (newHash && oldUrlNoHash === newUrlNoHash && oldHash === newHash) {
      return true;
    } // If the urls are change, there's more than a hash change


    if (oldUrlNoHash !== newUrlNoHash) {
      return false;
    } // If the hash has changed, then it's a hash only change.
    // This check is necessary to handle both the enter and
    // leave hash === '' cases. The identity case falls through
    // and is treated as a next reload.


    return oldHash !== newHash;
  }

  scrollToHash(as) {
    const [, hash] = as.split('#'); // Scroll to top if the hash is just `#` with no value

    if (hash === '') {
      window.scrollTo(0, 0);
      return;
    } // First we check if the element by id is found


    const idEl = document.getElementById(hash);

    if (idEl) {
      idEl.scrollIntoView();
      return;
    } // If there's no element with the id, we check the `name` property
    // To mirror browsers


    const nameEl = document.getElementsByName(hash)[0];

    if (nameEl) {
      nameEl.scrollIntoView();
    }
  }

  urlIsNew(asPath) {
    return this.asPath !== asPath;
  }
  /**
   * Prefetch page code, you may wait for the data during page rendering.
   * This feature only works in production!
   * @param url the href of prefetched page
   * @param asPath the as path of the prefetched page
   */


  prefetch(url, asPath = url, options = {}) {
    return new Promise((resolve, reject) => {
      const {
        pathname,
        protocol
      } = url_1.parse(url);

      if (!pathname || protocol) {
        if (true) {
          throw new Error(`Invalid href passed to router: ${url} https://err.sh/zeit/next.js/invalid-href-passed`);
        }

        return;
      } // Prefetch is not supported in development mode because it would trigger on-demand-entries


      if (true) {
        return;
      }

      const route = delBasePath(toRoute(pathname));
      Promise.all([this.pageLoader.prefetchData(url, delBasePath(asPath)), this.pageLoader[options.priority ? 'loadPage' : 'prefetch'](route)]).then(() => resolve(), reject);
    });
  }

  async fetchComponent(route) {
    let cancelled = false;

    const cancel = this.clc = () => {
      cancelled = true;
    };

    route = delBasePath(route);
    const componentResult = await this.pageLoader.loadPage(route);

    if (cancelled) {
      const error = new Error(`Abort fetching component for route: "${route}"`);
      error.cancelled = true;
      throw error;
    }

    if (cancel === this.clc) {
      this.clc = null;
    }

    return componentResult;
  }

  _getData(fn) {
    let cancelled = false;

    const cancel = () => {
      cancelled = true;
    };

    this.clc = cancel;
    return fn().then(data => {
      if (cancel === this.clc) {
        this.clc = null;
      }

      if (cancelled) {
        const err = new Error('Loading initial props cancelled');
        err.cancelled = true;
        throw err;
      }

      return data;
    });
  }

  getInitialProps(Component, ctx) {
    const {
      Component: App
    } = this.components['/_app'];

    const AppTree = this._wrapApp(App);

    ctx.AppTree = AppTree;
    return utils_1.loadGetInitialProps(App, {
      AppTree,
      Component,
      router: this,
      ctx
    });
  }

  abortComponentLoad(as) {
    if (this.clc) {
      const e = new Error('Route Cancelled');
      e.cancelled = true;
      Router.events.emit('routeChangeError', e, as);
      this.clc();
      this.clc = null;
    }
  }

  notify(data) {
    this.sub(data, this.components['/_app'].Component);
  }

}

exports.default = Router;
Router.events = mitt_1.default();

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/router/utils/is-dynamic.js":
/*!***************************************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/router/utils/is-dynamic.js ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
}); // Identify /[param]/ in route string

const TEST_ROUTE = /\/\[[^/]+?\](?=\/|$)/;

function isDynamicRoute(route) {
  return TEST_ROUTE.test(route);
}

exports.isDynamicRoute = isDynamicRoute;

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/router/utils/route-matcher.js":
/*!******************************************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/router/utils/route-matcher.js ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

function getRouteMatcher(routeRegex) {
  const {
    re,
    groups
  } = routeRegex;
  return pathname => {
    const routeMatch = re.exec(pathname);

    if (!routeMatch) {
      return false;
    }

    const decode = param => {
      try {
        return decodeURIComponent(param);
      } catch (_) {
        const err = new Error('failed to decode param');
        err.code = 'DECODE_FAILED';
        throw err;
      }
    };

    const params = {};
    Object.keys(groups).forEach(slugName => {
      const g = groups[slugName];
      const m = routeMatch[g.pos];

      if (m !== undefined) {
        params[slugName] = ~m.indexOf('/') ? m.split('/').map(entry => decode(entry)) : g.repeat ? [decode(m)] : decode(m);
      }
    });
    return params;
  };
}

exports.getRouteMatcher = getRouteMatcher;

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/router/utils/route-regex.js":
/*!****************************************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/router/utils/route-regex.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
}); // this isn't importing the escape-string-regex module
// to reduce bytes

function escapeRegex(str) {
  return str.replace(/[|\\{}()[\]^$+*?.-]/g, '\\$&');
}

function getRouteRegex(normalizedRoute) {
  // Escape all characters that could be considered RegEx
  const escapedRoute = escapeRegex(normalizedRoute.replace(/\/$/, '') || '/');
  const groups = {};
  let groupIndex = 1;
  const parameterizedRoute = escapedRoute.replace(/\/\\\[([^/]+?)\\\](?=\/|$)/g, (_, $1) => {
    const isCatchAll = /^(\\\.){3}/.test($1);
    groups[$1 // Un-escape key
    .replace(/\\([|\\{}()[\]^$+*?.-])/g, '$1').replace(/^\.{3}/, '') // eslint-disable-next-line no-sequences
    ] = {
      pos: groupIndex++,
      repeat: isCatchAll
    };
    return isCatchAll ? '/(.+?)' : '/([^/]+?)';
  });
  let namedParameterizedRoute; // dead code eliminate for browser since it's only needed
  // while generating routes-manifest

  if (true) {
    namedParameterizedRoute = escapedRoute.replace(/\/\\\[([^/]+?)\\\](?=\/|$)/g, (_, $1) => {
      const isCatchAll = /^(\\\.){3}/.test($1);
      const key = $1 // Un-escape key
      .replace(/\\([|\\{}()[\]^$+*?.-])/g, '$1').replace(/^\.{3}/, '');
      return isCatchAll ? `/(?<${escapeRegex(key)}>.+?)` : `/(?<${escapeRegex(key)}>[^/]+?)`;
    });
  }

  return Object.assign({
    re: new RegExp('^' + parameterizedRoute + '(?:/)?$', 'i'),
    groups
  }, namedParameterizedRoute ? {
    namedRegex: `^${namedParameterizedRoute}(?:/)?$`
  } : {});
}

exports.getRouteRegex = getRouteRegex;

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/utils.js":
/*!*********************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/utils.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

const url_1 = __webpack_require__(/*! url */ "url");
/**
 * Utils
 */


function execOnce(fn) {
  let used = false;
  let result;
  return (...args) => {
    if (!used) {
      used = true;
      result = fn(...args);
    }

    return result;
  };
}

exports.execOnce = execOnce;

function getLocationOrigin() {
  const {
    protocol,
    hostname,
    port
  } = window.location;
  return `${protocol}//${hostname}${port ? ':' + port : ''}`;
}

exports.getLocationOrigin = getLocationOrigin;

function getURL() {
  const {
    href
  } = window.location;
  const origin = getLocationOrigin();
  return href.substring(origin.length);
}

exports.getURL = getURL;

function getDisplayName(Component) {
  return typeof Component === 'string' ? Component : Component.displayName || Component.name || 'Unknown';
}

exports.getDisplayName = getDisplayName;

function isResSent(res) {
  return res.finished || res.headersSent;
}

exports.isResSent = isResSent;

async function loadGetInitialProps(App, ctx) {
  var _a;

  if (true) {
    if ((_a = App.prototype) === null || _a === void 0 ? void 0 : _a.getInitialProps) {
      const message = `"${getDisplayName(App)}.getInitialProps()" is defined as an instance method - visit https://err.sh/zeit/next.js/get-initial-props-as-an-instance-method for more information.`;
      throw new Error(message);
    }
  } // when called from _app `ctx` is nested in `ctx`


  const res = ctx.res || ctx.ctx && ctx.ctx.res;

  if (!App.getInitialProps) {
    if (ctx.ctx && ctx.Component) {
      // @ts-ignore pageProps default
      return {
        pageProps: await loadGetInitialProps(ctx.Component, ctx.ctx)
      };
    }

    return {};
  }

  const props = await App.getInitialProps(ctx);

  if (res && isResSent(res)) {
    return props;
  }

  if (!props) {
    const message = `"${getDisplayName(App)}.getInitialProps()" should resolve to an object. But found "${props}" instead.`;
    throw new Error(message);
  }

  if (true) {
    if (Object.keys(props).length === 0 && !ctx.ctx) {
      console.warn(`${getDisplayName(App)} returned an empty object from \`getInitialProps\`. This de-optimizes and prevents automatic static optimization. https://err.sh/zeit/next.js/empty-object-getInitialProps`);
    }
  }

  return props;
}

exports.loadGetInitialProps = loadGetInitialProps;
exports.urlObjectKeys = ['auth', 'hash', 'host', 'hostname', 'href', 'path', 'pathname', 'port', 'protocol', 'query', 'search', 'slashes'];

function formatWithValidation(url, options) {
  if (true) {
    if (url !== null && typeof url === 'object') {
      Object.keys(url).forEach(key => {
        if (exports.urlObjectKeys.indexOf(key) === -1) {
          console.warn(`Unknown key passed via urlObject into url.format: ${key}`);
        }
      });
    }
  }

  return url_1.format(url, options);
}

exports.formatWithValidation = formatWithValidation;
exports.SP = typeof performance !== 'undefined';
exports.ST = exports.SP && typeof performance.mark === 'function' && typeof performance.measure === 'function';

/***/ }),

/***/ "./node_modules/next/link.js":
/*!***********************************!*\
  !*** ./node_modules/next/link.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! ./dist/client/link */ "./node_modules/next/dist/client/link.js")


/***/ }),

/***/ "./node_modules/next/node_modules/@babel/runtime/helpers/interopRequireDefault.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/next/node_modules/@babel/runtime/helpers/interopRequireDefault.js ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

module.exports = _interopRequireDefault;

/***/ }),

/***/ "./node_modules/next/node_modules/@babel/runtime/helpers/interopRequireWildcard.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/next/node_modules/@babel/runtime/helpers/interopRequireWildcard.js ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _typeof = __webpack_require__(/*! ../helpers/typeof */ "./node_modules/next/node_modules/@babel/runtime/helpers/typeof.js");

function _getRequireWildcardCache() {
  if (typeof WeakMap !== "function") return null;
  var cache = new WeakMap();

  _getRequireWildcardCache = function _getRequireWildcardCache() {
    return cache;
  };

  return cache;
}

function _interopRequireWildcard(obj) {
  if (obj && obj.__esModule) {
    return obj;
  }

  if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") {
    return {
      "default": obj
    };
  }

  var cache = _getRequireWildcardCache();

  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }

  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;

  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;

      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }

  newObj["default"] = obj;

  if (cache) {
    cache.set(obj, newObj);
  }

  return newObj;
}

module.exports = _interopRequireWildcard;

/***/ }),

/***/ "./node_modules/next/node_modules/@babel/runtime/helpers/typeof.js":
/*!*************************************************************************!*\
  !*** ./node_modules/next/node_modules/@babel/runtime/helpers/typeof.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _typeof(obj) {
  "@babel/helpers - typeof";

  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    module.exports = _typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    module.exports = _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return _typeof(obj);
}

module.exports = _typeof;

/***/ }),

/***/ "./pages/profile/[id]/index.jsx":
/*!**************************************!*\
  !*** ./pages/profile/[id]/index.jsx ***!
  \**************************************/
/*! exports provided: getServerSideProps, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getServerSideProps", function() { return getServerSideProps; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var next_dist_client_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/client/router */ "./node_modules/next/dist/client/router.js");
/* harmony import */ var next_dist_client_router__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_client_router__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-redux */ "react-redux");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _common_function__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../common-function */ "./common-function.js");
/* harmony import */ var _components_general_ReduxPersistWrapper__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../components/general/ReduxPersistWrapper */ "./components/general/ReduxPersistWrapper.jsx");
/* harmony import */ var _components_profile_page_ProfileHomePage__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../components/profile/page/ProfileHomePage */ "./components/profile/page/ProfileHomePage.jsx");
/* harmony import */ var _feathers__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../feathers */ "./feathers.js");

var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }








const searchBarRef = react__WEBPACK_IMPORTED_MODULE_0___default.a.createRef();

const Index = props => {
  return __jsx(_components_general_ReduxPersistWrapper__WEBPACK_IMPORTED_MODULE_5__["default"], {
    cookie: props.cookie
  }, props.app.initedRedux ? __jsx(_components_profile_page_ProfileHomePage__WEBPACK_IMPORTED_MODULE_6__["default"], null) : null);
};

async function getServerSideProps(context) {
  let id = lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(context, `req.params.id`) || lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(context, `req.query.id`);

  let profile = {};
  let seoData = {};

  if (id) {
    profile = await _feathers__WEBPACK_IMPORTED_MODULE_7__["default"].service('users').find({
      query: {
        userurlId: id
      }
    });
    profile = lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(profile, 'data[0]') || {};
  }

  if (lodash__WEBPACK_IMPORTED_MODULE_1___default.a.isPlainObject(profile) && !lodash__WEBPACK_IMPORTED_MODULE_1___default.a.isEmpty(profile)) {
    seoData = Object(_common_function__WEBPACK_IMPORTED_MODULE_4__["getProfileSeoData"])(profile);
  }

  return {
    props: {
      cookie: lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(context, ['req', 'headers', 'cookie']) || null,
      seoData: _objectSpread({}, seoData)
    }
  };
}

const mapStateToProps = state => ({
  app: state.app,
  user: state.user,
  productsList: state.productsList
});

const mapDispatchToProps = {};
/* harmony default export */ __webpack_exports__["default"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_3__["connect"])(mapStateToProps, mapDispatchToProps)(Object(next_dist_client_router__WEBPACK_IMPORTED_MODULE_2__["withRouter"])(Index)));

/***/ }),

/***/ "./params/bodyTypeList.js":
/*!********************************!*\
  !*** ./params/bodyTypeList.js ***!
  \********************************/
/*! exports provided: bodyTypeList, getBodyTypeIcon, getBodyType, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bodyTypeList", function() { return bodyTypeList; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getBodyTypeIcon", function() { return getBodyTypeIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getBodyType", function() { return getBodyType; });
const bodyTypeList = [{
  'icon': "/assets/car-type-ori-ver2/coach.png",
  'value': 'Coach'
}, {
  'icon': "/assets/car-type-ori-ver2/compact.png",
  'value': 'Compact'
}, {
  'icon': "/assets/car-type-ori-ver2/convertible.png",
  'value': 'Convertible'
}, {
  'icon': "/assets/car-type-ori-ver2/coupe.png",
  'value': 'Coupe'
}, {
  'icon': "/assets/car-type-ori-ver2/crossover.png",
  'value': 'Crossover'
}, {
  'icon': "/assets/car-type-ori-ver2/hatchback.png",
  'value': 'Hatchback'
}, {
  'icon': "/assets/car-type-ori-ver2/mpv.png",
  'value': 'MPV'
}, {
  'icon': "/assets/car-type-ori-ver2/pickup-truck.png",
  'value': 'Pickuptruck'
}, {
  'icon': "/assets/car-type-ori-ver2/sedan.png",
  'value': 'Sedan'
}, {
  'icon': "/assets/car-type-ori-ver2/sport-car.png",
  'value': 'Sportcar'
}, {
  'icon': "/assets/car-type-ori-ver2/suv.png",
  'value': 'SUV'
}, {
  'icon': "/assets/car-type-ori-ver2/truck.png",
  'value': 'Truck'
}, {
  'icon': "/assets/car-type-ori-ver2/van.png",
  'value': 'Van'
}, {
  'icon': "/assets/car-type-ori-ver2/wagon.png",
  'value': 'Wagon'
}, {
  'icon': "/assets/car-type-ori-ver2/sport-car.png",
  'value': 'GT'
}, {
  'icon': "/assets/car-type-ori-ver2/truck.png",
  'value': 'Lorry'
}];
function getBodyTypeIcon(bodyType) {
  if (bodyType) {
    let selectedBodyType = bodyTypeList.find(function (item) {
      return item.value.toLowerCase() === bodyType.toLowerCase();
    });

    if (selectedBodyType) {
      return selectedBodyType.icon;
    } else {
      return null;
    }
  } else {
    return null;
  }
}
function getBodyType(bodyType) {
  if (bodyType) {
    let selectedBodyType = bodyTypeList.find(function (item) {
      return item.value.toLowerCase() === bodyType.toLowerCase();
    });

    if (selectedBodyType) {
      return selectedBodyType;
    } else {
      return {
        value: null,
        icon: null
      };
    }
  } else {
    return {
      value: null,
      icon: null
    };
  }
}
/* harmony default export */ __webpack_exports__["default"] = ({
  bodyTypeList
});

/***/ }),

/***/ "./params/carBrandsList.js":
/*!*********************************!*\
  !*** ./params/carBrandsList.js ***!
  \*********************************/
/*! exports provided: carBrandsList, getCarBrandsIcon, getCarBrand, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "carBrandsList", function() { return carBrandsList; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getCarBrandsIcon", function() { return getCarBrandsIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getCarBrand", function() { return getCarBrand; });
const alfaRomeoImg = "/assets/brands/alfa-romeo.png";
const asiaImg = "/assets/brands/asia.png";
const astonMartinImg = "/assets/brands/aston-martin.png";
const audiImg = "/assets/brands/audi.png";
const austinImg = "/assets/brands/austin.png";
const bacImg = "/assets/brands/bac.png";
const bentleyImg = "/assets/brands/bentley.png";
const bmwAlpinaImg = "/assets/brands/bmw-alpina.png";
const bmwImg = "/assets/brands/bmw.png";
const buforiImg = "/assets/brands/bufori.png";
const cadillacImg = "/assets/brands/cadillac.png";
const camImg = "/assets/brands/cam.png";
const chanaImg = "/assets/brands/chana.png";
const changanImg = "/assets/brands/changan.png";
const cheryImg = "/assets/brands/chery.png";
const chevroletImg = "/assets/brands/chevrolet.png";
const chryslerImg = "/assets/brands/chrysler.png";
const citroenImg = "/assets/brands/citroen.png";
const daihatsuImg = "/assets/brands/daihatsu.png";
const datsunImg = "/assets/brands/datsun.png";
const dodgeImg = "/assets/brands/dodge.png";
const dongfengImg = "/assets/brands/dongfeng.png";
const ferrariImg = "/assets/brands/ferrari.png";
const fiatImg = "/assets/brands/fiat.png";
const fodayImg = "/assets/brands/foday.png";
const fordImg = "/assets/brands/ford.png";
const fotonImg = "/assets/brands/foton.png";
const goldenDragonImg = "/assets/brands/golden-dragon.png";
const greatWallImg = "/assets/brands/great-wall.png";
const havalImg = "/assets/brands/haval.png";
const hicomImg = "/assets/brands/hicom.png";
const hinoImg = "/assets/brands/hino.png";
const hondaImg = "/assets/brands/honda.png";
const hummerImg = "/assets/brands/hummer.png";
const hyundaiImg = "/assets/brands/hyundai.png";
const impulImg = "/assets/brands/impul.png";
const infinitiImg = "/assets/brands/infiniti.png";
const inokomImg = "/assets/brands/inokom.png";
const isuzuImg = "/assets/brands/isuzu.png";
const jaguarImg = "/assets/brands/jaguar.png";
const jbcImg = "/assets/brands/jbc.png";
const jeepImg = "/assets/brands/jeep.png";
const jmcImg = "/assets/brands/jmc.png";
const joylongImg = "/assets/brands/joylong.png";
const kawasakiImg = "/assets/brands/kawasaki.png";
const kiaImg = "/assets/brands/kia.png";
const kingLongImg = "/assets/brands/king-long.png";
const lamborghiniImg = "/assets/brands/lamborghini.png";
const landRoverImg = "/assets/brands/land-rover.png";
const lexusImg = "/assets/brands/lexus.png";
const lmgImg = "/assets/brands/lmg.png";
const lotusImg = "/assets/brands/lotus.png";
const mahindraImg = "/assets/brands/mahindra.png";
const maseratiImg = "/assets/brands/maserati.png";
const maxusImg = "/assets/brands/maxus.png";
const mazdaImg = "/assets/brands/mazda.png";
const mclarenImg = "/assets/brands/mclaren.png";
const mercedesBenzImg = "/assets/brands/mercedes-benz.png";
const mercedesMaybachImg = "/assets/brands/mercedes-maybach.png";
const mgImg = "/assets/brands/mg.png";
const miniImg = "/assets/brands/mini.png";
const mitsubishiImg = "/assets/brands/mitsubishi.png";
const mitsuokaImg = "/assets/brands/mitsuoka.png";
const nazaImg = "/assets/brands/naza.png";
const nissanImg = "/assets/brands/nissan.png";
const opelImg = "/assets/brands/opel.png";
const peroduaImg = "/assets/brands/perodua.png";
const peugeotImg = "/assets/brands/peugeot.png";
const porscheImg = "/assets/brands/porsche.png";
const protonImg = "/assets/brands/proton.png";
const ramImg = "/assets/brands/ram.png";
const renaultImg = "/assets/brands/renault.png";
const rollsRoyceImg = "/assets/brands/rolls-royce.png";
const roverImg = "/assets/brands/rover.png";
const saabImg = "/assets/brands/saab.png";
const smartImg = "/assets/brands/smart.png";
const ssangYongImg = "/assets/brands/ssang-yong.png";
const subaruImg = "/assets/brands/subaru.png";
const suzukiImg = "/assets/brands/suzuki.png";
const tataImg = "/assets/brands/tata.png";
const toyotaImg = "/assets/brands/toyota.png";
const tvrImg = "/assets/brands/tvr.png";
const volkswagenImg = "/assets/brands/volkswagen.png";
const volvoImg = "/assets/brands/volvo.png";
const waldImg = "/assets/brands/wald.png";
const yamahaImg = "/assets/brands/yamaha.png";
const znaImg = "/assets/brands/zna.png";
const carBrandsList = [{
  'icon': alfaRomeoImg,
  'value': 'Alfa Romeo'
}, {
  'icon': asiaImg,
  'value': 'Asia'
}, {
  'icon': astonMartinImg,
  'value': 'Aston Martin'
}, {
  'icon': audiImg,
  'value': 'Audi'
}, {
  'icon': austinImg,
  'value': 'Austin'
}, {
  'icon': bacImg,
  'value': 'Bac'
}, {
  'icon': bentleyImg,
  'value': 'Bentley'
}, {
  'icon': bmwAlpinaImg,
  'value': 'BMW Alpina'
}, {
  'icon': bmwImg,
  'value': 'BMW'
}, {
  'icon': buforiImg,
  'value': 'Bufori'
}, {
  'icon': cadillacImg,
  'value': 'Cadillac'
}, {
  'icon': camImg,
  'value': 'Cam'
}, {
  'icon': chanaImg,
  'value': 'Chana'
}, {
  'icon': changanImg,
  'value': 'Changan'
}, {
  'icon': cheryImg,
  'value': 'Chery'
}, {
  'icon': chevroletImg,
  'value': 'Chevrolet'
}, {
  'icon': chryslerImg,
  'value': 'Chrysler'
}, {
  'icon': citroenImg,
  'value': 'Citroen'
}, {
  'icon': daihatsuImg,
  'value': 'Daihatsu'
}, {
  'icon': datsunImg,
  'value': 'Datsun'
}, {
  'icon': dodgeImg,
  'value': 'Dodge'
}, {
  'icon': dongfengImg,
  'value': 'Dongfeng'
}, {
  'icon': ferrariImg,
  'value': 'Ferrari'
}, {
  'icon': fiatImg,
  'value': 'Fiat'
}, {
  'icon': fodayImg,
  'value': 'Foday'
}, {
  'icon': fordImg,
  'value': 'Ford'
}, {
  'icon': fotonImg,
  'value': 'Foton'
}, {
  'icon': goldenDragonImg,
  'value': 'Golden Dragon'
}, {
  'icon': greatWallImg,
  'value': 'Great Wall'
}, {
  'icon': havalImg,
  'value': 'Haval'
}, {
  'icon': hicomImg,
  'value': 'Hicom'
}, {
  'icon': hinoImg,
  'value': 'Hino'
}, {
  'icon': hondaImg,
  'value': 'Honda'
}, {
  'icon': hummerImg,
  'value': 'Hummer'
}, {
  'icon': hyundaiImg,
  'value': 'Hyundai'
}, {
  'icon': impulImg,
  'value': 'Impul'
}, {
  'icon': infinitiImg,
  'value': 'Infiniti'
}, {
  'icon': inokomImg,
  'value': 'Inokom'
}, {
  'icon': isuzuImg,
  'value': 'Isuzu'
}, {
  'icon': jaguarImg,
  'value': 'Jaguar'
}, {
  'icon': jbcImg,
  'value': 'Jbc'
}, {
  'icon': jeepImg,
  'value': 'Jeep'
}, {
  'icon': jmcImg,
  'value': 'Jmc'
}, {
  'icon': joylongImg,
  'value': 'Joylong'
}, {
  'icon': kawasakiImg,
  'value': 'Kawasaki'
}, {
  'icon': kiaImg,
  'value': 'Kia'
}, {
  'icon': kingLongImg,
  'value': 'King Long'
}, {
  'icon': lamborghiniImg,
  'value': 'Lamborghini'
}, {
  'icon': landRoverImg,
  'value': 'Land Rover'
}, {
  'icon': lexusImg,
  'value': 'Lexus'
}, {
  'icon': lmgImg,
  'value': 'Lmg'
}, {
  'icon': lotusImg,
  'value': 'Lotus'
}, {
  'icon': mahindraImg,
  'value': 'Mahindra'
}, {
  'icon': maseratiImg,
  'value': 'Maserati'
}, {
  'icon': maxusImg,
  'value': 'Maxus'
}, {
  'icon': mazdaImg,
  'value': 'Mazda'
}, {
  'icon': mclarenImg,
  'value': 'Mclaren'
}, {
  'icon': mercedesBenzImg,
  'value': 'Mercedes-Benz'
}, {
  'icon': mgImg,
  'value': 'Mercedes-Maybach'
}, {
  'icon': mercedesMaybachImg,
  'value': 'Mg'
}, {
  'icon': miniImg,
  'value': 'Mini'
}, {
  'icon': mitsubishiImg,
  'value': 'Mitsubishi'
}, {
  'icon': mitsuokaImg,
  'value': 'Mitsuoka'
}, {
  'icon': nazaImg,
  'value': 'Naza'
}, {
  'icon': nissanImg,
  'value': 'Nissan'
}, {
  'icon': opelImg,
  'value': 'Opel'
}, {
  'icon': peroduaImg,
  'value': 'Perodua'
}, {
  'icon': peugeotImg,
  'value': 'Peugeot'
}, {
  'icon': porscheImg,
  'value': 'Porsche'
}, {
  'icon': protonImg,
  'value': 'Proton'
}, {
  'icon': ramImg,
  'value': 'Ram'
}, {
  'icon': renaultImg,
  'value': 'Renault'
}, {
  'icon': rollsRoyceImg,
  'value': 'Rolls-Royce'
}, {
  'icon': roverImg,
  'value': 'Rover'
}, {
  'icon': saabImg,
  'value': 'Saab'
}, {
  'icon': smartImg,
  'value': 'Smart'
}, {
  'icon': ssangYongImg,
  'value': 'Ssang Yong'
}, {
  'icon': subaruImg,
  'value': 'Subaru'
}, {
  'icon': suzukiImg,
  'value': 'Suzuki'
}, {
  'icon': tataImg,
  'value': 'Tata'
}, {
  'icon': toyotaImg,
  'value': 'Toyota'
}, {
  'icon': tvrImg,
  'value': 'Tvr'
}, {
  'icon': volkswagenImg,
  'value': 'Volkswagen'
}, {
  'icon': volvoImg,
  'value': 'Volvo'
}, {
  'icon': waldImg,
  'value': 'Wald'
}, {
  'icon': yamahaImg,
  'value': 'Yamaha'
}, {
  'icon': znaImg,
  'value': 'Zna'
}];
function getCarBrandsIcon(data) {
  if (data) {
    let selectedBrand = carBrandsList.find(function (item) {
      return item.value.toLowerCase() === data.toLowerCase();
    });

    if (selectedBrand) {
      return selectedBrand.icon;
    } else {
      return null;
    }
  } else {
    return null;
  }
}
function getCarBrand(data) {
  if (data) {
    let selectedBrand = carBrandsList.find(function (item) {
      return item.value.toLowerCase() === data.toLowerCase();
    });

    if (selectedBrand) {
      return selectedBrand;
    } else {
      return {
        value: null,
        icon: null
      };
    }
  } else {
    return {
      value: null,
      icon: null
    };
  }
}
/* harmony default export */ __webpack_exports__["default"] = ({
  carBrandsList
});

/***/ }),

/***/ "./params/colorList.js":
/*!*****************************!*\
  !*** ./params/colorList.js ***!
  \*****************************/
/*! exports provided: colorList, getColorIcon, getColor, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "colorList", function() { return colorList; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getColorIcon", function() { return getColorIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getColor", function() { return getColor; });
const colorList = [{
  'code': '#000000',
  'value': 'black'
}, {
  'code': '#FFFFFF',
  'value': 'white'
}, {
  'code': '#E7E7E7',
  'value': 'silver'
}, {
  'code': '#757575',
  'value': 'grey'
}, {
  'code': '#CA912B',
  'value': 'brown'
}, {
  'code': '#623008',
  'value': 'bronze'
}, {
  'code': '#E3C57D',
  'value': 'gold'
}, {
  'code': '#F1DCC3',
  'value': 'beige'
}, {
  'code': '#FFF009',
  'value': 'yellow'
}, {
  'code': '#F87719',
  'value': 'orange'
}, {
  'code': '#DA0000',
  'value': 'red'
}, {
  'code': '#760000',
  'value': 'maroon'
}, {
  'code': '#AC005A',
  'value': 'magenta'
}, {
  'code': '#DC7EA8',
  'value': 'pink'
}, {
  'code': '#670DA8',
  'value': 'purple'
}, {
  'code': '#4EC375',
  'value': 'green'
}, {
  'code': '#01007D',
  'value': 'blue'
}, {
  'code': 'white',
  'value': 'other'
}];
function getColorIcon(color) {
  if (color) {
    let selectedColor = colorList.find(function (item) {
      return item.value.toLowerCase() === color.toLowerCase();
    });

    if (selectedColor) {
      return selectedColor.icon;
    } else {
      return null;
    }
  } else {
    return null;
  }
}
function getColor(color) {
  if (color) {
    let selectedColor = colorList.find(function (item) {
      return item.value.toLowerCase() === color.toLowerCase();
    });

    if (selectedColor) {
      return selectedColor;
    } else {
      return {
        value: null,
        icon: null
      };
    }
  } else {
    return {
      value: null,
      icon: null
    };
  }
}
/* harmony default export */ __webpack_exports__["default"] = ({
  colorList
});

/***/ }),

/***/ "./params/common.js":
/*!**************************!*\
  !*** ./params/common.js ***!
  \**************************/
/*! exports provided: emptyIcon, imageNotFoundIcon */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "emptyIcon", function() { return emptyIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "imageNotFoundIcon", function() { return imageNotFoundIcon; });
const emptyIcon = '/empty.png';
const imageNotFoundIcon = '/image-not-found.png';

/***/ }),

/***/ "./params/darkThemeColorList.js":
/*!**************************************!*\
  !*** ./params/darkThemeColorList.js ***!
  \**************************************/
/*! exports provided: darkThemeColorList, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "darkThemeColorList", function() { return darkThemeColorList; });
const darkThemeColorList = [{
  'code': '#022c43'
}, {
  'code': '#f05454'
}, {
  'code': '#8f384d'
}, {
  'code': '#556052'
}, {
  'code': '#af6b58'
}, {
  'code': '#39311d'
}, {
  'code': '#8f384d'
}, {
  'code': '#a20a0a'
}, {
  'code': '#595b83'
}, {
  'code': '#db6400'
}, {
  'code': '#794c74'
}];
/* harmony default export */ __webpack_exports__["default"] = ({
  darkThemeColorList
});

/***/ }),

/***/ "./params/fuelTypeList.js":
/*!********************************!*\
  !*** ./params/fuelTypeList.js ***!
  \********************************/
/*! exports provided: fuelTypeList, getFuelTypeIcon, getFuelType, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fuelTypeList", function() { return fuelTypeList; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getFuelTypeIcon", function() { return getFuelTypeIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getFuelType", function() { return getFuelType; });
const dieselIcon = "/assets/fuelType/diesel.png";
const electricIcon = "/assets/fuelType/electric.png";
const hybridIcon = "/assets/fuelType/hybrid.png";
const petrolLeadedIcon = "/assets/fuelType/petrol-(leaded).png";
const petrolUnleadedIcon = "/assets/fuelType/petrol-(unleaded).png";
const fuelTypeList = [{
  'icon': dieselIcon,
  'value': 'diesel'
}, {
  'icon': hybridIcon,
  'value': 'hybrid'
}, {
  'icon': electricIcon,
  'value': 'ev'
}, {
  'icon': petrolLeadedIcon,
  'value': 'petrol'
}, {
  'icon': petrolLeadedIcon,
  'value': 'phev'
}, {
  'icon': petrolUnleadedIcon,
  'value': 'petrolulp'
}];
function getFuelTypeIcon(fuelType) {
  if (fuelType) {
    let selectedFuelType = fuelTypeList.find(function (item) {
      return item.value.toLowerCase() == fuelType.toLowerCase();
    });

    if (selectedFuelType) {
      return selectedFuelType.icon;
    } else {
      return null;
    }
  } else {
    return null;
  }
}
function getFuelType(fuelType) {
  if (fuelType) {
    let selectedFuelType = fuelTypeList.find(function (item) {
      return item.value.toLowerCase() == fuelType.toLowerCase();
    });

    if (selectedFuelType) {
      return selectedFuelType;
    } else {
      return {
        value: null,
        icon: null
      };
    }
  } else {
    return {
      value: null,
      icon: null
    };
  }
}
/* harmony default export */ __webpack_exports__["default"] = ({
  fuelTypeList
});

/***/ }),

/***/ "./params/stateList.js":
/*!*****************************!*\
  !*** ./params/stateList.js ***!
  \*****************************/
/*! exports provided: StateList, getStateIcon, getState, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "StateList", function() { return StateList; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getStateIcon", function() { return getStateIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getState", function() { return getState; });
const federalTerritoryIcon = "/assets/stateIcon/federal territory.png";
const johorIcon = "/assets/stateIcon/johor.png";
const kedahIcon = "/assets/stateIcon/kedah.png";
const kualaLumpurIcon = "/assets/stateIcon/kuala lumpur.png";
const labuanFederalIcon = "/assets/stateIcon/labuan-federal.png";
const labuanIcon = "/assets/stateIcon/labuan.png";
const melakaIcon = "/assets/stateIcon/melaka.png";
const negeriSembilanIcon = "/assets/stateIcon/negeri-sembilan.png";
const pahangIcon = "/assets/stateIcon/pahang.png";
const penangIcon = "/assets/stateIcon/penang.png";
const perakIcon = "/assets/stateIcon/perak.png";
const perlisIcon = "/assets/stateIcon/perlis.png";
const putrajayFederalIcon = "/assets/stateIcon/putrajay-federal.png";
const sabahIcon = "/assets/stateIcon/sabah.png";
const sarawakIcon = "/assets/stateIcon/sarawak.png";
const selangorIcon = "/assets/stateIcon/selangor.png";
const terengganuIcon = "/assets/stateIcon/terengganu.png";
const kelantanIcon = "/assets/stateIcon/kelantan.png";
const StateList = [{
  'icon': federalTerritoryIcon,
  'value': 'Federal Territory'
}, {
  'icon': johorIcon,
  'value': 'Johor'
}, {
  'icon': kedahIcon,
  'value': 'Kedah'
}, {
  'icon': kualaLumpurIcon,
  'value': 'Kuala Lumpur'
}, {
  'icon': labuanFederalIcon,
  'value': 'Labuan Federal'
}, {
  'icon': labuanIcon,
  'value': 'Labuan'
}, {
  'icon': melakaIcon,
  'value': 'Melaka'
}, {
  'icon': negeriSembilanIcon,
  'value': 'Negeri Sembilan'
}, {
  'icon': pahangIcon,
  'value': 'Pahang'
}, {
  'icon': penangIcon,
  'value': 'Penang'
}, {
  'icon': perakIcon,
  'value': 'Perak'
}, {
  'icon': perlisIcon,
  'value': 'Perlis'
}, {
  'icon': putrajayFederalIcon,
  'value': 'Putrajay Federal'
}, {
  'icon': sabahIcon,
  'value': 'Sabah'
}, {
  'icon': sarawakIcon,
  'value': 'Sarawak'
}, {
  'icon': selangorIcon,
  'value': 'Selangor'
}, {
  'icon': terengganuIcon,
  'value': 'Terengganu'
}, {
  'icon': kelantanIcon,
  'value': 'Kelantan'
}];
function getStateIcon(state) {
  if (state) {
    let selectedState = StateList.find(function (item) {
      return item.value.toLowerCase() == state.toLowerCase();
    });

    if (selectedState) {
      return selectedState.icon;
    } else {
      return null;
    }
  } else {
    return null;
  }
}
function getState(state) {
  if (state) {
    let selectedState = StateList.find(function (item) {
      return item.value.toLowerCase() == state.toLowerCase();
    });

    if (selectedState) {
      return selectedState;
    } else {
      return {
        value: null,
        icon: null
      };
    }
  } else {
    return {
      value: null,
      icon: null
    };
  }
}
/* harmony default export */ __webpack_exports__["default"] = ({
  StateList
});

/***/ }),

/***/ "./redux/actions/app-actions.js":
/*!**************************************!*\
  !*** ./redux/actions/app-actions.js ***!
  \**************************************/
/*! exports provided: LOADING, SET_INITED_REDUX, SET_DISABLE_WINDOW_SCROLL, ADVANCE_MODE, LOGIN_MODE, REGISTER_MODE, UPDATE_ACTIVE_MENU, FILTER_CAR_BRAND_MODE, FILTER_CAR_SELECTED_CAR_BRAND_ROW, FILTER_CAR_SEARCH_KEYWORDS, FILTER_CAR_MODEL_MODE, FILTER_CAR_SELECTED_CAR_MODEL_ROW, FILTER_CAR_MODEL_SEARCH_KEYWORDS, FILTER_COLOR_MODE, FILTER_CAR_SELECTED_COLOR_MODEL_ROW, FILTER_COLOR_MODEL_SEARCH_KEYWORDS, FILTER_BODY_TYPE_MODE, FILTER_CAR_SELECTED_BODY_TYPE_MODEL_ROW, FILTER_BODY_TYPE_MODEL_SEARCH_KEYWORDS, FILTER_DRIVEN_WHEELS_MODE, FILTER_CAR_SELECTED_DRIVEN_WHEELS_MODEL_ROW, FILTER_DRIVEN_WHEELS_MODEL_SEARCH_KEYWORDS, FILTER_FUEL_TYPE_MODE, FILTER_CAR_SELECTED_FUEL_TYPE_MODEL_ROW, FILTER_FUEL_TYPE_MODEL_SEARCH_KEYWORDS, FILTER_STATE_MODE, FILTER_CAR_SELECTED_STATE_MODEL_ROW, FILTER_STATE_MODEL_SEARCH_KEYWORDS, QUICK_SEARCH_PRODUCTS_LIST, SHOW_CONTACT_LIST, SET_APPLY_YEAR, SET_APPLY_PRICE, SET_APPLY_MILEAGE, FILTER_CAR_BRANDS, FILTER_CAR_MODELS, FILTER_COLORS, FILTER_BODY_TYPES, FILTER_DRIVEN_WHEELS, FILTER_FUEL_TYPES, FILTER_STATES, SET_MENU_HEIGHT, SET_NOTIFICATION_TOKEN, SET_NOTIFICATION_TOKEN_TIME_OUT_DATE, filterCarBrands, filterCarModels, filterColors, filterBodyTypes, filterDrivenWheels, filterFuelTypes, filterStates, loading, advanceMode, loginMode, registerMode, updateActiveMenu, filterCarBrandMode, filterCarSelectedCarBrandsRow, filterCarSearchKeywords, filterCarModelMode, filterCarSelectedCarModelsRow, filterCarModelSearchKeywords, filterColorMode, filterCarSelectedColorRow, filterColorSearchKeywords, filterBodyTypeMode, filterCarSelectedBodyTypeRow, filterBodyTypeSearchKeywords, filterDrivenWheelMode, filterCarSelectedDrivenWheelRow, filterDrivenWheelSearchKeywords, filterFuelTypeMode, filterCarSelectedFuelTypeRow, filterFuelTypeSearchKeywords, filterStateMode, filterCarSelectedStateRow, filterStateSearchKeywords, quickSearchProductsList, showContactList, setApplyYear, setApplyPrice, setApplyMileage, setMenuHeight, setNotificationToken, setNotificationTokenTimeOutDate, setInitedRedux, setDisableWindowScroll */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LOADING", function() { return LOADING; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SET_INITED_REDUX", function() { return SET_INITED_REDUX; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SET_DISABLE_WINDOW_SCROLL", function() { return SET_DISABLE_WINDOW_SCROLL; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ADVANCE_MODE", function() { return ADVANCE_MODE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LOGIN_MODE", function() { return LOGIN_MODE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "REGISTER_MODE", function() { return REGISTER_MODE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UPDATE_ACTIVE_MENU", function() { return UPDATE_ACTIVE_MENU; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FILTER_CAR_BRAND_MODE", function() { return FILTER_CAR_BRAND_MODE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FILTER_CAR_SELECTED_CAR_BRAND_ROW", function() { return FILTER_CAR_SELECTED_CAR_BRAND_ROW; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FILTER_CAR_SEARCH_KEYWORDS", function() { return FILTER_CAR_SEARCH_KEYWORDS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FILTER_CAR_MODEL_MODE", function() { return FILTER_CAR_MODEL_MODE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FILTER_CAR_SELECTED_CAR_MODEL_ROW", function() { return FILTER_CAR_SELECTED_CAR_MODEL_ROW; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FILTER_CAR_MODEL_SEARCH_KEYWORDS", function() { return FILTER_CAR_MODEL_SEARCH_KEYWORDS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FILTER_COLOR_MODE", function() { return FILTER_COLOR_MODE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FILTER_CAR_SELECTED_COLOR_MODEL_ROW", function() { return FILTER_CAR_SELECTED_COLOR_MODEL_ROW; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FILTER_COLOR_MODEL_SEARCH_KEYWORDS", function() { return FILTER_COLOR_MODEL_SEARCH_KEYWORDS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FILTER_BODY_TYPE_MODE", function() { return FILTER_BODY_TYPE_MODE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FILTER_CAR_SELECTED_BODY_TYPE_MODEL_ROW", function() { return FILTER_CAR_SELECTED_BODY_TYPE_MODEL_ROW; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FILTER_BODY_TYPE_MODEL_SEARCH_KEYWORDS", function() { return FILTER_BODY_TYPE_MODEL_SEARCH_KEYWORDS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FILTER_DRIVEN_WHEELS_MODE", function() { return FILTER_DRIVEN_WHEELS_MODE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FILTER_CAR_SELECTED_DRIVEN_WHEELS_MODEL_ROW", function() { return FILTER_CAR_SELECTED_DRIVEN_WHEELS_MODEL_ROW; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FILTER_DRIVEN_WHEELS_MODEL_SEARCH_KEYWORDS", function() { return FILTER_DRIVEN_WHEELS_MODEL_SEARCH_KEYWORDS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FILTER_FUEL_TYPE_MODE", function() { return FILTER_FUEL_TYPE_MODE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FILTER_CAR_SELECTED_FUEL_TYPE_MODEL_ROW", function() { return FILTER_CAR_SELECTED_FUEL_TYPE_MODEL_ROW; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FILTER_FUEL_TYPE_MODEL_SEARCH_KEYWORDS", function() { return FILTER_FUEL_TYPE_MODEL_SEARCH_KEYWORDS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FILTER_STATE_MODE", function() { return FILTER_STATE_MODE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FILTER_CAR_SELECTED_STATE_MODEL_ROW", function() { return FILTER_CAR_SELECTED_STATE_MODEL_ROW; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FILTER_STATE_MODEL_SEARCH_KEYWORDS", function() { return FILTER_STATE_MODEL_SEARCH_KEYWORDS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "QUICK_SEARCH_PRODUCTS_LIST", function() { return QUICK_SEARCH_PRODUCTS_LIST; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SHOW_CONTACT_LIST", function() { return SHOW_CONTACT_LIST; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SET_APPLY_YEAR", function() { return SET_APPLY_YEAR; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SET_APPLY_PRICE", function() { return SET_APPLY_PRICE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SET_APPLY_MILEAGE", function() { return SET_APPLY_MILEAGE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FILTER_CAR_BRANDS", function() { return FILTER_CAR_BRANDS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FILTER_CAR_MODELS", function() { return FILTER_CAR_MODELS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FILTER_COLORS", function() { return FILTER_COLORS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FILTER_BODY_TYPES", function() { return FILTER_BODY_TYPES; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FILTER_DRIVEN_WHEELS", function() { return FILTER_DRIVEN_WHEELS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FILTER_FUEL_TYPES", function() { return FILTER_FUEL_TYPES; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FILTER_STATES", function() { return FILTER_STATES; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SET_MENU_HEIGHT", function() { return SET_MENU_HEIGHT; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SET_NOTIFICATION_TOKEN", function() { return SET_NOTIFICATION_TOKEN; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SET_NOTIFICATION_TOKEN_TIME_OUT_DATE", function() { return SET_NOTIFICATION_TOKEN_TIME_OUT_DATE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "filterCarBrands", function() { return filterCarBrands; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "filterCarModels", function() { return filterCarModels; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "filterColors", function() { return filterColors; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "filterBodyTypes", function() { return filterBodyTypes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "filterDrivenWheels", function() { return filterDrivenWheels; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "filterFuelTypes", function() { return filterFuelTypes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "filterStates", function() { return filterStates; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "loading", function() { return loading; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "advanceMode", function() { return advanceMode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "loginMode", function() { return loginMode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "registerMode", function() { return registerMode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "updateActiveMenu", function() { return updateActiveMenu; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "filterCarBrandMode", function() { return filterCarBrandMode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "filterCarSelectedCarBrandsRow", function() { return filterCarSelectedCarBrandsRow; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "filterCarSearchKeywords", function() { return filterCarSearchKeywords; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "filterCarModelMode", function() { return filterCarModelMode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "filterCarSelectedCarModelsRow", function() { return filterCarSelectedCarModelsRow; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "filterCarModelSearchKeywords", function() { return filterCarModelSearchKeywords; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "filterColorMode", function() { return filterColorMode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "filterCarSelectedColorRow", function() { return filterCarSelectedColorRow; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "filterColorSearchKeywords", function() { return filterColorSearchKeywords; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "filterBodyTypeMode", function() { return filterBodyTypeMode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "filterCarSelectedBodyTypeRow", function() { return filterCarSelectedBodyTypeRow; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "filterBodyTypeSearchKeywords", function() { return filterBodyTypeSearchKeywords; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "filterDrivenWheelMode", function() { return filterDrivenWheelMode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "filterCarSelectedDrivenWheelRow", function() { return filterCarSelectedDrivenWheelRow; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "filterDrivenWheelSearchKeywords", function() { return filterDrivenWheelSearchKeywords; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "filterFuelTypeMode", function() { return filterFuelTypeMode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "filterCarSelectedFuelTypeRow", function() { return filterCarSelectedFuelTypeRow; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "filterFuelTypeSearchKeywords", function() { return filterFuelTypeSearchKeywords; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "filterStateMode", function() { return filterStateMode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "filterCarSelectedStateRow", function() { return filterCarSelectedStateRow; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "filterStateSearchKeywords", function() { return filterStateSearchKeywords; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "quickSearchProductsList", function() { return quickSearchProductsList; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "showContactList", function() { return showContactList; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setApplyYear", function() { return setApplyYear; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setApplyPrice", function() { return setApplyPrice; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setApplyMileage", function() { return setApplyMileage; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setMenuHeight", function() { return setMenuHeight; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setNotificationToken", function() { return setNotificationToken; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setNotificationTokenTimeOutDate", function() { return setNotificationTokenTimeOutDate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setInitedRedux", function() { return setInitedRedux; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setDisableWindowScroll", function() { return setDisableWindowScroll; });
const LOADING = 'LOADING';
const SET_INITED_REDUX = 'SET_INITED_REDUX';
const SET_DISABLE_WINDOW_SCROLL = 'SET_DISABLE_WINDOW_SCROLL';
const ADVANCE_MODE = 'ADVANCE_MODE';
const LOGIN_MODE = 'LOGIN_MODE';
const REGISTER_MODE = 'REGISTER_MODE';
const UPDATE_ACTIVE_MENU = 'UPDATE_ACTIVE_MENU';
const FILTER_CAR_BRAND_MODE = 'FILTER_CAR_BRAND_MODE';
const FILTER_CAR_SELECTED_CAR_BRAND_ROW = 'FILTER_CAR_SELECTED_CAR_BRAND_ROW';
const FILTER_CAR_SEARCH_KEYWORDS = 'FILTER_CAR_SEARCH_KEYWORDS';
const FILTER_CAR_MODEL_MODE = 'FILTER_CAR_MODEL_MODE';
const FILTER_CAR_SELECTED_CAR_MODEL_ROW = 'FILTER_CAR_SELECTED_CAR_MODEL_ROW';
const FILTER_CAR_MODEL_SEARCH_KEYWORDS = 'FILTER_CAR_MODEL_SEARCH_KEYWORDS';
const FILTER_COLOR_MODE = 'FILTER_COLOR_MODE';
const FILTER_CAR_SELECTED_COLOR_MODEL_ROW = 'FILTER_CAR_SELECTED_COLOR_MODEL_ROW';
const FILTER_COLOR_MODEL_SEARCH_KEYWORDS = 'FILTER_COLOR_MODEL_SEARCH_KEYWORDS';
const FILTER_BODY_TYPE_MODE = 'FILTER_BODY_TYPE_MODE';
const FILTER_CAR_SELECTED_BODY_TYPE_MODEL_ROW = 'FILTER_CAR_SELECTED_BODY_TYPE_MODEL_ROW';
const FILTER_BODY_TYPE_MODEL_SEARCH_KEYWORDS = 'FILTER_BODY_TYPE_MODEL_SEARCH_KEYWORDS';
const FILTER_DRIVEN_WHEELS_MODE = 'FILTER_DRIVEN_WHEELS_MODE';
const FILTER_CAR_SELECTED_DRIVEN_WHEELS_MODEL_ROW = 'FILTER_CAR_SELECTED_DRIVEN_WHEELS_MODEL_ROW';
const FILTER_DRIVEN_WHEELS_MODEL_SEARCH_KEYWORDS = 'FILTER_DRIVEN_WHEELS_MODEL_SEARCH_KEYWORDS';
const FILTER_FUEL_TYPE_MODE = 'FILTER_FUEL_TYPE_MODE';
const FILTER_CAR_SELECTED_FUEL_TYPE_MODEL_ROW = 'FILTER_CAR_SELECTED_FUEL_TYPE_MODEL_ROW';
const FILTER_FUEL_TYPE_MODEL_SEARCH_KEYWORDS = 'FILTER_FUEL_TYPE_MODEL_SEARCH_KEYWORDS';
const FILTER_STATE_MODE = 'FILTER_STATE_MODE';
const FILTER_CAR_SELECTED_STATE_MODEL_ROW = 'FILTER_CAR_SELECTED_STATE_MODEL_ROW';
const FILTER_STATE_MODEL_SEARCH_KEYWORDS = 'FILTER_STATE_MODEL_SEARCH_KEYWORDS';
const QUICK_SEARCH_PRODUCTS_LIST = 'QUICK_SEARCH_PRODUCTS_LIST';
const SHOW_CONTACT_LIST = 'SHOW_CONTACT_LIST';
const SET_APPLY_YEAR = 'SET_APPLY_YEAR';
const SET_APPLY_PRICE = 'SET_APPLY_PRICE';
const SET_APPLY_MILEAGE = 'SET_APPLY_MILEAGE';
const FILTER_CAR_BRANDS = 'FILTER_CAR_BRANDS';
const FILTER_CAR_MODELS = 'FILTER_CAR_MODELS';
const FILTER_COLORS = 'FILTER_COLORS';
const FILTER_BODY_TYPES = 'FILTER_BODY_TYPES';
const FILTER_DRIVEN_WHEELS = 'FILTER_DRIVEN_WHEELS';
const FILTER_FUEL_TYPES = 'FILTER_FUEL_TYPES';
const FILTER_STATES = 'FILTER_STATES';
const SET_MENU_HEIGHT = 'SET_MENU_HEIGHT';
const SET_NOTIFICATION_TOKEN = 'SET_NOTIFICATION_TOKEN';
const SET_NOTIFICATION_TOKEN_TIME_OUT_DATE = 'SET_NOTIFICATION_TOKEN_TIME_OUT_DATE'; //fetch quick filter

function filterCarBrands(data) {
  return dispatch => {
    dispatch({
      type: FILTER_CAR_BRANDS,
      data: data
    });
  };
}
function filterCarModels(data) {
  return dispatch => {
    dispatch({
      type: FILTER_CAR_MODELS,
      data: data
    });
  };
}
function filterColors(data) {
  return dispatch => {
    dispatch({
      type: FILTER_COLORS,
      data: data
    });
  };
}
function filterBodyTypes(data) {
  return dispatch => {
    dispatch({
      type: FILTER_BODY_TYPES,
      data: data
    });
  };
}
function filterDrivenWheels(data) {
  return dispatch => {
    dispatch({
      type: FILTER_DRIVEN_WHEELS,
      data: data
    });
  };
}
function filterFuelTypes(data) {
  return dispatch => {
    dispatch({
      type: FILTER_FUEL_TYPES,
      data: data
    });
  };
}
function filterStates(data) {
  return dispatch => {
    dispatch({
      type: FILTER_STATES,
      data: data
    });
  };
} //end fetch quick filter

function loading(data) {
  return dispatch => {
    dispatch({
      type: LOADING,
      payload: data
    });
  };
}
function advanceMode(data) {
  return dispatch => {
    dispatch({
      type: ADVANCE_MODE,
      payload: data
    });
  };
}
function loginMode(data) {
  return dispatch => {
    dispatch({
      type: LOGIN_MODE,
      data: data
    });
  };
}
;
function registerMode(data) {
  return dispatch => {
    dispatch({
      type: REGISTER_MODE,
      data: data
    });
  };
}
;
function updateActiveMenu(data) {
  return dispatch => {
    dispatch({
      type: UPDATE_ACTIVE_MENU,
      data: data
    });
  };
} // filter car
//................................................

function filterCarBrandMode(data) {
  return dispatch => {
    dispatch({
      type: FILTER_CAR_BRAND_MODE,
      data: data
    });
  };
}
function filterCarSelectedCarBrandsRow(data, index) {
  return dispatch => {
    dispatch({
      type: FILTER_CAR_SELECTED_CAR_BRAND_ROW,
      data: data,
      index: index
    });
  };
}
function filterCarSearchKeywords(data) {
  return dispatch => {
    dispatch({
      type: FILTER_CAR_SEARCH_KEYWORDS,
      data: data
    });
  };
} // end filter car .......................................
// filter model
//................................................

function filterCarModelMode(data) {
  return dispatch => {
    dispatch({
      type: FILTER_CAR_MODEL_MODE,
      data: data
    });
  };
}
function filterCarSelectedCarModelsRow(data, index) {
  return dispatch => {
    dispatch({
      type: FILTER_CAR_SELECTED_CAR_MODEL_ROW,
      data: data,
      index: index
    });
  };
}
function filterCarModelSearchKeywords(data) {
  return dispatch => {
    dispatch({
      type: FILTER_CAR_MODEL_SEARCH_KEYWORDS,
      data: data
    });
  };
} // end filter model .......................................
// filter color
//................................................

function filterColorMode(data) {
  return dispatch => {
    dispatch({
      type: FILTER_COLOR_MODE,
      data: data
    });
  };
}
function filterCarSelectedColorRow(data, index) {
  return dispatch => {
    dispatch({
      type: FILTER_CAR_SELECTED_COLOR_MODEL_ROW,
      data: data,
      index: index
    });
  };
}
function filterColorSearchKeywords(data) {
  return dispatch => {
    dispatch({
      type: FILTER_COLOR_MODEL_SEARCH_KEYWORDS,
      data: data
    });
  };
} // end filter color .......................................

function filterBodyTypeMode(data) {
  return dispatch => {
    dispatch({
      type: FILTER_BODY_TYPE_MODE,
      data: data
    });
  };
}
function filterCarSelectedBodyTypeRow(data, index) {
  return dispatch => {
    dispatch({
      type: FILTER_CAR_SELECTED_BODY_TYPE_MODEL_ROW,
      data: data,
      index: index
    });
  };
}
function filterBodyTypeSearchKeywords(data) {
  return dispatch => {
    dispatch({
      type: FILTER_BODY_TYPE_MODEL_SEARCH_KEYWORDS,
      data: data
    });
  };
} // end filter body type .......................................
// filter driven wheels
//................................................

function filterDrivenWheelMode(data) {
  return dispatch => {
    dispatch({
      type: FILTER_DRIVEN_WHEELS_MODE,
      data: data
    });
  };
}
function filterCarSelectedDrivenWheelRow(data, index) {
  return dispatch => {
    dispatch({
      type: FILTER_CAR_SELECTED_DRIVEN_WHEELS_MODEL_ROW,
      data: data,
      index: index
    });
  };
}
function filterDrivenWheelSearchKeywords(data) {
  return dispatch => {
    dispatch({
      type: FILTER_DRIVEN_WHEELS_MODEL_SEARCH_KEYWORDS,
      data: data
    });
  };
} // end filter driven wheel .......................................
// filter fuel type
//................................................

function filterFuelTypeMode(data) {
  return dispatch => {
    dispatch({
      type: FILTER_FUEL_TYPE_MODE,
      data: data
    });
  };
}
function filterCarSelectedFuelTypeRow(data, index) {
  return dispatch => {
    dispatch({
      type: FILTER_CAR_SELECTED_FUEL_TYPE_MODEL_ROW,
      data: data,
      index: index
    });
  };
}
function filterFuelTypeSearchKeywords(data) {
  return dispatch => {
    dispatch({
      type: FILTER_FUEL_TYPE_MODEL_SEARCH_KEYWORDS,
      data: data
    });
  };
} // end filter fuel type .......................................
// filter state
//................................................

function filterStateMode(data) {
  return dispatch => {
    dispatch({
      type: FILTER_STATE_MODE,
      data: data
    });
  };
}
function filterCarSelectedStateRow(data, index) {
  return dispatch => {
    dispatch({
      type: FILTER_CAR_SELECTED_STATE_MODEL_ROW,
      data: data,
      index: index
    });
  };
}
function filterStateSearchKeywords(data) {
  return dispatch => {
    dispatch({
      type: FILTER_STATE_MODEL_SEARCH_KEYWORDS,
      data: data
    });
  };
} // end filter state .......................................

function quickSearchProductsList(mode, quickSearchCarSpecsData, quickSearchProductadsData, values) {
  return dispatch => {
    dispatch({
      type: QUICK_SEARCH_PRODUCTS_LIST,
      mode: mode,
      quickSearchCarSpecsData,
      quickSearchProductadsData,
      values
    });
  };
}
function showContactList(boolean) {
  return dispatch => {
    dispatch({
      type: SHOW_CONTACT_LIST,
      boolean
    });
  };
}
function setApplyYear(data) {
  return dispatch => {
    dispatch({
      type: SET_APPLY_YEAR,
      data
    });
  };
}
function setApplyPrice(data) {
  return dispatch => {
    dispatch({
      type: SET_APPLY_PRICE,
      data
    });
  };
}
function setApplyMileage(data) {
  return dispatch => {
    dispatch({
      type: SET_APPLY_MILEAGE,
      data
    });
  };
}
function setMenuHeight(data) {
  return dispatch => {
    dispatch({
      type: SET_MENU_HEIGHT,
      data
    });
  };
}
function setNotificationToken(data) {
  return dispatch => {
    dispatch({
      type: SET_NOTIFICATION_TOKEN,
      data
    });
  };
}
function setNotificationTokenTimeOutDate(data) {
  return dispatch => {
    dispatch({
      type: SET_NOTIFICATION_TOKEN_TIME_OUT_DATE,
      data
    });
  };
}
function setInitedRedux(data) {
  return dispatch => {
    dispatch({
      type: SET_INITED_REDUX,
      data
    });
  };
}
function setDisableWindowScroll(data) {
  return dispatch => {
    dispatch({
      type: SET_DISABLE_WINDOW_SCROLL,
      data
    });
  };
}

/***/ }),

/***/ "./redux/actions/live-action.js":
/*!**************************************!*\
  !*** ./redux/actions/live-action.js ***!
  \**************************************/
/*! exports provided: FETCH_CLIENT_SOCKET_IO, CLEAR_CLIENT_SOCKET_IO, fetchClientSocketIo, clearClientSocketIo */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FETCH_CLIENT_SOCKET_IO", function() { return FETCH_CLIENT_SOCKET_IO; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CLEAR_CLIENT_SOCKET_IO", function() { return CLEAR_CLIENT_SOCKET_IO; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fetchClientSocketIo", function() { return fetchClientSocketIo; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "clearClientSocketIo", function() { return clearClientSocketIo; });
const FETCH_CLIENT_SOCKET_IO = 'FETCH_CLIENT_SOCKET_IO';
const CLEAR_CLIENT_SOCKET_IO = 'CLEAR_CLIENT_SOCKET_IO';
function fetchClientSocketIo(data) {
  return dispatch => {
    dispatch({
      type: FETCH_CLIENT_SOCKET_IO,
      payload: data
    });
  };
}
function clearClientSocketIo(data) {
  return dispatch => {
    dispatch({
      type: CLEAR_CLIENT_SOCKET_IO
    });
  };
}

/***/ }),

/***/ "./redux/actions/newcars-actions.js":
/*!******************************************!*\
  !*** ./redux/actions/newcars-actions.js ***!
  \******************************************/
/*! exports provided: FETCH_NEWS, FETCH_CLUB, FETCH_PRICE, FETCH_POPULAR, FETCH_POPULARCARS, FETCH_CARNAME, FETCH_CARDETAILS, FETCH_BRANDS, FETCH_BRANDDETAIL, FETCH_BRANDCARS, FETCH_DETAILS, FETCH_FUEL, FETCH_FILTERED_COMPARE_DATA, FETCH_PEER_COMPARE_CARS, FETCH_COMPARE_NEWCAR_IDS, ADD_COMPARE_NEWCAR_ID, REMOVE_COMPARE_NEWCAR_ID, FETCH_COMPARE__NEWCAR_LIMIT, FETCH_NEW_CAR_FILTER_GROUP, RESET_NEW_CAR_FILTER_GROUP, fetchNews, fetchClub, fetchPrice, fetchPopular, fetchPopularCars, fetchCarName, fetchCarDetails, fetchBrands, fetchBrandDetail, fetchBrandCars, fetchDetails, fetchFuel, filteredCompareData, fetchCompareNewCarIds, addCompareNewCarId, removeCompareNewCarId, fetchCompareNewCarLimit, fetchPeerCompareCars, fetchNewCarFilterGroup, resetNewCarFilterGroup */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FETCH_NEWS", function() { return FETCH_NEWS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FETCH_CLUB", function() { return FETCH_CLUB; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FETCH_PRICE", function() { return FETCH_PRICE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FETCH_POPULAR", function() { return FETCH_POPULAR; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FETCH_POPULARCARS", function() { return FETCH_POPULARCARS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FETCH_CARNAME", function() { return FETCH_CARNAME; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FETCH_CARDETAILS", function() { return FETCH_CARDETAILS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FETCH_BRANDS", function() { return FETCH_BRANDS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FETCH_BRANDDETAIL", function() { return FETCH_BRANDDETAIL; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FETCH_BRANDCARS", function() { return FETCH_BRANDCARS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FETCH_DETAILS", function() { return FETCH_DETAILS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FETCH_FUEL", function() { return FETCH_FUEL; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FETCH_FILTERED_COMPARE_DATA", function() { return FETCH_FILTERED_COMPARE_DATA; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FETCH_PEER_COMPARE_CARS", function() { return FETCH_PEER_COMPARE_CARS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FETCH_COMPARE_NEWCAR_IDS", function() { return FETCH_COMPARE_NEWCAR_IDS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ADD_COMPARE_NEWCAR_ID", function() { return ADD_COMPARE_NEWCAR_ID; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "REMOVE_COMPARE_NEWCAR_ID", function() { return REMOVE_COMPARE_NEWCAR_ID; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FETCH_COMPARE__NEWCAR_LIMIT", function() { return FETCH_COMPARE__NEWCAR_LIMIT; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FETCH_NEW_CAR_FILTER_GROUP", function() { return FETCH_NEW_CAR_FILTER_GROUP; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RESET_NEW_CAR_FILTER_GROUP", function() { return RESET_NEW_CAR_FILTER_GROUP; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fetchNews", function() { return fetchNews; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fetchClub", function() { return fetchClub; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fetchPrice", function() { return fetchPrice; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fetchPopular", function() { return fetchPopular; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fetchPopularCars", function() { return fetchPopularCars; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fetchCarName", function() { return fetchCarName; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fetchCarDetails", function() { return fetchCarDetails; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fetchBrands", function() { return fetchBrands; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fetchBrandDetail", function() { return fetchBrandDetail; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fetchBrandCars", function() { return fetchBrandCars; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fetchDetails", function() { return fetchDetails; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fetchFuel", function() { return fetchFuel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "filteredCompareData", function() { return filteredCompareData; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fetchCompareNewCarIds", function() { return fetchCompareNewCarIds; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "addCompareNewCarId", function() { return addCompareNewCarId; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "removeCompareNewCarId", function() { return removeCompareNewCarId; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fetchCompareNewCarLimit", function() { return fetchCompareNewCarLimit; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fetchPeerCompareCars", function() { return fetchPeerCompareCars; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fetchNewCarFilterGroup", function() { return fetchNewCarFilterGroup; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "resetNewCarFilterGroup", function() { return resetNewCarFilterGroup; });
const FETCH_NEWS = 'FETCH_NEWS';
const FETCH_CLUB = 'FETCH_CLUB';
const FETCH_PRICE = 'FETCH_PRICE';
const FETCH_POPULAR = 'FETCH_POPULAR';
const FETCH_POPULARCARS = 'FETCH_POPULARCARS';
const FETCH_CARNAME = 'FETCH_CARNAME';
const FETCH_CARDETAILS = 'FETCH_CARDETAILS';
const FETCH_BRANDS = 'FETCH_BRANDS';
const FETCH_BRANDDETAIL = 'FETCH_BRANDDETAIL';
const FETCH_BRANDCARS = 'FETCH_BRANDCARS';
const FETCH_DETAILS = 'FETCH_DETAILS';
const FETCH_FUEL = 'FETCH_FUEL';
const FETCH_FILTERED_COMPARE_DATA = 'FETCH_FILTERED_COMPARE_DATA';
const FETCH_PEER_COMPARE_CARS = 'FETCH_PEER_COMPARE_CARS';
const FETCH_COMPARE_NEWCAR_IDS = 'FETCH_COMPARE_NEWCAR_IDS';
const ADD_COMPARE_NEWCAR_ID = 'ADD_COMPARE_NEWCAR_ID';
const REMOVE_COMPARE_NEWCAR_ID = 'REMOVE_COMPARE_NEWCAR_ID';
const FETCH_COMPARE__NEWCAR_LIMIT = 'FETCH_COMPARE__NEWCAR_LIMIT';
const FETCH_NEW_CAR_FILTER_GROUP = 'FETCH_NEW_CAR_FILTER_GROUP';
const RESET_NEW_CAR_FILTER_GROUP = 'RESET_NEW_CAR_FILTER_GROUP';
function fetchNews(data) {
  return dispatch => {
    dispatch({
      type: FETCH_NEWS,
      payload: data
    });
  };
}
function fetchClub(data) {
  return dispatch => {
    dispatch({
      type: FETCH_CLUB,
      payload: data
    });
  };
}
function fetchPrice(data) {
  return dispatch => {
    dispatch({
      type: FETCH_PRICE,
      payload: data
    });
  };
}
function fetchPopular(data) {
  return dispatch => {
    dispatch({
      type: FETCH_POPULAR,
      payload: data
    });
  };
}
function fetchPopularCars(data) {
  return dispatch => {
    dispatch({
      type: FETCH_POPULARCARS,
      payload: data
    });
  };
}
function fetchCarName(data) {
  return dispatch => {
    dispatch({
      type: FETCH_CARNAME,
      payload: data
    });
  };
}
function fetchCarDetails(data) {
  return dispatch => {
    dispatch({
      type: FETCH_CARDETAILS,
      payload: data
    });
  };
}
function fetchBrands(data) {
  return dispatch => {
    dispatch({
      type: FETCH_BRANDS,
      payload: data
    });
  };
}
function fetchBrandDetail(data) {
  return dispatch => {
    dispatch({
      type: FETCH_BRANDDETAIL,
      payload: data
    });
  };
}
function fetchBrandCars(data) {
  return dispatch => {
    dispatch({
      type: FETCH_BRANDCARS,
      payload: data
    });
  };
}
function fetchDetails(data) {
  return dispatch => {
    dispatch({
      type: FETCH_DETAILS,
      payload: data
    });
  };
}
function fetchFuel(data) {
  return dispatch => {
    dispatch({
      type: FETCH_FUEL,
      payload: data
    });
  };
}
function filteredCompareData(data) {
  return dispatch => {
    dispatch({
      type: FETCH_FILTERED_COMPARE_DATA,
      payload: data
    });
  };
}
function fetchCompareNewCarIds(data) {
  return dispatch => {
    dispatch({
      type: FETCH_COMPARE_NEWCAR_IDS,
      payload: data
    });
  };
}
function addCompareNewCarId(data) {
  return dispatch => {
    dispatch({
      type: ADD_COMPARE_NEWCAR_ID,
      payload: data
    });
  };
}
function removeCompareNewCarId(data) {
  return dispatch => {
    dispatch({
      type: REMOVE_COMPARE_NEWCAR_ID,
      payload: data
    });
  };
}
function fetchCompareNewCarLimit(data) {
  return dispatch => {
    dispatch({
      type: FETCH_COMPARE__NEWCAR_LIMIT,
      payload: data
    });
  };
}
function fetchPeerCompareCars(data) {
  return dispatch => {
    dispatch({
      type: FETCH_PEER_COMPARE_CARS,
      payload: data
    });
  };
}
function fetchNewCarFilterGroup(data) {
  return dispatch => {
    dispatch({
      type: FETCH_NEW_CAR_FILTER_GROUP,
      payload: data
    });
  };
}
function resetNewCarFilterGroup(data) {
  return dispatch => {
    dispatch({
      type: RESET_NEW_CAR_FILTER_GROUP
    });
  };
}

/***/ }),

/***/ "./redux/actions/productsList-actions.js":
/*!***********************************************!*\
  !*** ./redux/actions/productsList-actions.js ***!
  \***********************************************/
/*! exports provided: FETCH_PRODUCTSLIST, FETCH_PRODUCTSLIST_HOME, PUSH_PRODUCTSLIST, REMOVE_PRODUCTSLIST, UPDATE_PRODUCTSLIST, UPDATE_ACTIVE_ID_PRODUCTS_LIST, ADD_COMPARE__PRODUCT_ID, REMOVE_COMPARE_PRODUCT_ID, CLEAR_COMPARE_PRODUCT_IDS, PATCH_COMPARE_PRODUCT_IDS, FETCH_FILTERED_COMPARE_DATA, FETCH_FEATURES_LIST, UPDATE_CHECKED_FEATURES_DATE, FETCH_COMPARE_LIMIT, FETCH_PRODUCT_FILTER_OPTIONS, CLEAR_PRODUCT_FILTER_OPTIONS, FETCH_PRODUCT_FILTER_GROUP, CLEAR_PRODUCT_FILTER_GROUP, FETCH_PRODUCT_FILTER_CONFIG, CLEAR_PRODUCT_FILTER_CONFIG, FETCH_FILTER_MODAL_STATE, SET_PRODUCT_LIST_LOADING, fetchProductsList, fetchProductsListHome, pushProductsList, removeProductsList, updateProductList, updateActiveIdProductList, clearCompareProductIds, filteredCompareData, fetchFeaturesList, updateCheckedFeaturesDate, fetchCompareCarLimit, addCompareProductId, removeCompareProductId, patchCompareProductIds, fetchProductFilterOptions, clearProductFilterOptions, fetchProductFilterGroup, clearProductFilterGroup, fetchProductFilterConfig, clearProductFilterConfig, fetchFilterModalState, setProductListLoading */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FETCH_PRODUCTSLIST", function() { return FETCH_PRODUCTSLIST; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FETCH_PRODUCTSLIST_HOME", function() { return FETCH_PRODUCTSLIST_HOME; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PUSH_PRODUCTSLIST", function() { return PUSH_PRODUCTSLIST; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "REMOVE_PRODUCTSLIST", function() { return REMOVE_PRODUCTSLIST; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UPDATE_PRODUCTSLIST", function() { return UPDATE_PRODUCTSLIST; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UPDATE_ACTIVE_ID_PRODUCTS_LIST", function() { return UPDATE_ACTIVE_ID_PRODUCTS_LIST; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ADD_COMPARE__PRODUCT_ID", function() { return ADD_COMPARE__PRODUCT_ID; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "REMOVE_COMPARE_PRODUCT_ID", function() { return REMOVE_COMPARE_PRODUCT_ID; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CLEAR_COMPARE_PRODUCT_IDS", function() { return CLEAR_COMPARE_PRODUCT_IDS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PATCH_COMPARE_PRODUCT_IDS", function() { return PATCH_COMPARE_PRODUCT_IDS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FETCH_FILTERED_COMPARE_DATA", function() { return FETCH_FILTERED_COMPARE_DATA; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FETCH_FEATURES_LIST", function() { return FETCH_FEATURES_LIST; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UPDATE_CHECKED_FEATURES_DATE", function() { return UPDATE_CHECKED_FEATURES_DATE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FETCH_COMPARE_LIMIT", function() { return FETCH_COMPARE_LIMIT; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FETCH_PRODUCT_FILTER_OPTIONS", function() { return FETCH_PRODUCT_FILTER_OPTIONS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CLEAR_PRODUCT_FILTER_OPTIONS", function() { return CLEAR_PRODUCT_FILTER_OPTIONS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FETCH_PRODUCT_FILTER_GROUP", function() { return FETCH_PRODUCT_FILTER_GROUP; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CLEAR_PRODUCT_FILTER_GROUP", function() { return CLEAR_PRODUCT_FILTER_GROUP; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FETCH_PRODUCT_FILTER_CONFIG", function() { return FETCH_PRODUCT_FILTER_CONFIG; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CLEAR_PRODUCT_FILTER_CONFIG", function() { return CLEAR_PRODUCT_FILTER_CONFIG; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FETCH_FILTER_MODAL_STATE", function() { return FETCH_FILTER_MODAL_STATE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SET_PRODUCT_LIST_LOADING", function() { return SET_PRODUCT_LIST_LOADING; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fetchProductsList", function() { return fetchProductsList; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fetchProductsListHome", function() { return fetchProductsListHome; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pushProductsList", function() { return pushProductsList; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "removeProductsList", function() { return removeProductsList; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "updateProductList", function() { return updateProductList; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "updateActiveIdProductList", function() { return updateActiveIdProductList; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "clearCompareProductIds", function() { return clearCompareProductIds; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "filteredCompareData", function() { return filteredCompareData; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fetchFeaturesList", function() { return fetchFeaturesList; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "updateCheckedFeaturesDate", function() { return updateCheckedFeaturesDate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fetchCompareCarLimit", function() { return fetchCompareCarLimit; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "addCompareProductId", function() { return addCompareProductId; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "removeCompareProductId", function() { return removeCompareProductId; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "patchCompareProductIds", function() { return patchCompareProductIds; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fetchProductFilterOptions", function() { return fetchProductFilterOptions; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "clearProductFilterOptions", function() { return clearProductFilterOptions; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fetchProductFilterGroup", function() { return fetchProductFilterGroup; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "clearProductFilterGroup", function() { return clearProductFilterGroup; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fetchProductFilterConfig", function() { return fetchProductFilterConfig; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "clearProductFilterConfig", function() { return clearProductFilterConfig; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fetchFilterModalState", function() { return fetchFilterModalState; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setProductListLoading", function() { return setProductListLoading; });
const FETCH_PRODUCTSLIST = 'FETCH_PRODUCTSLIST';
const FETCH_PRODUCTSLIST_HOME = 'FETCH_PRODUCTSLIST_HOME';
const PUSH_PRODUCTSLIST = 'PUSH_PRODUCTSLIST';
const REMOVE_PRODUCTSLIST = 'REMOVE_PRODUCTSLIST';
const UPDATE_PRODUCTSLIST = 'UPDATE_PRODUCTSLIST';
const UPDATE_ACTIVE_ID_PRODUCTS_LIST = 'UPDATE_ACTIVE_ID_PRODUCTS_LIST';
const ADD_COMPARE__PRODUCT_ID = 'ADD_COMPARE__PRODUCT_ID';
const REMOVE_COMPARE_PRODUCT_ID = 'REMOVE_COMPARE_PRODUCT_ID';
const CLEAR_COMPARE_PRODUCT_IDS = 'CLEAR_COMPARE_PRODUCT_IDS';
const PATCH_COMPARE_PRODUCT_IDS = 'PATCH_COMPARE_PRODUCT_IDS';
const FETCH_FILTERED_COMPARE_DATA = 'FETCH_FILTERED_COMPARE_DATA';
const FETCH_FEATURES_LIST = 'FETCH_FEATURES_LIST';
const UPDATE_CHECKED_FEATURES_DATE = 'UPDATE_CHECKED_FEATURES_DATE';
const FETCH_COMPARE_LIMIT = 'FETCH_COMPARE_LIMIT';
const FETCH_PRODUCT_FILTER_OPTIONS = 'FETCH_PRODUCT_FILTER_OPTIONS';
const CLEAR_PRODUCT_FILTER_OPTIONS = 'CLEAR_PRODUCT_FILTER_OPTIONS';
const FETCH_PRODUCT_FILTER_GROUP = 'FETCH_PRODUCT_FILTER_GROUP';
const CLEAR_PRODUCT_FILTER_GROUP = 'CLEAR_PRODUCT_FILTER_GROUP';
const FETCH_PRODUCT_FILTER_CONFIG = 'FETCH_PRODUCT_FILTER_CONFIG';
const CLEAR_PRODUCT_FILTER_CONFIG = 'CLEAR_PRODUCT_FILTER_CONFIG';
const FETCH_FILTER_MODAL_STATE = 'FETCH_FILTER_MODAL_STATE';
const SET_PRODUCT_LIST_LOADING = 'SET_PRODUCT_LIST_LOADING';
function fetchProductsList(data) {
  return dispatch => {
    dispatch({
      type: FETCH_PRODUCTSLIST,
      payload: data
    });
  };
}
function fetchProductsListHome(data) {
  return dispatch => {
    dispatch({
      type: FETCH_PRODUCTSLIST_HOME,
      payload: data
    });
  };
}
function pushProductsList(data) {
  return dispatch => {
    dispatch({
      type: PUSH_PRODUCTSLIST,
      payload: data
    });
  };
}
function removeProductsList(data) {
  return dispatch => {
    dispatch({
      type: REMOVE_PRODUCTSLIST,
      payload: data
    });
  };
}
function updateProductList(data) {
  return dispatch => {
    dispatch({
      type: UPDATE_PRODUCTSLIST,
      payload: data
    });
  };
}
function updateActiveIdProductList(id) {
  return dispatch => {
    dispatch({
      type: UPDATE_ACTIVE_ID_PRODUCTS_LIST,
      id
    });
  };
}
function clearCompareProductIds() {
  return dispatch => {
    dispatch({
      type: CLEAR_COMPARE_PRODUCT_IDS
    });
  };
}
function filteredCompareData(data) {
  return dispatch => {
    dispatch({
      type: FETCH_FILTERED_COMPARE_DATA,
      payload: data
    });
  };
}
function fetchFeaturesList(data) {
  return dispatch => {
    dispatch({
      type: FETCH_FEATURES_LIST,
      payload: data
    });
  };
}
function updateCheckedFeaturesDate(data) {
  return dispatch => {
    dispatch({
      type: UPDATE_CHECKED_FEATURES_DATE,
      payload: data
    });
  };
}
function fetchCompareCarLimit(data) {
  return dispatch => {
    dispatch({
      type: FETCH_COMPARE_LIMIT,
      payload: data
    });
  };
}
function addCompareProductId(data) {
  return dispatch => {
    dispatch({
      type: ADD_COMPARE__PRODUCT_ID,
      payload: data
    });
  };
}
function removeCompareProductId(data) {
  return dispatch => {
    dispatch({
      type: REMOVE_COMPARE_PRODUCT_ID,
      payload: data
    });
  };
}
function patchCompareProductIds(data) {
  return dispatch => {
    dispatch({
      type: PATCH_COMPARE_PRODUCT_IDS,
      payload: data
    });
  };
}
function fetchProductFilterOptions(data) {
  return dispatch => {
    dispatch({
      type: FETCH_PRODUCT_FILTER_OPTIONS,
      payload: data
    });
  };
}
function clearProductFilterOptions(data) {
  return dispatch => {
    dispatch({
      type: CLEAR_PRODUCT_FILTER_OPTIONS,
      payload: {}
    });
  };
}
function fetchProductFilterGroup(data) {
  return dispatch => {
    dispatch({
      type: FETCH_PRODUCT_FILTER_GROUP,
      payload: data
    });
  };
}
function clearProductFilterGroup(data) {
  return dispatch => {
    dispatch({
      type: CLEAR_PRODUCT_FILTER_GROUP,
      payload: {}
    });
  };
}
function fetchProductFilterConfig(data) {
  return dispatch => {
    dispatch({
      type: FETCH_PRODUCT_FILTER_CONFIG,
      payload: data
    });
  };
}
function clearProductFilterConfig() {
  return dispatch => {
    dispatch({
      type: CLEAR_PRODUCT_FILTER_CONFIG,
      payload: {}
    });
  };
}
function fetchFilterModalState(data) {
  return dispatch => {
    dispatch({
      type: FETCH_FILTER_MODAL_STATE,
      payload: data
    });
  };
}
function setProductListLoading(data) {
  return dispatch => {
    dispatch({
      type: SET_PRODUCT_LIST_LOADING,
      payload: data
    });
  };
}

/***/ }),

/***/ "./redux/actions/sellerProfile-actions.js":
/*!************************************************!*\
  !*** ./redux/actions/sellerProfile-actions.js ***!
  \************************************************/
/*! exports provided: UPDATE_SELLER_PROFILE, updateSellerProfile */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UPDATE_SELLER_PROFILE", function() { return UPDATE_SELLER_PROFILE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "updateSellerProfile", function() { return updateSellerProfile; });
//Action Types
const UPDATE_SELLER_PROFILE = "UPDATE_SELLER_PROFILE"; //Action Creator

function updateSellerProfile(data) {
  return dispatch => {
    dispatch({
      type: UPDATE_SELLER_PROFILE,
      data: data
    });
  };
}

/***/ }),

/***/ "./redux/actions/socketRefresh-actions.js":
/*!************************************************!*\
  !*** ./redux/actions/socketRefresh-actions.js ***!
  \************************************************/
/*! exports provided: UPDATE_SOCKET_INFO, DELETE_SOCKET_INFO, updateSocketInfo, deleteSocketInfo */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UPDATE_SOCKET_INFO", function() { return UPDATE_SOCKET_INFO; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DELETE_SOCKET_INFO", function() { return DELETE_SOCKET_INFO; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "updateSocketInfo", function() { return updateSocketInfo; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "deleteSocketInfo", function() { return deleteSocketInfo; });
const UPDATE_SOCKET_INFO = 'UPDATE_SOCKET_INFO';
const DELETE_SOCKET_INFO = 'DELETE_SOCKET_INFO';
function updateSocketInfo(socketInfo) {
  return dispatch => {
    dispatch({
      type: UPDATE_SOCKET_INFO,
      payload: socketInfo
    });
  };
}
function deleteSocketInfo() {
  return dispatch => {
    dispatch({
      type: DELETE_SOCKET_INFO,
      payload: false
    });
  };
}

/***/ }),

/***/ "./redux/actions/user-actions.js":
/*!***************************************!*\
  !*** ./redux/actions/user-actions.js ***!
  \***************************************/
/*! exports provided: LOGIN_SUCCESSFUL, LOGOUT_SUCCESSFUL, ADDRESS_BOOK_FORM, BANK_FORM, CARD_FORM, SET_USER, loginSuccessful, logoutSuccessful, setUser, addressBookForm, cardForm, bankForm */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LOGIN_SUCCESSFUL", function() { return LOGIN_SUCCESSFUL; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LOGOUT_SUCCESSFUL", function() { return LOGOUT_SUCCESSFUL; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ADDRESS_BOOK_FORM", function() { return ADDRESS_BOOK_FORM; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BANK_FORM", function() { return BANK_FORM; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CARD_FORM", function() { return CARD_FORM; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SET_USER", function() { return SET_USER; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "loginSuccessful", function() { return loginSuccessful; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "logoutSuccessful", function() { return logoutSuccessful; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setUser", function() { return setUser; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "addressBookForm", function() { return addressBookForm; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cardForm", function() { return cardForm; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bankForm", function() { return bankForm; });
const LOGIN_SUCCESSFUL = 'LOGIN_SUCCESSFUL';
const LOGOUT_SUCCESSFUL = 'LOGOUT_SUCCESSFUL';
const ADDRESS_BOOK_FORM = 'ADDRESS_BOOK_FORM';
const BANK_FORM = 'BANK_FORM';
const CARD_FORM = 'CARD_FORM';
const SET_USER = 'SET_USER';
function loginSuccessful(userInfo) {
  return dispatch => {
    dispatch({
      type: LOGIN_SUCCESSFUL,
      payload: userInfo
    });
  };
}
function logoutSuccessful() {
  return dispatch => {
    dispatch({
      type: LOGOUT_SUCCESSFUL,
      payload: false
    });
  };
}
function setUser(userInfo) {
  return dispatch => {
    dispatch({
      type: SET_USER,
      payload: userInfo
    });
  };
}
function addressBookForm(form) {
  return dispatch => {
    dispatch({
      type: ADDRESS_BOOK_FORM,
      payload: form
    });
  };
}
function cardForm(form) {
  return dispatch => {
    dispatch({
      type: CARD_FORM,
      payload: form
    });
  };
}
function bankForm(form) {
  return dispatch => {
    dispatch({
      type: BANK_FORM,
      payload: form
    });
  };
}

/***/ }),

/***/ "./redux/config.js":
/*!*************************!*\
  !*** ./redux/config.js ***!
  \*************************/
/*! exports provided: statePersistActions, persistRedux, checkIsNeedPersist, checkNeedPersist, getPersistObj, getLocalStoragePersistStates, dynamicDispatch, RESTORE_REDUX, restoreRedux */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "statePersistActions", function() { return statePersistActions; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "persistRedux", function() { return persistRedux; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "checkIsNeedPersist", function() { return checkIsNeedPersist; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "checkNeedPersist", function() { return checkNeedPersist; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getPersistObj", function() { return getPersistObj; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getLocalStoragePersistStates", function() { return getLocalStoragePersistStates; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "dynamicDispatch", function() { return dynamicDispatch; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RESTORE_REDUX", function() { return RESTORE_REDUX; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "restoreRedux", function() { return restoreRedux; });
/* harmony import */ var _actions_user_actions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./actions/user-actions */ "./redux/actions/user-actions.js");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _actions_productsList_actions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./actions/productsList-actions */ "./redux/actions/productsList-actions.js");
/* harmony import */ var local_storage__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! local-storage */ "local-storage");
/* harmony import */ var local_storage__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(local_storage__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _actions_live_action__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./actions/live-action */ "./redux/actions/live-action.js");
/* harmony import */ var _actions_socketRefresh_actions__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./actions/socketRefresh-actions */ "./redux/actions/socketRefresh-actions.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! moment */ "moment");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _common_function__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../common-function */ "./common-function.js");







 //Not supported for multiple same action update yet
//Ex. ADD_COMPARE__PRODUCT_ID for twice, i will only take the last 1. Same actions before last one will be ignored;

const statePersistActions = [{
  action: _actions_user_actions__WEBPACK_IMPORTED_MODULE_0__["LOGIN_SUCCESSFUL"],
  reducer: 'user'
}, {
  action: _actions_user_actions__WEBPACK_IMPORTED_MODULE_0__["LOGOUT_SUCCESSFUL"],
  reducer: 'user'
}, {
  action: _actions_user_actions__WEBPACK_IMPORTED_MODULE_0__["SET_USER"],
  reducer: 'user'
}, {
  action: _actions_productsList_actions__WEBPACK_IMPORTED_MODULE_2__["FETCH_COMPARE_LIMIT"],
  reducer: 'productsList'
}, // {
//   action : ADD_COMPARE__PRODUCT_ID,
// reducer : 'productList',
// },
{
  action: _actions_productsList_actions__WEBPACK_IMPORTED_MODULE_2__["PATCH_COMPARE_PRODUCT_IDS"],
  reducer: 'productsList'
}, {
  action: _actions_productsList_actions__WEBPACK_IMPORTED_MODULE_2__["CLEAR_COMPARE_PRODUCT_IDS"],
  reducer: 'productsList'
}, {
  action: _actions_productsList_actions__WEBPACK_IMPORTED_MODULE_2__["REMOVE_COMPARE_PRODUCT_ID"],
  reducer: 'productsList'
}, {
  action: _actions_live_action__WEBPACK_IMPORTED_MODULE_4__["FETCH_CLIENT_SOCKET_IO"],
  reducer: 'socketRefresh'
}, {
  action: _actions_live_action__WEBPACK_IMPORTED_MODULE_4__["CLEAR_CLIENT_SOCKET_IO"],
  reducer: 'socketRefresh'
}, {
  action: _actions_socketRefresh_actions__WEBPACK_IMPORTED_MODULE_5__["UPDATE_SOCKET_INFO"],
  reducer: 'socketRefresh'
}, {
  action: _actions_socketRefresh_actions__WEBPACK_IMPORTED_MODULE_5__["DELETE_SOCKET_INFO"],
  reducer: 'socketRefresh'
}];
function persistRedux(reducer, data) {
  if (reducer && lodash__WEBPACK_IMPORTED_MODULE_1___default.a.isPlainObject(data) && !lodash__WEBPACK_IMPORTED_MODULE_1___default.a.isEmpty(data)) {
    let reduxStates = local_storage__WEBPACK_IMPORTED_MODULE_3___default.a.get('redux');

    if (!lodash__WEBPACK_IMPORTED_MODULE_1___default.a.isPlainObject(reduxStates)) {
      reduxStates = {};
    }

    reduxStates[reducer] = data;
    local_storage__WEBPACK_IMPORTED_MODULE_3___default.a.set('redux', reduxStates);
  }
}
function checkIsNeedPersist(action) {
  if (action) {
    return lodash__WEBPACK_IMPORTED_MODULE_1___default.a.some(statePersistActions || [] || [], ['action', action]) || false;
  }

  return false;
}
function checkNeedPersist(action, reducer, data, isRestoreData) {
  let needPersist = checkIsNeedPersist(action);
  let persistObj = getPersistObj(action);

  if (needPersist && lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(persistObj, 'reducer') == reducer) {
    let persistedStates = getLocalStoragePersistStates(lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(persistObj, 'reducer'));

    let selectedPersistedState = lodash__WEBPACK_IMPORTED_MODULE_1___default.a.find(persistedStates, {
      persistObj: {
        action: action
      }
    });

    let sequence = 0;

    if (!isRestoreData || !Object(_common_function__WEBPACK_IMPORTED_MODULE_7__["isValidNumber"])(lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(selectedPersistedState, 'sequence'))) {
      sequence = lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(lodash__WEBPACK_IMPORTED_MODULE_1___default.a.maxBy(persistedStates || [], 'sequence'), 'sequence');

      if (!Object(_common_function__WEBPACK_IMPORTED_MODULE_7__["isValidNumber"])(sequence)) {
        sequence = 0;
      } else {
        sequence = parseInt(sequence) + 1;
      }
    } else {
      sequence = parseInt(lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(selectedPersistedState, 'sequence'));
    }

    let persistData = {
      data: data,
      reducer: lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(persistObj, 'reducer'),
      createdAt: new Date(),
      sequence: sequence
    };
    local_storage__WEBPACK_IMPORTED_MODULE_3___default.a.set(lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(persistObj, ['action']), persistData);
  }
}
function getPersistObj(action) {
  if (action) {
    return lodash__WEBPACK_IMPORTED_MODULE_1___default.a.find(statePersistActions || [], ['action', action]) || {};
  }

  return false;
}
function getLocalStoragePersistStates(reducer) {
  let cookiePersistStates = [];

  lodash__WEBPACK_IMPORTED_MODULE_1___default.a.forEach(statePersistActions, function (statePersistAction) {
    let data = local_storage__WEBPACK_IMPORTED_MODULE_3___default.a.get(statePersistAction['action']);

    if (data) {
      if (!reducer || reducer == lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(data, 'reducer')) {
        try {
          cookiePersistStates.push({
            persistObj: statePersistAction,
            data: lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(data, ['data']),
            reducer: lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(data, ['reducer']),
            createdAt: moment__WEBPACK_IMPORTED_MODULE_6___default()(lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(data, ['createdAt'])),
            sequence: lodash__WEBPACK_IMPORTED_MODULE_1___default.a.get(data, ['sequence']) || 0
          });
        } catch (error) {}
      }
    }
  });

  cookiePersistStates = lodash__WEBPACK_IMPORTED_MODULE_1___default.a.sortBy(cookiePersistStates, ['reducer', 'sequence']);
  return cookiePersistStates || [];
}
function dynamicDispatch(action, data) {
  return dispatch => {
    dispatch({
      type: action,
      payload: data,
      isRestoreData: true
    });
  };
}
const RESTORE_REDUX = 'RESTORE_REDUX';
function restoreRedux(data) {
  return dispatch => {
    dispatch({
      type: RESTORE_REDUX,
      payload: data
    });
  };
}

/***/ }),

/***/ "./route.js":
/*!******************!*\
  !*** ./route.js ***!
  \******************/
/*! exports provided: routePaths */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "routePaths", function() { return routePaths; });
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _common_function__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./common-function */ "./common-function.js");
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }



const routePaths = {
  home: {
    to: `/`,
    as: (item, query = {}) => ({
      pathname: `/`,
      query: _objectSpread({}, query)
    })
  },
  aboutUs: {
    to: `/about-us`,
    as: (item, query = {}) => ({
      pathname: `/about-us`,
      query: _objectSpread({}, query)
    })
  },
  carFreaks: {
    to: `/car-freaks`,
    as: (item, query = {}) => ({
      pathname: `/car-freaks`,
      query: _objectSpread({}, query)
    })
  },
  viewCarFreaks: {
    to: `/car-freaks/[id]`,
    as: (item, query = {}) => ({
      pathname: `/car-freaks/${lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(item, '_id')}`,
      query: _objectSpread({
        id: lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(item, '_id')
      }, query)
    })
  },
  carReview: {
    to: `/car-review`,
    as: (item, query = {}) => ({
      pathname: `/car-review`,
      query: _objectSpread({}, query)
    })
  },
  carsOnSale: {
    to: `/cars-on-sale/[parameter1]`,
    as: (query = {}, ...parameters) => {
      let url = `/cars-on-sale/malaysia`;
      return {
        pathname: url,
        query: {
          view: 'gridView',
          page: 1
        }
      };
    }
  },
  compare: {
    to: `/compare`,
    as: (item, query = {}) => ({
      pathname: `/compare`,
      query: _objectSpread({}, query)
    })
  },
  contactUs: {
    to: `/contact-us`,
    as: (item, query = {}) => ({
      pathname: `/contact-us`,
      query: _objectSpread({}, query)
    })
  },
  dealerProfile: {
    to: `/dealer/[companyname]/[freakname]`,
    as: (item, query = {}) => ({
      pathname: `/dealer/${item.companyurlId || ''}/${item.userurlId || ''}`,
      query: _objectSpread({
        companyname: lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(item, 'companyurlId'),
        freakname: lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(item, 'userurlId')
      }, query)
    })
  },
  eventPost: {
    to: `/event-post/[id]`,
    as: (item, query = {}) => ({
      pathname: `/event-post/${item._id}`,
      query: _objectSpread({
        id: lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(item, '_id')
      }, query)
    })
  },
  faq: {
    to: `/faq`,
    as: (item, query = {}) => ({
      pathname: `/faq`,
      query: _objectSpread({}, query)
    })
  },
  faqDetails: {
    to: `/faq/details`,
    as: (item, query = {}) => ({
      pathname: `/faq/details`,
      query: _objectSpread({}, query)
    })
  },
  hashTag: {
    to: `/hashtag/[hashTag]`,
    as: (item, query = {}) => ({
      pathname: `/hashtag/${item}`,
      query: _objectSpread({
        id: item
      }, query)
    })
  },
  kpp: {
    to: `/kpp`,
    as: (item, query = {}) => ({
      pathname: `/kpp`,
      query: _objectSpread({}, query)
    })
  },
  kppBm: {
    to: `/kpp/kpp-bm`,
    as: (item, query = {}) => ({
      pathname: `/kpp/kpp-bm`,
      query: _objectSpread({}, query)
    })
  },
  kppEn: {
    to: `/kpp/kpp-en`,
    as: (item, query = {}) => ({
      pathname: `/kpp/kpp-en`,
      query: _objectSpread({}, query)
    })
  },
  kppRevision: {
    to: `/kpp/kpp-revision/[group]/[language]`,
    as: (item, query = {}) => ({
      pathname: `/kpp/kpp-revision/${lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(item, `group`)}/${lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(item, `language`) || ''}`,
      query: _objectSpread({
        group: lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(item, `group`) || '',
        language: lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(item, `language`) || ''
      }, query)
    })
  },
  live: {
    to: `/live`,
    as: (item, query = {}) => ({
      pathname: `/live`,
      query: _objectSpread({}, query)
    })
  },
  liveDetails: {
    to: `/live/[id]`,
    as: (item, query = {}) => ({
      pathname: `/live/${lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(item, ['dealerSocketId']) || ''}`,
      query: _objectSpread({
        id: lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(item, 'dealerSocketId')
      }, query)
    })
  },
  logout: {
    to: `/logout`,
    as: (item, query = {}) => ({
      pathname: `/logout`,
      query: _objectSpread({}, query)
    })
  },
  newCarsOnSale: {
    to: `/new-cars-on-sale/[parameter1]`,
    as: (query = {}, ...parameters) => {
      let url = `/new-cars-on-sale/malaysia`;
      return {
        pathname: url,
        query: {
          view: 'gridView',
          page: 1
        }
      };
    }
  },
  newCar: {
    to: `/newcar`,
    as: (item, query = {}) => ({
      pathname: `/newcar`,
      query: _objectSpread({}, query)
    })
  },
  newCarDetails: {
    to: `/newcar/details/[make]/[model]`,
    as: (item, query = {}) => ({
      pathname: `/newcar/details/${lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(item, ['make']) || ''}/${lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(item, ['model']) || ''}`,
      query: _objectSpread({
        make: lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(item, 'make'),
        model: lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(item, 'model')
      }, query)
    })
  },
  newCarFilter: {
    to: `/newcar/filter`,
    as: (item, query = {}) => ({
      pathname: `/newcar/filter`,
      query: _objectSpread({}, query)
    })
  },
  newCarMakerDetails: {
    to: `/newcar/maker/[id]`,
    as: (item, query = {}) => ({
      pathname: `/newcar/maker/${lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(item, ['make'])}`,
      query: _objectSpread({
        id: lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(item, 'make')
      }, query)
    })
  },
  petrolPrice: {
    to: `/petrolprice`,
    as: (item, query = {}) => ({
      pathname: `/petrolprice`,
      query: _objectSpread({}, query)
    })
  },
  previewCarAds: {
    to: `/previewCarAds/[id]`,
    as: (item, query = {}) => ({
      pathname: `/previewCarAds/${lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(item, ['_id']) || ''}`,
      query: _objectSpread({
        id: lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(item, '_id')
      }, query)
    })
  },
  profile: {
    to: `/profile/[id]`,
    as: (item, query = {}) => ({
      pathname: `/profile/${lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(item, ['userurlId']) || ''}`,
      query: _objectSpread({
        id: lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(item, 'userurlId')
      }, query)
    })
  },
  manageProfile: {
    to: `/profile/[id]/details`,
    as: (item, query = {}) => ({
      pathname: `/profile/${lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(item, 'userurlId') || ''}/details`,
      query: _objectSpread({
        id: lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(item, 'userurlId')
      }, query)
    })
  },
  profileSettings: {
    to: `/profile/[id]/details/settings`,
    as: (item, query = {}) => ({
      pathname: `/profile/${lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(item, `userurlId`) || ''}/details/settings`,
      query: _objectSpread({
        id: lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(item, 'userurlId')
      }, query)
    })
  },
  profileWishLists: {
    to: `/profile/[id]/details/wishlists`,
    as: (item, query = {}) => ({
      pathname: `/profile/${lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(item, `userurlId`) || ''}/details/wishlists`,
      query: _objectSpread({
        id: lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(item, 'userurlId')
      }, query)
    })
  },
  reconCarsOnSale: {
    to: `/recon-cars-on-sale/[parameter1]`,
    as: (query = {}, ...parameters) => {
      let url = `/recon-cars-on-sale/malaysia`;
      return {
        pathname: url,
        query: {
          view: 'gridView',
          page: 1
        }
      };
    }
  },
  searchCarFreaks: {
    to: `/search-car-freaks`,
    as: (item, query = {}) => ({
      pathname: `/search-car-freaks`,
      query: _objectSpread({}, query)
    })
  },
  socialBoard: {
    to: `/social-board`,
    as: (item, query = {}) => ({
      pathname: `/social-board`,
      query: _objectSpread({}, query)
    })
  },
  socialBoardDetails: {
    to: `/social-board/[id]`,
    as: (item, query = {}) => ({
      pathname: `/social-board/${lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(item, `_id`)}`,
      query: _objectSpread({
        id: lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(item, '_id')
      }, query)
    })
  },
  socialClub: {
    to: `/social-club`,
    as: (item, query = {}) => ({
      pathname: `/social-club`,
      query: _objectSpread({}, query)
    })
  },
  socialClubDetails: {
    to: `/social-club/[id]`,
    as: (item, query = {}) => ({
      pathname: `/social-club/${lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(item, `_id`)}`,
      query: _objectSpread({
        id: lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(item, '_id')
      }, query)
    })
  },
  socialNewsAndVideo: {
    to: `/socialNewsAndVideo`,
    as: (item, query = {}) => ({
      pathname: `/socialNewsAndVideo`,
      query: _objectSpread({}, query)
    })
  },
  termOfUse: {
    to: `/termOfUse`,
    as: (item, query = {}) => ({
      pathname: `/termOfUse`,
      query: _objectSpread({}, query)
    })
  },
  termsOfUse: {
    to: `/termsOfUse`,
    as: (item, query = {}) => ({
      pathname: `/termsOfUse`,
      query: _objectSpread({}, query)
    })
  },
  usedCarsOnSale: {
    to: `/used-cars-on-sale/[parameter1]`,
    as: (query = {}, ...parameters) => {
      let url = `/used-cars-on-sale/malaysia`;
      return {
        pathname: url,
        query: {
          view: 'gridView',
          page: 1
        }
      };
    }
  },
  viewCarDetails: {
    to: `/viewCar/[id]`,
    as: (item, query = {}) => ({
      pathname: `/viewCar/${lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(item, `_id`)}`,
      query: _objectSpread({
        id: lodash__WEBPACK_IMPORTED_MODULE_0___default.a.get(item, '_id')
      }, query)
    })
  },
  writeCarReview: {
    to: `/write-car-review`,
    as: (item, query = {}) => ({
      pathname: `/write-car-review`,
      query: _objectSpread({}, query)
    })
  }
};

/***/ }),

/***/ "./webPush.js":
/*!********************!*\
  !*** ./webPush.js ***!
  \********************/
/*! exports provided: tokenInlocalforage, initFirebaseToken, onMessageListener */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tokenInlocalforage", function() { return tokenInlocalforage; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initFirebaseToken", function() { return initFirebaseToken; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "onMessageListener", function() { return onMessageListener; });
/* harmony import */ var firebase_app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! firebase/app */ "firebase/app");
/* harmony import */ var firebase_app__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(firebase_app__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var firebase_messaging__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! firebase/messaging */ "firebase/messaging");
/* harmony import */ var firebase_messaging__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(firebase_messaging__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var localforage__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! localforage */ "localforage");
/* harmony import */ var localforage__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(localforage__WEBPACK_IMPORTED_MODULE_2__);



const PUBLIC_VAPID_KEY = "BCpKq8t61asvp3b1_uIcq1nL6cZZe-zhoDy83M84EmmTnxgTtn2Rj4CVXR3PjDQPbQ7oVdsWfge2BABk1HNIefs"; // For Firebase JS SDK v7.20.0 and later, measurementId is optional

const firebaseConfig = {
  apiKey: "AIzaSyBNkd-inUJRLD_ke7pwJg66LND8M2e9A_s",
  authDomain: "ccar-my.firebaseapp.com",
  databaseURL: "https://ccar-my.firebaseio.com",
  projectId: "ccar-my",
  storageBucket: "ccar-my.appspot.com",
  messagingSenderId: "827147986430",
  appId: "1:827147986430:web:9b41b5e04dafd307f98caf",
  measurementId: "G-L8NHNSDC47"
};

if (!firebase_app__WEBPACK_IMPORTED_MODULE_0___default.a.apps.length) {
  firebase_app__WEBPACK_IMPORTED_MODULE_0___default.a.initializeApp(firebaseConfig);
}

const tokenInlocalforage = async () => {
  return localforage__WEBPACK_IMPORTED_MODULE_2___default.a.getItem('fcm_token');
};
const initFirebaseToken = async () => {
  try {
    const messaging = firebase_app__WEBPACK_IMPORTED_MODULE_0___default.a.messaging();
    const tokenInLocalForage = await tokenInlocalforage(); //if FCM token is already there just return the token
    // if (tokenInLocalForage !== null) {
    //     return tokenInLocalForage;
    // }
    //requesting notification permission from browser

    const status = await Notification.requestPermission();

    if (status && status === 'granted') {
      //getting token from FCM
      const fcm_token = await messaging.getToken({
        vapidKey: PUBLIC_VAPID_KEY
      });

      if (fcm_token) {
        //setting FCM token in indexed db using localforage
        localforage__WEBPACK_IMPORTED_MODULE_2___default.a.setItem('fcm_token', fcm_token); //return the FCM token after saving it

        return fcm_token;
      }
    }
  } catch (error) {
    console.error(error);
    return null;
  }
};
const onMessageListener = () => {
  const messaging = firebase_app__WEBPACK_IMPORTED_MODULE_0___default.a.messaging();
  return new Promise(resolve => {
    messaging.onMessage(payload => {
      // console.log(payload);
      resolve(payload);
    });
  });
};

/***/ }),

/***/ 6:
/*!********************************************!*\
  !*** multi ./pages/profile/[id]/index.jsx ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! /Users/faraheen/ccar-cms-next-mobile/pages/profile/[id]/index.jsx */"./pages/profile/[id]/index.jsx");


/***/ }),

/***/ "@ant-design/compatible":
/*!*****************************************!*\
  !*** external "@ant-design/compatible" ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("@ant-design/compatible");

/***/ }),

/***/ "@ant-design/icons":
/*!************************************!*\
  !*** external "@ant-design/icons" ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("@ant-design/icons");

/***/ }),

/***/ "@brainhubeu/react-carousel":
/*!*********************************************!*\
  !*** external "@brainhubeu/react-carousel" ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("@brainhubeu/react-carousel");

/***/ }),

/***/ "@feathersjs/authentication-client":
/*!****************************************************!*\
  !*** external "@feathersjs/authentication-client" ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("@feathersjs/authentication-client");

/***/ }),

/***/ "@feathersjs/feathers":
/*!***************************************!*\
  !*** external "@feathersjs/feathers" ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("@feathersjs/feathers");

/***/ }),

/***/ "@feathersjs/socketio-client":
/*!**********************************************!*\
  !*** external "@feathersjs/socketio-client" ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("@feathersjs/socketio-client");

/***/ }),

/***/ "antd":
/*!***********************!*\
  !*** external "antd" ***!
  \***********************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("antd");

/***/ }),

/***/ "axios":
/*!************************!*\
  !*** external "axios" ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("axios");

/***/ }),

/***/ "browser-image-compression":
/*!********************************************!*\
  !*** external "browser-image-compression" ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("browser-image-compression");

/***/ }),

/***/ "cookie":
/*!*************************!*\
  !*** external "cookie" ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("cookie");

/***/ }),

/***/ "copy-to-clipboard":
/*!************************************!*\
  !*** external "copy-to-clipboard" ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("copy-to-clipboard");

/***/ }),

/***/ "emoji-mart":
/*!*****************************!*\
  !*** external "emoji-mart" ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("emoji-mart");

/***/ }),

/***/ "firebase/app":
/*!*******************************!*\
  !*** external "firebase/app" ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("firebase/app");

/***/ }),

/***/ "firebase/messaging":
/*!*************************************!*\
  !*** external "firebase/messaging" ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("firebase/messaging");

/***/ }),

/***/ "form-data":
/*!****************************!*\
  !*** external "form-data" ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("form-data");

/***/ }),

/***/ "local-storage":
/*!********************************!*\
  !*** external "local-storage" ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("local-storage");

/***/ }),

/***/ "localforage":
/*!******************************!*\
  !*** external "localforage" ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("localforage");

/***/ }),

/***/ "lodash":
/*!*************************!*\
  !*** external "lodash" ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("lodash");

/***/ }),

/***/ "moment":
/*!*************************!*\
  !*** external "moment" ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("moment");

/***/ }),

/***/ "next/router":
/*!******************************!*\
  !*** external "next/router" ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("next/router");

/***/ }),

/***/ "prop-types":
/*!*****************************!*\
  !*** external "prop-types" ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("prop-types");

/***/ }),

/***/ "prop-types-exact":
/*!***********************************!*\
  !*** external "prop-types-exact" ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("prop-types-exact");

/***/ }),

/***/ "query-string":
/*!*******************************!*\
  !*** external "query-string" ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("query-string");

/***/ }),

/***/ "rc-queue-anim":
/*!********************************!*\
  !*** external "rc-queue-anim" ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("rc-queue-anim");

/***/ }),

/***/ "react":
/*!************************!*\
  !*** external "react" ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("react");

/***/ }),

/***/ "react-cookie-consent":
/*!***************************************!*\
  !*** external "react-cookie-consent" ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("react-cookie-consent");

/***/ }),

/***/ "react-custom-scrollbars":
/*!******************************************!*\
  !*** external "react-custom-scrollbars" ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("react-custom-scrollbars");

/***/ }),

/***/ "react-facebook-login/dist/facebook-login-render-props":
/*!************************************************************************!*\
  !*** external "react-facebook-login/dist/facebook-login-render-props" ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("react-facebook-login/dist/facebook-login-render-props");

/***/ }),

/***/ "react-google-login":
/*!*************************************!*\
  !*** external "react-google-login" ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("react-google-login");

/***/ }),

/***/ "react-highlight-words":
/*!****************************************!*\
  !*** external "react-highlight-words" ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("react-highlight-words");

/***/ }),

/***/ "react-image-lightbox":
/*!***************************************!*\
  !*** external "react-image-lightbox" ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("react-image-lightbox");

/***/ }),

/***/ "react-indiana-drag-scroll":
/*!********************************************!*\
  !*** external "react-indiana-drag-scroll" ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("react-indiana-drag-scroll");

/***/ }),

/***/ "react-infinite-scroller":
/*!******************************************!*\
  !*** external "react-infinite-scroller" ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("react-infinite-scroller");

/***/ }),

/***/ "react-is":
/*!***************************!*\
  !*** external "react-is" ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("react-is");

/***/ }),

/***/ "react-loading-skeleton":
/*!*****************************************!*\
  !*** external "react-loading-skeleton" ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("react-loading-skeleton");

/***/ }),

/***/ "react-player":
/*!*******************************!*\
  !*** external "react-player" ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("react-player");

/***/ }),

/***/ "react-quill":
/*!******************************!*\
  !*** external "react-quill" ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("react-quill");

/***/ }),

/***/ "react-redux":
/*!******************************!*\
  !*** external "react-redux" ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("react-redux");

/***/ }),

/***/ "react-responsive":
/*!***********************************!*\
  !*** external "react-responsive" ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("react-responsive");

/***/ }),

/***/ "react-share":
/*!******************************!*\
  !*** external "react-share" ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("react-share");

/***/ }),

/***/ "react-show-more-text":
/*!***************************************!*\
  !*** external "react-show-more-text" ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("react-show-more-text");

/***/ }),

/***/ "react-sortablejs":
/*!***********************************!*\
  !*** external "react-sortablejs" ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("react-sortablejs");

/***/ }),

/***/ "redux":
/*!************************!*\
  !*** external "redux" ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("redux");

/***/ }),

/***/ "socket.io-client":
/*!***********************************!*\
  !*** external "socket.io-client" ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("socket.io-client");

/***/ }),

/***/ "styled-jsx/style":
/*!***********************************!*\
  !*** external "styled-jsx/style" ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("styled-jsx/style");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("url");

/***/ }),

/***/ "uuid":
/*!***********************!*\
  !*** external "uuid" ***!
  \***********************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("uuid");

/***/ })

/******/ });
//# sourceMappingURL=data:application/json;charset=utf-8;base64,