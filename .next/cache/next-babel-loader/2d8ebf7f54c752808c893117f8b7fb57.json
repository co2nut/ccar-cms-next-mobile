{"ast":null,"code":"var _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport { Col, Empty, Form, Icon, message, Row } from 'antd';\nimport _ from 'lodash';\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport client from '../../feathers';\nimport { updateSellerProfile } from '../../redux/actions/sellerProfile-actions';\nimport { withRouter } from 'next/router';\nimport { loading } from '../../redux/actions/app-actions';\nimport { setUser } from '../../redux/actions/user-actions';\nimport WindowScrollLoadWrapper from '../general/WindowScrollLoadWrapper';\nimport { arrayLengthCount, notEmptyLength } from '../../common-function';\nimport ReviewList from '../rating/ReviewList';\nimport WriteReviewButton from '../rating/WriteReviewButton';\nimport InfiniteScrollWrapper from '../general/InfiniteScrollWrapper';\n\nvar moment = require('moment');\n\nvar RATINGPAGESIZE = 4;\nvar reviewContainerRef = React.createRef();\n\nvar UserReceivedReview = function UserReceivedReview(props) {\n  _s();\n\n  var _useState = useState(false),\n      reviewLoading = _useState[0],\n      setReviewLoading = _useState[1];\n\n  var _useState2 = useState([]),\n      ratings = _useState2[0],\n      setRatings = _useState2[1];\n\n  var _useState3 = useState(1),\n      ratingPage = _useState3[0],\n      setRatingPage = _useState3[1];\n\n  var _useState4 = useState(0),\n      ratingTotal = _useState4[0],\n      setRatingTotal = _useState4[1];\n\n  var _useState5 = useState([]),\n      ownRating = _useState5[0],\n      setOwnRating = _useState5[1];\n\n  var _useState6 = useState({}),\n      profile = _useState6[0],\n      setProfile = _useState6[1];\n\n  useEffect(function () {}, []);\n  useEffect(function () {\n    getRatings((ratingPage - 1) * RATINGPAGESIZE);\n  }, [ratingPage]);\n  useEffect(function () {\n    setRatingPage(1);\n    setRatingTotal(0);\n    getRatings(0);\n    getOwnRating();\n  }, [profile, props.user]);\n  useEffect(function () {\n    if (_.isPlainObject(props.data) && !_.isEmpty(props.data)) {\n      setProfile(props.data);\n    } else {\n      setProfile({});\n    }\n  }, [props.data]);\n\n  function init() {\n    if (profile._id) {\n      client.service('users').find({\n        query: {\n          _id: profile._id,\n          $populate: [{\n            path: 'companyId',\n            ref: 'companys'\n          }]\n        }\n      }).then(function (res) {\n        if (notEmptyLength(res.data)) {\n          props.updateSellerProfile(res.data[0]);\n        }\n      })[\"catch\"](function (err) {\n        message.error(err.message);\n      });\n    }\n  }\n\n  function getOwnRating() {\n    if (_.get(profile, ['_id']) && _.get(props.user, ['authenticated']) && _.get(props.user, ['info', 'user', '_id'])) {\n      setReviewLoading(true);\n      client.service('rating').find({\n        query: {\n          // companyId: props.sellerProfile.company._id,\n          userId: _.get(profile, ['_id']),\n          reviewerId: _.get(props.user, ['info', 'user', '_id']),\n          $populate: [{\n            path: 'companyId',\n            ref: 'companys'\n          }, {\n            path: 'userId',\n            ref: 'users'\n          }, {\n            path: 'reviewerId',\n            ref: 'users'\n          }],\n          $limit: 1\n        }\n      }).then(function (res) {\n        setTimeout(function () {\n          setReviewLoading(false);\n        }, 1000);\n\n        if (notEmptyLength(res.data)) {\n          setOwnRating(res.data);\n        } else {\n          setOwnRating([]);\n        }\n      })[\"catch\"](function (err) {\n        setTimeout(function () {\n          setReviewLoading(false);\n        }, 1000);\n        message.error(err.message);\n      });\n    } else {\n      setOwnRating([]);\n    }\n  }\n\n  function getRatings(skip) {\n    if (_.get(profile, ['_id'])) {\n      var query = {\n        // companyId: profile.companyId._id,\n        userId: _.get(profile, ['_id']),\n        $populate: [{\n          path: 'companyId',\n          ref: 'companys'\n        }, {\n          path: 'reviewerId',\n          ref: 'users'\n        }],\n        $sort: {\n          createdAt: -1\n        },\n        $limit: RATINGPAGESIZE,\n        $skip: skip\n      }; //exclude auth user own rating and hide rating\n\n      if (_.get(props.user, ['authenticated']) && _.get(props.user, ['info', 'user', '_id'])) {\n        query.reviewerId = {\n          $ne: _.get(props.user, ['info', 'user', '_id'])\n        };\n        query[\"hideBy.userId\"] = {\n          $ne: _.get(props.user, ['info', 'user', '_id'])\n        };\n      }\n\n      setReviewLoading(true);\n      client.service('rating').find({\n        query: query\n      }).then(function (res) {\n        setTimeout(function () {\n          setReviewLoading(false);\n        }, 1000);\n\n        if (notEmptyLength(res.data)) {\n          var data;\n\n          if (skip == 0) {\n            data = res.data;\n          } else {\n            data = ratings.concat(res.data);\n          }\n\n          setRatingTotal(res.total);\n          setRatings(data);\n        }\n      })[\"catch\"](function (err) {\n        setTimeout(function () {\n          setReviewLoading(false);\n        }, 1000);\n        message.error(err.message);\n      });\n    } else {\n      setRatingTotal(0);\n      setRatings([]);\n    }\n  }\n\n  var _renderReviews = function _renderReviews(data) {\n    if (_.isPlainObject(data) && !_.isEmpty(profile)) {\n      return __jsx(Row, {\n        type: \"flex\",\n        justify: \"center\",\n        align: \"middle\",\n        gutter: [10, 10]\n      }, __jsx(Col, {\n        span: 12\n      }, __jsx(\"div\", null, __jsx(\"span\", {\n        className: \"padding-left-xs flex-items-align-center h6 font-weight-bold\"\n      }, \"USER REVIEWS\"))), __jsx(Col, {\n        span: 12\n      }, __jsx(\"div\", {\n        className: \" text-align-right\"\n      }, !_.get(profile, ['_id']) || notEmptyLength(ownRating) || _.get(profile, ['_id']) == _.get(props.user, ['info', 'user', '_id']) ? null : __jsx(WriteReviewButton, {\n        data: {\n          type: 'user',\n          userId: profile ? profile._id : null,\n          reviewerId: props.user.info.user ? props.user.info.user._id : null\n        },\n        mode: \"add\",\n        handleSuccess: function handleSuccess(v) {\n          init();\n        },\n        handleError: function handleError(e) {\n          message.error(e.message);\n        }\n      }))), __jsx(Col, {\n        span: 24\n      }, notEmptyLength(ratings) || notEmptyLength(ownRating) ? __jsx(\"div\", null, __jsx(\"div\", {\n        className: \"width-100\"\n      }, __jsx(ReviewList, {\n        data: notEmptyLength(ownRating) ? ownRating : [],\n        handleChange: function handleChange(v) {\n          init();\n        }\n      })), notEmptyLength(ratings) ? __jsx(InfiniteScrollWrapper, {\n        onScrolledBottom: function onScrolledBottom() {\n          if (arrayLengthCount(ratings) < ratingTotal) {\n            setRatingPage(ratingPage + 1);\n          }\n        },\n        hasMore: !reviewLoading && arrayLengthCount(ratings) < ratingTotal\n      }, __jsx(\"div\", null, __jsx(ReviewList, {\n        data: ratings,\n        handleChange: function handleChange(v) {\n          init();\n        }\n      }))) : null) : __jsx(\"div\", {\n        style: {\n          height: '15em',\n          backgroundColor: '#FFFFFF'\n        }\n      }, __jsx(Empty, {\n        style: {\n          position: 'relative',\n          top: '50%',\n          transform: 'translateY(-50%)'\n        },\n        image: \"/empty.png\",\n        imageStyle: {\n          height: 60\n        },\n        description: __jsx(\"span\", null, \"No Review Yet\")\n      }))));\n    } else {\n      return null;\n    }\n  };\n\n  return __jsx(Row, {\n    type: \"flex\",\n    justify: \"center\",\n    gutter: [20, 10]\n  }, __jsx(Col, {\n    xs: {\n      order: 1,\n      span: 24\n    },\n    sm: {\n      order: 1,\n      span: 24\n    },\n    md: {\n      order: 1,\n      span: 24\n    },\n    lg: {\n      order: 1,\n      span: 24\n    },\n    xl: {\n      order: 1,\n      span: 24\n    }\n  }, __jsx(Row, {\n    gutter: [20, 10]\n  }, __jsx(Col, {\n    xs: 24,\n    sm: 24,\n    md: 24,\n    lg: 24,\n    xl: 24\n  }, _renderReviews(profile)))));\n};\n\n_s(UserReceivedReview, \"oQt9oZLStqYNWXx2ncY2iZwYIeg=\");\n\n_c = UserReceivedReview;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    app: state.app,\n    user: state.user,\n    sellerProfile: state.sellerProfile\n  };\n};\n\nvar mapDispatchToProps = {\n  loading: loading,\n  setUser: setUser,\n  updateSellerProfile: updateSellerProfile\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Form.create()(withRouter(UserReceivedReview)));\n\nvar _c;\n\n$RefreshReg$(_c, \"UserReceivedReview\");","map":{"version":3,"sources":["/Users/faraheen/ccar-cms-next-mobile/components/profile/UserReceivedReview.jsx"],"names":["Col","Empty","Form","Icon","message","Row","_","React","useEffect","useState","connect","client","updateSellerProfile","withRouter","loading","setUser","WindowScrollLoadWrapper","arrayLengthCount","notEmptyLength","ReviewList","WriteReviewButton","InfiniteScrollWrapper","moment","require","RATINGPAGESIZE","reviewContainerRef","createRef","UserReceivedReview","props","reviewLoading","setReviewLoading","ratings","setRatings","ratingPage","setRatingPage","ratingTotal","setRatingTotal","ownRating","setOwnRating","profile","setProfile","getRatings","getOwnRating","user","isPlainObject","data","isEmpty","init","_id","service","find","query","$populate","path","ref","then","res","err","error","get","userId","reviewerId","$limit","setTimeout","skip","$sort","createdAt","$skip","$ne","concat","total","_renderReviews","type","info","v","e","height","backgroundColor","position","top","transform","order","span","mapStateToProps","state","app","sellerProfile","mapDispatchToProps","create"],"mappings":"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","sourcesContent":["import { Col, Empty, Form, Icon, message, Row } from 'antd';\nimport _ from 'lodash';\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport client from '../../feathers';\nimport { updateSellerProfile } from '../../redux/actions/sellerProfile-actions';\nimport { withRouter } from 'next/router';\nimport { loading } from '../../redux/actions/app-actions';\nimport { setUser } from '../../redux/actions/user-actions';\nimport WindowScrollLoadWrapper from '../general/WindowScrollLoadWrapper';\nimport { arrayLengthCount, notEmptyLength } from '../../common-function';\nimport ReviewList from '../rating/ReviewList';\nimport WriteReviewButton from '../rating/WriteReviewButton';\nimport InfiniteScrollWrapper from '../general/InfiniteScrollWrapper';\n\n\n\nvar moment = require('moment');\nconst RATINGPAGESIZE = 4;\n\nconst reviewContainerRef = React.createRef();\n\nconst UserReceivedReview = (props) => {\n\n\n    const [reviewLoading, setReviewLoading] = useState(false)\n    const [ratings, setRatings] = useState([])\n    const [ratingPage, setRatingPage] = useState(1)\n    const [ratingTotal, setRatingTotal] = useState(0)\n    const [ownRating, setOwnRating] = useState([])\n    const [profile, setProfile] = useState({})\n\n    useEffect(() => {\n    }, [])\n\n    useEffect(() => {\n        getRatings((ratingPage - 1) * RATINGPAGESIZE);\n    }, [ratingPage])\n\n\n    useEffect(() => {\n        setRatingPage(1);\n        setRatingTotal(0);\n        getRatings(0);\n        getOwnRating();\n    }, [profile, props.user])\n\n\n    useEffect(() => {\n        if (_.isPlainObject(props.data) && !_.isEmpty(props.data)) {\n            setProfile(props.data);\n        } else {\n            setProfile({});\n        }\n    }, [props.data])\n\n    function init() {\n\n        if (profile._id) {\n            client.service('users').find({\n                query: {\n                    _id: profile._id,\n                    $populate: [\n                        {\n                            path: 'companyId',\n                            ref: 'companys'\n                        }\n                    ],\n                }\n            }).then(res => {\n                if (notEmptyLength(res.data)) {\n                    props.updateSellerProfile(res.data[0])\n                }\n            }).catch(err => {\n                message.error(err.message);\n            })\n        }\n    }\n\n    function getOwnRating() {\n        if (_.get(profile, ['_id']) && _.get(props.user, ['authenticated']) && _.get(props.user, ['info', 'user', '_id'])) {\n\n            setReviewLoading(true);\n            client.service('rating').find({\n                query: {\n                    // companyId: props.sellerProfile.company._id,\n                    userId: _.get(profile, ['_id']),\n                    reviewerId: _.get(props.user, ['info', 'user', '_id']),\n                    $populate: [\n                        {\n                            path: 'companyId',\n                            ref: 'companys'\n                        },\n                        {\n                            path: 'userId',\n                            ref: 'users'\n                        },\n                        {\n                            path: 'reviewerId',\n                            ref: 'users'\n                        }\n                    ],\n                    $limit: 1,\n                }\n\n            }).then((res) => {\n                setTimeout(() => {\n                    setReviewLoading(false)\n                }, 1000);\n                if (notEmptyLength(res.data)) {\n                    setOwnRating(res.data);\n                } else {\n                    setOwnRating([]);\n                }\n            })\n                .catch((err) => {\n                    setTimeout(() => {\n                        setReviewLoading(false)\n                    }, 1000);\n                    message.error(err.message);\n                })\n        } else {\n            setOwnRating([]);\n        }\n    }\n\n    function getRatings(skip) {\n        if (_.get(profile, ['_id'])) {\n\n            let query = {\n                // companyId: profile.companyId._id,\n                userId: _.get(profile, ['_id']),\n                $populate: [\n                    {\n                        path: 'companyId',\n                        ref: 'companys'\n                    },\n                    {\n                        path: 'reviewerId',\n                        ref: 'users'\n                    }\n                ],\n                $sort: {\n                    createdAt: -1\n                },\n                $limit: RATINGPAGESIZE,\n                $skip: skip,\n            }\n\n            //exclude auth user own rating and hide rating\n            if (_.get(props.user, ['authenticated']) && _.get(props.user, ['info', 'user', '_id'])) {\n                query.reviewerId = {\n                    $ne: _.get(props.user, ['info', 'user', '_id']),\n                }\n\n                query[\"hideBy.userId\"] = {\n                    $ne: _.get(props.user, ['info', 'user', '_id']),\n                }\n            }\n            setReviewLoading(true);\n            client.service('rating').find({\n                query: query\n            }).then((res) => {\n                setTimeout(() => {\n                    setReviewLoading(false)\n                }, 1000);\n                if (notEmptyLength(res.data)) {\n                    let data;\n                    if (skip == 0) {\n                        data = res.data;\n                    } else {\n                        data = ratings.concat(res.data);\n                    }\n                    setRatingTotal(res.total);\n                    setRatings(data);\n                }\n            })\n                .catch((err) => {\n                    setTimeout(() => {\n                        setReviewLoading(false)\n                    }, 1000);\n                    message.error(err.message);\n                })\n        } else {\n            setRatingTotal(0);\n            setRatings([]);\n        }\n    }\n\n\n    const _renderReviews = (data) => {\n        if (_.isPlainObject(data) && !_.isEmpty(profile)) {\n            return (\n                <Row type=\"flex\" justify=\"center\" align=\"middle\" gutter={[10, 10]}>\n                    <Col span={12}>\n                        <div>\n                            <span className=\"padding-left-xs flex-items-align-center h6 font-weight-bold\">\n                                USER REVIEWS\n                            </span>\n                        </div>\n                    </Col>\n                    <Col span={12}>\n                        <div className=\" text-align-right\">\n                            {\n                                !_.get(profile, ['_id']) || notEmptyLength(ownRating) || _.get(profile, ['_id']) == _.get(props.user, ['info', 'user', '_id']) ?\n                                    null\n                                    :\n                                    <WriteReviewButton\n                                        data={{ type: 'user', userId: profile ? profile._id : null, reviewerId: props.user.info.user ? props.user.info.user._id : null }}\n                                        mode=\"add\"\n                                        handleSuccess={(v) => { init() }}\n                                        handleError={(e) => { message.error(e.message) }} />\n                            }\n                        </div>\n                    </Col>\n                    <Col span={24}>\n                        {\n                            notEmptyLength(ratings) || notEmptyLength(ownRating) ?\n                                <div>\n                                    <div className=\"width-100\">\n                                        <ReviewList data={notEmptyLength(ownRating) ? ownRating : []} handleChange={(v) => { init() }} /> \n                                    </div>\n                                    {\n                                        notEmptyLength(ratings) ?\n                                            <InfiniteScrollWrapper onScrolledBottom={() => {\n                                                if (arrayLengthCount(ratings) < ratingTotal) {\n                                                    setRatingPage(ratingPage + 1)\n                                                }\n                                            }}\n                                            hasMore={!reviewLoading && arrayLengthCount(ratings) < ratingTotal}\n                                            >\n                                                <div>\n                                                    <ReviewList data={ratings} handleChange={(v) => { init() }} />\n                                                </div>\n                                            </InfiniteScrollWrapper>\n                                            :\n                                            null\n                                    }\n                                </div>\n                                :\n                                (\n                                    <div style={{ height: '15em', backgroundColor: '#FFFFFF' }}>\n                                        <Empty\n                                            style={{ position: 'relative', top: '50%', transform: 'translateY(-50%)' }}\n                                            image=\"/empty.png\"\n                                            imageStyle={{\n                                                height: 60,\n                                            }\n                                            }\n                                            description={\n                                                <span>\n                                                    No Review Yet\n                                                </span>\n                                            }\n                                        >\n                                        </Empty>\n                                    </div>\n                                )\n                        }\n                    </Col>\n                </Row>\n            )\n        } else {\n            return null\n        }\n    }\n\n\n    return (\n        <Row type=\"flex\" justify=\"center\" gutter={[20, 10]}>\n            <Col xs={{ order: 1, span: 24 }} sm={{ order: 1, span: 24 }} md={{ order: 1, span: 24 }} lg={{ order: 1, span: 24 }} xl={{ order: 1, span: 24 }}>\n                <Row gutter={[20, 10]}>\n                    <Col xs={24} sm={24} md={24} lg={24} xl={24}>\n                        {_renderReviews(profile)}\n                    </Col>\n                </Row>\n            </Col>\n        </Row>\n    );\n}\n\n\nconst mapStateToProps = state => ({\n    app: state.app,\n    user: state.user,\n    sellerProfile: state.sellerProfile,\n});\n\nconst mapDispatchToProps = {\n    loading: loading,\n    setUser: setUser,\n    updateSellerProfile: updateSellerProfile,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Form.create()(withRouter(UserReceivedReview)));"]},"metadata":{},"sourceType":"module"}