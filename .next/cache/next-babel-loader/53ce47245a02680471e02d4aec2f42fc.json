{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport axios from 'axios';\nimport _ from 'lodash';\nimport Head from 'next/head';\nimport { useEffect, useState } from 'react';\nimport ReduxPersistWrapper from '../../../components/general/ReduxPersistWrapper';\nimport ViewCarDetailsPage from '../../../components/product-list/page/ViewCarDetailsPage';\nimport { withRouter } from 'next/router';\nimport { connect } from 'react-redux';\nimport ViewCarDetails2Page from '../../../components/product-list/page/ViewCarDetails2Page';\n\nvar App = function App(props) {\n  var carInfo = _.get(props, 'carInfo') || {};\n  var companyInfo = _.get(props, 'companyInfo') || {};\n\n  var url = \"https://uat2ssr.ccar.my/viewCar/\" + _.get(carInfo, '_id');\n\n  var oriUrl = !_.get(carInfo, 'code') ? \"https://ccar.my/viewCar/\" + _.get(carInfo, '_id') : \"https://ccar.my\";\n\n  var desc = _.get(carInfo, 'user.fullName') + ' | ' + _.get(companyInfo, 'name');\n\n  var area = _.get(companyInfo, 'area') ? ' | ' + (_.get(companyInfo, 'area') || '').toUpperCase() : '';\n  desc = desc + area; // if (carInfo.code) {\n  //     return null\n  // } else {\n\n  return __jsx(React.Fragment, null, __jsx(ReduxPersistWrapper, {\n    cookie: props.cookie\n  }, props.app.initedRedux ? __jsx(ViewCarDetailsPage, {\n    data: carInfo || {}\n  }) // <ViewCarDetails2Page data={carInfo || {}} />\n  : null)); // }\n};\n\n_c = App;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    app: state.app,\n    user: state.user,\n    productsList: state.productsList\n  };\n};\n\nvar mapDispatchToProps = {};\nexport var __N_SSP = true;\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(App));\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/faraheen/ccar-cms-next-mobile/pages/viewCar/[id]/index.js"],"names":["axios","_","Head","useEffect","useState","ReduxPersistWrapper","ViewCarDetailsPage","withRouter","connect","ViewCarDetails2Page","App","props","carInfo","get","companyInfo","url","oriUrl","desc","area","toUpperCase","cookie","app","initedRedux","mapStateToProps","state","user","productsList","mapDispatchToProps"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,mBAAP,MAAgC,iDAAhC;AACA,OAAOC,kBAAP,MAA+B,0DAA/B;AAEA,SAASC,UAAT,QAA2B,aAA3B;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,mBAAP,MAAgC,2DAAhC;;AAEA,IAAMC,GAAG,GAAG,SAANA,GAAM,CAACC,KAAD,EAAW;AACnB,MAAMC,OAAO,GAAGX,CAAC,CAACY,GAAF,CAAMF,KAAN,EAAa,SAAb,KAA2B,EAA3C;AACA,MAAMG,WAAW,GAAGb,CAAC,CAACY,GAAF,CAAMF,KAAN,EAAa,aAAb,KAA+B,EAAnD;;AAEA,MAAMI,GAAG,GAAG,qCAAqCd,CAAC,CAACY,GAAF,CAAMD,OAAN,EAAe,KAAf,CAAjD;;AACA,MAAMI,MAAM,GAAG,CAACf,CAAC,CAACY,GAAF,CAAMD,OAAN,EAAe,MAAf,CAAD,GAA0B,6BAA6BX,CAAC,CAACY,GAAF,CAAMD,OAAN,EAAe,KAAf,CAAvD,GAA+E,iBAA9F;;AACA,MAAIK,IAAI,GAAGhB,CAAC,CAACY,GAAF,CAAMD,OAAN,EAAe,eAAf,IAAkC,KAAlC,GAA0CX,CAAC,CAACY,GAAF,CAAMC,WAAN,EAAmB,MAAnB,CAArD;;AACA,MAAII,IAAI,GAAGjB,CAAC,CAACY,GAAF,CAAMC,WAAN,EAAmB,MAAnB,IAA6B,QAAQ,CAACb,CAAC,CAACY,GAAF,CAAMC,WAAN,EAAmB,MAAnB,KAA8B,EAA/B,EAAmCK,WAAnC,EAArC,GAAwF,EAAnG;AACAF,EAAAA,IAAI,GAAGA,IAAI,GAAGC,IAAd,CARmB,CAYnB;AACA;AACA;;AACA,SACI,MAAC,KAAD,CAAO,QAAP,QACI,MAAC,mBAAD;AAAqB,IAAA,MAAM,EAAEP,KAAK,CAACS;AAAnC,KAEQT,KAAK,CAACU,GAAN,CAAUC,WAAV,GACI,MAAC,kBAAD;AAAoB,IAAA,IAAI,EAAEV,OAAO,IAAI;AAArC,IADJ,CAEI;AAFJ,IAII,IANZ,CADJ,CADJ,CAfmB,CA4BnB;AAGH,CA/BD;;KAAMF,G;;AAiCN,IAAMa,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAC9BH,IAAAA,GAAG,EAAEG,KAAK,CAACH,GADmB;AAE9BI,IAAAA,IAAI,EAAED,KAAK,CAACC,IAFkB;AAG9BC,IAAAA,YAAY,EAAEF,KAAK,CAACE;AAHU,GAAL;AAAA,CAA7B;;AAOA,IAAMC,kBAAkB,GAAG,EAA3B;;AAGA,eAAenB,OAAO,CAACe,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CpB,UAAU,CAACG,GAAD,CAAvD,CAAf","sourcesContent":["import axios from 'axios'\nimport _ from 'lodash'\nimport Head from 'next/head'\nimport { useEffect, useState } from 'react'\nimport ReduxPersistWrapper from '../../../components/general/ReduxPersistWrapper'\nimport ViewCarDetailsPage from '../../../components/product-list/page/ViewCarDetailsPage'\nimport client from '../../../feathers'\nimport { withRouter } from 'next/router'\nimport { checkEnvReturnCmsUrl } from '../../../functionContent'\nimport { connect } from 'react-redux'\nimport ViewCarDetails2Page from '../../../components/product-list/page/ViewCarDetails2Page'\nvar moment = require('moment');\nconst App = (props) => {\n    const carInfo = _.get(props, 'carInfo') || {};\n    const companyInfo = _.get(props, 'companyInfo') || {};\n\n    const url = \"https://uat2ssr.ccar.my/viewCar/\" + _.get(carInfo, '_id')\n    const oriUrl = !_.get(carInfo, 'code') ? \"https://ccar.my/viewCar/\" + _.get(carInfo, '_id') : \"https://ccar.my\"\n    let desc = _.get(carInfo, 'user.fullName') + ' | ' + _.get(companyInfo, 'name')\n    let area = _.get(companyInfo, 'area') ? ' | ' + (_.get(companyInfo, 'area') || '').toUpperCase() : ''\n    desc = desc + area\n\n\n\n    // if (carInfo.code) {\n    //     return null\n    // } else {\n    return (\n        <React.Fragment>\n            <ReduxPersistWrapper cookie={props.cookie}>\n                {\n                    props.app.initedRedux ?\n                        <ViewCarDetailsPage data={carInfo || {}} />\n                        // <ViewCarDetails2Page data={carInfo || {}} />\n                        :\n                        null\n                }\n            </ReduxPersistWrapper>\n        </React.Fragment>\n    )\n    // }\n\n\n}\n\nconst mapStateToProps = state => ({\n    app: state.app,\n    user: state.user,\n    productsList: state.productsList,\n});\n\n\nconst mapDispatchToProps = {\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(App))\n\nexport async function getServerSideProps({ req, res, }) {\n    try {\n\n        let id = _.get(req, `params.id`) || _.get(req, `query.id`);\n        let carInfo = {\n            condition: '', companys: {}, carspecsAll: {}, registrationUrl: {}\n        };\n        let basePath = checkEnvReturnCmsUrl(client.io.io.uri)\n        \n        if (id) {\n\n            carInfo = await client.service('product-ads').find({\n                query: {\n                    _id: new Object(id),\n                    $populate: ['companyId', 'carspecsId', 'createdBy'],\n                }\n            })\n\n            carInfo = _.get(carInfo, ['data']) || [];\n            carInfo = carInfo.map(function (v) {\n                v.companys = v.companyId\n                v.carspecsAll = v.carspecsId\n                return v;\n            })\n            carInfo = _.get(carInfo, [0]) || {};\n            const currentDateTime = moment().format()\n\n\n            carInfo.addonSpotlight = _.find(carInfo.addon, { 'addonType': 'spotlight' })\n            carInfo.addonSpicydeal = _.find(carInfo.addon, { 'addonType': 'spicydeal' })\n            carInfo.addonKingadType = _.find(carInfo.addon, { 'addonType': 'kingad', 'showPrice': 'show' })\n            carInfo.addonKingadType2 = _.find(carInfo.addon, { 'addonType': 'kingad', 'showPrice': 'hide' })\n            carInfo.addonKingadType3 = _.find(carInfo.addon, { 'addonType': 'kingad', 'showPrice': 'highlight' })\n            let priority = ''\n            if (priority === '') {\n\n                if (carInfo.addonKingadType) {\n                    if (currentDateTime > moment(carInfo.addonKingadType.startDate).format() && currentDateTime < moment(carInfo.addonKingadType.endDate).format()) {\n                        priority = 'addonKingadType'\n                        carInfo.priority = 'addonKingadType'\n                        carInfo.addonKingadType.endDate = moment(carInfo.addonKingadType.endDate).format()\n                        carInfo.addonKingadType.startDate = moment(carInfo.addonKingadType.startDate).format()\n                    }\n                }\n            }\n\n            if (priority === '') {\n                if (carInfo.addonKingadType2) {\n                    if (currentDateTime > moment(carInfo.addonKingadType2.startDate).format() && currentDateTime < moment(carInfo.addonKingadType2.endDate).format()) {\n                        priority = 'addonKingadType2'\n                        carInfo.priority = 'addonKingadType2'\n                        carInfo.addonKingadType2.startDate = moment(carInfo.addonKingadType2.startDate).format()\n                        carInfo.addonKingadType2.endDate = moment(carInfo.addonKingadType2.endDate).format()\n                    }\n                }\n            }\n\n            if (priority === '') {\n                if (carInfo.addonKingadType3) {\n                    if (currentDateTime > moment(carInfo.addonKingadType3.startDate).format() && currentDateTime < moment(carInfo.addonKingadType3.endDate).format()) {\n                        priority = 'addonKingadType3'\n                        carInfo.priority = 'addonKingadType3'\n                        carInfo.addonKingadType3.startDate = moment(carInfo.addonKingadType3.startDate).format()\n                        carInfo.addonKingadType3.endDate = moment(carInfo.addonKingadType3.endDate).format()\n                    }\n                }\n            }\n\n            if (priority === '') {\n                if (carInfo.addonSpicydeal) {\n                    if (currentDateTime > moment(carInfo.addonSpicydeal.startDate).format() && currentDateTime < moment(carInfo.addonSpicydeal.endDate).format()) {\n                        priority = 'addonSpicydeal'\n                        carInfo.priority = 'addonSpicydeal'\n                        carInfo.addonSpicydeal.startDate = moment(carInfo.addonSpicydeal.startDate).format()\n                        carInfo.addonSpicydeal.endDate = moment(carInfo.addonSpicydeal.endDate).format()\n                    }\n                }\n            }\n\n            if (priority === '') {\n                if (carInfo.addonSpotlight) {\n                    if (currentDateTime > moment(carInfo.addonSpotlight.startDate).format() && currentDateTime < moment(carInfo.addonSpotlight.endDate).format()) {\n                        priority = 'addonSpotlight'\n                        carInfo.priority = 'addonSpotlight'\n                        carInfo.addonSpotlight.startDate = moment(carInfo.addonSpotlight.startDate).format()\n                        carInfo.addonSpotlight.endDate = moment(carInfo.addonSpotlight.endDate).format()\n                    }\n                }\n            }\n        }\n        if(!carInfo.addonSpotlight){carInfo.addonSpotlight=null}\n        if(!carInfo.addonSpicydeal){carInfo.addonSpicydeal=null}\n        if(!carInfo.addonKingadType){carInfo.addonKingadType=null}\n        if(!carInfo.addonKingadType2){carInfo.addonKingadType2=null}\n        if(!carInfo.addonKingadType3){carInfo.addonKingadType3=null}\n\n        let title = _.get(carInfo, ['title']) || null\n        let description = `${_.get(carInfo, 'companyId.name') || ''} | ${_.get(carInfo, 'description') || ''}` || null;\n         \n        let ogDescription = _.get(carInfo, 'user.fullName') + ' | ' + _.get(carInfo, 'companyId.name')\n        let imageUrl = (_.get(carInfo, ['carUrl', 0, 'url']) || '').indexOf('.jpg') >= 0 ? _.get(carInfo, ['carUrl', 0, 'url']) : (_.get(carInfo, ['carUrl', 0, 'url']) || '') + '.jpg';\n        let url = `${basePath}${req.url || ''}`;\n        return {\n            props: {\n                carInfo: carInfo || {},\n                // dealerInfo:json2,\n                companyInfo: _.get(carInfo, ['companyId']) || {},\n                cookie: _.get(req, ['headers', 'cookie']) || null,\n                seoData: {\n                    title: title,\n                    description: description,\n                    facebookAppId: \"747178012753410\",\n                    canonical: url,\n                    openGraph: {\n                        title: _.get(carInfo, ['title']) || null,\n                        description: description,\n                        url: url,\n                        type: 'website',\n                        site_name: 'CCAR SDN BHD',\n                        images: [\n                            {\n                                url: imageUrl,\n                                alt: `${_.get(carInfo, 'carspec.make') || ''} ${_.get(carInfo, 'carspec.model' || '')} image` || 'Car Sample Image',\n                            }\n                        ]\n                    }\n\n                }\n            }\n        };\n    } catch (error) {\n        console.log(error);\n        return {\n            props: {\n                carInfo: {},\n                // dealerInfo:json2,\n                companyInfo: {},\n                cookie: _.get(req, ['headers', 'cookie']) || null,\n            }\n        };\n    }\n}\n"]},"metadata":{},"sourceType":"module"}