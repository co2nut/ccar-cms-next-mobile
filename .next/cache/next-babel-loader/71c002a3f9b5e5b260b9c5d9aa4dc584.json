{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { Card, Form, message } from 'antd';\nimport _ from 'lodash';\nimport { withRouter } from 'next/dist/client/router';\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { useMediaQuery } from 'react-responsive';\nimport { notEmptyLength } from '../../../common-function';\nimport { filterCarBrandMode, filterCarModelMode, filterCarSearchKeywords, loading, loginMode, quickSearchProductsList, updateActiveMenu } from '../../../redux/actions/app-actions';\nimport { fetchProductsList, updateActiveIdProductList } from '../../../redux/actions/productsList-actions';\nimport { setUser } from '../../../redux/actions/user-actions';\nimport LayoutV2 from '../../general/LayoutV2';\nimport DealerProfile from '../DealerProfile';\nimport ProfileNotFound from '../ProfileNotFound';\nimport UserProfile from '../UserProfile';\nimport client from '../../../feathers';\nvar Meta = Card.Meta;\n\nvar ProfileHomePage = function ProfileHomePage(props) {\n  _s();\n\n  var _useState = useState('user'),\n      userType = _useState[0],\n      setUserType = _useState[1];\n\n  var _useState2 = useState({}),\n      profile = _useState2[0],\n      setProfile = _useState2[1];\n\n  var _useState3 = useState(false),\n      isOwn = _useState3[0],\n      setIsOwn = _useState3[1];\n\n  useEffect(function () {}, []);\n  useEffect(function () {\n    getProfile();\n  }, [props.router.query.id]);\n  useEffect(function () {}, [isOwn]);\n  useEffect(function () {\n    setIsOwn(_.get(props.user, ['authenticated']) && _.get(props.user, ['info', 'user', '_id']) == _.get(profile, ['_id']));\n  }, [props.user.authenticated, profile]);\n  useEffect(function () {\n    if (_.isPlainObject(profile) && !_.isEmpty(profile)) {\n      setUser(profile);\n    }\n  }, [profile]);\n\n  function getProfile() {\n    props.loading(true);\n    client.service('users').find({\n      query: {\n        userurlId: props.router.query.id,\n        $populate: [{\n          path: 'companyId',\n          ref: 'companys'\n        }]\n      }\n    }).then(function (res) {\n      props.loading(false);\n      setProfile(_.isArray(res.data) && notEmptyLength(res.data) ? res.data[0] : {});\n      setIsOwn(_.get(props.user, ['authenticated']) && _.get(props.user, ['info', 'user', '_id']) == props.router.query.id);\n      setUserType(_.get(res, ['data', 0, 'role']) ? _.get(res, ['data', 0, 'role']) == 'mobile-user' || _.get(res, ['data', 0, 'role']) == 'normaluser' ? 'user' : 'dealer' : '');\n    })[\"catch\"](function (err) {\n      props.loading(false);\n      message.error(err.message);\n    });\n  }\n\n  return __jsx(LayoutV2, null, __jsx(\"div\", {\n    className: \"section-version3\"\n  }, __jsx(\"div\", {\n    className: \"container-version3\",\n    style: {\n      touchAction: 'pan-y'\n    }\n  }, userType == 'user' ? __jsx(UserProfile, {\n    data: profile,\n    isOwn: isOwn,\n    onChangeCoverPhoto: function onChangeCoverPhoto(url) {\n      setProfile(_objectSpread(_objectSpread({}, profile), {}, {\n        profileCoverPhoto: url\n      }));\n    }\n  }) : userType == 'dealer' ? __jsx(DealerProfile, {\n    data: profile,\n    isOwn: isOwn,\n    onChangeCoverPhoto: function onChangeCoverPhoto(url) {\n      setProfile(_objectSpread(_objectSpread({}, profile), {}, {\n        profileCoverPhoto: url\n      }));\n    }\n  }) : __jsx(ProfileNotFound, null))));\n};\n\n_s(ProfileHomePage, \"3LBYWDHUuBG6dGY6NiKvWZEPY9U=\");\n\n_c = ProfileHomePage;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    sellCars: state.sellCars,\n    productsList: state.productsList,\n    app: state.app,\n    user: state.user\n  };\n};\n\nvar mapDispatchToProps = {\n  loginMode: loginMode,\n  updateActiveMenu: updateActiveMenu,\n  fetchProductsList: fetchProductsList,\n  updateActiveIdProductList: updateActiveIdProductList,\n  filterCarBrandMode: filterCarBrandMode,\n  filterCarModelMode: filterCarModelMode,\n  filterCarSearchKeywords: filterCarSearchKeywords,\n  quickSearchProductsList: quickSearchProductsList,\n  loading: loading,\n  setUser: setUser\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Form.create()(withRouter(ProfileHomePage)));\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileHomePage\");","map":{"version":3,"sources":["/Users/faraheen/ccar-cms-next-mobile/components/profile/page/ProfileHomePage.jsx"],"names":["Card","Form","message","_","withRouter","React","useEffect","useState","connect","useMediaQuery","notEmptyLength","filterCarBrandMode","filterCarModelMode","filterCarSearchKeywords","loading","loginMode","quickSearchProductsList","updateActiveMenu","fetchProductsList","updateActiveIdProductList","setUser","LayoutV2","DealerProfile","ProfileNotFound","UserProfile","client","Meta","ProfileHomePage","props","userType","setUserType","profile","setProfile","isOwn","setIsOwn","getProfile","router","query","id","get","user","authenticated","isPlainObject","isEmpty","service","find","userurlId","$populate","path","ref","then","res","isArray","data","err","error","touchAction","url","profileCoverPhoto","mapStateToProps","state","sellCars","productsList","app","mapDispatchToProps","create"],"mappings":"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","sourcesContent":["import { Card, Form, message } from 'antd';\nimport _ from 'lodash';\nimport { withRouter } from 'next/dist/client/router';\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { useMediaQuery } from 'react-responsive';\nimport { notEmptyLength } from '../../../common-function';\nimport { filterCarBrandMode, filterCarModelMode, filterCarSearchKeywords, loading, loginMode, quickSearchProductsList, updateActiveMenu } from '../../../redux/actions/app-actions';\nimport { fetchProductsList, updateActiveIdProductList } from '../../../redux/actions/productsList-actions';\nimport { setUser } from '../../../redux/actions/user-actions';\nimport LayoutV2 from '../../general/LayoutV2';\nimport DealerProfile from '../DealerProfile';\nimport ProfileNotFound from '../ProfileNotFound';\nimport UserProfile from '../UserProfile';\nimport client from '../../../feathers';\n\n\nconst { Meta } = Card;\n\n\nconst ProfileHomePage = (props) => {\n\n\n    const [userType, setUserType] = useState('user');\n    const [profile, setProfile] = useState({});\n    const [isOwn, setIsOwn] = useState(false);\n\n    useEffect(() => { \n \n    } , [])\n\n    useEffect(() => {\n        getProfile();\n    }, [props.router.query.id])\n\n    useEffect(() => {\n    }, [isOwn])\n\n    useEffect(() => {\n \n        setIsOwn(_.get(props.user, ['authenticated']) && _.get(props.user, ['info', 'user', '_id']) == _.get(profile, ['_id']))\n    }, [props.user.authenticated, profile])\n\n    useEffect(() => {\n        if (_.isPlainObject(profile) && !_.isEmpty(profile)) {\n            setUser(profile);\n        }\n\n    }, [profile])\n\n    function getProfile() {\n        props.loading(true);\n        client.service('users').find({\n            query: {\n                userurlId: props.router.query.id,\n                $populate: [\n                    {\n                        path: 'companyId',\n                        ref: 'companys'\n                    }\n                ],\n            }\n        }).then(res => {\n            props.loading(false);\n            setProfile(_.isArray(res.data) && notEmptyLength(res.data) ? res.data[0] : {})\n            setIsOwn(_.get(props.user, ['authenticated']) && _.get(props.user, ['info', 'user', '_id']) == props.router.query.id)\n            setUserType(_.get(res, ['data', 0, 'role']) ? _.get(res, ['data', 0, 'role']) == 'mobile-user' || _.get(res, ['data', 0, 'role']) == 'normaluser' ? 'user' : 'dealer' : '')\n        }).catch(err => {\n            props.loading(false);\n            message.error(err.message)\n        });\n    }\n\n\n    return (\n        <LayoutV2>\n            <div className=\"section-version3\">\n                <div className=\"container-version3\" style={{ touchAction: 'pan-y' }}>\n                    {\n                        userType == 'user' ?\n                            <UserProfile data={profile} isOwn={isOwn} onChangeCoverPhoto={(url) => {\n                                setProfile({ ...profile, profileCoverPhoto: url })\n                            }}\n                            />\n                            :\n                            userType == 'dealer' ?\n                            <DealerProfile data={profile} isOwn={isOwn} onChangeCoverPhoto={(url) => {\n                                setProfile({ ...profile, profileCoverPhoto: url })\n                            }} \n                            />\n                            :\n                            <ProfileNotFound />\n                        }\n                    </div>\n                </div>\n           \n\n        </LayoutV2 >\n    );\n}\n\nconst mapStateToProps = state => ({\n    sellCars: state.sellCars,\n    productsList: state.productsList,\n    app: state.app,\n    user: state.user,\n});\n\n\nconst mapDispatchToProps = {\n    loginMode: loginMode,\n    updateActiveMenu: updateActiveMenu,\n    fetchProductsList: fetchProductsList,\n    updateActiveIdProductList: updateActiveIdProductList,\n    filterCarBrandMode: filterCarBrandMode,\n    filterCarModelMode: filterCarModelMode,\n    filterCarSearchKeywords: filterCarSearchKeywords,\n    quickSearchProductsList: quickSearchProductsList,\n\n    loading: loading,\n    setUser,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Form.create()(withRouter(ProfileHomePage)));\n"]},"metadata":{},"sourceType":"module"}