{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { withRouter } from 'next/dist/client/router';\nimport { connect } from 'react-redux';\nimport { formatNumber } from '../../../common-function';\nimport CarMarketPage from '../../../components/product-list/page/CarMarketPage';\nimport { loading } from '../../../redux/actions/app-actions';\nimport ReduxPersistWrapper from '../../../components/general/ReduxPersistWrapper';\nimport { getCarBrand } from '../../../params/carBrandsList';\n\nvar antIcon = __jsx(\"img\", {\n  src: \"/assets/Ccar-logo.png\",\n  style: {\n    fontSize: 60\n  }\n});\n\nvar searchBarRef = React.createRef();\n\nvar Index = function Index(props) {\n  return __jsx(ReduxPersistWrapper, {\n    cookie: props.cookie\n  }, props.app.initedRedux ? __jsx(CarMarketPage, {\n    productList: props.productList || {},\n    config: props.config || {},\n    availableOptions: props.availableOptions || {},\n    productListTotal: props.productListTotal || 0,\n    filterGroup: props.filterGroup || {}\n  }) : null);\n};\n\n_c = Index;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    app: state.app,\n    user: state.user,\n    productsList: state.productsList\n  };\n};\n\nvar mapDispatchToProps = {\n  loading: loading\n};\nexport var __N_SSP = true;\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Index));\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/Users/faraheen/ccar-cms-next-mobile/pages/cars-on-sale/[parameter1]/index.js"],"names":["withRouter","connect","formatNumber","CarMarketPage","loading","ReduxPersistWrapper","getCarBrand","antIcon","fontSize","searchBarRef","React","createRef","Index","props","cookie","app","initedRedux","productList","config","availableOptions","productListTotal","filterGroup","mapStateToProps","state","user","productsList","mapDispatchToProps"],"mappings":";;AACA,SAASA,UAAT,QAA2B,yBAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AAGA,SAAkDC,YAAlD,QAA2F,0BAA3F;AACA,OAAOC,aAAP,MAA0B,qDAA1B;AACA,SAASC,OAAT,QAAwB,oCAAxB;AACA,OAAOC,mBAAP,MAAgC,iDAAhC;AACA,SAASC,WAAT,QAA4B,+BAA5B;;AAIA,IAAMC,OAAO,GAAG;AAAK,EAAA,GAAG,EAAC,uBAAT;AAAiC,EAAA,KAAK,EAAE;AAAEC,IAAAA,QAAQ,EAAE;AAAZ;AAAxC,EAAhB;;AAEA,IAAMC,YAAY,GAAGC,KAAK,CAACC,SAAN,EAArB;;AACA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD,EAAW;AAErB,SACI,MAAC,mBAAD;AAAqB,IAAA,MAAM,EAAEA,KAAK,CAACC;AAAnC,KAEQD,KAAK,CAACE,GAAN,CAAUC,WAAV,GACI,MAAC,aAAD;AACI,IAAA,WAAW,EAAEH,KAAK,CAACI,WAAN,IAAqB,EADtC;AAEI,IAAA,MAAM,EAAEJ,KAAK,CAACK,MAAN,IAAgB,EAF5B;AAGI,IAAA,gBAAgB,EAAEL,KAAK,CAACM,gBAAN,IAA0B,EAHhD;AAII,IAAA,gBAAgB,EAAEN,KAAK,CAACO,gBAAN,IAA0B,CAJhD;AAKI,IAAA,WAAW,EAAEP,KAAK,CAACQ,WAAN,IAAqB;AALtC,IADJ,GAQI,IAVZ,CADJ;AAeH,CAjBD;;KAAMT,K;;AAyEN,IAAMU,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAC9BR,IAAAA,GAAG,EAAEQ,KAAK,CAACR,GADmB;AAE9BS,IAAAA,IAAI,EAAED,KAAK,CAACC,IAFkB;AAG9BC,IAAAA,YAAY,EAAEF,KAAK,CAACE;AAHU,GAAL;AAAA,CAA7B;;AAOA,IAAMC,kBAAkB,GAAG;AACvBtB,EAAAA,OAAO,EAAEA;AADc,CAA3B;;AAGA,eAAeH,OAAO,CAACqB,eAAD,EAAkBI,kBAAlB,CAAP,CAA6C1B,UAAU,CAACY,KAAD,CAAvD,CAAf","sourcesContent":["import _ from 'lodash'\nimport { withRouter } from 'next/dist/client/router'\nimport { connect } from 'react-redux'\nimport brandFilterTotal from '../../../api/brandFilterTotal'\nimport carAdsFilter from '../../../api/carAdsFilter'\nimport { convertProductRouteParamsToFilterObject, formatNumber, getCarMarketSeoData } from '../../../common-function'\nimport CarMarketPage from '../../../components/product-list/page/CarMarketPage'\nimport { loading } from '../../../redux/actions/app-actions'\nimport ReduxPersistWrapper from '../../../components/general/ReduxPersistWrapper'\nimport { getCarBrand } from '../../../params/carBrandsList'\n\n\nconst modals = ['make', 'model', 'state', 'area', 'bodyType', 'color', 'fuelType'];\nconst antIcon = <img src=\"/assets/Ccar-logo.png\" style={{ fontSize: 60 }} />;\nconst PAGESIZE = 30;\nconst searchBarRef = React.createRef();\nconst Index = (props) => {\n\n    return (\n        <ReduxPersistWrapper cookie={props.cookie}>\n            {\n                props.app.initedRedux ?\n                    <CarMarketPage\n                        productList={props.productList || {}}\n                        config={props.config || {}}\n                        availableOptions={props.availableOptions || {}}\n                        productListTotal={props.productListTotal || 0}\n                        filterGroup={props.filterGroup || {}} />\n                    :\n                    null\n            }\n        </ReduxPersistWrapper>\n    )\n}\n\n\nexport async function getServerSideProps(context) {\n\n    const { parameter1, parameter2, parameter3 } = context.params;\n\n    let filterObj = context.query || {};\n    if (filterObj.data) {\n        try {\n            filterObj.data = JSON.parse(filterObj.data) || {};\n            filterObj = {\n                ...filterObj.data,\n                ...filterObj,\n            }\n        } catch (error) {\n\n        }\n        delete filterObj.data;\n    }\n    if (filterObj.sorting) {\n        try {\n            filterObj.sorting = JSON.parse(filterObj.sorting) || {};\n        } catch (error) {\n\n        }\n    }\n    filterObj = convertProductRouteParamsToFilterObject(filterObj);\n    if (_.get(filterObj, ['filterGroup'])) {\n        filterObj.filterGroup.condition = '';\n    }\n\n    let promises = [];\n    promises.push(carAdsFilter(_.cloneDeep(filterObj), PAGESIZE));\n    promises.push(brandFilterTotal(modals, _.cloneDeep(filterObj)));\n\n    let [carAdsRes, brandFilterRes] = await Promise.all(promises)\n\n    let seoData = getCarMarketSeoData(_.get(filterObj, 'filterGroup') || {}, _.get(carAdsRes, 'total') || 0);\n\n    return {\n        props: {\n            cookie: _.get(context, ['req', 'headers', 'cookie']) || null,\n            productList: _.get(carAdsRes, ['data']) || [],\n            productListTotal: _.get(carAdsRes, ['total']) || 0,\n            filterGroup: _.get(filterObj, ['filterGroup']) || {},\n            config: _.get(filterObj, ['config']) || {},\n            availableOptions: brandFilterRes || {},\n            seoData: {\n                ...seoData\n            }\n        }\n    }\n}\n\n\nconst mapStateToProps = state => ({\n    app: state.app,\n    user: state.user,\n    productsList: state.productsList,\n});\n\n\nconst mapDispatchToProps = {\n    loading: loading,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Index))"]},"metadata":{},"sourceType":"module"}