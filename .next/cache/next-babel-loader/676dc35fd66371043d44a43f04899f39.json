{"ast":null,"code":"var __jsx = React.createElement;\nimport { message } from 'antd';\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { loading, loginMode } from '../../redux/actions/app-actions';\nimport { loginSuccessful, logoutSuccessful } from '../../redux/actions/user-actions';\nimport client from '../../feathers';\nimport { withRouter } from 'next/router';\nimport localStorage from 'local-storage';\n\nconst Logout = props => {\n  useEffect(() => {\n    try {\n      localStorage.clear();\n      props.logoutSuccessful();\n      console.log(localStorage.get('redux'));\n      client.logout().then(res => {\n        message.success('Log out successful');\n        props.router.push('/');\n      }).catch(err => {\n        props.router.push('/');\n      });\n    } catch (err) {}\n  }, []);\n  return __jsx(React.Fragment, null);\n};\n\nconst mapStateToProps = state => ({\n  app: state.app\n});\n\nconst mapDispatchToProps = {\n  loading: loading,\n  loginMode: loginMode,\n  loginSuccessful: loginSuccessful,\n  logoutSuccessful: logoutSuccessful\n};\nexport async function getStaticProps({\n  params\n}) {\n  return {\n    props: {}\n  };\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Logout));","map":{"version":3,"sources":["/Users/faraheen/ccar-cms-next-mobile/pages/logout/index.js"],"names":["message","React","useEffect","connect","loading","loginMode","loginSuccessful","logoutSuccessful","client","withRouter","localStorage","Logout","props","clear","console","log","get","logout","then","res","success","router","push","catch","err","mapStateToProps","state","app","mapDispatchToProps","getStaticProps","params"],"mappings":";AAAA,SAASA,OAAT,QAAwB,MAAxB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,EAAkBC,SAAlB,QAAmC,iCAAnC;AACA,SAASC,eAAT,EAA0BC,gBAA1B,QAAkD,kCAAlD;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AACA,SAASC,UAAT,QAA2B,aAA3B;AACA,OAAOC,YAAP,MAAyB,eAAzB;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AAEtBV,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI;AACAQ,MAAAA,YAAY,CAACG,KAAb;AACAD,MAAAA,KAAK,CAACL,gBAAN;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAYL,YAAY,CAACM,GAAb,CAAiB,OAAjB,CAAZ;AACAR,MAAAA,MAAM,CAACS,MAAP,GAAgBC,IAAhB,CAAsBC,GAAD,IAAS;AAC1BnB,QAAAA,OAAO,CAACoB,OAAR,CAAgB,oBAAhB;AACAR,QAAAA,KAAK,CAACS,MAAN,CAAaC,IAAb,CAAkB,GAAlB;AACH,OAHD,EAGGC,KAHH,CAGSC,GAAG,IAAI;AACZZ,QAAAA,KAAK,CAACS,MAAN,CAAaC,IAAb,CAAkB,GAAlB;AACH,OALD;AAMH,KAVD,CAWA,OAAOE,GAAP,EAAY,CACX;AACJ,GAdQ,EAcN,EAdM,CAAT;AAgBA,SACI,MAAC,KAAD,CAAO,QAAP,OADJ;AAKH,CAvBD;;AAyBA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAC9BC,EAAAA,GAAG,EAAED,KAAK,CAACC;AADmB,CAAL,CAA7B;;AAIA,MAAMC,kBAAkB,GAAG;AACvBxB,EAAAA,OAAO,EAAEA,OADc;AAEvBC,EAAAA,SAAS,EAAEA,SAFY;AAGvBC,EAAAA,eAAe,EAAEA,eAHM;AAIvBC,EAAAA,gBAAgB,EAAEA;AAJK,CAA3B;AAOA,OAAO,eAAesB,cAAf,CAA8B;AAAEC,EAAAA;AAAF,CAA9B,EAA0C;AAC7C,SAAO;AAAElB,IAAAA,KAAK,EAAE;AAAT,GAAP;AACD;AAGH,eAAeT,OAAO,CAACsB,eAAD,EAAkBG,kBAAlB,CAAP,CAA8CnB,UAAU,CAACE,MAAD,CAAxD,CAAf","sourcesContent":["import { message } from 'antd';\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { loading, loginMode } from '../../redux/actions/app-actions';\nimport { loginSuccessful, logoutSuccessful } from '../../redux/actions/user-actions';\nimport client from '../../feathers';\nimport { withRouter } from 'next/router';\nimport localStorage from 'local-storage'\n\nconst Logout = (props) => {\n\n    useEffect(() => {\n        try {\n            localStorage.clear()\n            props.logoutSuccessful();\n            console.log(localStorage.get('redux'));\n            client.logout().then((res) => {\n                message.success('Log out successful')\n                props.router.push('/');\n            }).catch(err => {\n                props.router.push('/');\n            });\n        }\n        catch (err) {\n        }\n    }, [])\n\n    return (\n        <React.Fragment>\n        </React.Fragment>\n\n    );\n}\n\nconst mapStateToProps = state => ({\n    app: state.app\n});\n\nconst mapDispatchToProps = {\n    loading: loading,\n    loginMode: loginMode,\n    loginSuccessful: loginSuccessful,\n    logoutSuccessful: logoutSuccessful,\n};\n\nexport async function getStaticProps({ params }) {\n    return { props: {  } }\n  }\n  \n  \nexport default connect(mapStateToProps, mapDispatchToProps)((withRouter(Logout)));\n\n"]},"metadata":{},"sourceType":"module"}