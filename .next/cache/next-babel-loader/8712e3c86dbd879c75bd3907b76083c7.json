{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport _ from 'lodash';\nimport moment from 'moment';\nimport { FETCH_CARPLATESLIST } from '../actions/carPlatesList-actions';\nimport localStorage from 'local-storage';\nimport { checkIsNeedPersist, checkNeedPersist, getPersistObj, persistRedux } from '../config';\nvar INITIAL_STATE = {\n  carPlatesList: []\n};\nexport default function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  // checkNeedPersist(_.get(action, 'type'), 'carPlatesList', _.get(action, 'payload'), _.get(action, 'isRestoreData'));\n  var persistStates = _.get(localStorage.get('redux') || {}, 'carPlatesList') || INITIAL_STATE;\n\n  var newState = _objectSpread(_objectSpread({}, state), persistStates);\n\n  if (!_.isEqual(state, newState)) {\n    state = newState;\n  }\n\n  switch (action.type) {\n    case FETCH_CARPLATESLIST:\n      state = _objectSpread(_objectSpread({}, state), {}, {\n        carPlatesList: action.payload\n      });\n      break;\n\n    default:\n      state = state;\n      break;\n  }\n\n  persistRedux('carPlatesList', state);\n  return state;\n}","map":{"version":3,"sources":["/Users/faraheen/ccar-cms-next-mobile/redux/reducers/carPlatesList-reducer.js"],"names":["_","moment","FETCH_CARPLATESLIST","localStorage","checkIsNeedPersist","checkNeedPersist","getPersistObj","persistRedux","INITIAL_STATE","carPlatesList","state","action","persistStates","get","newState","isEqual","type","payload"],"mappings":";;;;;;AAAA,OAAOA,CAAP,MAAc,QAAd;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,mBAAT,QAAoC,kCAApC;AACA,OAAOC,YAAP,MAAyB,eAAzB;AACA,SAASC,kBAAT,EAA6BC,gBAA7B,EAA+CC,aAA/C,EAA8DC,YAA9D,QAAkF,WAAlF;AAEA,IAAMC,aAAa,GAAG;AAClBC,EAAAA,aAAa,EAAE;AADG,CAAtB;AAIA,eAAe,YAAyC;AAAA,MAA/BC,KAA+B,uEAAvBF,aAAuB;AAAA,MAARG,MAAQ;AAEpD;AAEA,MAAIC,aAAa,GAAGZ,CAAC,CAACa,GAAF,CAAMV,YAAY,CAACU,GAAb,CAAiB,OAAjB,KAA6B,EAAnC,EAAuC,eAAvC,KAA2DL,aAA/E;;AACA,MAAIM,QAAQ,mCACLJ,KADK,GAELE,aAFK,CAAZ;;AAIA,MAAG,CAACZ,CAAC,CAACe,OAAF,CAAUL,KAAV,EAAiBI,QAAjB,CAAJ,EAA+B;AAC7BJ,IAAAA,KAAK,GAAGI,QAAR;AACD;;AACD,UAAQH,MAAM,CAACK,IAAf;AACI,SAAKd,mBAAL;AACIQ,MAAAA,KAAK,mCACEA,KADF;AAEDD,QAAAA,aAAa,EAAEE,MAAM,CAACM;AAFrB,QAAL;AAIA;;AACJ;AACIP,MAAAA,KAAK,GAAGA,KAAR;AACA;AATR;;AAWAH,EAAAA,YAAY,CAAC,eAAD,EAAkBG,KAAlB,CAAZ;AAEA,SAAOA,KAAP;AACH","sourcesContent":["import _ from 'lodash'\nimport moment from 'moment'\nimport { FETCH_CARPLATESLIST } from '../actions/carPlatesList-actions';\nimport localStorage from 'local-storage';\nimport { checkIsNeedPersist, checkNeedPersist, getPersistObj, persistRedux } from '../config';\n\nconst INITIAL_STATE = {\n    carPlatesList: [],\n}\n\nexport default function (state = INITIAL_STATE, action) {\n\n    // checkNeedPersist(_.get(action, 'type'), 'carPlatesList', _.get(action, 'payload'), _.get(action, 'isRestoreData'));\n\n    let persistStates = _.get(localStorage.get('redux') || {}, 'carPlatesList') || INITIAL_STATE;\n    let newState = {\n        ...state,\n        ...persistStates\n    }\n    if(!_.isEqual(state, newState)){\n      state = newState;\n    }\n    switch (action.type) {\n        case FETCH_CARPLATESLIST:\n            state = {\n                ...state,\n                carPlatesList: action.payload\n            };\n            break;\n        default:\n            state = state\n            break;\n    }\n    persistRedux('carPlatesList', state)\n\n    return state;\n}"]},"metadata":{},"sourceType":"module"}