{"ast":null,"code":"var __jsx = React.createElement;\nimport { Avatar, Form, Tooltip } from 'antd';\nimport _ from 'lodash';\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'next/dist/client/router';\nimport { isValidNumber } from '../../../../common-function';\nimport { loading } from '../../../../redux/actions/app-actions';\nimport LightBoxGallery from '../../../general/light-box-gallery';\nimport { ccarLogo } from '../../../profile/config';\n\nconst ClubAvatar = props => {\n  const {\n    0: tooltipVisible,\n    1: setTooltipVisible\n  } = useState(false);\n  return __jsx(React.Fragment, null, __jsx(\"span\", {\n    className: `flex-items-align-center flex-justify-center ${props.className ? props.className : ''} ${props.redirectProfile ? 'cursor-pointer' : ''} `,\n    onClick: e => {\n      if (props.onClick) {\n        props.onClick(e);\n      }\n\n      if (_.get(props.data, ['_id']) && props.redirectProfile) {\n        if (props.onRedirect) {\n          props.onRedirect();\n        }\n\n        props.router.push(`/social-club/${props.data._id}`, undefined, {\n          shallow: false\n        });\n      }\n    }\n  }, __jsx(LightBoxGallery, {\n    images: _.compact([_.get(props.data, ['clubAvatar'])])\n  }, (data, setCurrentIndex, setVisible) => {\n    return __jsx(Tooltip, {\n      title: _.isPlainObject(props.data) && !_.isEmpty(props.data) ? _.get(props.data, ['clubName']) || '' : '',\n      visible: tooltipVisible,\n      onVisibleChange: visible => {\n        if (props.showTooltip) {\n          setTooltipVisible(visible);\n        }\n      }\n    }, __jsx(Avatar, {\n      onClick: e => {\n        if (!props.redirectProfile && props.showPreview) {\n          setCurrentIndex(0);\n          setVisible(true);\n        }\n      },\n      size: isValidNumber(props.size) || props.size == 'small' || props.size == 'large' ? props.size : 'default',\n      src: _.get(props.data, ['clubAvatar']) || ccarLogo,\n      className: `${props.redirectProfile || props.showPreview ? 'cursor-pointer' : ''} ${props.avatarClassName ? props.avatarClassName : ''}`\n    }));\n  }), props.showNameRight && props.data ? __jsx(\"span\", {\n    className: `d-inline-block text-align-center headline margin-left-md ${props.textClassName ? props.textClassName : '  '}`\n  }, props.renderName ? props.renderName(props.data) : `${_.get(props.data, ['clubName'])}`) : null), __jsx(\"div\", {\n    className: `text-align-center headline ${props.textClassName ? props.textClassName : '  '}`\n  }, props.showName && props.data && !props.showNameRight ? props.renderName ? props.renderName(props.data) : `${_.get(props.data, ['clubName'])}` : null));\n};\n\nconst mapStateToProps = state => ({\n  app: state.app,\n  user: state.user\n});\n\nconst mapDispatchToProps = {\n  loading: loading\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Form.create()(withRouter(ClubAvatar)));","map":{"version":3,"sources":["/Users/faraheen/ccar-cms-next-mobile/components/carFreak/components/club/club-avatar.jsx"],"names":["Avatar","Form","Tooltip","_","React","useState","connect","withRouter","isValidNumber","loading","LightBoxGallery","ccarLogo","ClubAvatar","props","tooltipVisible","setTooltipVisible","className","redirectProfile","e","onClick","get","data","onRedirect","router","push","_id","undefined","shallow","compact","setCurrentIndex","setVisible","isPlainObject","isEmpty","visible","showTooltip","showPreview","size","avatarClassName","showNameRight","textClassName","renderName","showName","mapStateToProps","state","app","user","mapDispatchToProps","create"],"mappings":";AAAA,SAASA,MAAT,EAAiBC,IAAjB,EAAuBC,OAAvB,QAAsC,MAAtC;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,yBAA3B;AACA,SAASC,aAAT,QAA8B,6BAA9B;AACA,SAASC,OAAT,QAAwB,uCAAxB;AACA,OAAOC,eAAP,MAA4B,oCAA5B;AACA,SAASC,QAAT,QAAyB,yBAAzB;;AAGA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAE1B,QAAM;AAAA,OAACC,cAAD;AAAA,OAAiBC;AAAjB,MAAsCV,QAAQ,CAAC,KAAD,CAApD;AAGA,SACI,MAAC,KAAD,CAAO,QAAP,QACI;AAAM,IAAA,SAAS,EAAG,+CAA8CQ,KAAK,CAACG,SAAN,GAAkBH,KAAK,CAACG,SAAxB,GAAoC,EAAG,IAAGH,KAAK,CAACI,eAAN,GAAwB,gBAAxB,GAA2C,EAAG,GAAxJ;AACI,IAAA,OAAO,EAAGC,CAAD,IAAO;AACZ,UAAIL,KAAK,CAACM,OAAV,EAAmB;AACfN,QAAAA,KAAK,CAACM,OAAN,CAAcD,CAAd;AACH;;AAED,UAAIf,CAAC,CAACiB,GAAF,CAAMP,KAAK,CAACQ,IAAZ,EAAkB,CAAC,KAAD,CAAlB,KAA8BR,KAAK,CAACI,eAAxC,EAAyD;AACrD,YAAIJ,KAAK,CAACS,UAAV,EAAsB;AAClBT,UAAAA,KAAK,CAACS,UAAN;AACH;;AACDT,QAAAA,KAAK,CAACU,MAAN,CAAaC,IAAb,CAAmB,gBAAeX,KAAK,CAACQ,IAAN,CAAWI,GAAI,EAAjD,EAAoDC,SAApD,EAA+D;AAAEC,UAAAA,OAAO,EAAG;AAAZ,SAA/D;AACH;AACJ;AAZL,KAcI,MAAC,eAAD;AAAiB,IAAA,MAAM,EAAExB,CAAC,CAACyB,OAAF,CAAU,CAACzB,CAAC,CAACiB,GAAF,CAAMP,KAAK,CAACQ,IAAZ,EAAkB,CAAC,YAAD,CAAlB,CAAD,CAAV;AAAzB,KAEQ,CAACA,IAAD,EAAOQ,eAAP,EAAwBC,UAAxB,KAAuC;AACnC,WACI,MAAC,OAAD;AAAS,MAAA,KAAK,EAAE3B,CAAC,CAAC4B,aAAF,CAAgBlB,KAAK,CAACQ,IAAtB,KAA+B,CAAClB,CAAC,CAAC6B,OAAF,CAAUnB,KAAK,CAACQ,IAAhB,CAAhC,GAAwDlB,CAAC,CAACiB,GAAF,CAAMP,KAAK,CAACQ,IAAZ,EAAkB,CAAC,UAAD,CAAlB,KAAmC,EAA3F,GAAgG,EAAhH;AAAoH,MAAA,OAAO,EAAEP,cAA7H;AAA6I,MAAA,eAAe,EAAGmB,OAAD,IAAa;AACvK,YAAIpB,KAAK,CAACqB,WAAV,EAAuB;AACnBnB,UAAAA,iBAAiB,CAACkB,OAAD,CAAjB;AACH;AACJ;AAJD,OAKI,MAAC,MAAD;AACI,MAAA,OAAO,EAAGf,CAAD,IAAO;AACZ,YAAI,CAACL,KAAK,CAACI,eAAP,IAA0BJ,KAAK,CAACsB,WAApC,EAAiD;AAC7CN,UAAAA,eAAe,CAAC,CAAD,CAAf;AACAC,UAAAA,UAAU,CAAC,IAAD,CAAV;AACH;AACJ,OANL;AAOI,MAAA,IAAI,EAAEtB,aAAa,CAACK,KAAK,CAACuB,IAAP,CAAb,IAA6BvB,KAAK,CAACuB,IAAN,IAAc,OAA3C,IAAsDvB,KAAK,CAACuB,IAAN,IAAc,OAApE,GAA8EvB,KAAK,CAACuB,IAApF,GAA2F,SAPrG;AAQI,MAAA,GAAG,EAAEjC,CAAC,CAACiB,GAAF,CAAMP,KAAK,CAACQ,IAAZ,EAAkB,CAAC,YAAD,CAAlB,KAAqCV,QAR9C;AASI,MAAA,SAAS,EAAG,GAAEE,KAAK,CAACI,eAAN,IAAyBJ,KAAK,CAACsB,WAA/B,GAA6C,gBAA7C,GAAgE,EAAG,IAAGtB,KAAK,CAACwB,eAAN,GAAwBxB,KAAK,CAACwB,eAA9B,GAAgD,EAAG;AAT3I,MALJ,CADJ;AAmBH,GAtBT,CAdJ,EAwCQxB,KAAK,CAACyB,aAAN,IAAuBzB,KAAK,CAACQ,IAA7B,GACI;AAAM,IAAA,SAAS,EAAG,4DAA2DR,KAAK,CAAC0B,aAAN,GAAsB1B,KAAK,CAAC0B,aAA5B,GAA4C,IAAK;AAA9H,KAEQ1B,KAAK,CAAC2B,UAAN,GACI3B,KAAK,CAAC2B,UAAN,CAAiB3B,KAAK,CAACQ,IAAvB,CADJ,GAGK,GAAElB,CAAC,CAACiB,GAAF,CAAMP,KAAK,CAACQ,IAAZ,EAAkB,CAAC,UAAD,CAAlB,CAAgC,EAL/C,CADJ,GAUI,IAlDZ,CADJ,EAsDI;AAAK,IAAA,SAAS,EAAG,8BAA6BR,KAAK,CAAC0B,aAAN,GAAsB1B,KAAK,CAAC0B,aAA5B,GAA4C,IAAK;AAA/F,KAEQ1B,KAAK,CAAC4B,QAAN,IAAkB5B,KAAK,CAACQ,IAAxB,IAAgC,CAACR,KAAK,CAACyB,aAAvC,GACIzB,KAAK,CAAC2B,UAAN,GACI3B,KAAK,CAAC2B,UAAN,CAAiB3B,KAAK,CAACQ,IAAvB,CADJ,GAGK,GAAElB,CAAC,CAACiB,GAAF,CAAMP,KAAK,CAACQ,IAAZ,EAAkB,CAAC,UAAD,CAAlB,CAAgC,EAJ3C,GAMI,IARZ,CAtDJ,CADJ;AAoEH,CAzED;;AA4EA,MAAMqB,eAAe,GAAGC,KAAK,KAAK;AAC9BC,EAAAA,GAAG,EAAED,KAAK,CAACC,GADmB;AAE9BC,EAAAA,IAAI,EAAEF,KAAK,CAACE;AAFkB,CAAL,CAA7B;;AAKA,MAAMC,kBAAkB,GAAG;AACvBrC,EAAAA,OAAO,EAAEA;AADc,CAA3B;AAGA,eAAeH,OAAO,CAACoC,eAAD,EAAkBI,kBAAlB,CAAP,CAA6C7C,IAAI,CAAC8C,MAAL,GAAcxC,UAAU,CAACK,UAAD,CAAxB,CAA7C,CAAf","sourcesContent":["import { Avatar, Form, Tooltip } from 'antd';\nimport _ from 'lodash';\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'next/dist/client/router';\nimport { isValidNumber } from '../../../../common-function';\nimport { loading } from '../../../../redux/actions/app-actions';\nimport LightBoxGallery from '../../../general/light-box-gallery';\nimport { ccarLogo } from '../../../profile/config';\n\n\nconst ClubAvatar = (props) => {\n\n    const [tooltipVisible, setTooltipVisible] = useState(false);\n\n\n    return (\n        <React.Fragment>\n            <span className={`flex-items-align-center flex-justify-center ${props.className ? props.className : ''} ${props.redirectProfile ? 'cursor-pointer' : ''} `}\n                onClick={(e) => {\n                    if (props.onClick) {\n                        props.onClick(e)\n                    }\n\n                    if (_.get(props.data, ['_id']) && props.redirectProfile) {\n                        if (props.onRedirect) {\n                            props.onRedirect()\n                        }\n                        props.router.push(`/social-club/${props.data._id}`, undefined, { shallow : false })\n                    }\n                }}\n            >\n                <LightBoxGallery images={_.compact([_.get(props.data, ['clubAvatar'])])}>\n                    {\n                        (data, setCurrentIndex, setVisible) => {\n                            return (\n                                <Tooltip title={_.isPlainObject(props.data) && !_.isEmpty(props.data) ? _.get(props.data, ['clubName']) || '' : ''} visible={tooltipVisible} onVisibleChange={(visible) => {\n                                    if (props.showTooltip) {\n                                        setTooltipVisible(visible)\n                                    }\n                                }}>\n                                    <Avatar\n                                        onClick={(e) => {\n                                            if (!props.redirectProfile && props.showPreview) {\n                                                setCurrentIndex(0);\n                                                setVisible(true);\n                                            }\n                                        }}\n                                        size={isValidNumber(props.size) || props.size == 'small' || props.size == 'large' ? props.size : 'default'}\n                                        src={_.get(props.data, ['clubAvatar']) || ccarLogo}\n                                        className={`${props.redirectProfile || props.showPreview ? 'cursor-pointer' : ''} ${props.avatarClassName ? props.avatarClassName : ''}`}>\n                                    </Avatar>\n                                </Tooltip>\n                            )\n                        }\n                    }\n                </LightBoxGallery>\n                {\n                    props.showNameRight && props.data ?\n                        <span className={`d-inline-block text-align-center headline margin-left-md ${props.textClassName ? props.textClassName : '  '}`} >\n                            {\n                                props.renderName ?\n                                    props.renderName(props.data)\n                                    :\n                                    `${_.get(props.data, ['clubName'])}`\n                            }\n                        </span>\n                        :\n                        null\n                }\n            </span>\n            <div className={`text-align-center headline ${props.textClassName ? props.textClassName : '  '}`}>\n                {\n                    props.showName && props.data && !props.showNameRight ?\n                        props.renderName ?\n                            props.renderName(props.data)\n                            :\n                            `${_.get(props.data, ['clubName'])}`\n                        :\n                        null\n                }\n            </div>\n        </React.Fragment>\n    );\n}\n\n\nconst mapStateToProps = state => ({\n    app: state.app,\n    user: state.user,\n});\n\nconst mapDispatchToProps = {\n    loading: loading,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Form.create()(withRouter(ClubAvatar)));"]},"metadata":{},"sourceType":"module"}