{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { HYDRATE, createWrapper } from 'next-redux-wrapper';\nimport thunkMiddleware from 'redux-thunk';\nimport app from '../redux/reducers/app-reducer';\nimport carfreak from '../redux/reducers/carfreak-reducer';\nimport carPlatesList from '../redux/reducers/carPlatesList-reducer';\nimport kpp from '../redux/reducers/kpp-reducer';\nimport live from '../redux/reducers/live-reducer';\nimport newcars from '../redux/reducers/newcars-reducer';\nimport productsList from '../redux/reducers/productsList-reducer';\nimport register from '../redux/reducers/register-reducer';\nimport sellerProfile from '../redux/reducers/sellerProfile-reducer';\nimport socketRefresh from '../redux/reducers/socketRefresh-reducer';\nimport user from '../redux/reducers/user-reducer';\nimport userlikes from '../redux/reducers/userlikes-reducer';\nimport variant from '../redux/reducers/variant-reducer';\n\nvar bindMiddleware = function bindMiddleware(middleware) {\n  if (true) {\n    var _require = require('redux-devtools-extension'),\n        composeWithDevTools = _require.composeWithDevTools;\n\n    return composeWithDevTools(applyMiddleware.apply(void 0, _toConsumableArray(middleware)));\n  }\n\n  return applyMiddleware.apply(void 0, _toConsumableArray(middleware));\n};\n\nvar combinedReducer = combineReducers({\n  app: app,\n  carfreak: carfreak,\n  carPlatesList: carPlatesList,\n  kpp: kpp,\n  live: live,\n  newcars: newcars,\n  productsList: productsList,\n  register: register,\n  sellerProfile: sellerProfile,\n  socketRefresh: socketRefresh,\n  userlikes: userlikes,\n  variant: variant,\n  user: user\n});\n\nvar reducer = function reducer(state, action) {\n  if (action.type === HYDRATE) {\n    var nextState = _objectSpread(_objectSpread({}, state), action.payload);\n\n    if (state.count.count) nextState.count.count = state.count.count; // preserve count value on client side navigation\n\n    return nextState;\n  } else {\n    return combinedReducer(state, action);\n  }\n};\n\nvar initStore = function initStore() {\n  return createStore(reducer, bindMiddleware([thunkMiddleware]));\n};\n\nexport var wrapper = createWrapper(initStore);\nexport var store = initStore();","map":{"version":3,"sources":["/Users/faraheen/ccar-cms-next-mobile/redux/store.js"],"names":["createStore","applyMiddleware","combineReducers","HYDRATE","createWrapper","thunkMiddleware","app","carfreak","carPlatesList","kpp","live","newcars","productsList","register","sellerProfile","socketRefresh","user","userlikes","variant","bindMiddleware","middleware","require","composeWithDevTools","combinedReducer","reducer","state","action","type","nextState","payload","count","initStore","wrapper","store"],"mappings":";;;;;;;AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,SAASC,OAAT,EAAkBC,aAAlB,QAAuC,oBAAvC;AACA,OAAOC,eAAP,MAA4B,aAA5B;AACA,OAAOC,GAAP,MAAgB,+BAAhB;AACA,OAAOC,QAAP,MAAqB,oCAArB;AACA,OAAOC,aAAP,MAA0B,yCAA1B;AACA,OAAOC,GAAP,MAAgB,+BAAhB;AACA,OAAOC,IAAP,MAAiB,gCAAjB;AACA,OAAOC,OAAP,MAAoB,mCAApB;AACA,OAAOC,YAAP,MAAyB,wCAAzB;AACA,OAAOC,QAAP,MAAqB,oCAArB;AACA,OAAOC,aAAP,MAA0B,yCAA1B;AACA,OAAOC,aAAP,MAA0B,yCAA1B;AACA,OAAOC,IAAP,MAAiB,gCAAjB;AACA,OAAOC,SAAP,MAAsB,qCAAtB;AACA,OAAOC,OAAP,MAAoB,mCAApB;;AAIA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,UAAD,EAAgB;AACrC,YAA2C;AACzC,mBAAgCC,OAAO,CAAC,0BAAD,CAAvC;AAAA,QAAQC,mBAAR,YAAQA,mBAAR;;AACA,WAAOA,mBAAmB,CAACrB,eAAe,MAAf,4BAAmBmB,UAAnB,EAAD,CAA1B;AACD;;AACD,SAAOnB,eAAe,MAAf,4BAAmBmB,UAAnB,EAAP;AACD,CAND;;AAQA,IAAMG,eAAe,GAAGrB,eAAe,CAAC;AACtCI,EAAAA,GAAG,EAAHA,GADsC;AAEtCC,EAAAA,QAAQ,EAARA,QAFsC;AAGtCC,EAAAA,aAAa,EAAbA,aAHsC;AAItCC,EAAAA,GAAG,EAAHA,GAJsC;AAKtCC,EAAAA,IAAI,EAAJA,IALsC;AAMtCC,EAAAA,OAAO,EAAPA,OANsC;AAOtCC,EAAAA,YAAY,EAAZA,YAPsC;AAQtCC,EAAAA,QAAQ,EAARA,QARsC;AAStCC,EAAAA,aAAa,EAAbA,aATsC;AAUtCC,EAAAA,aAAa,EAAbA,aAVsC;AAWtCE,EAAAA,SAAS,EAATA,SAXsC;AAYtCC,EAAAA,OAAO,EAAPA,OAZsC;AAatCF,EAAAA,IAAI,EAAJA;AAbsC,CAAD,CAAvC;;AAgBA,IAAMQ,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD,EAAQC,MAAR,EAAmB;AACjC,MAAIA,MAAM,CAACC,IAAP,KAAgBxB,OAApB,EAA6B;AAC3B,QAAMyB,SAAS,mCACVH,KADU,GAEVC,MAAM,CAACG,OAFG,CAAf;;AAIA,QAAIJ,KAAK,CAACK,KAAN,CAAYA,KAAhB,EAAuBF,SAAS,CAACE,KAAV,CAAgBA,KAAhB,GAAwBL,KAAK,CAACK,KAAN,CAAYA,KAApC,CALI,CAKsC;;AACjE,WAAOF,SAAP;AACD,GAPD,MAOO;AACL,WAAOL,eAAe,CAACE,KAAD,EAAQC,MAAR,CAAtB;AACD;AACF,CAXD;;AAaA,IAAMK,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtB,SAAO/B,WAAW,CAACwB,OAAD,EAAUL,cAAc,CAAC,CAACd,eAAD,CAAD,CAAxB,CAAlB;AACD,CAFD;;AAMA,OAAO,IAAM2B,OAAO,GAAG5B,aAAa,CAAC2B,SAAD,CAA7B;AAEP,OAAO,IAAME,KAAK,GAAGF,SAAS,EAAvB","sourcesContent":["import { createStore, applyMiddleware, combineReducers } from 'redux'\nimport { HYDRATE, createWrapper } from 'next-redux-wrapper'\nimport thunkMiddleware from 'redux-thunk'\nimport app from '../redux/reducers/app-reducer'\nimport carfreak from '../redux/reducers/carfreak-reducer'\nimport carPlatesList from '../redux/reducers/carPlatesList-reducer'\nimport kpp from '../redux/reducers/kpp-reducer'\nimport live from '../redux/reducers/live-reducer'\nimport newcars from '../redux/reducers/newcars-reducer'\nimport productsList from '../redux/reducers/productsList-reducer'\nimport register from '../redux/reducers/register-reducer'\nimport sellerProfile from '../redux/reducers/sellerProfile-reducer'\nimport socketRefresh from '../redux/reducers/socketRefresh-reducer'\nimport user from '../redux/reducers/user-reducer'\nimport userlikes from '../redux/reducers/userlikes-reducer'\nimport variant from '../redux/reducers/variant-reducer'\n\n\n\nconst bindMiddleware = (middleware) => {\n  if (process.env.NODE_ENV !== 'production') {\n    const { composeWithDevTools } = require('redux-devtools-extension')\n    return composeWithDevTools(applyMiddleware(...middleware))\n  }\n  return applyMiddleware(...middleware)\n}\n\nconst combinedReducer = combineReducers({\n  app,\n  carfreak,\n  carPlatesList,\n  kpp,\n  live,\n  newcars,\n  productsList,\n  register,\n  sellerProfile,\n  socketRefresh,\n  userlikes,\n  variant,\n  user,\n})\n\nconst reducer = (state, action) => {\n  if (action.type === HYDRATE) {\n    const nextState = {\n      ...state, // use previous state\n      ...action.payload, // apply delta from hydration\n    }\n    if (state.count.count) nextState.count.count = state.count.count // preserve count value on client side navigation\n    return nextState\n  } else {\n    return combinedReducer(state, action)\n  }\n}\n\nconst initStore = () => {\n  return createStore(reducer, bindMiddleware([thunkMiddleware]))\n}\n\n\n\nexport const wrapper = createWrapper(initStore)\n\nexport const store = initStore();\n"]},"metadata":{},"sourceType":"module"}