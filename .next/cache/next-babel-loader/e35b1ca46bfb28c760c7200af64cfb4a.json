{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Form } from 'antd';\nimport React, { useEffect } from 'react';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport { connect } from 'react-redux';\nimport { v4 } from 'uuid';\nimport { withRouter } from 'next/router';\nimport { isValidNumber } from '../../common-function';\nlet uid = v4();\nlet containerRef = {};\ncontainerRef[uid] = React.createRef();\n\nconst ScrollLoadWrapper = props => {\n  useEffect(() => {\n    if (props.getRef) {\n      props.getRef(containerRef[uid]);\n    }\n  }, [containerRef[uid].current]);\n\n  function checkScrolledToBottom(ref) {\n    try {\n      if (!!ref) {\n        let scrollHeight = ref.current.getScrollHeight();\n        let currentPosition = ref.current.getValues();\n        currentPosition = currentPosition.scrollTop + currentPosition.clientHeight;\n        let scrollRange = 30;\n\n        if (isValidNumber(props.scrollRange)) {\n          if (props.scrollRangeUsePercentage) {\n            scrollRange = scrollHeight * (parseFloat(props.scrollRange) / 100);\n          } else {\n            scrollRange = parseFloat(props.scrollRange);\n          }\n        }\n\n        if (scrollHeight - currentPosition <= scrollRange) {\n          if (props.onScrolledBottom) {\n            props.onScrolledBottom();\n          }\n        }\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  useEffect(() => {\n    if (_.get(containerRef, [uid, 'current'])) {\n      if (props.getRef) {\n        props.getRef(containerRef[uid].current);\n      }\n    }\n  }, [containerRef[uid]]);\n  return __jsx(React.Fragment, null, __jsx(Scrollbars, {\n    autoHide: true,\n    style: _objectSpread({\n      height: '100%',\n      width: '100%'\n    }, props.style),\n    ref: containerRef[uid],\n    onScrollStop: () => {\n      checkScrolledToBottom(containerRef[uid]);\n    },\n    autoHeightMax: props.autoHeightMax || 'auto',\n    autoHeightMin: props.autoHeightMin || 'auto',\n    autoHeight: props.autoHeight || false\n  }, props.children));\n};\n\nconst mapStateToProps = state => ({\n  app: state.app,\n  user: state.user\n});\n\nconst mapDispatchToProps = {};\nexport default connect(mapStateToProps, mapDispatchToProps)(Form.create()(withRouter(ScrollLoadWrapper)));","map":{"version":3,"sources":["/Users/faraheen/ccar-cms-next-mobile/components/general/ScrollLoadWrapper.jsx"],"names":["Form","React","useEffect","Scrollbars","connect","v4","withRouter","isValidNumber","uid","containerRef","createRef","ScrollLoadWrapper","props","getRef","current","checkScrolledToBottom","ref","scrollHeight","getScrollHeight","currentPosition","getValues","scrollTop","clientHeight","scrollRange","scrollRangeUsePercentage","parseFloat","onScrolledBottom","error","console","log","_","get","height","width","style","autoHeightMax","autoHeightMin","autoHeight","children","mapStateToProps","state","app","user","mapDispatchToProps","create"],"mappings":"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","sourcesContent":["import { Form } from 'antd';\nimport React, { useEffect } from 'react';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport { connect } from 'react-redux';\nimport { v4 } from 'uuid';\nimport { withRouter } from 'next/router';\nimport { isValidNumber } from '../../common-function';\n\n\n\nlet uid = v4();\nlet containerRef = {};\ncontainerRef[uid] = React.createRef();\n\nconst ScrollLoadWrapper = (props) => {\n\n    useEffect(() => { \n\n        if(props.getRef){\n            props.getRef(containerRef[uid]);\n        }\n    \n    } , [containerRef[uid].current])\n\n    function checkScrolledToBottom(ref) {\n        try {\n            if (!!ref) {\n\n                let scrollHeight = ref.current.getScrollHeight();\n                let currentPosition = ref.current.getValues();\n                currentPosition = currentPosition.scrollTop + currentPosition.clientHeight;\n\n                let scrollRange = 30;\n                if(isValidNumber(props.scrollRange)){\n                    if(props.scrollRangeUsePercentage){\n                        scrollRange = scrollHeight * (parseFloat(props.scrollRange) / 100);\n                    }else{\n                        scrollRange = parseFloat(props.scrollRange);\n                    }\n                }\n                if (scrollHeight - currentPosition <= scrollRange) {\n                    if (props.onScrolledBottom) {\n                        props.onScrolledBottom();\n                    }\n                }\n            }\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    useEffect(() => {\n        if(_.get(containerRef, [uid, 'current'])){\n            if(props.getRef){\n                props.getRef(containerRef[uid].current);\n            }\n        }\n    \n    } , [containerRef[uid]])\n\n\n\n    return (\n        <React.Fragment>\n\n            <Scrollbars \n            autoHide \n            style={{ height: '100%', width: '100%', ...props.style }} \n            ref={containerRef[uid]} onScrollStop={() => { checkScrolledToBottom(containerRef[uid]) }}\n            autoHeightMax={props.autoHeightMax || 'auto'}\n            autoHeightMin={props.autoHeightMin || 'auto'}\n            autoHeight={props.autoHeight || false}\n             >\n                {props.children}\n            </Scrollbars>\n        </React.Fragment>\n    );\n}\n\n\nconst mapStateToProps = state => ({\n    app: state.app,\n    user: state.user,\n});\n\nconst mapDispatchToProps = {\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Form.create()(withRouter(ScrollLoadWrapper)));"]},"metadata":{},"sourceType":"module"}