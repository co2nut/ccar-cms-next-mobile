{"ast":null,"code":"var _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport 'antd';\nimport _ from 'lodash';\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { setInitedRedux } from '../../redux/actions/app-actions';\nimport { dynamicDispatch, getLocalStoragePersistStates, restoreRedux } from '../../redux/config';\nimport localStorage from 'local-storage';\n\nvar ReduxPersistWrapper = function ReduxPersistWrapper(props) {\n  _s();\n\n  useEffect(function () {\n    //Used better approach, straight persist states at reducer\n    // if (props.cookie) {\n    //     let persistStates = getLocalStoragePersistStates();\n    //     _.forEach(persistStates, function (persistState) {\n    //         props.dynamicDispatch(_.get(persistState, ['persistObj', 'action']), _.get(persistState, ['data']))\n    //     })\n    // console.log(localStorage.get('redux'));\n    props.restoreRedux(localStorage.get('redux') || {});\n    props.setInitedRedux(true); // }\n  }, [props.cookie]);\n  return __jsx(React.Fragment, null, props.app.initedRedux ? props.children : null);\n};\n\n_s(ReduxPersistWrapper, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = ReduxPersistWrapper;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    app: state.app,\n    user: state.user\n  };\n};\n\nvar mapDispatchToProps = {\n  restoreRedux: restoreRedux,\n  dynamicDispatch: dynamicDispatch,\n  setInitedRedux: setInitedRedux\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ReduxPersistWrapper);\n\nvar _c;\n\n$RefreshReg$(_c, \"ReduxPersistWrapper\");","map":{"version":3,"sources":["/Users/faraheen/ccar-cms-next-mobile/components/general/ReduxPersistWrapper.jsx"],"names":["_","React","useEffect","connect","setInitedRedux","dynamicDispatch","getLocalStoragePersistStates","restoreRedux","localStorage","ReduxPersistWrapper","props","get","cookie","app","initedRedux","children","mapStateToProps","state","user","mapDispatchToProps"],"mappings":";;;AAAA,OAAgB,MAAhB;AACA,OAAOA,CAAP,MAAc,QAAd;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,QAA+B,iCAA/B;AACA,SAASC,eAAT,EAA0BC,4BAA1B,EAAwDC,YAAxD,QAA4E,oBAA5E;AACA,OAAOC,YAAP,MAAyB,eAAzB;;AAIA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,KAAD,EAAW;AAAA;;AAGnCR,EAAAA,SAAS,CAAC,YAAM;AAEZ;AAEA;AACA;AACA;AACA;AACA;AACA;AACAQ,IAAAA,KAAK,CAACH,YAAN,CAAmBC,YAAY,CAACG,GAAb,CAAiB,OAAjB,KAA6B,EAAhD;AACAD,IAAAA,KAAK,CAACN,cAAN,CAAqB,IAArB,EAXY,CAYZ;AAEH,GAdQ,EAcN,CAACM,KAAK,CAACE,MAAP,CAdM,CAAT;AAgBA,SAEI,MAAC,KAAD,CAAO,QAAP,QAEQF,KAAK,CAACG,GAAN,CAAUC,WAAV,GACIJ,KAAK,CAACK,QADV,GAGI,IALZ,CAFJ;AAWH,CA9BD;;GAAMN,mB;;KAAAA,mB;;AAiCN,IAAMO,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAC9BJ,IAAAA,GAAG,EAAEI,KAAK,CAACJ,GADmB;AAE9BK,IAAAA,IAAI,EAAED,KAAK,CAACC;AAFkB,GAAL;AAAA,CAA7B;;AAMA,IAAMC,kBAAkB,GAAG;AACvBZ,EAAAA,YAAY,EAAEA,YADS;AAEvBF,EAAAA,eAAe,EAAEA,eAFM;AAGvBD,EAAAA,cAAc,EAAEA;AAHO,CAA3B;AAKA,eAAeD,OAAO,CAACa,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CV,mBAA7C,CAAf","sourcesContent":["import { } from 'antd';\nimport _ from 'lodash';\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { setInitedRedux } from '../../redux/actions/app-actions';\nimport { dynamicDispatch, getLocalStoragePersistStates, restoreRedux } from '../../redux/config';\nimport localStorage from 'local-storage';\n\n\n\nconst ReduxPersistWrapper = (props) => {\n\n\n    useEffect(() => {\n\n        //Used better approach, straight persist states at reducer\n\n        // if (props.cookie) {\n        //     let persistStates = getLocalStoragePersistStates();\n        //     _.forEach(persistStates, function (persistState) {\n        //         props.dynamicDispatch(_.get(persistState, ['persistObj', 'action']), _.get(persistState, ['data']))\n        //     })\n        // console.log(localStorage.get('redux'));\n        props.restoreRedux(localStorage.get('redux') || {});\n        props.setInitedRedux(true);\n        // }\n\n    }, [props.cookie])\n\n    return (\n\n        <React.Fragment>\n            {\n                props.app.initedRedux ?\n                    props.children\n                    :\n                    null\n            }\n        </React.Fragment>\n    );\n}\n\n\nconst mapStateToProps = state => ({\n    app: state.app,\n    user: state.user,\n});\n\n\nconst mapDispatchToProps = {\n    restoreRedux: restoreRedux,\n    dynamicDispatch: dynamicDispatch,\n    setInitedRedux: setInitedRedux,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ReduxPersistWrapper);"]},"metadata":{},"sourceType":"module"}