{"ast":null,"code":"var _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport { BookFilled, BookOutlined } from '@ant-design/icons';\nimport { Dropdown, Form, Icon, Menu, message, Popconfirm } from 'antd';\nimport _ from \"lodash\";\nimport { withRouter } from 'next/dist/client/router';\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport SavePostButton from './save-post-button';\nimport FollowButton from '../../profile/FollowButton';\nimport ShareButtonDialog from '../../general/ShareButtonDialog';\nimport ReportButton from '../../general/ReportButton';\nvar postCommentRef = React.createRef();\n\nvar PostMenu = function PostMenu(props) {\n  _s();\n\n  var _useState = useState({}),\n      post = _useState[0],\n      setPost = _useState[1];\n\n  useEffect(function () {\n    if (_.isPlainObject(props.post) && !_.isEmpty(props.post)) {\n      setPost(props.post);\n    } else {\n      setPost({});\n    }\n  }, [props.post]);\n  return __jsx(Dropdown, {\n    overlay: __jsx(Menu, null, _.get(props.user, ['authenticated']) && _.get(props.user, ['info', 'user', '_id']) && _.get(props.user, ['info', 'user', '_id']) == _.get(post, ['userId', '_id']) && _.get(post, ['chatType']) != 'event' ? [__jsx(Menu.Item, {\n      key: _.get(post, ['_id']) + 'editBtn',\n      className: \"no-padding\",\n      onClick: function onClick(e) {\n        if (props.onEditPostClick) {\n          props.onEditPostClick(post);\n        }\n      }\n    }, __jsx(\"span\", {\n      className: \"d-inline-block padding-x-sm padding-y-xs\"\n    }, \"Edit\")), __jsx(Menu.Item, {\n      key: _.get(post, ['_id']) + 'removeBtn',\n      className: \"no-padding\"\n    }, __jsx(Popconfirm, {\n      title: \"Are you sure to delete this post?\",\n      onConfirm: function onConfirm(e) {\n        if (props.onRemovePostClick) {\n          props.onRemovePostClick(post);\n        }\n      },\n      okText: \"Yes\",\n      cancelText: \"No\"\n    }, __jsx(\"span\", {\n      className: \"d-inline-block padding-x-sm padding-y-xs\"\n    }, \"Delete\")))] : null, _.get(props.user, ['authenticated']) && _.get(props.user, ['info', 'user', '_id']) && _.get(props.user, ['info', 'user', '_id']) != _.get(post, ['userId', '_id']) && _.get(post, ['chatType']) != 'event' ? __jsx(Menu.Item, {\n      key: _.get(post, ['_id']) + 'saveBtn',\n      className: \"no-padding\"\n    }, __jsx(SavePostButton, {\n      userId: _.get(props.user, ['info', 'user', '_id']),\n      chatId: _.get(post, ['_id']),\n      saveButton: function saveButton() {\n        return __jsx(\"span\", {\n          className: \"grey-darken-3 d-inline-block padding-x-sm padding-y-xs\"\n        }, __jsx(BookOutlined, {\n          className: \"margin-right-xs\"\n        }), \"Save Post\");\n      },\n      savedButton: function savedButton() {\n        return __jsx(\"span\", {\n          className: \"d-inline-block padding-x-sm padding-y-xs\"\n        }, __jsx(BookFilled, {\n          className: \"margin-right-xs\"\n        }), \"Saved Post\");\n      },\n      notify: true\n    })) : null, _.get(props.user, ['authenticated']) && _.get(props.user, ['info', 'user', '_id']) && _.get(props.user, ['info', 'user', '_id']) != _.get(post, ['userId', '_id']) ? [__jsx(Menu.Item, {\n      key: _.get(post, ['_id']) + 'followBtn',\n      className: \"no-padding\"\n    }, __jsx(FollowButton, {\n      type: \"user\",\n      followerId: _.get(props.user, ['info', 'user', '_id']),\n      userId: _.get(post, ['userId', '_id']),\n      followButton: function followButton() {\n        return __jsx(\"span\", {\n          className: \"grey-darken-3 d-inline-block padding-x-sm padding-y-xs\"\n        }, \"Follow\");\n      },\n      followingButton: function followingButton() {\n        return __jsx(\"span\", {\n          className: \"d-inline-block padding-x-sm padding-y-xs\"\n        }, __jsx(Icon, {\n          type: \"check\",\n          style: {\n            color: '#F57F17'\n          },\n          className: \"margin-right-xs\"\n        }), \"Following\");\n      },\n      handleSuccess: function handleSuccess(data) {\n        message.success(data.type == 'remove' ? 'Unfollowed' : 'Followed');\n      },\n      handleError: function handleError(err) {\n        message.error(err.message);\n      }\n    })), __jsx(Menu.Item, {\n      key: _.get(post, ['_id']) + 'reportBtn',\n      className: \"no-padding\"\n    }, __jsx(ReportButton, {\n      type: \"chat\",\n      reporterId: _.get(props.user, ['info', 'user', '_id']),\n      chatId: _.get(post, ['_id']),\n      reportButton: function reportButton() {\n        return __jsx(\"span\", {\n          className: \"red d-inline-block padding-x-sm padding-y-xs\"\n        }, \"Report\");\n      },\n      cancelButton: function cancelButton() {\n        return null;\n      },\n      handleSuccess: function handleSuccess(data) {\n        message.success(data.type == 'cancel' ? 'Canceled' : 'Reported');\n      },\n      handleError: function handleError(err) {\n        message.error(err.message);\n      }\n    }))] : null, __jsx(Menu.Item, {\n      key: _.get(post, ['_id']) + 'shareBtn',\n      className: \"no-padding\"\n    }, __jsx(ShareButtonDialog, {\n      link: \"/\".concat(_.get(post, ['chatType']) == 'event' ? 'event-post' : _.get(post, ['chatType']) == 'socialboard' ? 'social-board' : 'car-freaks', \"/\").concat(_.get(post, ['_id']))\n    }, __jsx(\"span\", {\n      className: \"d-inline-block padding-x-sm padding-y-xs\"\n    }, \"Share Link\"))))\n  }, props.children || __jsx(Icon, {\n    type: \"more\",\n    className: \"black\",\n    style: {\n      fontSize: 20\n    }\n  }));\n};\n\n_s(PostMenu, \"4GS+YXYxyueLsdYC6PKVvqC0Cl4=\");\n\n_c = PostMenu;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    app: state.app,\n    user: state.user\n  };\n};\n\nvar mapDispatchToProps = {};\nexport default connect(mapStateToProps, mapDispatchToProps)(Form.create()(withRouter(PostMenu)));\n\nvar _c;\n\n$RefreshReg$(_c, \"PostMenu\");","map":{"version":3,"sources":["/Users/faraheen/ccar-cms-next-mobile/components/carFreak/components/post-menu.jsx"],"names":["BookFilled","BookOutlined","Dropdown","Form","Icon","Menu","message","Popconfirm","_","withRouter","React","useEffect","useState","connect","SavePostButton","FollowButton","ShareButtonDialog","ReportButton","postCommentRef","createRef","PostMenu","props","post","setPost","isPlainObject","isEmpty","get","user","e","onEditPostClick","onRemovePostClick","color","data","success","type","err","error","children","fontSize","mapStateToProps","state","app","mapDispatchToProps","create"],"mappings":"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","sourcesContent":["import { BookFilled, BookOutlined } from '@ant-design/icons';\nimport { Dropdown, Form, Icon, Menu, message, Popconfirm } from 'antd';\nimport _ from \"lodash\";\nimport { withRouter } from 'next/dist/client/router';\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport SavePostButton from './save-post-button';\nimport FollowButton from '../../profile/FollowButton';\nimport ShareButtonDialog from '../../general/ShareButtonDialog';\nimport ReportButton from '../../general/ReportButton';\n\n\n\nconst postCommentRef = React.createRef();\n\n\nconst PostMenu = (props) => {\n\n    const [post, setPost] = useState({});\n\n\n\n    useEffect(() => {\n        if (_.isPlainObject(props.post) && !_.isEmpty(props.post)) {\n            setPost(props.post);\n        } else {\n            setPost({});\n        }\n\n    }, [props.post])\n\n    return (\n        <Dropdown overlay={\n            <Menu>\n                {\n                    _.get(props.user, ['authenticated']) && _.get(props.user, ['info', 'user', '_id']) && _.get(props.user, ['info', 'user', '_id']) == _.get(post, ['userId', '_id']) && _.get(post, ['chatType']) != 'event' ?\n                        [\n                            <Menu.Item key={_.get(post, ['_id']) + 'editBtn'} className=\"no-padding\" onClick={(e) => {\n                                if (props.onEditPostClick) {\n                                    props.onEditPostClick(post)\n                                }\n                            }}><span className=\"d-inline-block padding-x-sm padding-y-xs\">Edit</span></Menu.Item>,\n                            <Menu.Item key={_.get(post, ['_id']) + 'removeBtn'} className=\"no-padding\">\n                                <Popconfirm\n                                    title=\"Are you sure to delete this post?\"\n                                    onConfirm={(e) => {\n                                        if (props.onRemovePostClick) {\n                                            props.onRemovePostClick(post);\n                                        }\n                                    }}\n                                    okText=\"Yes\"\n                                    cancelText=\"No\"\n                                >\n                                    <span className=\"d-inline-block padding-x-sm padding-y-xs\">Delete</span>\n                                </Popconfirm>\n                            </Menu.Item>\n                        ]\n                        :\n                        null\n                }\n                {\n                    _.get(props.user, ['authenticated']) && _.get(props.user, ['info', 'user', '_id']) && _.get(props.user, ['info', 'user', '_id']) != _.get(post, ['userId', '_id']) && _.get(post, ['chatType']) != 'event' ?\n                        <Menu.Item key={_.get(post, ['_id']) + 'saveBtn'} className=\"no-padding\">\n                            <SavePostButton userId={_.get(props.user, ['info', 'user', '_id'])} chatId={_.get(post, ['_id'])}\n                                saveButton={() => {\n                                    return <span className=\"grey-darken-3 d-inline-block padding-x-sm padding-y-xs\"><BookOutlined className=\"margin-right-xs\" />Save Post</span>\n                                }}\n                                savedButton={() => {\n                                    return <span className=\"d-inline-block padding-x-sm padding-y-xs\"><BookFilled className=\"margin-right-xs\" />Saved Post</span>\n                                }}\n                                notify\n                            />\n                        </Menu.Item>\n                        :\n                        null\n                }\n                {\n                    _.get(props.user, ['authenticated']) && _.get(props.user, ['info', 'user', '_id']) && _.get(props.user, ['info', 'user', '_id']) != _.get(post, ['userId', '_id']) ?\n                        [\n                            <Menu.Item key={_.get(post, ['_id']) + 'followBtn'} className=\"no-padding\">\n                                <FollowButton type=\"user\" followerId={_.get(props.user, ['info', 'user', '_id'])} userId={_.get(post, ['userId', '_id'])}\n                                    followButton={() => {\n                                        return <span className=\"grey-darken-3 d-inline-block padding-x-sm padding-y-xs\">Follow</span>\n                                    }}\n                                    followingButton={() => {\n                                        return <span className=\"d-inline-block padding-x-sm padding-y-xs\">\n                                            <Icon type=\"check\" style={{ color: '#F57F17' }} className=\"margin-right-xs\" />\n                                                Following\n                                            </span>\n                                    }}\n                                    handleSuccess={(data) => {\n                                        message.success(data.type == 'remove' ? 'Unfollowed' : 'Followed')\n                                    }}\n                                    handleError={(err) => {\n                                        message.error(err.message)\n                                    }}\n                                />\n                            </Menu.Item>,\n                            <Menu.Item key={_.get(post, ['_id']) + 'reportBtn'} className=\"no-padding\">\n                                <ReportButton type=\"chat\"\n                                    reporterId={_.get(props.user, ['info', 'user', '_id'])}\n                                    chatId={_.get(post, ['_id'])}\n                                    reportButton={() => {\n                                        return <span className=\"red d-inline-block padding-x-sm padding-y-xs\">Report</span>\n                                    }}\n                                    cancelButton={() => {\n                                        return null;\n                                    }}\n                                    handleSuccess={(data) => {\n                                        message.success(data.type == 'cancel' ? 'Canceled' : 'Reported')\n                                    }}\n                                    handleError={(err) => {\n                                        message.error(err.message)\n                                    }} />\n                            </Menu.Item>\n                        ]\n                        :\n                        null\n                }\n                <Menu.Item key={_.get(post, ['_id']) + 'shareBtn'} className=\"no-padding\">\n                    <ShareButtonDialog link={`/${_.get(post, ['chatType']) == 'event' ? 'event-post' : _.get(post, ['chatType']) == 'socialboard' ? 'social-board' : 'car-freaks'}/${_.get(post, ['_id'])}`}>\n                        <span className=\"d-inline-block padding-x-sm padding-y-xs\">Share Link</span>\n                    </ShareButtonDialog>\n                </Menu.Item>\n            </Menu>\n        }>\n            {\n                props.children || <Icon type=\"more\" className=\"black\" style={{ fontSize: 20 }} />\n            }\n        </Dropdown>\n    );\n}\n\n\nconst mapStateToProps = state => ({\n    app: state.app,\n    user: state.user,\n});\n\nconst mapDispatchToProps = {\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Form.create()(withRouter(PostMenu)));"]},"metadata":{},"sourceType":"module"}