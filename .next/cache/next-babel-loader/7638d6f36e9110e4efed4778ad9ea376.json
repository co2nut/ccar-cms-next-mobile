{"ast":null,"code":"var __jsx = React.createElement;\nimport { Col, Divider, Form, Row, Tabs } from 'antd';\nimport _ from 'lodash';\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'next/dist/client/router';\nimport { filterCarBrandMode, filterCarModelMode, filterCarSearchKeywords, loading, loginMode, quickSearchProductsList, setApplyMileage, setApplyPrice, setApplyYear, updateActiveMenu } from '../../redux/actions/app-actions';\nimport { fetchProductsList, updateActiveIdProductList } from '../../redux/actions/productsList-actions';\nimport { updateSellerProfile } from '../../redux/actions/sellerProfile-actions';\nimport ProfileDetailsBox from './ProfileDetailsBox';\nimport UserCarFreakPosts from './UserCarFreakPosts';\nimport UserSavedCarFreakPosts from './UserSavedCarFreakPosts';\nimport UserSocialBoard from './UserSocialBoard';\nimport UserSavedSocialBoard from './UserSavedSocialBoard';\nconst {\n  TabPane\n} = Tabs;\n\nconst UserProfile = props => {\n  const {\n    0: profile,\n    1: setProfile\n  } = useState({}); //initial render\n\n  useEffect(() => {\n    if (_.isPlainObject(props.data) && !_.isEmpty(props.data)) {\n      setProfile(props.data);\n    } else {\n      setProfile({});\n    }\n  }, [props.data]);\n\n  const _renderMenu = profile => {\n    return __jsx(Row, {\n      type: \"flex\",\n      align: \"middle\",\n      className: \"background-white\"\n    }, __jsx(Col, {\n      xs: 24,\n      sm: 24,\n      md: 24,\n      lg: 24,\n      xl: 24\n    }, __jsx(Tabs, {\n      defaultActiveKey: \"1\"\n    }, __jsx(TabPane, {\n      tab: \"CarFreaks\",\n      key: \"1\"\n    }, __jsx(UserCarFreakPosts, {\n      data: profile\n    })), __jsx(TabPane, {\n      tab: \"Social Board\",\n      key: \"2\"\n    }, __jsx(UserSocialBoard, {\n      data: profile,\n      className: \"margin-y-lg\"\n    })), _.get(props.user, ['info', 'user', '_id']) && _.get(props.user, ['info', 'user', '_id']) == _.get(profile, ['_id']) ? __jsx(TabPane, {\n      tab: \"Saved CarFreaks\",\n      key: \"3\"\n    }, __jsx(UserSavedCarFreakPosts, {\n      data: profile,\n      className: \"margin-y-lg\"\n    })) : null, _.get(props.user, ['info', 'user', '_id']) && _.get(props.user, ['info', 'user', '_id']) == _.get(profile, ['_id']) ? __jsx(TabPane, {\n      tab: \"Saved Social Board\",\n      key: \"4\"\n    }, __jsx(UserSavedSocialBoard, {\n      data: profile,\n      className: \"margin-y-lg\"\n    })) : null)));\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Row, null, __jsx(Col, {\n    xs: 24,\n    sm: 24,\n    md: 24,\n    lg: 24,\n    xl: 24\n  }, __jsx(Divider, {\n    className: \"no-margin\"\n  }), __jsx(ProfileDetailsBox, {\n    data: profile,\n    showProfileActions: props.isOwn,\n    type: \"user\",\n    onChangeCoverPhoto: res => {\n      if (props.onChangeCoverPhoto) {\n        props.onChangeCoverPhoto(res);\n      }\n    },\n    onChange: res => {\n      if (props.onChange) {\n        props.onChange(res);\n      }\n    }\n  })), __jsx(Col, {\n    xs: 24,\n    sm: 24,\n    md: 24,\n    lg: 24,\n    xl: 24\n  }, __jsx(Divider, {\n    className: \"no-margin\"\n  }), _renderMenu(profile))));\n};\n\nconst mapStateToProps = state => ({\n  sellCars: state.sellCars,\n  productsList: state.productsList,\n  app: state.app,\n  sellerProfile: state.sellerProfile,\n  user: state.user\n});\n\nconst mapDispatchToProps = {\n  updateActiveMenu: updateActiveMenu,\n  fetchProductsList: fetchProductsList,\n  updateActiveIdProductList: updateActiveIdProductList,\n  filterCarBrandMode: filterCarBrandMode,\n  filterCarModelMode: filterCarModelMode,\n  filterCarSearchKeywords: filterCarSearchKeywords,\n  quickSearchProductsList: quickSearchProductsList,\n  loading: loading,\n  setApplyYear: setApplyYear,\n  setApplyPrice: setApplyPrice,\n  setApplyMileage: setApplyMileage,\n  updateSellerProfile: updateSellerProfile,\n  loginMode: loginMode\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Form.create()(withRouter(UserProfile)));","map":{"version":3,"sources":["/Users/faraheen/ccar-cms-next-mobile/components/profile/UserProfile.jsx"],"names":["Col","Divider","Form","Row","Tabs","_","React","useEffect","useState","connect","withRouter","filterCarBrandMode","filterCarModelMode","filterCarSearchKeywords","loading","loginMode","quickSearchProductsList","setApplyMileage","setApplyPrice","setApplyYear","updateActiveMenu","fetchProductsList","updateActiveIdProductList","updateSellerProfile","ProfileDetailsBox","UserCarFreakPosts","UserSavedCarFreakPosts","UserSocialBoard","UserSavedSocialBoard","TabPane","UserProfile","props","profile","setProfile","isPlainObject","data","isEmpty","_renderMenu","get","user","isOwn","res","onChangeCoverPhoto","onChange","mapStateToProps","state","sellCars","productsList","app","sellerProfile","mapDispatchToProps","create"],"mappings":"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","sourcesContent":["import { Col, Divider, Form, Row, Tabs } from 'antd';\nimport _ from 'lodash';\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'next/dist/client/router';\nimport { \n    filterCarBrandMode, filterCarModelMode, filterCarSearchKeywords, loading,\n    loginMode, quickSearchProductsList,\n    setApplyMileage, setApplyPrice, setApplyYear, updateActiveMenu } from '../../redux/actions/app-actions';\nimport { fetchProductsList, updateActiveIdProductList  } from '../../redux/actions/productsList-actions';\nimport { updateSellerProfile } from '../../redux/actions/sellerProfile-actions';\nimport ProfileDetailsBox from './ProfileDetailsBox';\nimport UserCarFreakPosts from './UserCarFreakPosts';\nimport UserSavedCarFreakPosts from './UserSavedCarFreakPosts';\nimport UserSocialBoard from './UserSocialBoard';\nimport UserSavedSocialBoard from './UserSavedSocialBoard';\n\n\n\nconst { TabPane } = Tabs;\n\nconst UserProfile = (props) => {\n\n    const [profile, setProfile] = useState({});\n\n\n    //initial render\n\n    useEffect(() => {\n        if (_.isPlainObject(props.data) && !_.isEmpty(props.data)) {\n            setProfile(props.data);\n        } else {\n            setProfile({});\n        }\n\n    }, [props.data])\n\n\n\n    const _renderMenu = (profile) => {\n        return (\n            <Row type=\"flex\" align=\"middle\" className='background-white'>\n                <Col xs={24} sm={24} md={24} lg={24} xl={24} >\n                    <Tabs defaultActiveKey=\"1\">\n                        <TabPane tab=\"CarFreaks\" key=\"1\">\n                            <UserCarFreakPosts data={profile} />\n                        </TabPane>\n                        <TabPane tab=\"Social Board\" key=\"2\">\n                            <UserSocialBoard data={profile} className=\"margin-y-lg\" />\n                        </TabPane>\n                        {\n                            _.get(props.user, ['info', 'user', '_id']) && _.get(props.user, ['info', 'user', '_id']) == _.get(profile, ['_id']) ?\n                                <TabPane tab=\"Saved CarFreaks\" key=\"3\">\n                                    <UserSavedCarFreakPosts data={profile} className=\"margin-y-lg\" />\n                                </TabPane>\n                                :\n                                null\n                        }\n                        {\n                            _.get(props.user, ['info', 'user', '_id']) && _.get(props.user, ['info', 'user', '_id']) == _.get(profile, ['_id']) ?\n                                <TabPane tab=\"Saved Social Board\" key=\"4\">\n                                    <UserSavedSocialBoard data={profile} className=\"margin-y-lg\" />\n                                </TabPane>\n                                :\n                                null\n                        }\n                        {/* <TabPane tab=\"My Purchase\" key=\"3\">\n                            Content of Tab Pane 3\n                        </TabPane> */}\n                        {/* <TabPane tab=\"Reviews\" key=\"3\">\n                            Content of Tab Pane 3\n                        </TabPane> */}\n                    </Tabs>\n                </Col>\n            </Row>\n        );\n    }\n\n    return (\n        <React.Fragment>\n            <Row>\n                <Col xs={24} sm={24} md={24} lg={24} xl={24}>\n                    <Divider className=\"no-margin\" />\n                    <ProfileDetailsBox data={profile} showProfileActions={props.isOwn} type=\"user\"\n                        onChangeCoverPhoto={(res) => {\n                            if (props.onChangeCoverPhoto) {\n                                props.onChangeCoverPhoto(res); \n                            }\n                        }\n                        }\n                        onChange={(res) => {\n                            if (props.onChange) {\n                                props.onChange(res); \n                            }\n                        }\n                        }\n                    />\n                </Col>\n                <Col xs={24} sm={24} md={24} lg={24} xl={24}>\n                    <Divider className=\"no-margin\" />\n                    {_renderMenu(profile)} \n                </Col>\n            </Row>\n        </React.Fragment>\n    );\n}\n\nconst mapStateToProps = state => ({\n    sellCars: state.sellCars,\n    productsList: state.productsList,\n    app: state.app,\n    sellerProfile: state.sellerProfile,\n    user : state.user,\n});\n\n\nconst mapDispatchToProps = {\n    updateActiveMenu: updateActiveMenu,\n    fetchProductsList: fetchProductsList,\n    updateActiveIdProductList: updateActiveIdProductList,\n    filterCarBrandMode: filterCarBrandMode,\n    filterCarModelMode: filterCarModelMode,\n    filterCarSearchKeywords: filterCarSearchKeywords,\n    quickSearchProductsList: quickSearchProductsList,\n\n    loading: loading,\n    setApplyYear: setApplyYear,\n    setApplyPrice: setApplyPrice,\n    setApplyMileage: setApplyMileage,\n    updateSellerProfile: updateSellerProfile,\n    loginMode: loginMode,\n\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Form.create()(withRouter(UserProfile)));"]},"metadata":{},"sourceType":"module"}