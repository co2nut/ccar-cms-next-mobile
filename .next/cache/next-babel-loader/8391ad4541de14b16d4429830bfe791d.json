{"ast":null,"code":"var _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport { Button, Form, message, Modal } from 'antd';\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport client from '../../feathers';\nimport { withRouter } from 'next/router';\nimport { loading, loginMode } from '../../redux/actions/app-actions';\nimport { notEmptyLength } from '../../common-function';\n\nvar HideReviewButton = function HideReviewButton(props) {\n  _s();\n\n  var _useState = useState(false),\n      confirmModalState = _useState[0],\n      setConfirmModalState = _useState[1];\n\n  function hideReview(data) {\n    if (props.user.authenticated && notEmptyLength(data) && data._id) {\n      if (notEmptyLength(data.hideBy)) {\n        var existed = data.hideBy.some(function (item) {\n          return item.userId == props.user.info.user._id;\n        });\n\n        if (!existed) {\n          props.loading(true);\n          client.authenticate().then(function (res) {\n            props.loading(false);\n            client.service('rating').patch(data._id, {\n              hideBy: data.hideBy.concat([{\n                userId: props.user.info.user._id\n              }])\n            }).then(function (res) {\n              message.success('You hide the review.');\n\n              if (props.handleSuccess) {\n                props.handleSuccess(res);\n              }\n            });\n          })[\"catch\"](function (err) {\n            props.loading(false);\n            message.error(err.message);\n\n            if (props.handleError) {\n              props.handleError(err);\n            }\n          });\n        }\n      } else {\n        props.loading(true);\n        client.authenticate().then(function (res) {\n          props.loading(false);\n          client.service('rating').patch(data._id, {\n            hideBy: [{\n              userId: props.user.info.user._id\n            }]\n          }).then(function (res) {\n            message.success('You hide the review.');\n\n            if (props.handleSuccess) {\n              props.handleSuccess(res);\n            }\n          });\n        })[\"catch\"](function (err) {\n          props.loading(false);\n          message.error(err.message);\n\n          if (props.handleError) {\n            props.handleError(err);\n          }\n        });\n      }\n    } else {\n      props.loginMode(true);\n      message.error('Please login to hide this review.');\n\n      if (props.handleError) {\n        props.handleError({\n          message: 'Please login to hide this review.'\n        });\n      }\n    }\n  }\n\n  return __jsx(\"span\", {\n    className: props.className ? props.className : null,\n    style: props.style ? props.style : null\n  }, __jsx(Modal, {\n    visible: confirmModalState,\n    title: \"Are you sure?\",\n    maskClosable: true,\n    centered: true,\n    onOk: function onOk(e) {\n      hideReview(props.data ? props.data : null);\n      setConfirmModalState(false);\n    },\n    onCancel: function onCancel(e) {\n      setConfirmModalState(false);\n    }\n  }, __jsx(\"div\", null, \"Do you want to hide this review ?\")), __jsx(\"a\", {\n    onClick: function onClick() {\n      setConfirmModalState(true);\n    }\n  }, props.button ? props.button() : __jsx(Button, {\n    type: \"warning\",\n    icon: \"eye-invisible\"\n  }, \"Hide post\")));\n};\n\n_s(HideReviewButton, \"mpKPdF/qnXG+RJqb36KZ9Itz4Nw=\");\n\n_c = HideReviewButton;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    app: state.app,\n    user: state.user\n  };\n};\n\nvar mapDispatchToProps = {\n  loginMode: loginMode,\n  loading: loading\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Form.create()(withRouter(HideReviewButton)));\n\nvar _c;\n\n$RefreshReg$(_c, \"HideReviewButton\");","map":{"version":3,"sources":["/Users/faraheen/ccar-cms-next-mobile/components/rating/HideReviewButton.jsx"],"names":["Button","Form","message","Modal","React","useState","connect","client","withRouter","loading","loginMode","notEmptyLength","HideReviewButton","props","confirmModalState","setConfirmModalState","hideReview","data","user","authenticated","_id","hideBy","existed","some","item","userId","info","authenticate","then","res","service","patch","concat","success","handleSuccess","err","error","handleError","className","style","e","button","mapStateToProps","state","app","mapDispatchToProps","create"],"mappings":"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","sourcesContent":["import { Button, Form, message, Modal } from 'antd';\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport client from '../../feathers';\nimport { withRouter } from 'next/router';\nimport { loading, loginMode } from '../../redux/actions/app-actions';\nimport { notEmptyLength } from '../../common-function';\n\n\n\nconst HideReviewButton = (props) => {\n\n\n    const [confirmModalState, setConfirmModalState] = useState(false);\n\n    function hideReview(data) {\n\n        if (props.user.authenticated && notEmptyLength(data) && data._id) {\n\n            if (notEmptyLength(data.hideBy)) {\n                let existed = data.hideBy.some(function (item) {\n                    return item.userId == props.user.info.user._id;\n                })\n\n                if (!existed) {\n\n                    props.loading(true);\n                    client.authenticate()\n                        .then((res) => {\n                            props.loading(false);\n                            client.service('rating').patch(data._id, {\n                                hideBy: data.hideBy.concat([{ userId: props.user.info.user._id }])\n                            }).then((res) => {\n                                message.success('You hide the review.');\n                                if (props.handleSuccess) {\n                                    props.handleSuccess(res);\n                                }\n                            })\n                        })\n                        .catch((err) => {\n                            props.loading(false);\n                            message.error(err.message);\n                            if (props.handleError) {\n                                props.handleError(err);\n                            }\n                        })\n                }\n            } else {\n\n                props.loading(true);\n                client.authenticate()\n                    .then((res) => {\n                        props.loading(false);\n                        client.service('rating').patch(data._id, {\n                            hideBy: [{ userId: props.user.info.user._id }]\n                        }).then((res) => {\n                            message.success('You hide the review.');\n                            if (props.handleSuccess) {\n                                props.handleSuccess(res);\n                            }\n                        })\n                    })\n                    .catch((err) => {\n                        props.loading(false);\n                        message.error(err.message);\n                        if (props.handleError) {\n                            props.handleError(err);\n                        }\n                    })\n\n            }\n\n        } else {\n            props.loginMode(true);\n            message.error('Please login to hide this review.');\n            if (props.handleError) {\n                props.handleError({ message: 'Please login to hide this review.' });\n            }\n        }\n    }\n\n    return (\n\n        <span className={props.className ? props.className : null} style={props.style ? props.style : null}>\n            <Modal\n                visible={confirmModalState}\n                title=\"Are you sure?\"\n                maskClosable={true}\n                centered={true}\n                onOk={(e) => { hideReview(props.data ? props.data : null); setConfirmModalState(false); }}\n                onCancel={(e) => { setConfirmModalState(false) }}\n            >\n                <div>\n                    Do you want to hide this review ?\n                </div>\n            </Modal>\n\n\n            <a onClick={() => {\n                setConfirmModalState(true);\n            }}>\n\n                {\n                    props.button ?\n                        props.button()\n                        :\n                        <Button type=\"warning\" icon=\"eye-invisible\">\n                            Hide post\n                        </Button>\n                }\n            </a>\n\n        </span>\n    );\n}\n\n\nconst mapStateToProps = state => ({\n    app: state.app,\n    user: state.user,\n});\n\nconst mapDispatchToProps = {\n    loginMode: loginMode,\n    loading: loading,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Form.create()(withRouter(HideReviewButton)));"]},"metadata":{},"sourceType":"module"}