{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { CloseOutlined } from '@ant-design/icons';\nimport { Card, Col, Empty, Form, Icon, Input, Modal, Row } from 'antd';\nimport _ from 'lodash';\nimport { withRouter } from 'next/dist/client/router';\nimport React, { useEffect, useState } from 'react';\nimport Scrollbars from 'react-custom-scrollbars';\nimport Highlighter from 'react-highlight-words';\nimport { connect } from 'react-redux';\nimport { formatNumber, isValidNumber, notEmptyLength } from '../../../common-function';\nimport { colorList } from '../../../params/colorList';\nvar colorModalSearchRef = React.createRef();\n\nvar ColorModal = function ColorModal(props) {\n  _s();\n\n  var _useState = useState([]),\n      options = _useState[0],\n      setOptions = _useState[1];\n\n  var _useState2 = useState(''),\n      searchKeyword = _useState2[0],\n      setSearchKeyword = _useState2[1];\n\n  var _useState3 = useState([]),\n      filteredOptions = _useState3[0],\n      setFilteredOptions = _useState3[1];\n\n  useEffect(function () {\n    if (props.options != null && _.isArray(props.options)) {\n      var data = _.compact(_.map(colorList, function (color) {\n        var selectedOption = _.find(props.options, function (item) {\n          return _.toLower(item.value) == _.toLower(color.value);\n        });\n\n        if (selectedOption) {\n          color.count = selectedOption.count;\n          return color;\n        } else {\n          return null;\n        }\n      }));\n\n      setOptions(data);\n    } else {\n      setOptions([]);\n    }\n  }, [props.options]);\n  useEffect(function () {\n    if (props.visible == true && colorModalSearchRef.current) {\n      colorModalSearchRef.current.focus();\n    }\n\n    if (!props.visible) {\n      setSearchKeyword('');\n    }\n  }, [props.visible, colorModalSearchRef.current]);\n  useEffect(function () {\n    if (_.isArray(options) && notEmptyLength(options)) {\n      var data = _.reverse(_.sortBy(_.filter(options, function (option) {\n        if (searchKeyword) {\n          var keyword = new RegExp(searchKeyword, 'i');\n          return keyword.test(option.value) && option.count > 0;\n        } else {\n          return true;\n        }\n      }), ['count', 'value']));\n\n      setFilteredOptions(data);\n    } else {\n      setFilteredOptions([]);\n    }\n  }, [options, searchKeyword]);\n\n  var selectedValue = function selectedValue(item, alphaIndex, index) {\n    if (props.onChange) {\n      props.onChange(item, alphaIndex, index);\n    }\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Modal, {\n    closable: props.closable != null ? props.closable ? true : false : false,\n    maskClosable: props.maskClosable != null ? props.maskClosable ? true : false : false,\n    visible: props.visible != null ? props.visible ? true : false : false,\n    style: _objectSpread({}, props.style),\n    onCancel: props.onCancel,\n    className: \"\".concat(props.className ? props.className : ''),\n    width: props.width ? props.width : '100%',\n    id: props.id ? props.id : 'color-modal',\n    zIndex: isValidNumber(parseInt(props.zIndex)) ? parseInt(props.zIndex) : 1000,\n    footer: null\n  }, __jsx(Card, {\n    bordered: false,\n    title: props.title ? props.title : \"Select Car Color\",\n    size: \"small\",\n    style: {\n      zIndex: 1001\n    }\n  }, __jsx(Row, null, __jsx(Col, {\n    xs: 24,\n    sm: 24,\n    md: 24,\n    lg: 24,\n    xl: 24\n  }, __jsx(\"div\", {\n    className: \"thin-border round-border-big padding-sm\"\n  }, __jsx(Input, {\n    ref: colorModalSearchRef,\n    autoFocus: true,\n    value: searchKeyword,\n    onChange: function onChange(e) {\n      setSearchKeyword(e.target.value);\n    },\n    className: \"no-border-input\",\n    size: \"small\",\n    compact: true,\n    suffix: searchKeyword ? __jsx(CloseOutlined, {\n      className: \"cursor-pointer\",\n      onClick: function onClick(e) {\n        setSearchKeyword('');\n      }\n    }) : __jsx(Icon, {\n      type: \"search\"\n    }),\n    placeholder: \"Search Here...\"\n  })))), __jsx(Row, {\n    gutter: [15, 15]\n  }, __jsx(Col, {\n    className: \"gutter-row\",\n    xs: 0,\n    sm: 0,\n    md: 24,\n    lg: 24,\n    xl: 24\n  }, __jsx(Scrollbars, {\n    autoHide: true,\n    autoHeight: true,\n    autoHeightMax: _.get(props, ['bodyStyle', 'maxHeight']) || 500\n  }, __jsx(\"div\", null, filteredOptions.length > 0 ? filteredOptions.map(function (item, index) {\n    return __jsx(\"div\", {\n      style: {\n        margin: '10px 0px'\n      },\n      key: index\n    }, __jsx(Row, {\n      key: index // gutter={[10, 10]} \n      ,\n      className: _.toLower(props.selectedValue) == _.toLower(item.value) ? \"selectedRow\" : \"selectRow\",\n      onClick: function onClick() {\n        return selectedValue(item.value, index);\n      },\n      style: {\n        height: '3em',\n        lineHeight: '3em'\n      }\n    }, __jsx(Col, {\n      span: 5,\n      style: {\n        height: '100%'\n      }\n    }, __jsx(\"div\", {\n      style: {\n        width: 20,\n        height: 20,\n        background: item.code,\n        display: 'inline-block',\n        margin: '0px 6px',\n        verticalAlign: 'middle',\n        border: 'solid 1px #DEDEDE',\n        borderRadius: '50%'\n      }\n    })), __jsx(Col, {\n      span: 12,\n      style: {\n        height: '100%'\n      }\n    }, __jsx(Highlighter, {\n      style: {\n        padding: '0px 10px',\n        textTransform: 'capitalize',\n        whiteSpace: 'noWrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      },\n      highlightStyle: {\n        backgroundColor: '#ffc069',\n        padding: 0\n      },\n      searchWords: [searchKeyword],\n      autoEscape: true,\n      textToHighlight: item.value\n    })), __jsx(Col, {\n      span: 7,\n      style: {\n        height: '100%'\n      }\n    }, __jsx(\"div\", {\n      className: \"fill-parent flex-justify-end flex-items-align-center\"\n    }, \"(\".concat(isValidNumber(item.count) ? formatNumber(item.count, null, false, 0, true) : 0, \")\")))));\n  }) : __jsx(\"div\", {\n    style: {\n      height: '100%'\n    }\n  }, __jsx(Empty, {\n    style: {\n      position: 'relative'\n    },\n    image: \"/empty.png\",\n    imageStyle: {\n      height: 60\n    },\n    description: __jsx(\"span\", null, \"No Result\")\n  })))))))));\n};\n\n_s(ColorModal, \"6OXoa/v4q0OhfCPYavYF52/phOU=\");\n\n_c = ColorModal;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    productsList: state.productsList,\n    app: state.app\n  };\n};\n\nvar mapDispatchToProps = {};\nexport default connect(mapStateToProps, mapDispatchToProps)(Form.create()(withRouter(ColorModal)));\n\nvar _c;\n\n$RefreshReg$(_c, \"ColorModal\");","map":{"version":3,"sources":["/Users/faraheen/ccar-cms-next-mobile/components/product-list/filter-modal/ColorModal.jsx"],"names":["CloseOutlined","Card","Col","Empty","Form","Icon","Input","Modal","Row","_","withRouter","React","useEffect","useState","Scrollbars","Highlighter","connect","formatNumber","isValidNumber","notEmptyLength","colorList","colorModalSearchRef","createRef","ColorModal","props","options","setOptions","searchKeyword","setSearchKeyword","filteredOptions","setFilteredOptions","isArray","data","compact","map","color","selectedOption","find","item","toLower","value","count","visible","current","focus","reverse","sortBy","filter","option","keyword","RegExp","test","selectedValue","alphaIndex","index","onChange","closable","maskClosable","style","onCancel","className","width","id","parseInt","zIndex","title","e","target","get","length","margin","height","lineHeight","background","code","display","verticalAlign","border","borderRadius","padding","textTransform","whiteSpace","overflow","textOverflow","backgroundColor","position","mapStateToProps","state","productsList","app","mapDispatchToProps","create"],"mappings":"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","sourcesContent":["import { CloseOutlined } from '@ant-design/icons';\nimport { Card, Col, Empty, Form, Icon, Input, Modal, Row } from 'antd';\nimport _ from 'lodash';\nimport { withRouter } from 'next/dist/client/router';\nimport React, { useEffect, useState } from 'react';\nimport Scrollbars from 'react-custom-scrollbars';\nimport Highlighter from 'react-highlight-words';\nimport { connect } from 'react-redux';\nimport { formatNumber, isValidNumber, notEmptyLength } from '../../../common-function';\nimport { colorList } from '../../../params/colorList';\n\nconst colorModalSearchRef = React.createRef();\n\nconst ColorModal = (props) => {\n    const [options, setOptions] = useState([])\n    const [searchKeyword, setSearchKeyword] = useState('')\n    const [filteredOptions, setFilteredOptions] = useState([])\n\n    useEffect(() => {\n        if (props.options != null && _.isArray(props.options)) {\n\n            let data = _.compact(_.map(colorList, function (color) {\n                let selectedOption = _.find(props.options, function (item) {\n                    return _.toLower(item.value) == _.toLower(color.value);\n                })\n                if (selectedOption) {\n                    color.count = selectedOption.count;\n                    return color;\n                } else {\n                    return null;\n                }\n            }))\n            setOptions(data)\n        } else {\n            setOptions([]);\n        }\n    }, [props.options])\n\n    useEffect(() => {\n\n        if (props.visible == true && colorModalSearchRef.current) {\n            colorModalSearchRef.current.focus();\n        }\n\n        if (!props.visible) {\n            setSearchKeyword('');\n        }\n\n    }, [props.visible, colorModalSearchRef.current])\n\n    useEffect(() => {\n        if (_.isArray(options) && notEmptyLength(options)) {\n            let data = _.reverse(_.sortBy(_.filter(options, function (option) {\n                if (searchKeyword) {\n                    let keyword = new RegExp(searchKeyword, 'i');\n                    return keyword.test(option.value) && option.count > 0;\n                } else {\n                    return true;\n                }\n            }), ['count', 'value']));\n            setFilteredOptions(data)\n        } else {\n            setFilteredOptions([]);\n        }\n    }, [options, searchKeyword])\n\n    const selectedValue = (item, alphaIndex, index) => {\n        if (props.onChange) {\n            props.onChange(item, alphaIndex, index);\n        }\n    }\n\n    return (\n        <React.Fragment>\n            <Modal\n                closable={props.closable != null ? props.closable ? true : false : false}\n                maskClosable={props.maskClosable != null ? props.maskClosable ? true : false : false}\n                visible={props.visible != null ? props.visible ? true : false : false}\n                style={{ ...props.style }} onCancel={props.onCancel}\n                className={`${props.className ? props.className : ''}`}\n                width={props.width ? props.width : '100%'}\n                id={props.id ? props.id : 'color-modal'}\n                zIndex={isValidNumber(parseInt(props.zIndex)) ? parseInt(props.zIndex) : 1000}\n                footer={null}>\n                <Card\n                    bordered={false}\n                    title={props.title ? props.title : \"Select Car Color\"}\n                    size=\"small\"\n                    style={{ zIndex: 1001 }}\n                >\n                    <Row>\n                        <Col xs={24} sm={24} md={24} lg={24} xl={24}>\n                            <div className=\"thin-border round-border-big padding-sm\">\n                                <Input ref={colorModalSearchRef} autoFocus value={searchKeyword} onChange={(e) => { setSearchKeyword(e.target.value) }} className='no-border-input' size=\"small\" compact\n                                    suffix={\n                                        searchKeyword ?\n                                            <CloseOutlined\n                                                className='cursor-pointer'\n                                                onClick={(e) => { setSearchKeyword('') }} />\n                                            :\n                                            <Icon type=\"search\" />\n                                    } placeholder=\"Search Here...\" />\n                            </div>\n                        </Col>\n                    </Row>\n                    <Row gutter={[15, 15]}>\n                        <Col className=\"gutter-row\" xs={0} sm={0} md={24} lg={24} xl={24}>\n                            <Scrollbars autoHide autoHeight autoHeightMax={_.get(props, ['bodyStyle', 'maxHeight']) || 500}>\n                                <div>\n                                    {\n                                        filteredOptions.length > 0 ?\n                                            filteredOptions.map((item, index) => {\n                                                return (\n                                                    <div style={{ margin: '10px 0px' }} key={index}>\n                                                        <Row\n                                                            key={index}\n                                                            // gutter={[10, 10]} \n                                                            className={_.toLower(props.selectedValue) == _.toLower(item.value) ? \"selectedRow\" : \"selectRow\"}\n                                                            onClick={() => selectedValue(item.value, index)}\n                                                            style={{ height: '3em', lineHeight: '3em' }}>\n                                                            <Col span={5} style={{ height: '100%' }}>\n                                                                <div style={{ width: 20, height: 20, background: item.code, display: 'inline-block', margin: '0px 6px', verticalAlign: 'middle', border: 'solid 1px #DEDEDE', borderRadius: '50%' }}></div>\n                                                            </Col>\n                                                            <Col span={12} style={{ height: '100%' }}>\n                                                                <Highlighter\n                                                                    style={{ padding: '0px 10px', textTransform: 'capitalize', whiteSpace: 'noWrap', overflow: 'hidden', textOverflow: 'ellipsis' }}\n                                                                    highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\n                                                                    searchWords={[searchKeyword]}\n                                                                    autoEscape\n                                                                    textToHighlight={item.value}\n                                                                />\n                                                            </Col>\n                                                            <Col span={7} style={{ height: '100%' }}>\n                                                                <div className=\"fill-parent flex-justify-end flex-items-align-center\">\n                                                                    {`(${isValidNumber(item.count) ? formatNumber(item.count, null, false, 0, true) : 0})`}\n                                                                </div>\n                                                            </Col>\n                                                        </Row>\n                                                    </div>\n                                                );\n                                            })\n                                            :\n                                            <div style={{ height: '100%' }}>\n                                                <Empty\n                                                    style={{ position: 'relative' }}\n                                                    image=\"/empty.png\"\n                                                    imageStyle={{\n                                                        height: 60,\n                                                    }\n                                                    }\n                                                    description={<span>No Result</span>}\n                                                >\n                                                </Empty>\n                                            </div>\n                                    }\n                                </div>\n                            </Scrollbars>\n                        </Col>\n\n                    </Row>\n                </Card>\n            </Modal>\n        </React.Fragment>\n    );\n}\n\nconst mapStateToProps = state => ({\n    productsList: state.productsList,\n    app: state.app,\n});\n\nconst mapDispatchToProps = {\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Form.create()(withRouter(ColorModal)));"]},"metadata":{},"sourceType":"module"}