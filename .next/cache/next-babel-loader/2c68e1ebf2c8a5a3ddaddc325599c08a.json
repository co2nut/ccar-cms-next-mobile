{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Empty, Form, Icon, message } from 'antd';\nimport axios from 'axios';\nimport _ from 'lodash';\nimport { withRouter } from 'next/dist/client/router';\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { v4 } from 'uuid';\nimport client from '../../../feathers';\nimport { loading } from '../../../redux/actions/app-actions';\nimport ClickOutsideDetectWrapper from '../../general/ClickOutsideDetectWrapper';\nimport EmojiPickerButton from '../../general/EmojiPickerButton';\nimport ScrollLoadWrapper from '../../general/ScrollLoadWrapper';\nimport { getAliasCodeFromText, hashTagPrefix, hashTagPrefixHashValue, hashTagSuffixHashValue, parseTagStringToPlainString, parseToTagString, seperatorHashValue, tagPrefix, tagPrefixHashValue, tagSuffixHashValue } from '../config';\nimport { arrayLengthCount, getUserName, isValidNumber } from '../../../common-function';\nimport UserAvatar from '../../general/UserAvatar';\nlet uid = v4();\nlet ref = {};\nref[uid] = React.createRef();\nlet typingTimeout;\nlet checkSearchTimeout;\nlet checkHashTagTimeout;\nconst PAGE_SIZE = 20;\nlet ReactQuill;\n\nconst SocialInput = props => {\n  const {\n    0: text,\n    1: setText\n  } = useState('');\n  const {\n    0: suggestList,\n    1: setSuggestList\n  } = useState({});\n  const {\n    0: suggestListTotal,\n    1: setSuggestListTotal\n  } = useState(0);\n  const {\n    0: suggestListPage,\n    1: setSuggestListPage\n  } = useState(1);\n  const {\n    0: prefix,\n    1: setPrefix\n  } = useState(tagPrefix);\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(false);\n  const {\n    0: searchMode,\n    1: setSearchMode\n  } = useState(false);\n  const {\n    0: searchWord,\n    1: setSearchWord\n  } = useState('');\n  const {\n    0: activeTriggerPosition,\n    1: setActiveTriggerPosition\n  } = useState(0);\n  const {\n    0: hashTagActiveTriggerPosition,\n    1: setHashTagActiveTriggerPosition\n  } = useState(null);\n  const {\n    0: hashTagActived,\n    1: setHashTagActived\n  } = useState(false);\n  const {\n    0: hashTagValue,\n    1: setHashTagValue\n  } = useState('');\n  const {\n    0: aliasCode,\n    1: setAliasCode\n  } = useState([]);\n  const {\n    0: editMode,\n    1: setEditMode\n  } = useState(false);\n  const {\n    0: startWatching,\n    1: setStartWatching\n  } = useState(false);\n  useEffect(() => {\n    if (document) {\n      ReactQuill = require('react-quill');\n    }\n  }, []);\n  useEffect(() => {\n    if (!hashTagActived && hashTagValue && hashTagActiveTriggerPosition != null) {\n      handleAddAliasCode(`#${hashTagValue}`, '$_id', '#', hashTagActiveTriggerPosition);\n      setHashTagValue('');\n      setHashTagActiveTriggerPosition(null);\n      setSearchMode(false);\n    }\n  }, [hashTagActived, hashTagValue]);\n  useEffect(() => {\n    if (props.resetIndicator) {\n      reset();\n    }\n  }, [props.resetIndicator]);\n  useEffect(() => {\n    if (props.focusIndicator) {\n      focus();\n    }\n  }, [props.focusIndicator]);\n  useEffect(() => {\n    setEditMode(props.editMode ? true : false);\n  }, [props.editMode]);\n  useEffect(() => {\n    if (editMode && props.text && ReactQuill) {\n      let newText = parseTagStringToPlainString(props.text);\n      let quill = props.inputRef || ref[uid];\n\n      if (quill.current) {\n        let editor = quill.current.getEditor();\n\n        if (editor && quill) {\n          editor.setText(newText, 'silent');\n        }\n\n        let newAliasCode = getAliasCodeFromText(props.text);\n        setText(newText);\n        setAliasCode(newAliasCode);\n      }\n    }\n  }, [editMode, props.text, ReactQuill]);\n  useEffect(() => {\n    if (searchMode) {\n      searchData(0, searchWord, prefix);\n    } else {\n      setSearchWord('');\n      setSuggestList([]);\n      setSuggestListPage(1);\n      setSuggestListTotal(0);\n      setActiveTriggerPosition(null);\n    }\n  }, [searchMode]);\n  useEffect(() => {\n    if (searchMode && prefix) {\n      clearTimeout(typingTimeout);\n      typingTimeout = setTimeout(() => {\n        searchData((suggestListPage - 1) * PAGE_SIZE, searchWord, prefix);\n      }, 300);\n    }\n  }, [searchWord, prefix, suggestListPage]);\n  useEffect(() => {\n    updateAliasText();\n  }, [aliasCode]);\n  useEffect(() => {\n    if (props.onChange && startWatching) {\n      props.onChange(text, parseToTagString(text, aliasCode));\n    }\n\n    setStartWatching(true);\n  }, [text, aliasCode]);\n\n  function reset() {\n    if (ReactQuill) {\n      let quill = props.inputRef || ref[uid];\n\n      if (quill.current) {\n        let editor = quill.current.getEditor();\n\n        if (editor && quill) {\n          editor.setText(\"\");\n        }\n\n        setText('');\n        setAliasCode([]);\n        setSuggestList([]);\n      }\n    }\n  }\n\n  function focus() {\n    if (ReactQuill) {\n      let quill = props.inputRef || ref[uid];\n\n      if (quill.current) {\n        let editor = quill.current.getEditor();\n        quill.current.focus();\n        let currentCursor = (editor.getText() || '').length || 0;\n\n        if (editor && quill) {\n          setTimeout(() => {\n            editor.setSelection(currentCursor);\n          }, 10);\n        }\n      }\n\n      return;\n    }\n  }\n\n  function handleSubmit() {\n    let finalText = text;\n\n    if (props.excludeEnter) {\n      finalText = finalText.replace(/\\n/g, \"\");\n    }\n\n    if (props.onSubmit && finalText) {\n      finalText = parseToTagString(finalText, aliasCode);\n      props.onSubmit(finalText);\n      reset();\n      focus();\n    }\n  }\n\n  function searchData(skip, keyword, prefix) {\n    setSuggestList({});\n\n    if (prefix == tagPrefix) {\n      setIsLoading(true);\n      axios.get(`${client.io.io.uri}getRelatedUser`, {\n        params: {\n          match: {\n            userId: _.get(props.user, ['info', 'user', '_id']),\n            clubId: props.clubId || '',\n            keyword: keyword || ''\n          },\n          limit: PAGE_SIZE,\n          skip: skip || 0\n        }\n      }).then(res => {\n        setIsLoading(false);\n\n        let temp = _.cloneDeep(suggestList);\n\n        temp[prefix] = suggestListPage > 1 ? _.isArray(_.get(res, ['data', 'data'])) && !_.isEmpty(_.get(res, ['data', 'data'])) ? (suggestList[prefix] || []).concat(res.data.data) : suggestList[prefix] || [] : _.get(res, ['data', 'data']) || [];\n        setSuggestList(temp);\n      }).catch(err => {\n        setIsLoading(false);\n        console.log(err);\n      });\n    }\n\n    if (prefix == hashTagPrefix) {\n      setIsLoading(true);\n      axios.get(`${client.io.io.uri}getHashTags`, {\n        params: {\n          match: {\n            keyword: keyword || ''\n          },\n          limit: PAGE_SIZE,\n          skip: skip || 0\n        }\n      }).then(res => {\n        setIsLoading(false);\n\n        let temp = _.cloneDeep(suggestList);\n\n        temp[prefix] = suggestListPage > 1 ? _.isArray(_.get(res, ['data', 'data'])) && !_.isEmpty(_.get(res, ['data', 'data'])) ? (suggestList[prefix] || []).concat(res.data.data) : suggestList[prefix] || [] : _.get(res, ['data', 'data']) || [];\n        setSuggestList(temp);\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  }\n\n  function handleChange(content, delta, source, editor) {\n    let newText = editor.getText();\n\n    let action = _.get(delta, ['ops', arrayLengthCount(_.get(delta, ['ops'])) == 2 ? 1 : 0]);\n\n    let position = arrayLengthCount(_.get(delta, ['ops'])) == 2 ? _.get(delta, ['ops', 0, 'retain']) || 0 : 0;\n\n    if (isValidNumber(parseInt(props.maxLength))) {\n      if (newText.length > parseInt(props.maxLength) && ReactQuill) {\n        let quill = props.inputRef || ref[uid];\n\n        if (quill.current) {\n          let editor = quill.current.getEditor();\n\n          if (editor && quill) {\n            quill.current.focus();\n            let currentCursor = editor.getSelection().index || 0;\n            editor.setText(text, 'silent');\n            editor.setSelection(currentCursor);\n          }\n        }\n\n        return;\n      }\n    } // if (props.excludeEnter && _.get(action, ['insert']) == '\\n') {\n    //     newText = newText.replace(/\\n/g, \"\");\n    //     if (ReactQuill) {\n    //         let quill = props.inputRef || ref[uid];\n    //         if (quill.current) {\n    //             let editor = quill.current.getEditor();\n    //             if (editor && quill) {\n    //                 quill.current.focus();\n    //                 let currentCursor = editor.getSelection().index || 0;\n    //                 editor.setText(newText, 'silent');\n    //                 setTimeout(() => {\n    //                     editor.setSelection(currentCursor);\n    //                 }, 10);\n    //             }\n    //         }\n    //         return;\n    //     }\n    // }\n\n\n    setText(newText);\n\n    if (_.isPlainObject(action) && !_.isEmpty(action)) {\n      if (_.has(action, 'delete')) {\n        handleDeleteAliasCode(position, 'delete');\n      }\n    }\n  }\n\n  function handleAddText(input, tagging) {\n    if (ReactQuill) {\n      let quill = props.inputRef || ref[uid];\n\n      if (quill.current) {\n        let editor = quill.current.getEditor();\n\n        if (editor && quill) {\n          quill.current.focus();\n          let currentCursor = editor.getSelection().index || 0;\n          editor.insertText(currentCursor, input);\n        }\n      }\n    }\n  }\n\n  function handleAddTag(input, aliasPosition, searchWord) {\n    if (ReactQuill) {\n      let quill = props.inputRef || ref[uid];\n\n      if (quill.current) {\n        let editor = quill.current.getEditor();\n\n        if (editor && quill) {\n          let preText = text.substr(0, aliasPosition);\n          let postText = text.substr(aliasPosition + 1 + searchWord.length);\n          let newText = preText + postText;\n          editor.setText(newText, 'user');\n          editor.insertText(aliasPosition, input, {\n            bold: true,\n            color: '#2196F3'\n          });\n          editor.insertText(aliasPosition + input.length, ' ', {\n            'bold': false,\n            color: '#616161'\n          });\n          editor.setSelection(aliasPosition + input.length + 1);\n        }\n      }\n    }\n  }\n\n  function handleAddAliasCode(value, id, prefix, aliasPosition) {\n    if (text[aliasPosition] == prefix) {\n      let newAliasCode = _.cloneDeep(aliasCode) || [];\n      let codePrefix = prefix == '@' ? tagPrefixHashValue : hashTagPrefixHashValue;\n      let codeSuffix = prefix == '@' ? tagSuffixHashValue : hashTagSuffixHashValue;\n      newAliasCode = _.unionBy(_.sortBy(_.reverse(_.sortBy(_.concat(newAliasCode, [{\n        value: `${codePrefix}${value || ''}${seperatorHashValue}${id || ''}${codeSuffix}`,\n        position: aliasPosition,\n        endPosition: aliasPosition + value.length - 1,\n        prefix: prefix,\n        name: value,\n        id: id,\n        createdAt: new Date().getTime()\n      }]), ['createdAt'])), ['position']), [], 'position');\n      setAliasCode(newAliasCode);\n    }\n\n    setSearchMode(false);\n  }\n\n  function handleDeleteAliasCode(position, action) {\n    if (ReactQuill) {\n      let newAliasCode = _.unionBy(_.sortBy(_.reverse(_.sortBy(_.cloneDeep(aliasCode) || [], ['createdAt'])), ['position']), [], 'position'); //need update back position after delete things\n\n\n      let quill = props.inputRef || ref[uid];\n\n      if (quill.current) {\n        let editor = quill.current.getEditor();\n        let currentText = '';\n\n        if (editor && quill) {\n          currentText = editor.getText();\n        }\n\n        newAliasCode = _.map(newAliasCode, function (code) {\n          if (code.position > position) {\n            code.position -= 1;\n          }\n\n          return code;\n        });\n        let codeStr = parseToTagString(currentText, newAliasCode);\n        newAliasCode = getAliasCodeFromText(codeStr);\n\n        if (!_.isEqual(newAliasCode, aliasCode)) {\n          setAliasCode(newAliasCode);\n        }\n      }\n    }\n  }\n\n  function updateAliasText() {\n    if (ReactQuill) {\n      let quill = props.inputRef || ref[uid];\n\n      if (quill.current) {\n        quill = quill.current.getEditor();\n        quill.formatText(0, text.length, {\n          'bold': false,\n          color: '#616161'\n        }, 'silent'); //Update format\n        //If dont want the sudden color flash need to loop through each word\n\n        _.forEach(aliasCode, function (code) {\n          let name = code.name;\n          let position = code.position;\n\n          if (name && isValidNumber(position)) {\n            name = name.split('');\n\n            _.forEach(name, function (char) {\n              if (char == text[position]) {\n                quill.formatText(position, 1, {\n                  bold: true,\n                  color: code.prefix == hashTagPrefix ? 'black' : '#2196F3' // color: '#2196F3',\n\n                });\n              } else {\n                return false;\n              }\n\n              position++;\n            });\n          }\n        });\n      }\n    }\n  }\n\n  function checkCanSearch(range, editor) {\n    let currentPosition = _.get(range, ['index']);\n\n    let text = editor.getText();\n    let newSearchWord = '';\n\n    if (!currentPosition || text[currentPosition - 1] == ' ' && hashTagActived) {\n      setHashTagActived(false);\n      setTimeout(() => {\n        setSearchMode(false);\n      }, 300);\n    }\n\n    if (currentPosition > 0) {\n      let canSearch = false;\n      let gotSpace = false;\n\n      _.forEach(_.reverse(_.range(0, currentPosition)), function (i) {\n        if (text[i] == ' ') {\n          gotSpace = true;\n        }\n\n        if (text[i] == ' ' && !searchMode) {\n          return false;\n        }\n\n        if (text[i] == tagPrefix) {\n          if (text[i - 1] == undefined || text[i - 1] == ' ' || text[i - 1] == '') {\n            canSearch = true;\n            setPrefix(text[i]);\n            setActiveTriggerPosition(i); // setSearchWord(_.reverse(newSearchWord.split('')).join(''));\n\n            setSearchWord(_.reverse(newSearchWord.split('')).join(''));\n            setSearchMode(true);\n            return false;\n          }\n        } else if (text[i] == hashTagPrefix && !gotSpace) {\n          canSearch = true;\n\n          if (text[i - 1] == undefined || text[i - 1] == ' ' || text[i - 1] == '') {\n            setPrefix(text[i]);\n            setHashTagActiveTriggerPosition(i);\n            setSearchWord(_.reverse(newSearchWord.split('')).join(''));\n            setSearchMode(true);\n            setHashTagActived(true);\n            setHashTagValue(_.reverse(newSearchWord.split('')).join(''));\n            return false;\n          }\n        }\n\n        newSearchWord += `${text[i] || ''}`;\n      });\n\n      if (!canSearch) {\n        setSearchMode(false);\n      }\n    }\n  }\n\n  if (ReactQuill) {\n    return __jsx(React.Fragment, null, __jsx(ClickOutsideDetectWrapper, {\n      onClickedOutside: () => {\n        if (props.clickOutsideSubmit) {\n          handleSubmit();\n        }\n      },\n      className: `no-border-input thin-border round-border-big background-transparent padding-sm flex-justify-start relative-wrapper flex-items-align-center ${props.className || ''}`,\n      style: _objectSpread({}, props.style),\n      id: uid\n    }, __jsx(ReactQuill, {\n      theme: null,\n      placeholder: props.placeholder || \"What's on your mind?\",\n      className: \"width-90 grey-darken-3\",\n      style: {\n        height: props.height || 30\n      },\n      ref: props.inputRef || ref[uid],\n      onChange: (content, delta, source, editor) => {\n        handleChange(content, delta, source, editor);\n      },\n      onChangeSelection: (range, source, editor) => {\n        checkCanSearch(range, editor); // checkHashTag(range, editor);\n      },\n      onKeyUp: e => {\n        //Enter Hit\n        if (e.key === 'Enter') {\n          e.preventDefault();\n          handleSubmit();\n        }\n      }\n    }), __jsx(EmojiPickerButton, {\n      onSelect: emoji => {\n        handleAddText(emoji.native);\n      },\n      position: props.emojiPosition\n    }, __jsx(Icon, {\n      type: \"smile\",\n      className: \"cursor-pointer grey margin-right-sm margin-top-xs flex-items-no-shrink\",\n      style: {\n        fontSize: '17px'\n      }\n    })), // searchMode && _.isArray(_.get(suggestList, [prefix])) && !_.isEmpty(_.get(suggestList, [prefix])) ?\n    searchMode ? __jsx(\"div\", {\n      className: \"round-border thin-border background-white \",\n      style: props.placement == 'bottom' ? {\n        position: 'absolute',\n        bottom: -210,\n        right: 0,\n        left: 0,\n        zIndex: 99999,\n        margin: 'auto'\n      } : {\n        position: 'absolute',\n        top: -210,\n        right: 0,\n        left: 0,\n        zIndex: 99999,\n        margin: 'auto'\n      }\n    }, __jsx(ScrollLoadWrapper, {\n      autoHeight: true,\n      autoHeightMax: 200,\n      autoHeightMin: 200,\n      style: {\n        width: '100%'\n      }\n    }, _.isArray(_.get(suggestList, [prefix])) && !_.isEmpty(_.get(suggestList, [prefix])) ? (suggestList[prefix] || []).map(value => __jsx(\"div\", {\n      className: \"padding-sm flex-justify-start flex-items-align-center cursor-pointer hover-background-yellow-accent-1\",\n      onClick: e => {\n        if (prefix == tagPrefix) {\n          setSearchMode(false);\n          handleAddTag(getUserName(value, 'freakId') || '', activeTriggerPosition, searchWord);\n          handleAddAliasCode(getUserName(value, 'freakId'), value._id, prefix, activeTriggerPosition);\n        } else if (prefix == hashTagPrefix) {\n          setHashTagValue('');\n          setHashTagActived(false);\n          setHashTagActiveTriggerPosition(null);\n          handleAddTag(_.get(value, ['tag']) || '', hashTagActiveTriggerPosition, `#${hashTagValue}`);\n          handleAddAliasCode(_.get(value, ['tag']), '$_id', prefix, hashTagActiveTriggerPosition);\n        }\n      }\n    }, prefix == tagPrefix ? __jsx(React.Fragment, null, __jsx(UserAvatar, {\n      data: value,\n      size: 50,\n      className: \"margin-right-md\"\n    }), __jsx(\"span\", {\n      className: \"d-inline-block\"\n    }, __jsx(\"div\", {\n      className: \"headline font-weight-black text-truncate\"\n    }, getUserName(value, 'freakId') || ''), __jsx(\"div\", {\n      className: \"headline text-truncate\"\n    }, getUserName(value, 'fullName') || ''))) : prefix == hashTagPrefix ? __jsx(\"div\", {\n      className: \"headline font-weight-black text-truncate\"\n    }, _.get(value, ['tag'])) : null)) : __jsx(\"div\", {\n      className: \"flex-justify-center flex-items-align-center padding-md\"\n    }, __jsx(Empty, {\n      description: isLoading ? 'Getting data...' : 'No Result'\n    })))) : null));\n  } else {\n    return null;\n  }\n};\n\nconst mapStateToProps = state => ({\n  app: state.app,\n  user: state.user\n});\n\nconst mapDispatchToProps = {\n  loading: loading\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Form.create()(withRouter(SocialInput)));","map":{"version":3,"sources":["/Users/faraheen/ccar-cms-next-mobile/components/carFreak/components/social-input.jsx"],"names":["Empty","Form","Icon","message","axios","_","withRouter","React","useEffect","useState","connect","v4","client","loading","ClickOutsideDetectWrapper","EmojiPickerButton","ScrollLoadWrapper","getAliasCodeFromText","hashTagPrefix","hashTagPrefixHashValue","hashTagSuffixHashValue","parseTagStringToPlainString","parseToTagString","seperatorHashValue","tagPrefix","tagPrefixHashValue","tagSuffixHashValue","arrayLengthCount","getUserName","isValidNumber","UserAvatar","uid","ref","createRef","typingTimeout","checkSearchTimeout","checkHashTagTimeout","PAGE_SIZE","ReactQuill","SocialInput","props","text","setText","suggestList","setSuggestList","suggestListTotal","setSuggestListTotal","suggestListPage","setSuggestListPage","prefix","setPrefix","isLoading","setIsLoading","searchMode","setSearchMode","searchWord","setSearchWord","activeTriggerPosition","setActiveTriggerPosition","hashTagActiveTriggerPosition","setHashTagActiveTriggerPosition","hashTagActived","setHashTagActived","hashTagValue","setHashTagValue","aliasCode","setAliasCode","editMode","setEditMode","startWatching","setStartWatching","document","require","handleAddAliasCode","resetIndicator","reset","focusIndicator","focus","newText","quill","inputRef","current","editor","getEditor","newAliasCode","searchData","clearTimeout","setTimeout","updateAliasText","onChange","currentCursor","getText","length","setSelection","handleSubmit","finalText","excludeEnter","replace","onSubmit","skip","keyword","get","io","uri","params","match","userId","user","clubId","limit","then","res","temp","cloneDeep","isArray","isEmpty","concat","data","catch","err","console","log","handleChange","content","delta","source","action","position","parseInt","maxLength","getSelection","index","isPlainObject","has","handleDeleteAliasCode","handleAddText","input","tagging","insertText","handleAddTag","aliasPosition","preText","substr","postText","bold","color","value","id","codePrefix","codeSuffix","unionBy","sortBy","reverse","endPosition","name","createdAt","Date","getTime","currentText","map","code","codeStr","isEqual","formatText","forEach","split","char","checkCanSearch","range","currentPosition","newSearchWord","canSearch","gotSpace","i","undefined","join","clickOutsideSubmit","className","style","placeholder","height","e","key","preventDefault","emoji","native","emojiPosition","fontSize","placement","bottom","right","left","zIndex","margin","top","width","_id","mapStateToProps","state","app","mapDispatchToProps","create"],"mappings":"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","sourcesContent":["import { Empty, Form, Icon, message } from 'antd';\nimport axios from 'axios';\nimport _ from 'lodash';\nimport { withRouter } from 'next/dist/client/router';\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { v4 } from 'uuid';\nimport client from '../../../feathers';\nimport { loading } from '../../../redux/actions/app-actions';\nimport ClickOutsideDetectWrapper from '../../general/ClickOutsideDetectWrapper';\nimport EmojiPickerButton from '../../general/EmojiPickerButton';\nimport ScrollLoadWrapper from '../../general/ScrollLoadWrapper';\nimport { getAliasCodeFromText, hashTagPrefix, hashTagPrefixHashValue, hashTagSuffixHashValue, parseTagStringToPlainString, parseToTagString, seperatorHashValue, tagPrefix, tagPrefixHashValue, tagSuffixHashValue } from '../config';\nimport { arrayLengthCount, getUserName, isValidNumber } from '../../../common-function';\nimport UserAvatar from '../../general/UserAvatar';\n\n\n\nlet uid = v4();\nlet ref = {}\nref[uid] = React.createRef();\nlet typingTimeout;\nlet checkSearchTimeout;\nlet checkHashTagTimeout;\nconst PAGE_SIZE = 20;\nlet ReactQuill;\nconst SocialInput = (props) => {\n\n    const [text, setText] = useState('');\n    const [suggestList, setSuggestList] = useState({});\n    const [suggestListTotal, setSuggestListTotal] = useState(0);\n    const [suggestListPage, setSuggestListPage] = useState(1);\n    const [prefix, setPrefix] = useState(tagPrefix);\n    const [isLoading, setIsLoading] = useState(false);\n    const [searchMode, setSearchMode] = useState(false);\n    const [searchWord, setSearchWord] = useState('');\n    const [activeTriggerPosition, setActiveTriggerPosition] = useState(0);\n    const [hashTagActiveTriggerPosition, setHashTagActiveTriggerPosition] = useState(null);\n    const [hashTagActived, setHashTagActived] = useState(false);\n    const [hashTagValue, setHashTagValue] = useState('');\n    const [aliasCode, setAliasCode] = useState([]);\n    const [editMode, setEditMode] = useState(false);\n    const [startWatching, setStartWatching] = useState(false);\n\n    useEffect(() => {\n        if (document) {\n            ReactQuill = require('react-quill');\n        }\n    }, [])\n\n    useEffect(() => {\n        if (!hashTagActived && hashTagValue && hashTagActiveTriggerPosition != null) {\n            handleAddAliasCode(`#${hashTagValue}`, '$_id', '#', hashTagActiveTriggerPosition);\n            setHashTagValue('');\n            setHashTagActiveTriggerPosition(null);\n            setSearchMode(false);\n        }\n    }, [hashTagActived, hashTagValue])\n\n\n    useEffect(() => {\n        if (props.resetIndicator) {\n            reset();\n        }\n    }, [props.resetIndicator])\n\n    useEffect(() => {\n        if (props.focusIndicator) {\n            focus();\n        }\n    }, [props.focusIndicator])\n\n    useEffect(() => {\n        setEditMode(props.editMode ? true : false);\n    }, [props.editMode])\n\n    useEffect(() => {\n        if (editMode && props.text && ReactQuill) {\n            let newText = parseTagStringToPlainString(props.text);\n            let quill = props.inputRef || ref[uid];\n            if (quill.current) {\n                let editor = quill.current.getEditor();\n                if (editor && quill) {\n                    editor.setText(newText, 'silent');\n                }\n                let newAliasCode = getAliasCodeFromText(props.text);\n                setText(newText);\n                setAliasCode(newAliasCode);\n            }\n        }\n    }, [editMode, props.text, ReactQuill])\n\n\n    useEffect(() => {\n\n        if (searchMode) {\n            searchData(0, searchWord, prefix);\n        } else {\n            setSearchWord('');\n            setSuggestList([]);\n            setSuggestListPage(1);\n            setSuggestListTotal(0);\n            setActiveTriggerPosition(null);\n        }\n\n    }, [searchMode])\n\n    useEffect(() => {\n\n        if (searchMode && prefix) {\n            clearTimeout(typingTimeout);\n            typingTimeout = setTimeout(() => {\n                searchData((suggestListPage - 1) * PAGE_SIZE, searchWord, prefix);\n            }, 300);\n        }\n\n    }, [searchWord, prefix, suggestListPage])\n\n    useEffect(() => {\n        updateAliasText();\n    }, [aliasCode])\n\n    useEffect(() => {\n        if (props.onChange && startWatching) {\n            props.onChange(text, parseToTagString(text, aliasCode));\n        }\n\n        setStartWatching(true);\n    }, [text, aliasCode])\n\n\n    function reset() {\n\n        if (ReactQuill) {\n            let quill = props.inputRef || ref[uid];\n            if (quill.current) {\n                let editor = quill.current.getEditor();\n                if (editor && quill) {\n                    editor.setText(\"\");\n                }\n                setText('');\n                setAliasCode([]);\n                setSuggestList([]);\n            }\n        }\n    }\n\n    function focus() {\n        if (ReactQuill) {\n            let quill = props.inputRef || ref[uid];\n            if (quill.current) {\n                let editor = quill.current.getEditor();\n                quill.current.focus();\n                let currentCursor = (editor.getText() || '').length || 0;\n                if (editor && quill) {\n                    setTimeout(() => {\n                        editor.setSelection(currentCursor);\n                    }, 10);\n                }\n            }\n\n            return;\n        }\n    }\n\n    function handleSubmit() {\n        let finalText = text;\n        if (props.excludeEnter) {\n            finalText = finalText.replace(/\\n/g, \"\");\n        }\n        if (props.onSubmit && finalText) {\n            finalText = parseToTagString(finalText, aliasCode)\n            props.onSubmit(finalText);\n            reset();\n            focus();\n        }\n    }\n\n    function searchData(skip, keyword, prefix) {\n        setSuggestList({});\n        if (prefix == tagPrefix) {\n            setIsLoading(true);\n            axios.get(`${client.io.io.uri}getRelatedUser`, {\n                params: {\n                    match: {\n                        userId: _.get(props.user, ['info', 'user', '_id']),\n                        clubId : props.clubId || '',\n                        keyword: keyword || '',\n                    },\n                    limit: PAGE_SIZE,\n                    skip: skip || 0,\n                }\n            }).then(res => {\n       \n                setIsLoading(false);\n                let temp = _.cloneDeep(suggestList);\n                temp[prefix] = suggestListPage > 1 ?\n                    _.isArray(_.get(res, ['data', 'data'])) && !_.isEmpty(_.get(res, ['data', 'data'])) ?\n                        (suggestList[prefix] || []).concat(res.data.data)\n                        : suggestList[prefix] || []\n                    :\n                    _.get(res, ['data', 'data']) || []\n\n                setSuggestList(temp);\n            }).catch(err => {\n                setIsLoading(false);\n                console.log(err);\n            });\n        }\n\n        if (prefix == hashTagPrefix) {\n            setIsLoading(true);\n            axios.get(`${client.io.io.uri}getHashTags`, {\n                params: {\n                    match: {\n                        keyword: keyword || '',\n                    },\n                    limit: PAGE_SIZE,\n                    skip: skip || 0,\n                }\n            }).then(res => {\n                setIsLoading(false);\n                let temp = _.cloneDeep(suggestList);\n                temp[prefix] = suggestListPage > 1 ?\n                    _.isArray(_.get(res, ['data', 'data'])) && !_.isEmpty(_.get(res, ['data', 'data'])) ?\n                        (suggestList[prefix] || []).concat(res.data.data)\n                        : suggestList[prefix] || []\n                    :\n                    _.get(res, ['data', 'data']) || []\n\n                setSuggestList(temp);\n\n            }).catch(err => {\n                console.log(err);\n            });\n        }\n    }\n\n    function handleChange(content, delta, source, editor) {\n\n        let newText = editor.getText();\n        let action = _.get(delta, ['ops', arrayLengthCount(_.get(delta, ['ops'])) == 2 ? 1 : 0]);\n        let position = arrayLengthCount(_.get(delta, ['ops'])) == 2 ? _.get(delta, ['ops', 0, 'retain']) || 0 : 0;\n        if (isValidNumber(parseInt(props.maxLength))) {\n            if (newText.length > parseInt(props.maxLength) && ReactQuill) {\n                let quill = props.inputRef || ref[uid];\n                if (quill.current) {\n                    let editor = quill.current.getEditor();\n                    if (editor && quill) {\n                        quill.current.focus();\n                        let currentCursor = editor.getSelection().index || 0;\n                        editor.setText(text, 'silent');\n                        editor.setSelection(currentCursor);\n                    }\n                }\n\n                return;\n            }\n        }\n\n        // if (props.excludeEnter && _.get(action, ['insert']) == '\\n') {\n        //     newText = newText.replace(/\\n/g, \"\");\n        //     if (ReactQuill) {\n        //         let quill = props.inputRef || ref[uid];\n        //         if (quill.current) {\n        //             let editor = quill.current.getEditor();\n        //             if (editor && quill) {\n        //                 quill.current.focus();\n        //                 let currentCursor = editor.getSelection().index || 0;\n        //                 editor.setText(newText, 'silent');\n        //                 setTimeout(() => {\n        //                     editor.setSelection(currentCursor);\n        //                 }, 10);\n        //             }\n        //         }\n\n        //         return;\n        //     }\n        // }\n\n        setText(newText);\n\n        if (_.isPlainObject(action) && !_.isEmpty(action)) {\n\n            if (_.has(action, 'delete')) {\n                handleDeleteAliasCode(position, 'delete');\n            }\n\n        }\n\n    }\n\n    function handleAddText(input, tagging) {\n        if (ReactQuill) {\n            let quill = props.inputRef || ref[uid];\n            if (quill.current) {\n                let editor = quill.current.getEditor();\n                if (editor && quill) {\n                    quill.current.focus();\n                    let currentCursor = editor.getSelection().index || 0;\n                    editor.insertText(currentCursor, input);\n                }\n            }\n        }\n    }\n\n    function handleAddTag(input, aliasPosition, searchWord) {\n        if (ReactQuill) {\n            let quill = props.inputRef || ref[uid];\n            if (quill.current) {\n                let editor = quill.current.getEditor();\n                if (editor && quill) {\n                    let preText = text.substr(0, aliasPosition);\n                    let postText = text.substr(aliasPosition + 1 + searchWord.length);\n                    let newText = preText + postText;\n                    editor.setText(newText, 'user');\n\n                    editor.insertText(aliasPosition, input, {\n                        bold: true,\n                        color: '#2196F3',\n                    })\n                    editor.insertText(aliasPosition + input.length, ' ', {\n                        'bold': false,\n                        color: '#616161'\n                    })\n                    editor.setSelection(aliasPosition + input.length + 1)\n                }\n            }\n        }\n\n    }\n\n    function handleAddAliasCode(value, id, prefix, aliasPosition) {\n        if (text[aliasPosition] == prefix) {\n            let newAliasCode = _.cloneDeep(aliasCode) || [];\n            let codePrefix = prefix == '@' ? tagPrefixHashValue : hashTagPrefixHashValue;\n            let codeSuffix = prefix == '@' ? tagSuffixHashValue : hashTagSuffixHashValue;\n            newAliasCode = _.unionBy(_.sortBy(_.reverse(_.sortBy(_.concat(newAliasCode, [{\n                value: `${codePrefix}${value || ''}${seperatorHashValue}${id || ''}${codeSuffix}`,\n                position: aliasPosition,\n                endPosition: aliasPosition + value.length - 1,\n                prefix: prefix,\n                name: value,\n                id: id,\n                createdAt: new Date().getTime(),\n            }]), ['createdAt'])), ['position']), [], 'position');\n\n            setAliasCode(newAliasCode);\n        }\n\n        setSearchMode(false);\n    }\n\n    function handleDeleteAliasCode(position, action) {\n\n        if (ReactQuill) {\n            let newAliasCode = _.unionBy(_.sortBy(_.reverse(_.sortBy(_.cloneDeep(aliasCode) || [], ['createdAt'])), ['position']), [], 'position');\n            //need update back position after delete things\n\n     \n            let quill = props.inputRef || ref[uid];\n            if (quill.current) {\n                let editor = quill.current.getEditor();\n                let currentText = '';\n                if (editor && quill) {\n                    currentText = editor.getText();\n                }\n\n                newAliasCode = _.map(newAliasCode, function (code) {\n                    if (code.position > position) {\n                        code.position -= 1;\n                    }\n                    return code;\n                })\n\n                let codeStr = parseToTagString(currentText, newAliasCode);\n                newAliasCode = getAliasCodeFromText(codeStr);\n\n                if (!_.isEqual(newAliasCode, aliasCode)) {\n                    setAliasCode(newAliasCode);\n                }\n\n            }\n        }\n\n    }\n\n\n    function updateAliasText() {\n\n        if (ReactQuill) {\n            let quill = props.inputRef || ref[uid];\n            if (quill.current) {\n                quill = quill.current.getEditor();\n                quill.formatText(0, text.length, {\n                    'bold': false,\n                    color: '#616161'\n                }, 'silent')\n                //Update format\n                //If dont want the sudden color flash need to loop through each word\n                _.forEach(aliasCode, function (code) {\n                    let name = code.name;\n                    let position = code.position;\n\n                    if (name && isValidNumber(position)) {\n                        name = name.split('');\n                        _.forEach(name, function (char) {\n                            if (char == text[position]) {\n                                quill.formatText(position, 1, {\n                                    bold: true,\n                                    color: code.prefix == hashTagPrefix ? 'black' : '#2196F3',\n                                    // color: '#2196F3',\n                                })\n                            } else {\n                                return false;\n                            }\n                            position++;\n                        })\n                    }\n\n                })\n            }\n        }\n\n    }\n\n    function checkCanSearch(range, editor) {\n\n        let currentPosition = _.get(range, ['index']);\n        let text = editor.getText();\n        let newSearchWord = '';\n\n        if (!currentPosition || (text[currentPosition - 1] == ' ' && hashTagActived)) {\n            setHashTagActived(false);\n            setTimeout(() => {\n                setSearchMode(false);\n            }, 300);\n        }\n\n        if (currentPosition > 0) {\n            let canSearch = false;\n            let gotSpace = false;\n            _.forEach(_.reverse(_.range(0, currentPosition)), function (i) {\n                if ((text[i] == ' ')) {\n                    gotSpace = true;\n                }\n\n                if ((text[i] == ' ' && !searchMode)) {\n                    return false;\n                }\n\n                if (text[i] == tagPrefix) {\n                    if (text[i - 1] == undefined || text[i - 1] == ' ' || text[i - 1] == '') {\n                        canSearch = true;\n                        setPrefix(text[i]);\n                        setActiveTriggerPosition(i);\n                        // setSearchWord(_.reverse(newSearchWord.split('')).join(''));\n                        setSearchWord(_.reverse(newSearchWord.split('')).join(''));\n                        setSearchMode(true);\n                        return false;\n                    }\n                } else if (text[i] == hashTagPrefix && !gotSpace) {\n                    canSearch = true;\n                    if (text[i - 1] == undefined || text[i - 1] == ' ' || text[i - 1] == '') {\n                        setPrefix(text[i]);\n                        setHashTagActiveTriggerPosition(i);\n                        setSearchWord(_.reverse(newSearchWord.split('')).join(''));\n                        setSearchMode(true);\n                        setHashTagActived(true);\n                        setHashTagValue(_.reverse(newSearchWord.split('')).join(''));\n                        return false;\n                    }\n                }\n                newSearchWord += `${text[i] || ''}`\n            })\n\n            if (!canSearch) {\n                setSearchMode(false);\n            }\n        }\n    }\n\n    if (ReactQuill) {\n        return (\n            <React.Fragment>\n                <ClickOutsideDetectWrapper\n                    onClickedOutside={() => {\n                        if (props.clickOutsideSubmit) {\n                            handleSubmit();\n                        }\n                    }}\n                    className={`no-border-input thin-border round-border-big background-transparent padding-sm flex-justify-start relative-wrapper flex-items-align-center ${props.className || ''}`}\n                    style={{ ...props.style }}\n                    id={uid}\n                >\n                    <ReactQuill\n                        theme={null}\n                        placeholder={props.placeholder || \"What's on your mind?\"}\n                        className=\"width-90 grey-darken-3\"\n                        style={{ height: props.height || 30 }}\n                        ref={props.inputRef || ref[uid]}\n                        onChange={(content, delta, source, editor) => { handleChange(content, delta, source, editor) }}\n                        onChangeSelection={(range, source, editor) => {\n                            checkCanSearch(range, editor);\n                            // checkHashTag(range, editor);\n                        }}\n                        onKeyUp={(e) => {\n\n                            //Enter Hit\n                            if (e.key === 'Enter') {\n                                e.preventDefault();\n                                handleSubmit();\n                            }\n\n                        }}\n                    >\n                    </ReactQuill>\n                    <EmojiPickerButton\n                        onSelect={(emoji) => {\n                            handleAddText(emoji.native)\n                        }}\n                        position={props.emojiPosition}\n                    >\n                        <Icon type=\"smile\" className='cursor-pointer grey margin-right-sm margin-top-xs flex-items-no-shrink' style={{ fontSize: '17px' }} />\n                    </EmojiPickerButton>\n                    {\n                        // searchMode && _.isArray(_.get(suggestList, [prefix])) && !_.isEmpty(_.get(suggestList, [prefix])) ?\n                        searchMode ?\n                            <div className=\"round-border thin-border background-white \" style={props.placement == 'bottom' ? { position: 'absolute', bottom: -210, right: 0, left: 0, zIndex: 99999, margin: 'auto' } : { position: 'absolute', top: -210, right: 0, left: 0, zIndex: 99999, margin: 'auto' }}>\n                                <ScrollLoadWrapper autoHeight autoHeightMax={200} autoHeightMin={200} style={{ width: '100%' }} >\n                                    {\n                                        _.isArray(_.get(suggestList, [prefix])) && !_.isEmpty(_.get(suggestList, [prefix])) ?\n                                            (suggestList[prefix] || []).map(value => (\n                                                <div className=\"padding-sm flex-justify-start flex-items-align-center cursor-pointer hover-background-yellow-accent-1\"\n                                                    onClick={(e) => {\n                                                        if (prefix == tagPrefix) {\n                                                            setSearchMode(false);\n                                                            handleAddTag(getUserName(value, 'freakId') || '', activeTriggerPosition, searchWord);\n                                                            handleAddAliasCode(getUserName(value, 'freakId'), value._id, prefix, activeTriggerPosition)\n                                                        } else if (prefix == hashTagPrefix) {\n                                                            setHashTagValue('');\n                                                            setHashTagActived(false);\n                                                            setHashTagActiveTriggerPosition(null);\n                                                            handleAddTag(_.get(value, ['tag']) || '', hashTagActiveTriggerPosition, `#${hashTagValue}`);\n                                                            handleAddAliasCode(_.get(value, ['tag']), '$_id', prefix, hashTagActiveTriggerPosition)\n                                                        }\n                                                    }}>\n                                                    {\n                                                        prefix == tagPrefix ?\n                                                            <React.Fragment>\n                                                                <UserAvatar data={value} size={50} className=\"margin-right-md\" />\n                                                                <span className='d-inline-block' >\n                                                                    <div className=\"headline font-weight-black text-truncate\">\n                                                                        {getUserName(value, 'freakId') || ''}\n                                                                    </div>\n                                                                    <div className=\"headline text-truncate\">\n                                                                        {getUserName(value, 'fullName') || ''}\n                                                                    </div>\n                                                                </span>\n                                                            </React.Fragment>\n                                                            :\n                                                            prefix == hashTagPrefix ?\n                                                                <div className='headline font-weight-black text-truncate' >\n                                                                    {\n                                                                        _.get(value, ['tag'])\n                                                                    }\n                                                                </div>\n                                                                :\n                                                                null\n                                                    }\n                                                </div>\n                                            ))\n                                            :\n                                            <div className=\"flex-justify-center flex-items-align-center padding-md\">\n                                                <Empty description={isLoading ? 'Getting data...' : 'No Result'}></Empty>\n                                            </div>\n                                    }\n                                </ScrollLoadWrapper>\n                            </div>\n                            :\n                            null\n                    }\n                </ClickOutsideDetectWrapper>\n            </React.Fragment>\n        );\n    } else {\n        return null;\n    }\n}\n\n\nconst mapStateToProps = state => ({\n    app: state.app,\n    user: state.user,\n});\n\nconst mapDispatchToProps = {\n    loading: loading,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Form.create()(withRouter(SocialInput)));"]},"metadata":{},"sourceType":"module"}