{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { Form, Icon } from 'antd';\nimport { Picker } from 'emoji-mart';\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'next/router';\nimport { notEmptyLength, objectRemoveEmptyValue } from '../../common-function';\nvar emojiRef = React.createRef();\n\nvar EmojiPickerButton = function EmojiPickerButton(props) {\n  _s();\n\n  var _useState = useState(false),\n      emojiVisible = _useState[0],\n      setEmojiVisible = _useState[1];\n\n  useEffect(function () {\n    function handleClickOutside(event) {\n      if (!emojiRef.current || !emojiRef.current.contains(event.target)) {\n        setEmojiVisible(false);\n      }\n    } // Bind the event listener\n\n\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return function () {\n      // Unbind the event listener on clean up\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, [emojiRef.current]);\n\n  function handleOnSelect(emoji) {\n    if (props.onSelect) {\n      props.onSelect(emoji);\n    }\n  }\n\n  return __jsx(React.Fragment, null, __jsx(\"span\", {\n    className: \"d-inline-block relative-wrapper\"\n  }, __jsx(\"span\", {\n    onClick: function onClick(e) {\n      setEmojiVisible(true);\n    }\n  }, props.children ? props.children : __jsx(Icon, {\n    type: \"smile\",\n    className: \"cursor-pointer\"\n  })), emojiVisible ? __jsx(\"span\", {\n    className: \"d-inline-block \".concat(props.className || ''),\n    ref: emojiRef,\n    style: notEmptyLength(objectRemoveEmptyValue(props.position)) ? _objectSpread(_objectSpread({\n      position: 'absolute'\n    }, props.position), {}, {\n      zIndex: 999999\n    }) : {\n      position: 'absolute',\n      top: -380,\n      left: -200,\n      zIndex: 999999\n    }\n  }, __jsx(Picker, {\n    enableFrequentEmojiSort: true,\n    useButton: true,\n    theme: \"auto\",\n    showPreview: false,\n    showSkinTones: false,\n    perLine: 6,\n    onClick: function onClick(emoji) {\n      handleOnSelect(emoji);\n    }\n  })) : null));\n};\n\n_s(EmojiPickerButton, \"oFx/9pQ/5O1MOd6N4R3mYistKlU=\");\n\n_c = EmojiPickerButton;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    app: state.app,\n    user: state.user\n  };\n};\n\nvar mapDispatchToProps = {};\nexport default connect(mapStateToProps, mapDispatchToProps)(Form.create()(withRouter(EmojiPickerButton)));\n\nvar _c;\n\n$RefreshReg$(_c, \"EmojiPickerButton\");","map":{"version":3,"sources":["/Users/faraheen/ccar-cms-next-mobile/components/general/EmojiPickerButton.jsx"],"names":["Form","Icon","Picker","React","useEffect","useState","connect","withRouter","notEmptyLength","objectRemoveEmptyValue","emojiRef","createRef","EmojiPickerButton","props","emojiVisible","setEmojiVisible","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","handleOnSelect","emoji","onSelect","e","children","className","position","zIndex","top","left","mapStateToProps","state","app","user","mapDispatchToProps","create"],"mappings":"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","sourcesContent":["import { Form, Icon } from 'antd';\nimport { Picker } from 'emoji-mart';\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'next/router';\nimport { notEmptyLength, objectRemoveEmptyValue } from '../../common-function';\n\n\nconst emojiRef = React.createRef();\nconst EmojiPickerButton = (props) => {\n\n    const [emojiVisible, setEmojiVisible] = useState(false);\n\n    useEffect(() => {\n\n        function handleClickOutside(event) {\n\n            if ((!emojiRef.current || !emojiRef.current.contains(event.target))) {\n                setEmojiVisible(false)\n            }\n        }\n\n        // Bind the event listener\n        document.addEventListener(\"mousedown\", handleClickOutside);\n        return () => {\n            // Unbind the event listener on clean up\n            document.removeEventListener(\"mousedown\", handleClickOutside);\n        };\n    }, [emojiRef.current])\n\n    function handleOnSelect(emoji) {\n        if (props.onSelect) {\n            props.onSelect(emoji);\n        }\n    }\n\n\n    return (\n        <React.Fragment>\n            <span className='d-inline-block relative-wrapper' >\n                <span onClick={(e) => { setEmojiVisible(true) }} >\n                    {\n                        props.children ?\n                            props.children\n                            :\n                            <Icon type=\"smile\" className='cursor-pointer' />\n                    }\n                </span>\n                {\n                    emojiVisible ?\n                        <span className={`d-inline-block ${props.className || ''}`} ref={emojiRef} style={notEmptyLength(objectRemoveEmptyValue(props.position)) ? { position: 'absolute', ...props.position, zIndex : 999999 } : { position: 'absolute', top: -380, left: -200, zIndex : 999999 }}>\n                            <Picker enableFrequentEmojiSort useButton theme='auto' showPreview={false} showSkinTones={false} perLine={6} onClick={(emoji) => {\n                                handleOnSelect(emoji);\n                            }} />\n                        </span>\n                        :\n                        null\n                }\n            </span>\n\n        </React.Fragment>\n    );\n}\n\n\nconst mapStateToProps = state => ({\n    app: state.app,\n    user: state.user,\n});\n\nconst mapDispatchToProps = {\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Form.create()(withRouter(EmojiPickerButton)));"]},"metadata":{},"sourceType":"module"}