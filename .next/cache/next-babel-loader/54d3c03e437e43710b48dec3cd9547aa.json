{"ast":null,"code":"import { LOGIN_SUCCESSFUL, LOGOUT_SUCCESSFUL, loginSuccessful, logoutSuccessful, SET_USER } from './actions/user-actions';\nimport _ from 'lodash';\nimport { FETCH_COMPARE_LIMIT, FETCH_PRODUCTSLIST_HOME, ADD_COMPARE__PRODUCT_ID, PATCH_COMPARE_PRODUCT_IDS, CLEAR_COMPARE_PRODUCT_IDS, REMOVE_COMPARE_PRODUCT_ID } from './actions/productsList-actions';\nimport localStorage from 'local-storage';\nimport { FETCH_CLIENT_SOCKET_IO, CLEAR_CLIENT_SOCKET_IO } from './actions/live-action';\nimport { UPDATE_SOCKET_INFO, DELETE_SOCKET_INFO } from './actions/socketRefresh-actions';\nimport moment from 'moment';\nimport { isValidNumber } from '../common-function'; //Not supported for multiple same action update yet\n//Ex. ADD_COMPARE__PRODUCT_ID for twice, i will only take the last 1. Same actions before last one will be ignored;\n\nexport var statePersistActions = [{\n  action: LOGIN_SUCCESSFUL,\n  reducer: 'user'\n}, {\n  action: LOGOUT_SUCCESSFUL,\n  reducer: 'user'\n}, {\n  action: SET_USER,\n  reducer: 'user'\n}, {\n  action: FETCH_COMPARE_LIMIT,\n  reducer: 'productsList'\n}, // {\n//   action : ADD_COMPARE__PRODUCT_ID,\n// reducer : 'productList',\n// },\n{\n  action: PATCH_COMPARE_PRODUCT_IDS,\n  reducer: 'productsList'\n}, {\n  action: CLEAR_COMPARE_PRODUCT_IDS,\n  reducer: 'productsList'\n}, {\n  action: REMOVE_COMPARE_PRODUCT_ID,\n  reducer: 'productsList'\n}, {\n  action: FETCH_CLIENT_SOCKET_IO,\n  reducer: 'socketRefresh'\n}, {\n  action: CLEAR_CLIENT_SOCKET_IO,\n  reducer: 'socketRefresh'\n}, {\n  action: UPDATE_SOCKET_INFO,\n  reducer: 'socketRefresh'\n}, {\n  action: DELETE_SOCKET_INFO,\n  reducer: 'socketRefresh'\n}];\nexport function persistRedux(reducer, data) {\n  if (reducer && _.isPlainObject(data) && !_.isEmpty(data)) {\n    var reduxStates = localStorage.get('redux');\n\n    if (!_.isPlainObject(reduxStates)) {\n      reduxStates = {};\n    }\n\n    reduxStates[reducer] = data;\n    localStorage.set('redux', reduxStates);\n  }\n}\nexport function checkIsNeedPersist(action) {\n  if (action) {\n    return _.some(statePersistActions || [] || [], ['action', action]) || false;\n  }\n\n  return false;\n}\nexport function checkNeedPersist(action, reducer, data, isRestoreData) {\n  var needPersist = checkIsNeedPersist(action);\n  var persistObj = getPersistObj(action);\n\n  if (needPersist && _.get(persistObj, 'reducer') == reducer) {\n    var persistedStates = getLocalStoragePersistStates(_.get(persistObj, 'reducer'));\n\n    var selectedPersistedState = _.find(persistedStates, {\n      persistObj: {\n        action: action\n      }\n    });\n\n    var sequence = 0;\n\n    if (!isRestoreData || !isValidNumber(_.get(selectedPersistedState, 'sequence'))) {\n      sequence = _.get(_.maxBy(persistedStates || [], 'sequence'), 'sequence');\n\n      if (!isValidNumber(sequence)) {\n        sequence = 0;\n      } else {\n        sequence = parseInt(sequence) + 1;\n      }\n    } else {\n      sequence = parseInt(_.get(selectedPersistedState, 'sequence'));\n    }\n\n    var persistData = {\n      data: data,\n      reducer: _.get(persistObj, 'reducer'),\n      createdAt: new Date(),\n      sequence: sequence\n    };\n    localStorage.set(_.get(persistObj, ['action']), persistData);\n  }\n}\nexport function getPersistObj(action) {\n  if (action) {\n    return _.find(statePersistActions || [], ['action', action]) || {};\n  }\n\n  return false;\n}\nexport function getLocalStoragePersistStates(reducer) {\n  var cookiePersistStates = [];\n\n  _.forEach(statePersistActions, function (statePersistAction) {\n    var data = localStorage.get(statePersistAction['action']);\n\n    if (data) {\n      if (!reducer || reducer == _.get(data, 'reducer')) {\n        try {\n          cookiePersistStates.push({\n            persistObj: statePersistAction,\n            data: _.get(data, ['data']),\n            reducer: _.get(data, ['reducer']),\n            createdAt: moment(_.get(data, ['createdAt'])),\n            sequence: _.get(data, ['sequence']) || 0\n          });\n        } catch (error) {}\n      }\n    }\n  });\n\n  cookiePersistStates = _.sortBy(cookiePersistStates, ['reducer', 'sequence']);\n  return cookiePersistStates || [];\n}\nexport function dynamicDispatch(action, data) {\n  return function (dispatch) {\n    dispatch({\n      type: action,\n      payload: data,\n      isRestoreData: true\n    });\n  };\n}\nexport var RESTORE_REDUX = 'RESTORE_REDUX';\nexport function restoreRedux(data) {\n  return function (dispatch) {\n    dispatch({\n      type: RESTORE_REDUX,\n      payload: data\n    });\n  };\n}","map":{"version":3,"sources":["/Users/faraheen/ccar-cms-next-mobile/redux/config.js"],"names":["LOGIN_SUCCESSFUL","LOGOUT_SUCCESSFUL","loginSuccessful","logoutSuccessful","SET_USER","_","FETCH_COMPARE_LIMIT","FETCH_PRODUCTSLIST_HOME","ADD_COMPARE__PRODUCT_ID","PATCH_COMPARE_PRODUCT_IDS","CLEAR_COMPARE_PRODUCT_IDS","REMOVE_COMPARE_PRODUCT_ID","localStorage","FETCH_CLIENT_SOCKET_IO","CLEAR_CLIENT_SOCKET_IO","UPDATE_SOCKET_INFO","DELETE_SOCKET_INFO","moment","isValidNumber","statePersistActions","action","reducer","persistRedux","data","isPlainObject","isEmpty","reduxStates","get","set","checkIsNeedPersist","some","checkNeedPersist","isRestoreData","needPersist","persistObj","getPersistObj","persistedStates","getLocalStoragePersistStates","selectedPersistedState","find","sequence","maxBy","parseInt","persistData","createdAt","Date","cookiePersistStates","forEach","statePersistAction","push","error","sortBy","dynamicDispatch","dispatch","type","payload","RESTORE_REDUX","restoreRedux"],"mappings":"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","sourcesContent":["\n\nimport { LOGIN_SUCCESSFUL, LOGOUT_SUCCESSFUL, loginSuccessful, logoutSuccessful, SET_USER } from './actions/user-actions';\nimport _ from 'lodash';\nimport { FETCH_COMPARE_LIMIT, FETCH_PRODUCTSLIST_HOME, ADD_COMPARE__PRODUCT_ID, PATCH_COMPARE_PRODUCT_IDS, CLEAR_COMPARE_PRODUCT_IDS, REMOVE_COMPARE_PRODUCT_ID } from './actions/productsList-actions';\nimport localStorage from 'local-storage';\nimport { FETCH_CLIENT_SOCKET_IO, CLEAR_CLIENT_SOCKET_IO } from './actions/live-action';\nimport { UPDATE_SOCKET_INFO, DELETE_SOCKET_INFO } from './actions/socketRefresh-actions';\nimport moment from 'moment';\nimport { isValidNumber } from '../common-function';\n\n//Not supported for multiple same action update yet\n//Ex. ADD_COMPARE__PRODUCT_ID for twice, i will only take the last 1. Same actions before last one will be ignored;\nexport const statePersistActions = [\n  {\n    action: LOGIN_SUCCESSFUL,\n    reducer: 'user',\n  },\n  {\n    action: LOGOUT_SUCCESSFUL,\n    reducer: 'user',\n  },\n  {\n    action: SET_USER,\n    reducer: 'user',\n  },\n  {\n    action: FETCH_COMPARE_LIMIT,\n    reducer: 'productsList',\n  },\n  // {\n  //   action : ADD_COMPARE__PRODUCT_ID,\n  // reducer : 'productList',\n  // },\n  {\n    action: PATCH_COMPARE_PRODUCT_IDS,\n    reducer: 'productsList',\n  },\n  {\n    action: CLEAR_COMPARE_PRODUCT_IDS,\n    reducer: 'productsList',\n  },\n  {\n    action: REMOVE_COMPARE_PRODUCT_ID,\n    reducer: 'productsList',\n  },\n  {\n    action: FETCH_CLIENT_SOCKET_IO,\n    reducer: 'socketRefresh',\n  },\n  {\n    action: CLEAR_CLIENT_SOCKET_IO,\n    reducer: 'socketRefresh',\n  },\n  {\n    action: UPDATE_SOCKET_INFO,\n    reducer: 'socketRefresh',\n  },\n  {\n    action: DELETE_SOCKET_INFO,\n    reducer: 'socketRefresh',\n  },\n];\n\nexport function persistRedux(reducer, data) {\n\n  if (reducer && _.isPlainObject(data) && !_.isEmpty(data)) {\n    let reduxStates = localStorage.get('redux');\n    if (!_.isPlainObject(reduxStates)) {\n      reduxStates = {};\n    }\n\n    reduxStates[reducer] = data;\n    localStorage.set('redux', reduxStates);\n  }\n}\n\nexport function checkIsNeedPersist(action) {\n  if (action) {\n    return _.some(statePersistActions || [] || [], ['action', action]) || false;\n  }\n\n  return false;\n}\n\nexport function checkNeedPersist(action, reducer, data, isRestoreData) {\n  let needPersist = checkIsNeedPersist(action);\n  let persistObj = getPersistObj(action);\n\n  if (needPersist && _.get(persistObj, 'reducer') == reducer) {\n    let persistedStates = getLocalStoragePersistStates(_.get(persistObj, 'reducer'));\n    let selectedPersistedState = _.find(persistedStates, {\n      persistObj: {\n        action: action\n      }\n    });\n    let sequence = 0;\n\n    if (!isRestoreData || !isValidNumber(_.get(selectedPersistedState, 'sequence'))) {\n      sequence = _.get(_.maxBy(persistedStates || [], 'sequence'), 'sequence');\n      if (!isValidNumber(sequence)) {\n        sequence = 0;\n      } else {\n        sequence = parseInt(sequence) + 1;\n      }\n    } else {\n      sequence = parseInt(_.get(selectedPersistedState, 'sequence'));\n    }\n\n\n    let persistData = {\n      data: data,\n      reducer: _.get(persistObj, 'reducer'),\n      createdAt: new Date(),\n      sequence: sequence,\n    }\n    localStorage.set(_.get(persistObj, ['action']), persistData);\n  }\n}\n\nexport function getPersistObj(action) {\n  if (action) {\n    return _.find(statePersistActions || [], ['action', action]) || {};\n  }\n\n  return false;\n}\n\nexport function getLocalStoragePersistStates(reducer) {\n\n\n  let cookiePersistStates = [];\n  _.forEach(statePersistActions, function (statePersistAction) {\n    let data = localStorage.get(statePersistAction['action']);\n    if (data) {\n      if (!reducer || reducer == _.get(data, 'reducer')) {\n        try {\n          cookiePersistStates.push({\n            persistObj: statePersistAction,\n            data: _.get(data, ['data']),\n            reducer: _.get(data, ['reducer']),\n            createdAt: moment(_.get(data, ['createdAt'])),\n            sequence: _.get(data, ['sequence']) || 0,\n          })\n        } catch (error) {\n\n        }\n      }\n    }\n  })\n  cookiePersistStates = _.sortBy(cookiePersistStates, ['reducer', 'sequence']);\n  return cookiePersistStates || [];\n\n}\n\n\nexport function dynamicDispatch(action, data) {\n  return (dispatch) => {\n    dispatch({\n      type: action,\n      payload: data,\n      isRestoreData: true,\n    });\n  }\n}\n\nexport const RESTORE_REDUX = 'RESTORE_REDUX';\nexport function restoreRedux(data) {\n  return (dispatch) => {\n    dispatch({\n      type: RESTORE_REDUX,\n      payload: data,\n    });\n  }\n}"]},"metadata":{},"sourceType":"module"}