{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { Collapse, Dropdown, Form, Icon, Menu, message, Popconfirm } from 'antd';\nimport _ from 'lodash';\nimport moment from 'moment';\nimport { withRouter } from 'next/dist/client/router';\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { v4 } from 'uuid';\nimport client from '../../../feathers';\nimport { chatRestrictTime, getTagString } from '../config';\nimport LikePostButton from './like-post-button';\nimport ReplyBox1 from './reply-box-1';\nimport SocialInput from './social-input';\nimport { loading, loginMode } from '../../../redux/actions/app-actions';\nimport { getObjectId, getPlural, getUserName, notEmptyLength, objectRemoveEmptyValue } from '../../../common-function';\nimport UserAvatar from '../../general/UserAvatar';\nimport ParseTag from '../../general/ParseTag';\nvar defaultHeight = 'auto';\nvar headerHeight = 100;\nvar imageHeight = 200;\nvar titleHeight = 40;\nvar footerHeight = 100;\nvar actionHeight = 40;\nvar uid = v4();\nvar PAGE_SIZE = 6;\nvar commentInputRef = React.createRef();\n\nvar CommentBox1 = function CommentBox1(props) {\n  _s();\n\n  var _useState = useState({}),\n      comment = _useState[0],\n      setComment = _useState[1];\n\n  var _useState2 = useState(defaultHeight),\n      height = _useState2[0],\n      setHeight = _useState2[1];\n\n  var _useState3 = useState(false),\n      editMode = _useState3[0],\n      setEditMode = _useState3[1];\n\n  var _useState4 = useState(0),\n      totalLike = _useState4[0],\n      setTotalLike = _useState4[1];\n\n  var _useState5 = useState(),\n      expandReplyKey = _useState5[0],\n      setExpandReplyKey = _useState5[1];\n\n  var _useState6 = useState(''),\n      text = _useState6[0],\n      setText = _useState6[1];\n\n  var _useState7 = useState(false),\n      textEditMode = _useState7[0],\n      setTextEditMode = _useState7[1];\n\n  var _useState8 = useState([]),\n      messages = _useState8[0],\n      setMessages = _useState8[1];\n\n  var _useState9 = useState(true),\n      canSendMessage = _useState9[0],\n      setCanSendMessage = _useState9[1];\n\n  var _useState10 = useState(0),\n      messageTotal = _useState10[0],\n      setMessageTotal = _useState10[1];\n\n  var _useState11 = useState(false),\n      loading = _useState11[0],\n      setIsLoading = _useState11[1];\n\n  var _useState12 = useState(null),\n      focusIndicator = _useState12[0],\n      setFocusIndicator = _useState12[1];\n\n  useEffect(function () {\n    if (_.isPlainObject(props.data) && !_.isEmpty(props.data)) {\n      setComment(props.data);\n    } else {\n      setComment({});\n    }\n  }, [props.data]);\n  useEffect(function () {\n    if (_.isPlainObject(comment) && !_.isEmpty(comment)) {\n      setTotalLike(_.get(comment, ['totalLike']) || 0);\n      getData();\n    } else {\n      setTotalLike(0);\n      setMessages([]);\n    }\n  }, [comment]); // useEffect(() => {\n  //     if (!props.style || !isValidNumber(props.style.height) || !(parseFloat(props.style.height) >= defaultHeight)) {\n  //         setHeight(defaultHeight);\n  //     } else {\n  //         setHeight(props.style.height);\n  //     }\n  // }, [props.style])\n\n  function getData() {\n    if (_.get(comment, ['_id'])) {\n      setIsLoading(true);\n      client.service('chatmessagereplies').find({\n        query: {\n          messageId: comment._id,\n          $populate: 'userId',\n          $limit: PAGE_SIZE,\n          $sort: {\n            _id: -1\n          },\n          $skip: messages.length\n        }\n      }).then(function (res) {\n        setIsLoading(false);\n\n        if (res.data.length > 0) {\n          var newMessages = messages.concat(res.data);\n          setMessages(newMessages);\n        } else {\n          setMessages([]);\n        }\n\n        setMessageTotal(res.total);\n      })[\"catch\"](function (err) {\n        console.log(error);\n        setIsLoading(false);\n      });\n    }\n  }\n\n  function handleSubmit(text) {\n    setEditMode(false);\n\n    if (props.onChange) {\n      props.onChange(_objectSpread(_objectSpread({}, comment), {}, {\n        message: text\n      }));\n    }\n\n    if (_.isPlainObject(comment) && !_.isEmpty(comment) && _.get(comment, ['_id']) && editMode) {\n      client.authenticate().then(function (res) {\n        client.service('chatmessages').patch(comment._id, {\n          message: text\n        }).then(function (res1) {\n          if (props.onUpdate) {\n            res1.userId = res.user;\n            props.onUpdate(res1);\n          }\n        })[\"catch\"](function (err) {\n          console.log(err);\n          message.error(\"Unable to edit comment. T.T\");\n        });\n      })[\"catch\"](function (err) {\n        message.error(\"Unable to edit comment. T.T\");\n      });\n    }\n  }\n\n  function handleRemove(data) {\n    if (_.isPlainObject(data) && !_.isEmpty(data) && _.get(data, ['_id'])) {\n      client.service('chatmessages').remove(data._id).then(function (res) {\n        message.success('Comment Deleted');\n\n        if (props.onRemove) {\n          props.onRemove(res);\n        }\n      })[\"catch\"](function (err) {\n        console.log('Unable to delete comment.');\n      });\n    }\n  }\n\n  function handleReplySubmit(text) {\n    if (!_.get(props.user, ['authenticated']) || !_.get(props.user, ['info', 'user', '_id'])) {\n      message.error('Please Login First!');\n      props.loginMode(true);\n      return;\n    }\n\n    if (!_.get(comment, ['_id'])) {\n      message.error('Comment Not Found!');\n      return;\n    }\n\n    if (canSendMessage) {\n      client.authenticate().then(function (res) {\n        client.service('chatmessagereplies').create({\n          messageId: comment._id,\n          userId: res.user._id,\n          message: text\n        }).then(function (res1) {\n          setText('');\n          setCanSendMessage(false);\n          res1.userId = res.user;\n          setMessages(messages.concat([res1]));\n          setMessageTotal(messageTotal + 1);\n          setTimeout(function () {\n            setCanSendMessage(true);\n          }, chatRestrictTime);\n        })[\"catch\"](function (err) {\n          console.log(err);\n        });\n      })[\"catch\"](function (err) {\n        console.log(err);\n      });\n    } else {\n      message.warning('You are typing too fast!');\n    }\n  }\n\n  ;\n\n  function handleReplyChange(data) {\n    if (_.isPlainObject(data) && !_.isEmpty(data)) {\n      var newMessages = _.map(messages, function (v) {\n        return _.get(v, ['_id']) == _.get(data, ['_id']) ? data : v;\n      });\n\n      setMessages(newMessages);\n    }\n  }\n\n  function handleReplyRemove(data) {\n    if (_.isPlainObject(data) && !_.isEmpty(data)) {\n      var newMessages = _.filter(messages, function (v) {\n        return _.get(v, ['_id']) != _.get(data, ['_id']);\n      });\n\n      setMessages(newMessages);\n    }\n  }\n\n  function addAlias(value, id) {\n    if (value && id) {\n      setTextEditMode(true);\n      setText(getTagString(value, id) + ' ');\n      setTimeout(function () {\n        setTextEditMode(false);\n        setText('');\n        setFocusIndicator(v4());\n      }, 500);\n    }\n  }\n\n  return notEmptyLength(objectRemoveEmptyValue(comment)) ? __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"flex-justify-space-between flex-items-align-start \".concat(props.className ? props.className : ''),\n    style: _objectSpread({}, props.style)\n  }, __jsx(\"span\", {\n    className: \"d-inline-block\",\n    style: {\n      width: 50\n    }\n  }, __jsx(UserAvatar, {\n    redirectProfile: true,\n    data: _.get(comment, ['userId']),\n    size: 30\n  })), __jsx(\"span\", {\n    className: \"d-inline-block headline width-80\"\n  }, __jsx(\"span\", {\n    className: \"headline font-weight-black padding-right-sm black\"\n  }, getUserName(_.get(comment, ['userId']), 'freakId')), editMode ? __jsx(SocialInput, {\n    placeholder: \"What's on your mind?\",\n    editMode: true,\n    clickOutsideSubmit: true,\n    excludeEnter: true,\n    clubId: props.clubId,\n    text: \"\".concat(_.get(comment, ['message']) || ''),\n    emojiPosition: {\n      right: 33,\n      bottom: 0\n    },\n    onSubmit: function onSubmit(text) {\n      handleSubmit(text);\n      setEditMode(false);\n    }\n  }) : __jsx(ParseTag, {\n    data: _.get(comment, ['message']) || '',\n    className: \"width-100 text-overflow-break\"\n  }), __jsx(\"div\", {\n    className: \"width-100 flex-justify-start flex-items-align-center\",\n    style: {\n      padding: 0\n    }\n  }, __jsx(\"span\", {\n    className: \"small-text margin-right-md grey font-weight-light\"\n  }, getPlural('Like', 'Likes', totalLike, true)), __jsx(\"span\", {\n    className: \"small-text margin-right-md grey font-weight-light  cursor-pointer\",\n    onClick: function onClick() {\n      setExpandReplyKey(expandReplyKey ? null : '1');\n      setFocusIndicator(v4());\n    }\n  }, getPlural('Reply', 'Replies', messageTotal, true))), __jsx(\"div\", {\n    className: \"width-100\",\n    style: {\n      padding: 0\n    }\n  }, __jsx(\"span\", {\n    className: \"margin-right-sm small-text\"\n  }, moment(comment.createdAt).fromNow()), __jsx(LikePostButton, {\n    className: \"margin-right-sm\",\n    likeOn: \"message\",\n    autoHandle: true,\n    messageId: _.get(comment, ['_id']),\n    onClick: function onClick(actived) {\n      setTotalLike(actived ? totalLike + 1 : totalLike - 1);\n    },\n    activeButton: __jsx(\"span\", {\n      className: \"small-text blue font-weight-light cursor-pointer\"\n    }, \"Liked\")\n  }, __jsx(\"span\", {\n    className: \"small-text grey font-weight-light cursor-pointer\"\n  }, \"Like\")), __jsx(\"span\", {\n    className: \"small-text margin-right-sm grey font-weight-light cursor-pointer\",\n    onClick: function onClick() {\n      setExpandReplyKey('1');\n      addAlias(getUserName(_.get(comment, ['userId']), 'freakId') || '', getObjectId(_.get(comment, ['userId'])) || '');\n    }\n  }, \"Reply\")), __jsx(\"div\", {\n    className: \"width-100\"\n  }, __jsx(Collapse, {\n    className: \"collapse-no-header border-none collapse-body-no-padding collapse-body-overflow-visible\",\n    activeKey: expandReplyKey\n  }, __jsx(Collapse.Panel, {\n    key: \"1\",\n    showArrow: false\n  }, __jsx(\"div\", {\n    className: \"width-100\"\n  }, __jsx(\"div\", {\n    className: \"padding-left-xl margin-y-sm\"\n  }, _.map(messages, function (v) {\n    return __jsx(\"div\", null, __jsx(ReplyBox1, {\n      data: v,\n      clubId: props.clubId,\n      onChange: function onChange(data) {\n        handleReplyChange(data);\n      },\n      onRemove: function onRemove(data) {\n        handleReplyRemove(data);\n      },\n      handleReply: function handleReply(name, id) {\n        if (name && id) {\n          setExpandReplyKey('1');\n          addAlias(name || '', getObjectId(id) || '');\n        }\n      }\n    }));\n  }))), __jsx(\"div\", null, __jsx(SocialInput, {\n    placeholder: \"What's on your mind?\",\n    editMode: textEditMode,\n    text: text || '',\n    inputRef: commentInputRef,\n    excludeEnter: true,\n    clubId: props.clubId,\n    emojiPosition: {\n      bottom: 0,\n      right: 33\n    },\n    onChange: function onChange(text, finalText) {\n      if (!text) {\n        setText('');\n      }\n    },\n    focusIndicator: focusIndicator,\n    onSubmit: function onSubmit(text) {\n      handleReplySubmit(text);\n    }\n  })))))), __jsx(\"span\", {\n    className: \"d-inline-block\",\n    style: {\n      width: 30\n    }\n  }, _.get(props.user, ['authenticated']) && _.get(props.user, ['info', 'user', '_id']) && _.get(props.user, ['info', 'user', '_id']) == _.get(comment, ['userId', '_id']) ? __jsx(\"span\", {\n    className: \"d-inline-block\",\n    id: \"comment-menu-\".concat(uid)\n  }, __jsx(Dropdown, {\n    getPopupContainer: function getPopupContainer() {\n      return document.getElementById(\"comment-menu-\".concat(uid));\n    },\n    overlay: __jsx(Menu, null, __jsx(Menu.Item, {\n      onClick: function onClick(e) {\n        setEditMode(true);\n      }\n    }, __jsx(\"span\", null, \"Edit\")), __jsx(Menu.Item, null, __jsx(Popconfirm, {\n      title: \"Are you sure to delete this comment?\",\n      onConfirm: function onConfirm(e) {\n        handleRemove(comment);\n      },\n      okText: \"Yes\",\n      cancelText: \"No\"\n    }, __jsx(\"span\", null, \"Delete\"))))\n  }, __jsx(Icon, {\n    type: \"more\",\n    className: \"commentMore\",\n    style: {\n      fontSize: 20\n    }\n  }))) : null))) : null;\n};\n\n_s(CommentBox1, \"AjbmEydGngsdey9XP2RPQLFHIV8=\");\n\n_c = CommentBox1;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    app: state.app,\n    user: state.user\n  };\n};\n\nvar mapDispatchToProps = {\n  loading: loading,\n  loginMode: loginMode\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Form.create()(withRouter(CommentBox1)));\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentBox1\");","map":{"version":3,"sources":["/Users/faraheen/ccar-cms-next-mobile/components/carFreak/components/comment-box-1.jsx"],"names":["Collapse","Dropdown","Form","Icon","Menu","message","Popconfirm","_","moment","withRouter","React","useEffect","useState","connect","v4","client","chatRestrictTime","getTagString","LikePostButton","ReplyBox1","SocialInput","loading","loginMode","getObjectId","getPlural","getUserName","notEmptyLength","objectRemoveEmptyValue","UserAvatar","ParseTag","defaultHeight","headerHeight","imageHeight","titleHeight","footerHeight","actionHeight","uid","PAGE_SIZE","commentInputRef","createRef","CommentBox1","props","comment","setComment","height","setHeight","editMode","setEditMode","totalLike","setTotalLike","expandReplyKey","setExpandReplyKey","text","setText","textEditMode","setTextEditMode","messages","setMessages","canSendMessage","setCanSendMessage","messageTotal","setMessageTotal","setIsLoading","focusIndicator","setFocusIndicator","isPlainObject","data","isEmpty","get","getData","service","find","query","messageId","_id","$populate","$limit","$sort","$skip","length","then","res","newMessages","concat","total","err","console","log","error","handleSubmit","onChange","authenticate","patch","res1","onUpdate","userId","user","handleRemove","remove","success","onRemove","handleReplySubmit","create","setTimeout","warning","handleReplyChange","map","v","handleReplyRemove","filter","addAlias","value","id","className","style","width","clubId","right","bottom","padding","createdAt","fromNow","actived","name","finalText","document","getElementById","e","fontSize","mapStateToProps","state","app","mapDispatchToProps"],"mappings":";;;;;;;;;;AAAA,SAASA,QAAT,EAAmBC,QAAnB,EAA6BC,IAA7B,EAAmCC,IAAnC,EAAyCC,IAAzC,EAA+CC,OAA/C,EAAwDC,UAAxD,QAA0E,MAA1E;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,UAAT,QAA2B,yBAA3B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,EAAT,QAAmB,MAAnB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,gBAAT,EAA2BC,YAA3B,QAA+C,WAA/C;AACA,OAAOC,cAAP,MAA2B,oBAA3B;AACA,OAAOC,SAAP,MAAsB,eAAtB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,SAASC,OAAT,EAAkBC,SAAlB,QAAmC,oCAAnC;AACA,SAASC,WAAT,EAAsBC,SAAtB,EAAiCC,WAAjC,EAA8CC,cAA9C,EAA8DC,sBAA9D,QAA4F,0BAA5F;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AAIA,IAAMC,aAAa,GAAG,MAAtB;AACA,IAAMC,YAAY,GAAG,GAArB;AACA,IAAMC,WAAW,GAAG,GAApB;AACA,IAAMC,WAAW,GAAG,EAApB;AACA,IAAMC,YAAY,GAAG,GAArB;AACA,IAAMC,YAAY,GAAG,EAArB;AAEA,IAAIC,GAAG,GAAGtB,EAAE,EAAZ;AAEA,IAAMuB,SAAS,GAAG,CAAlB;AACA,IAAMC,eAAe,GAAG5B,KAAK,CAAC6B,SAAN,EAAxB;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAW;AAAA;;AAE3B,kBAA8B7B,QAAQ,CAAC,EAAD,CAAtC;AAAA,MAAO8B,OAAP;AAAA,MAAgBC,UAAhB;;AACA,mBAA4B/B,QAAQ,CAACkB,aAAD,CAApC;AAAA,MAAOc,MAAP;AAAA,MAAeC,SAAf;;AACA,mBAAgCjC,QAAQ,CAAC,KAAD,CAAxC;AAAA,MAAOkC,QAAP;AAAA,MAAiBC,WAAjB;;AACA,mBAAkCnC,QAAQ,CAAC,CAAD,CAA1C;AAAA,MAAOoC,SAAP;AAAA,MAAkBC,YAAlB;;AACA,mBAA4CrC,QAAQ,EAApD;AAAA,MAAOsC,cAAP;AAAA,MAAuBC,iBAAvB;;AACA,mBAAwBvC,QAAQ,CAAC,EAAD,CAAhC;AAAA,MAAOwC,IAAP;AAAA,MAAaC,OAAb;;AACA,mBAAwCzC,QAAQ,CAAC,KAAD,CAAhD;AAAA,MAAO0C,YAAP;AAAA,MAAqBC,eAArB;;AACA,mBAAgC3C,QAAQ,CAAC,EAAD,CAAxC;AAAA,MAAO4C,QAAP;AAAA,MAAiBC,WAAjB;;AACA,mBAA4C7C,QAAQ,CAAC,IAAD,CAApD;AAAA,MAAO8C,cAAP;AAAA,MAAuBC,iBAAvB;;AACA,oBAAwC/C,QAAQ,CAAC,CAAD,CAAhD;AAAA,MAAOgD,YAAP;AAAA,MAAqBC,eAArB;;AACA,oBAAgCjD,QAAQ,CAAC,KAAD,CAAxC;AAAA,MAAOS,OAAP;AAAA,MAAgByC,YAAhB;;AACA,oBAA4ClD,QAAQ,CAAC,IAAD,CAApD;AAAA,MAAOmD,cAAP;AAAA,MAAuBC,iBAAvB;;AAIArD,EAAAA,SAAS,CAAC,YAAM;AAEZ,QAAIJ,CAAC,CAAC0D,aAAF,CAAgBxB,KAAK,CAACyB,IAAtB,KAA+B,CAAC3D,CAAC,CAAC4D,OAAF,CAAU1B,KAAK,CAACyB,IAAhB,CAApC,EAA2D;AACvDvB,MAAAA,UAAU,CAACF,KAAK,CAACyB,IAAP,CAAV;AACH,KAFD,MAEO;AACHvB,MAAAA,UAAU,CAAC,EAAD,CAAV;AACH;AAEJ,GARQ,EAQN,CAACF,KAAK,CAACyB,IAAP,CARM,CAAT;AAYAvD,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAIJ,CAAC,CAAC0D,aAAF,CAAgBvB,OAAhB,KAA4B,CAACnC,CAAC,CAAC4D,OAAF,CAAUzB,OAAV,CAAjC,EAAqD;AACjDO,MAAAA,YAAY,CAAC1C,CAAC,CAAC6D,GAAF,CAAM1B,OAAN,EAAe,CAAC,WAAD,CAAf,KAAiC,CAAlC,CAAZ;AACA2B,MAAAA,OAAO;AACV,KAHD,MAGO;AACHpB,MAAAA,YAAY,CAAC,CAAD,CAAZ;AACAQ,MAAAA,WAAW,CAAC,EAAD,CAAX;AACH;AAEJ,GATQ,EASN,CAACf,OAAD,CATM,CAAT,CA7B2B,CAwC3B;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,WAAS2B,OAAT,GAAmB;AAEf,QAAI9D,CAAC,CAAC6D,GAAF,CAAM1B,OAAN,EAAe,CAAC,KAAD,CAAf,CAAJ,EAA6B;AACzBoB,MAAAA,YAAY,CAAC,IAAD,CAAZ;AAEA/C,MAAAA,MAAM,CAACuD,OAAP,CAAe,oBAAf,EAAqCC,IAArC,CACI;AACIC,QAAAA,KAAK,EAAE;AACHC,UAAAA,SAAS,EAAE/B,OAAO,CAACgC,GADhB;AAEHC,UAAAA,SAAS,EAAE,QAFR;AAGHC,UAAAA,MAAM,EAAEvC,SAHL;AAIHwC,UAAAA,KAAK,EAAE;AAAEH,YAAAA,GAAG,EAAE,CAAC;AAAR,WAJJ;AAKHI,UAAAA,KAAK,EAAEtB,QAAQ,CAACuB;AALb;AADX,OADJ,EAUEC,IAVF,CAUO,UAACC,GAAD,EAAS;AAEZnB,QAAAA,YAAY,CAAC,KAAD,CAAZ;;AACA,YAAImB,GAAG,CAACf,IAAJ,CAASa,MAAT,GAAkB,CAAtB,EAAyB;AACrB,cAAIG,WAAW,GAAG1B,QAAQ,CAAC2B,MAAT,CAAgBF,GAAG,CAACf,IAApB,CAAlB;AACAT,UAAAA,WAAW,CAACyB,WAAD,CAAX;AACH,SAHD,MAIK;AACDzB,UAAAA,WAAW,CAAC,EAAD,CAAX;AACH;;AACDI,QAAAA,eAAe,CAACoB,GAAG,CAACG,KAAL,CAAf;AAEH,OAtBD,WAsBS,UAAAC,GAAG,EAAI;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACA1B,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,OAzBD;AA0BH;AACJ;;AAED,WAAS2B,YAAT,CAAsBrC,IAAtB,EAA4B;AAExBL,IAAAA,WAAW,CAAC,KAAD,CAAX;;AACA,QAAIN,KAAK,CAACiD,QAAV,EAAoB;AAChBjD,MAAAA,KAAK,CAACiD,QAAN,iCAAoBhD,OAApB;AAA6BrC,QAAAA,OAAO,EAAE+C;AAAtC;AACH;;AAED,QAAI7C,CAAC,CAAC0D,aAAF,CAAgBvB,OAAhB,KAA4B,CAACnC,CAAC,CAAC4D,OAAF,CAAUzB,OAAV,CAA7B,IAAmDnC,CAAC,CAAC6D,GAAF,CAAM1B,OAAN,EAAe,CAAC,KAAD,CAAf,CAAnD,IAA8EI,QAAlF,EAA4F;AACxF/B,MAAAA,MAAM,CAAC4E,YAAP,GAAsBX,IAAtB,CAA2B,UAAAC,GAAG,EAAI;AAC9BlE,QAAAA,MAAM,CAACuD,OAAP,CAAe,cAAf,EACKsB,KADL,CACWlD,OAAO,CAACgC,GADnB,EACwB;AAChBrE,UAAAA,OAAO,EAAE+C;AADO,SADxB,EAIK4B,IAJL,CAIU,UAACa,IAAD,EAAU;AACZ,cAAIpD,KAAK,CAACqD,QAAV,EAAoB;AAChBD,YAAAA,IAAI,CAACE,MAAL,GAAcd,GAAG,CAACe,IAAlB;AACAvD,YAAAA,KAAK,CAACqD,QAAN,CAAeD,IAAf;AACH;AACJ,SATL,WAUW,UAACR,GAAD,EAAS;AACZC,UAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAhF,UAAAA,OAAO,CAACmF,KAAR,CAAc,6BAAd;AAEH,SAdL;AAeH,OAhBD,WAgBS,UAAAH,GAAG,EAAI;AACZhF,QAAAA,OAAO,CAACmF,KAAR,CAAc,6BAAd;AACH,OAlBD;AAmBH;AACJ;;AAED,WAASS,YAAT,CAAsB/B,IAAtB,EAA4B;AAExB,QAAI3D,CAAC,CAAC0D,aAAF,CAAgBC,IAAhB,KAAyB,CAAC3D,CAAC,CAAC4D,OAAF,CAAUD,IAAV,CAA1B,IAA6C3D,CAAC,CAAC6D,GAAF,CAAMF,IAAN,EAAY,CAAC,KAAD,CAAZ,CAAjD,EAAuE;AACnEnD,MAAAA,MAAM,CAACuD,OAAP,CAAe,cAAf,EACK4B,MADL,CACYhC,IAAI,CAACQ,GADjB,EACsBM,IADtB,CAC2B,UAACC,GAAD,EAAS;AAC5B5E,QAAAA,OAAO,CAAC8F,OAAR,CAAgB,iBAAhB;;AACA,YAAI1D,KAAK,CAAC2D,QAAV,EAAoB;AAChB3D,UAAAA,KAAK,CAAC2D,QAAN,CAAenB,GAAf;AACH;AACJ,OANL,WAMa,UAACI,GAAD,EAAS;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACH,OARL;AASH;AACJ;;AAED,WAASc,iBAAT,CAA2BjD,IAA3B,EAAiC;AAE7B,QAAI,CAAC7C,CAAC,CAAC6D,GAAF,CAAM3B,KAAK,CAACuD,IAAZ,EAAkB,CAAC,eAAD,CAAlB,CAAD,IAAyC,CAACzF,CAAC,CAAC6D,GAAF,CAAM3B,KAAK,CAACuD,IAAZ,EAAkB,CAAC,MAAD,EAAS,MAAT,EAAiB,KAAjB,CAAlB,CAA9C,EAA0F;AACtF3F,MAAAA,OAAO,CAACmF,KAAR,CAAc,qBAAd;AACA/C,MAAAA,KAAK,CAACnB,SAAN,CAAgB,IAAhB;AACA;AACH;;AAED,QAAI,CAACf,CAAC,CAAC6D,GAAF,CAAM1B,OAAN,EAAe,CAAC,KAAD,CAAf,CAAL,EAA8B;AAC1BrC,MAAAA,OAAO,CAACmF,KAAR,CAAc,oBAAd;AACA;AACH;;AAED,QAAI9B,cAAJ,EAAoB;AAChB3C,MAAAA,MAAM,CAAC4E,YAAP,GAAsBX,IAAtB,CAA2B,UAAAC,GAAG,EAAI;AAC9BlE,QAAAA,MAAM,CAACuD,OAAP,CAAe,oBAAf,EAAqCgC,MAArC,CAA4C;AACxC7B,UAAAA,SAAS,EAAE/B,OAAO,CAACgC,GADqB;AAExCqB,UAAAA,MAAM,EAAEd,GAAG,CAACe,IAAJ,CAAStB,GAFuB;AAGxCrE,UAAAA,OAAO,EAAE+C;AAH+B,SAA5C,EAIG4B,IAJH,CAIQ,UAAAa,IAAI,EAAI;AACZxC,UAAAA,OAAO,CAAC,EAAD,CAAP;AACAM,UAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACAkC,UAAAA,IAAI,CAACE,MAAL,GAAcd,GAAG,CAACe,IAAlB;AACAvC,UAAAA,WAAW,CAACD,QAAQ,CAAC2B,MAAT,CAAgB,CAACU,IAAD,CAAhB,CAAD,CAAX;AACAhC,UAAAA,eAAe,CAACD,YAAY,GAAG,CAAhB,CAAf;AACA2C,UAAAA,UAAU,CAAC,YAAM;AACb5C,YAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACH,WAFS,EAEP3C,gBAFO,CAAV;AAIH,SAdD,WAcS,UAAAqE,GAAG,EAAI;AACZC,UAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,SAhBD;AAiBH,OAlBD,WAkBS,UAAAA,GAAG,EAAI;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,OApBD;AAqBH,KAtBD,MAsBO;AACHhF,MAAAA,OAAO,CAACmG,OAAR,CAAgB,0BAAhB;AACH;AAEJ;;AAAA;;AAED,WAASC,iBAAT,CAA2BvC,IAA3B,EAAiC;AAC7B,QAAI3D,CAAC,CAAC0D,aAAF,CAAgBC,IAAhB,KAAyB,CAAC3D,CAAC,CAAC4D,OAAF,CAAUD,IAAV,CAA9B,EAA+C;AAC3C,UAAIgB,WAAW,GAAG3E,CAAC,CAACmG,GAAF,CAAMlD,QAAN,EAAgB,UAAUmD,CAAV,EAAa;AAC3C,eAAOpG,CAAC,CAAC6D,GAAF,CAAMuC,CAAN,EAAS,CAAC,KAAD,CAAT,KAAqBpG,CAAC,CAAC6D,GAAF,CAAMF,IAAN,EAAY,CAAC,KAAD,CAAZ,CAArB,GAA4CA,IAA5C,GAAmDyC,CAA1D;AACH,OAFiB,CAAlB;;AAIAlD,MAAAA,WAAW,CAACyB,WAAD,CAAX;AACH;AACJ;;AAED,WAAS0B,iBAAT,CAA2B1C,IAA3B,EAAiC;AAC7B,QAAI3D,CAAC,CAAC0D,aAAF,CAAgBC,IAAhB,KAAyB,CAAC3D,CAAC,CAAC4D,OAAF,CAAUD,IAAV,CAA9B,EAA+C;AAC3C,UAAIgB,WAAW,GAAG3E,CAAC,CAACsG,MAAF,CAASrD,QAAT,EAAmB,UAAUmD,CAAV,EAAa;AAC9C,eAAOpG,CAAC,CAAC6D,GAAF,CAAMuC,CAAN,EAAS,CAAC,KAAD,CAAT,KAAqBpG,CAAC,CAAC6D,GAAF,CAAMF,IAAN,EAAY,CAAC,KAAD,CAAZ,CAA5B;AACH,OAFiB,CAAlB;;AAIAT,MAAAA,WAAW,CAACyB,WAAD,CAAX;AACH;AACJ;;AAED,WAAS4B,QAAT,CAAkBC,KAAlB,EAAyBC,EAAzB,EAA6B;AAEzB,QAAID,KAAK,IAAIC,EAAb,EAAiB;AACbzD,MAAAA,eAAe,CAAC,IAAD,CAAf;AACAF,MAAAA,OAAO,CAACpC,YAAY,CAAC8F,KAAD,EAAQC,EAAR,CAAZ,GAA0B,GAA3B,CAAP;AAEAT,MAAAA,UAAU,CAAC,YAAM;AACbhD,QAAAA,eAAe,CAAC,KAAD,CAAf;AACAF,QAAAA,OAAO,CAAC,EAAD,CAAP;AACAW,QAAAA,iBAAiB,CAAClD,EAAE,EAAH,CAAjB;AACH,OAJS,EAIP,GAJO,CAAV;AAMH;AACJ;;AAED,SACIY,cAAc,CAACC,sBAAsB,CAACe,OAAD,CAAvB,CAAd,GACI,MAAC,KAAD,CAAO,QAAP,QACI;AAAK,IAAA,SAAS,8DAAuDD,KAAK,CAACwE,SAAN,GAAkBxE,KAAK,CAACwE,SAAxB,GAAoC,EAA3F,CAAd;AAA+G,IAAA,KAAK,oBAAOxE,KAAK,CAACyE,KAAb;AAApH,KACI;AAAM,IAAA,SAAS,EAAC,gBAAhB;AAAiC,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT;AAAxC,KACI,MAAC,UAAD;AAAY,IAAA,eAAe,MAA3B;AAA4B,IAAA,IAAI,EAAE5G,CAAC,CAAC6D,GAAF,CAAM1B,OAAN,EAAe,CAAC,QAAD,CAAf,CAAlC;AAA8D,IAAA,IAAI,EAAE;AAApE,IADJ,CADJ,EAII;AAAM,IAAA,SAAS,EAAC;AAAhB,KACI;AAAM,IAAA,SAAS,EAAC;AAAhB,KACKjB,WAAW,CAAClB,CAAC,CAAC6D,GAAF,CAAM1B,OAAN,EAAe,CAAC,QAAD,CAAf,CAAD,EAA6B,SAA7B,CADhB,CADJ,EAKQI,QAAQ,GACJ,MAAC,WAAD;AACI,IAAA,WAAW,EAAC,sBADhB;AAEI,IAAA,QAAQ,MAFZ;AAGI,IAAA,kBAAkB,MAHtB;AAII,IAAA,YAAY,MAJhB;AAKI,IAAA,MAAM,EAAEL,KAAK,CAAC2E,MALlB;AAMI,IAAA,IAAI,YAAK7G,CAAC,CAAC6D,GAAF,CAAM1B,OAAN,EAAe,CAAC,SAAD,CAAf,KAA+B,EAApC,CANR;AAOI,IAAA,aAAa,EAAE;AAAE2E,MAAAA,KAAK,EAAE,EAAT;AAAaC,MAAAA,MAAM,EAAE;AAArB,KAPnB;AAQI,IAAA,QAAQ,EAAE,kBAAClE,IAAD,EAAU;AAChBqC,MAAAA,YAAY,CAACrC,IAAD,CAAZ;AACAL,MAAAA,WAAW,CAAC,KAAD,CAAX;AACH;AAXL,IADI,GAeJ,MAAC,QAAD;AAAU,IAAA,IAAI,EAAExC,CAAC,CAAC6D,GAAF,CAAM1B,OAAN,EAAe,CAAC,SAAD,CAAf,KAA+B,EAA/C;AAAmD,IAAA,SAAS,EAAC;AAA7D,IApBZ,EAsBI;AAAK,IAAA,SAAS,EAAC,sDAAf;AAAsE,IAAA,KAAK,EAAE;AAAE6E,MAAAA,OAAO,EAAE;AAAX;AAA7E,KACI;AAAM,IAAA,SAAS,EAAC;AAAhB,KAAsE/F,SAAS,CAAC,MAAD,EAAS,OAAT,EAAkBwB,SAAlB,EAA6B,IAA7B,CAA/E,CADJ,EAEI;AAAM,IAAA,SAAS,EAAC,mEAAhB;AAAoF,IAAA,OAAO,EAAE,mBAAM;AAAEG,MAAAA,iBAAiB,CAACD,cAAc,GAAG,IAAH,GAAU,GAAzB,CAAjB;AAAgDc,MAAAA,iBAAiB,CAAClD,EAAE,EAAH,CAAjB;AAAyB;AAA9K,KAAkLU,SAAS,CAAC,OAAD,EAAU,SAAV,EAAqBoC,YAArB,EAAmC,IAAnC,CAA3L,CAFJ,CAtBJ,EA2BI;AAAK,IAAA,SAAS,EAAC,WAAf;AAA2B,IAAA,KAAK,EAAE;AAAE2D,MAAAA,OAAO,EAAE;AAAX;AAAlC,KACI;AAAM,IAAA,SAAS,EAAC;AAAhB,KAA8C/G,MAAM,CAACkC,OAAO,CAAC8E,SAAT,CAAN,CAA0BC,OAA1B,EAA9C,CADJ,EAEI,MAAC,cAAD;AAAgB,IAAA,SAAS,EAAC,iBAA1B;AAA4C,IAAA,MAAM,EAAC,SAAnD;AACI,IAAA,UAAU,MADd;AAEI,IAAA,SAAS,EAAElH,CAAC,CAAC6D,GAAF,CAAM1B,OAAN,EAAe,CAAC,KAAD,CAAf,CAFf;AAEwC,IAAA,OAAO,EAAE,iBAACgF,OAAD,EAAa;AACtDzE,MAAAA,YAAY,CAACyE,OAAO,GAAG1E,SAAS,GAAG,CAAf,GAAmBA,SAAS,GAAG,CAAvC,CAAZ;AACH,KAJL;AAMI,IAAA,YAAY,EACR;AAAM,MAAA,SAAS,EAAC;AAAhB;AAPR,KAUI;AAAM,IAAA,SAAS,EAAC;AAAhB,YAVJ,CAFJ,EAcI;AAAM,IAAA,SAAS,EAAC,kEAAhB;AAAmF,IAAA,OAAO,EAAE,mBAAM;AAC9FG,MAAAA,iBAAiB,CAAC,GAAD,CAAjB;AACA2D,MAAAA,QAAQ,CAACrF,WAAW,CAAClB,CAAC,CAAC6D,GAAF,CAAM1B,OAAN,EAAe,CAAC,QAAD,CAAf,CAAD,EAA6B,SAA7B,CAAX,IAAsD,EAAvD,EAA2DnB,WAAW,CAAChB,CAAC,CAAC6D,GAAF,CAAM1B,OAAN,EAAe,CAAC,QAAD,CAAf,CAAD,CAAX,IAA2C,EAAtG,CAAR;AACH;AAHD,aAdJ,CA3BJ,EA8CI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI,MAAC,QAAD;AAAU,IAAA,SAAS,EAAC,wFAApB;AAA6G,IAAA,SAAS,EAAEQ;AAAxH,KACI,MAAC,QAAD,CAAU,KAAV;AAAgB,IAAA,GAAG,EAAC,GAApB;AAAwB,IAAA,SAAS,EAAE;AAAnC,KACI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI;AAAK,IAAA,SAAS,EAAC;AAAf,KAEQ3C,CAAC,CAACmG,GAAF,CAAMlD,QAAN,EAAgB,UAAUmD,CAAV,EAAa;AACzB,WACI,mBACI,MAAC,SAAD;AAAW,MAAA,IAAI,EAAEA,CAAjB;AACI,MAAA,MAAM,EAAElE,KAAK,CAAC2E,MADlB;AAEI,MAAA,QAAQ,EAAE,kBAAClD,IAAD,EAAU;AAChBuC,QAAAA,iBAAiB,CAACvC,IAAD,CAAjB;AACH,OAJL;AAKI,MAAA,QAAQ,EAAE,kBAACA,IAAD,EAAU;AAChB0C,QAAAA,iBAAiB,CAAC1C,IAAD,CAAjB;AACH,OAPL;AAQI,MAAA,WAAW,EAAE,qBAACyD,IAAD,EAAOX,EAAP,EAAc;AACvB,YAAIW,IAAI,IAAIX,EAAZ,EAAgB;AACZ7D,UAAAA,iBAAiB,CAAC,GAAD,CAAjB;AACA2D,UAAAA,QAAQ,CAACa,IAAI,IAAI,EAAT,EAAapG,WAAW,CAACyF,EAAD,CAAX,IAAmB,EAAhC,CAAR;AACH;AACJ;AAbL,MADJ,CADJ;AAmBH,GApBD,CAFR,CADJ,CADJ,EA4BI,mBAEI,MAAC,WAAD;AACI,IAAA,WAAW,EAAC,sBADhB;AAEI,IAAA,QAAQ,EAAE1D,YAFd;AAGI,IAAA,IAAI,EAAEF,IAAI,IAAI,EAHlB;AAII,IAAA,QAAQ,EAAEd,eAJd;AAKI,IAAA,YAAY,MALhB;AAMI,IAAA,MAAM,EAAEG,KAAK,CAAC2E,MANlB;AAOI,IAAA,aAAa,EAAE;AAAEE,MAAAA,MAAM,EAAE,CAAV;AAAaD,MAAAA,KAAK,EAAE;AAApB,KAPnB;AAQI,IAAA,QAAQ,EAAE,kBAACjE,IAAD,EAAOwE,SAAP,EAAqB;AAC3B,UAAI,CAACxE,IAAL,EAAW;AACPC,QAAAA,OAAO,CAAC,EAAD,CAAP;AACH;AACJ,KAZL;AAaI,IAAA,cAAc,EAAEU,cAbpB;AAcI,IAAA,QAAQ,EAAE,kBAACX,IAAD,EAAU;AAChBiD,MAAAA,iBAAiB,CAACjD,IAAD,CAAjB;AACH;AAhBL,IAFJ,CA5BJ,CADJ,CADJ,CA9CJ,CAJJ,EAmII;AAAM,IAAA,SAAS,EAAC,gBAAhB;AAAiC,IAAA,KAAK,EAAE;AAAE+D,MAAAA,KAAK,EAAE;AAAT;AAAxC,KAEQ5G,CAAC,CAAC6D,GAAF,CAAM3B,KAAK,CAACuD,IAAZ,EAAkB,CAAC,eAAD,CAAlB,KAAwCzF,CAAC,CAAC6D,GAAF,CAAM3B,KAAK,CAACuD,IAAZ,EAAkB,CAAC,MAAD,EAAS,MAAT,EAAiB,KAAjB,CAAlB,CAAxC,IAAsFzF,CAAC,CAAC6D,GAAF,CAAM3B,KAAK,CAACuD,IAAZ,EAAkB,CAAC,MAAD,EAAS,MAAT,EAAiB,KAAjB,CAAlB,KAA8CzF,CAAC,CAAC6D,GAAF,CAAM1B,OAAN,EAAe,CAAC,QAAD,EAAW,KAAX,CAAf,CAApI,GACI;AAAM,IAAA,SAAS,EAAC,gBAAhB;AAAiC,IAAA,EAAE,yBAAkBN,GAAlB;AAAnC,KACI,MAAC,QAAD;AAAU,IAAA,iBAAiB,EAAE;AAAA,aAAMyF,QAAQ,CAACC,cAAT,wBAAwC1F,GAAxC,EAAN;AAAA,KAA7B;AACI,IAAA,OAAO,EACH,MAAC,IAAD,QACI,MAAC,IAAD,CAAM,IAAN;AAAW,MAAA,OAAO,EAAE,iBAAC2F,CAAD,EAAO;AACvBhF,QAAAA,WAAW,CAAC,IAAD,CAAX;AACH;AAFD,OAEG,2BAFH,CADJ,EAII,MAAC,IAAD,CAAM,IAAN,QACI,MAAC,UAAD;AACI,MAAA,KAAK,EAAC,sCADV;AAEI,MAAA,SAAS,EAAE,mBAACgF,CAAD,EAAO;AACd9B,QAAAA,YAAY,CAACvD,OAAD,CAAZ;AACH,OAJL;AAKI,MAAA,MAAM,EAAC,KALX;AAMI,MAAA,UAAU,EAAC;AANf,OAQI,6BARJ,CADJ,CAJJ;AAFR,KAoBI,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,MAAX;AAAkB,IAAA,SAAS,EAAC,aAA5B;AAA0C,IAAA,KAAK,EAAE;AAAEsF,MAAAA,QAAQ,EAAE;AAAZ;AAAjD,IApBJ,CADJ,CADJ,GA0BI,IA5BZ,CAnIJ,CADJ,CADJ,GAuKI,IAxKR;AA0KH,CAtXD;;GAAMxF,W;;KAAAA,W;;AAyXN,IAAMyF,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAC9BC,IAAAA,GAAG,EAAED,KAAK,CAACC,GADmB;AAE9BnC,IAAAA,IAAI,EAAEkC,KAAK,CAAClC;AAFkB,GAAL;AAAA,CAA7B;;AAKA,IAAMoC,kBAAkB,GAAG;AACvB/G,EAAAA,OAAO,EAAEA,OADc;AAEvBC,EAAAA,SAAS,EAATA;AAFuB,CAA3B;AAIA,eAAeT,OAAO,CAACoH,eAAD,EAAkBG,kBAAlB,CAAP,CAA6ClI,IAAI,CAACoG,MAAL,GAAc7F,UAAU,CAAC+B,WAAD,CAAxB,CAA7C,CAAf","sourcesContent":["import { Collapse, Dropdown, Form, Icon, Menu, message, Popconfirm } from 'antd';\nimport _ from 'lodash';\nimport moment from 'moment';\nimport { withRouter } from 'next/dist/client/router';\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { v4 } from 'uuid';\nimport client from '../../../feathers';\nimport { chatRestrictTime, getTagString } from '../config';\nimport LikePostButton from './like-post-button';\nimport ReplyBox1 from './reply-box-1';\nimport SocialInput from './social-input';\nimport { loading, loginMode } from '../../../redux/actions/app-actions';\nimport { getObjectId, getPlural, getUserName, notEmptyLength, objectRemoveEmptyValue } from '../../../common-function';\nimport UserAvatar from '../../general/UserAvatar';\nimport ParseTag from '../../general/ParseTag';\n\n\n\nconst defaultHeight = 'auto';\nconst headerHeight = 100;\nconst imageHeight = 200;\nconst titleHeight = 40;\nconst footerHeight = 100;\nconst actionHeight = 40;\n\nlet uid = v4();\n\nconst PAGE_SIZE = 6;\nconst commentInputRef = React.createRef();\n\nconst CommentBox1 = (props) => {\n\n    const [comment, setComment] = useState({});\n    const [height, setHeight] = useState(defaultHeight);\n    const [editMode, setEditMode] = useState(false);\n    const [totalLike, setTotalLike] = useState(0);\n    const [expandReplyKey, setExpandReplyKey] = useState();\n    const [text, setText] = useState('')\n    const [textEditMode, setTextEditMode] = useState(false);\n    const [messages, setMessages] = useState([])\n    const [canSendMessage, setCanSendMessage] = useState(true);\n    const [messageTotal, setMessageTotal] = useState(0);\n    const [loading, setIsLoading] = useState(false);\n    const [focusIndicator, setFocusIndicator] = useState(null);\n\n\n\n    useEffect(() => {\n\n        if (_.isPlainObject(props.data) && !_.isEmpty(props.data)) {\n            setComment(props.data);\n        } else {\n            setComment({});\n        }\n\n    }, [props.data])\n\n\n\n    useEffect(() => {\n        if (_.isPlainObject(comment) && !_.isEmpty(comment)) {\n            setTotalLike(_.get(comment, ['totalLike']) || 0)\n            getData();\n        } else {\n            setTotalLike(0);\n            setMessages([]);\n        }\n\n    }, [comment])\n\n    // useEffect(() => {\n    //     if (!props.style || !isValidNumber(props.style.height) || !(parseFloat(props.style.height) >= defaultHeight)) {\n    //         setHeight(defaultHeight);\n    //     } else {\n    //         setHeight(props.style.height);\n    //     }\n\n    // }, [props.style])\n\n    function getData() {\n\n        if (_.get(comment, ['_id'])) {\n            setIsLoading(true);\n\n            client.service('chatmessagereplies').find(\n                {\n                    query: {\n                        messageId: comment._id,\n                        $populate: 'userId',\n                        $limit: PAGE_SIZE,\n                        $sort: { _id: -1 },\n                        $skip: messages.length\n                    }\n                }\n            ).then((res) => {\n\n                setIsLoading(false);\n                if (res.data.length > 0) {\n                    let newMessages = messages.concat(res.data)\n                    setMessages(newMessages)\n                }\n                else {\n                    setMessages([])\n                }\n                setMessageTotal(res.total)\n\n            }).catch(err => {\n                console.log(error);\n                setIsLoading(false);\n            })\n        }\n    }\n\n    function handleSubmit(text) {\n\n        setEditMode(false)\n        if (props.onChange) {\n            props.onChange({ ...comment, message: text })\n        }\n\n        if (_.isPlainObject(comment) && !_.isEmpty(comment) && _.get(comment, ['_id']) && editMode) {\n            client.authenticate().then(res => {\n                client.service('chatmessages')\n                    .patch(comment._id, {\n                        message: text,\n                    })\n                    .then((res1) => {\n                        if (props.onUpdate) {\n                            res1.userId = res.user;\n                            props.onUpdate(res1);\n                        }\n                    })\n                    .catch((err) => {\n                        console.log(err);\n                        message.error(\"Unable to edit comment. T.T\")\n\n                    })\n            }).catch(err => {\n                message.error(\"Unable to edit comment. T.T\")\n            });\n        }\n    }\n\n    function handleRemove(data) {\n\n        if (_.isPlainObject(data) && !_.isEmpty(data) && _.get(data, ['_id'])) {\n            client.service('chatmessages')\n                .remove(data._id).then((res) => {\n                    message.success('Comment Deleted')\n                    if (props.onRemove) {\n                        props.onRemove(res);\n                    }\n                }).catch((err) => {\n                    console.log('Unable to delete comment.');\n                })\n        }\n    }\n\n    function handleReplySubmit(text) {\n\n        if (!_.get(props.user, ['authenticated']) || !_.get(props.user, ['info', 'user', '_id'])) {\n            message.error('Please Login First!');\n            props.loginMode(true);\n            return;\n        }\n\n        if (!_.get(comment, ['_id'])) {\n            message.error('Comment Not Found!');\n            return;\n        }\n\n        if (canSendMessage) {\n            client.authenticate().then(res => {\n                client.service('chatmessagereplies').create({\n                    messageId: comment._id,\n                    userId: res.user._id,\n                    message: text,\n                }).then(res1 => {\n                    setText('');\n                    setCanSendMessage(false);\n                    res1.userId = res.user;\n                    setMessages(messages.concat([res1]));\n                    setMessageTotal(messageTotal + 1);\n                    setTimeout(() => {\n                        setCanSendMessage(true);\n                    }, chatRestrictTime);\n\n                }).catch(err => {\n                    console.log(err);\n                });\n            }).catch(err => {\n                console.log(err);\n            });\n        } else {\n            message.warning('You are typing too fast!');\n        }\n\n    };\n\n    function handleReplyChange(data) {\n        if (_.isPlainObject(data) && !_.isEmpty(data)) {\n            let newMessages = _.map(messages, function (v) {\n                return _.get(v, ['_id']) == _.get(data, ['_id']) ? data : v;\n            });\n\n            setMessages(newMessages);\n        }\n    }\n\n    function handleReplyRemove(data) {\n        if (_.isPlainObject(data) && !_.isEmpty(data)) {\n            let newMessages = _.filter(messages, function (v) {\n                return _.get(v, ['_id']) != _.get(data, ['_id']);\n            });\n\n            setMessages(newMessages);\n        }\n    }\n\n    function addAlias(value, id) {\n\n        if (value && id) {\n            setTextEditMode(true);\n            setText(getTagString(value, id) + ' ');\n\n            setTimeout(() => {\n                setTextEditMode(false);\n                setText('');\n                setFocusIndicator(v4());\n            }, 500);\n\n        }\n    }\n\n    return (\n        notEmptyLength(objectRemoveEmptyValue(comment)) ?\n            <React.Fragment>\n                <div className={`flex-justify-space-between flex-items-align-start ${props.className ? props.className : ''}`} style={{ ...props.style }}>\n                    <span className='d-inline-block' style={{ width: 50 }} >\n                        <UserAvatar redirectProfile data={_.get(comment, ['userId'])} size={30} />\n                    </span>\n                    <span className='d-inline-block headline width-80' >\n                        <span className='headline font-weight-black padding-right-sm black' >\n                            {getUserName(_.get(comment, ['userId']), 'freakId')}\n                        </span>\n                        {\n                            editMode ?\n                                <SocialInput\n                                    placeholder=\"What's on your mind?\"\n                                    editMode\n                                    clickOutsideSubmit\n                                    excludeEnter\n                                    clubId={props.clubId}\n                                    text={`${_.get(comment, ['message']) || ''}`}\n                                    emojiPosition={{ right: 33, bottom: 0 }}\n                                    onSubmit={(text) => {\n                                        handleSubmit(text);\n                                        setEditMode(false);\n                                    }}\n                                />\n                                :\n                                <ParseTag data={_.get(comment, ['message']) || ''} className=\"width-100 text-overflow-break\" />\n                        }\n                        <div className=\"width-100 flex-justify-start flex-items-align-center\" style={{ padding: 0 }}>\n                            <span className=\"small-text margin-right-md grey font-weight-light\" >{getPlural('Like', 'Likes', totalLike, true)}</span>\n                            <span className=\"small-text margin-right-md grey font-weight-light  cursor-pointer\" onClick={() => { setExpandReplyKey(expandReplyKey ? null : '1'); setFocusIndicator(v4()) }} >{getPlural('Reply', 'Replies', messageTotal, true)}</span>\n                        </div>\n\n                        <div className=\"width-100\" style={{ padding: 0 }}>\n                            <span className=\"margin-right-sm small-text\">{moment(comment.createdAt).fromNow()}</span>\n                            <LikePostButton className=\"margin-right-sm\" likeOn=\"message\"\n                                autoHandle\n                                messageId={_.get(comment, ['_id'])} onClick={(actived) => {\n                                    setTotalLike(actived ? totalLike + 1 : totalLike - 1)\n                                }}\n\n                                activeButton={\n                                    <span className=\"small-text blue font-weight-light cursor-pointer\">Liked</span>\n                                }\n                            >\n                                <span className=\"small-text grey font-weight-light cursor-pointer\">Like</span>\n                            </LikePostButton>\n                            <span className=\"small-text margin-right-sm grey font-weight-light cursor-pointer\" onClick={() => {\n                                setExpandReplyKey('1');\n                                addAlias(getUserName(_.get(comment, ['userId']), 'freakId') || '', getObjectId(_.get(comment, ['userId'])) || '')\n                            }}>Reply</span>\n                        </div>\n                        <div className=\"width-100\">\n                            <Collapse className=\"collapse-no-header border-none collapse-body-no-padding collapse-body-overflow-visible\" activeKey={expandReplyKey} >\n                                <Collapse.Panel key=\"1\" showArrow={false}>\n                                    <div className=\"width-100\">\n                                        <div className=\"padding-left-xl margin-y-sm\">\n                                            {\n                                                _.map(messages, function (v) {\n                                                    return (\n                                                        <div>\n                                                            <ReplyBox1 data={v}\n                                                                clubId={props.clubId}\n                                                                onChange={(data) => {\n                                                                    handleReplyChange(data);\n                                                                }}\n                                                                onRemove={(data) => {\n                                                                    handleReplyRemove(data);\n                                                                }}\n                                                                handleReply={(name, id) => {\n                                                                    if (name && id) {\n                                                                        setExpandReplyKey('1');\n                                                                        addAlias(name || '', getObjectId(id) || '')\n                                                                    }\n                                                                }}\n                                                            />\n                                                        </div>\n                                                    )\n                                                })\n                                            }\n                                        </div>\n                                    </div>\n                                    <div>\n\n                                        <SocialInput\n                                            placeholder=\"What's on your mind?\"\n                                            editMode={textEditMode}\n                                            text={text || ''}\n                                            inputRef={commentInputRef}\n                                            excludeEnter\n                                            clubId={props.clubId}\n                                            emojiPosition={{ bottom: 0, right: 33 }}\n                                            onChange={(text, finalText) => {\n                                                if (!text) {\n                                                    setText('');\n                                                }\n                                            }}\n                                            focusIndicator={focusIndicator}\n                                            onSubmit={(text) => {\n                                                handleReplySubmit(text);\n                                            }}\n                                        />\n                                        {/* <Input\n                                            placeholder=\"What's on your mind?\"\n                                            maxLength={1000}\n                                            ref={commentInputRef}\n                                            size=\"small\"\n                                            onPressEnter={(e) => {\n                                                handleReplySubmit();\n                                            }}\n                                            autoFocus={true}\n                                            value={text}\n                                            onChange={(e) => {\n                                                setText(e.target.value)\n                                            }}\n                                            suffix={\n                                                <EmojiPickerButton\n                                                    className=\"emoji-mart-small\"\n                                                    onSelect={(emoji) => {\n                                                        let originalMsg = message || ''\n                                                        originalMsg = message + emoji.native\n                                                        setText(originalMsg)\n                                                    }}\n                                                    position={{ bottom: 0, right: 33 }}\n                                                >\n                                                    <Icon type=\"smile\" className='cursor-pointer grey margin-right-sm margin-top-xs' style={{ fontSize: '17px' }} />\n                                                </EmojiPickerButton>\n                                            } /> */}\n                                    </div>\n                                </Collapse.Panel>\n                            </Collapse>\n                        </div>\n                    </span>\n                    <span className='d-inline-block' style={{ width: 30 }} >\n                        {\n                            _.get(props.user, ['authenticated']) && _.get(props.user, ['info', 'user', '_id']) && _.get(props.user, ['info', 'user', '_id']) == _.get(comment, ['userId', '_id']) ?\n                                <span className='d-inline-block' id={`comment-menu-${uid}`} >\n                                    <Dropdown getPopupContainer={() => document.getElementById(`comment-menu-${uid}`)}\n                                        overlay={\n                                            <Menu>\n                                                <Menu.Item onClick={(e) => {\n                                                    setEditMode(true)\n                                                }}><span >Edit</span></Menu.Item>\n                                                <Menu.Item>\n                                                    <Popconfirm\n                                                        title=\"Are you sure to delete this comment?\"\n                                                        onConfirm={(e) => {\n                                                            handleRemove(comment);\n                                                        }}\n                                                        okText=\"Yes\"\n                                                        cancelText=\"No\"\n                                                    >\n                                                        <span>Delete</span>\n                                                    </Popconfirm>\n                                                </Menu.Item>\n                                            </Menu>\n                                        }>\n                                        <Icon type=\"more\" className=\"commentMore\" style={{ fontSize: 20 }} />\n                                    </Dropdown>\n                                </span>\n                                :\n                                null\n                        }\n                    </span>\n                </div>\n            </React.Fragment >\n            :\n            null\n    );\n}\n\n\nconst mapStateToProps = state => ({\n    app: state.app,\n    user: state.user,\n});\n\nconst mapDispatchToProps = {\n    loading: loading,\n    loginMode\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Form.create()(withRouter(CommentBox1)));"]},"metadata":{},"sourceType":"module"}