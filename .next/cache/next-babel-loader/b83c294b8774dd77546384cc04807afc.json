{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { CloseOutlined } from '@ant-design/icons';\nimport { Card, Col, Empty, Form, Icon, Input, Modal, Row } from 'antd';\nimport _ from 'lodash';\nimport { withRouter } from 'next/dist/client/router';\nimport React, { useEffect, useState } from 'react';\nimport Scrollbars from 'react-custom-scrollbars';\nimport Highlighter from 'react-highlight-words';\nimport { connect } from 'react-redux';\nimport { formatNumber, isValidNumber, notEmptyLength } from '../../../common-function';\nimport Loading from '../../general/Loading';\nconst areaModalSearchRef = React.createRef();\n\nconst AreaModal = props => {\n  const {\n    0: options,\n    1: setOptions\n  } = useState([]);\n  const {\n    0: filteredOptions,\n    1: setFilteredOptions\n  } = useState([]);\n  const {\n    0: searchKeyword,\n    1: setSearchKeyword\n  } = useState('');\n  useEffect(() => {\n    if (_.isArray(props.options) && !_.isEmpty(props.options)) {\n      setOptions(_.reverse(_.sortBy(props.options, ['count', 'value'])));\n    } else {\n      setOptions([]);\n    }\n  }, [props.options]);\n  useEffect(() => {\n    if (props.visible == true && areaModalSearchRef.current) {\n      areaModalSearchRef.current.focus();\n    }\n\n    if (!props.visible) {\n      setSearchKeyword('');\n    }\n  }, [props.visible, areaModalSearchRef.current]);\n  useEffect(() => {\n    if (searchKeyword) {\n      let keyword = new RegExp(searchKeyword, 'i');\n\n      let data = _.filter(options, function (option) {\n        if (searchKeyword) {\n          return keyword.test(option.value) && option.count > 0;\n        } else {\n          return true;\n        }\n      });\n\n      setFilteredOptions(data);\n    } else {\n      setFilteredOptions(options);\n    }\n  }, [options, searchKeyword]);\n\n  const selectedValue = (item, alphaIndex, index) => {\n    if (props.onChange) {\n      props.onChange(item, alphaIndex, index);\n    }\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Modal, {\n    closable: props.closable != null ? props.closable ? true : false : false,\n    maskClosable: props.maskClosable != null ? props.maskClosable ? true : false : false,\n    visible: props.visible != null ? props.visible ? true : false : false,\n    style: _objectSpread({}, props.style),\n    onCancel: props.onCancel,\n    className: `${props.className ? props.className : ''}`,\n    width: props.width ? props.width : '100%',\n    id: props.id ? props.id : 'area-modal',\n    zIndex: isValidNumber(parseInt(props.zIndex)) ? parseInt(props.zIndex) : 1000,\n    footer: null\n  }, __jsx(Card, {\n    bordered: false,\n    title: props.title ? props.title : \"Select Area\",\n    size: \"small\",\n    style: {\n      zIndex: 1001\n    }\n  }, __jsx(Loading, {\n    spinning: props.loading\n  }, __jsx(Row, null, __jsx(Col, {\n    xs: 24,\n    sm: 24,\n    md: 24,\n    lg: 24,\n    xl: 24\n  }, __jsx(\"div\", {\n    className: \"thin-border round-border-big padding-sm\"\n  }, __jsx(Input, {\n    ref: areaModalSearchRef,\n    autoFocus: true,\n    value: searchKeyword,\n    onChange: e => {\n      setSearchKeyword(e.target.value);\n    },\n    className: \"no-border-input\",\n    size: \"small\",\n    compact: true,\n    suffix: searchKeyword ? __jsx(CloseOutlined, {\n      className: \"cursor-pointer\",\n      onClick: e => {\n        setSearchKeyword('');\n      }\n    }) : __jsx(Icon, {\n      type: \"search\"\n    }),\n    placeholder: \"Search Here...\"\n  })))), __jsx(Row, {\n    gutter: [15, 15]\n  }, __jsx(Col, {\n    className: \"gutter-row\",\n    xs: 0,\n    sm: 0,\n    md: 24,\n    lg: 24,\n    xl: 24\n  }, __jsx(Scrollbars, {\n    autoHide: true,\n    autoHeight: true,\n    autoHeightMax: _.get(props, ['bodyStyle', 'maxHeight']) || 500\n  }, __jsx(\"div\", null, notEmptyLength(filteredOptions) ? filteredOptions.map((item, index) => {\n    return __jsx(\"div\", {\n      key: index\n    }, __jsx(Row, {\n      key: index // gutter={[10, 10]} \n      ,\n      className: _.toLower(props.selectedValue) == _.toLower(item.value) ? \"selectedRow\" : \"selectRow\",\n      onClick: () => selectedValue(item.value, index),\n      style: {\n        height: '3.5em',\n        lineHeight: '3.5em'\n      }\n    }, __jsx(Col, {\n      span: 12,\n      style: {\n        height: '100%'\n      }\n    }, __jsx(Highlighter, {\n      style: {\n        padding: '0px 10px',\n        textTransform: 'capitalize',\n        whiteSpace: 'noWrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      },\n      highlightStyle: {\n        backgroundColor: '#ffc069',\n        padding: 0\n      },\n      searchWords: [searchKeyword],\n      autoEscape: true,\n      textToHighlight: item.value,\n      className: \"text-truncate\"\n    })), __jsx(Col, {\n      span: 12,\n      style: {\n        height: '100%'\n      }\n    }, __jsx(\"div\", {\n      className: \"fill-parent flex-justify-end flex-items-align-center\"\n    }, `(${isValidNumber(item.count) ? formatNumber(item.count, null, false, 0, true) : 0})`))));\n  }) : __jsx(\"div\", {\n    style: {\n      height: '100%'\n    }\n  }, __jsx(Empty, {\n    style: {\n      position: 'relative'\n    },\n    image: \"/empty.png\",\n    imageStyle: {\n      height: 60\n    },\n    description: __jsx(\"span\", null, \"No Result\")\n  }))))))))));\n};\n\nconst mapStateToProps = state => ({\n  productsList: state.productsList,\n  app: state.app\n});\n\nconst mapDispatchToProps = {};\nexport default connect(mapStateToProps, mapDispatchToProps)(Form.create()(withRouter(AreaModal)));","map":{"version":3,"sources":["/Users/faraheen/ccar-cms-next-mobile/components/product-list/filter-modal/AreaModal.jsx"],"names":["CloseOutlined","Card","Col","Empty","Form","Icon","Input","Modal","Row","_","withRouter","React","useEffect","useState","Scrollbars","Highlighter","connect","formatNumber","isValidNumber","notEmptyLength","Loading","areaModalSearchRef","createRef","AreaModal","props","options","setOptions","filteredOptions","setFilteredOptions","searchKeyword","setSearchKeyword","isArray","isEmpty","reverse","sortBy","visible","current","focus","keyword","RegExp","data","filter","option","test","value","count","selectedValue","item","alphaIndex","index","onChange","closable","maskClosable","style","onCancel","className","width","id","parseInt","zIndex","title","loading","e","target","get","map","toLower","height","lineHeight","padding","textTransform","whiteSpace","overflow","textOverflow","backgroundColor","position","mapStateToProps","state","productsList","app","mapDispatchToProps","create"],"mappings":";;;;;;;;AAAA,SAASA,aAAT,QAA8B,mBAA9B;AACA,SAASC,IAAT,EAAeC,GAAf,EAAoBC,KAApB,EAA2BC,IAA3B,EAAiCC,IAAjC,EAAuCC,KAAvC,EAA8CC,KAA9C,EAAqDC,GAArD,QAAgE,MAAhE;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,SAASC,UAAT,QAA2B,yBAA3B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,EAAuBC,aAAvB,EAAsCC,cAAtC,QAA6D,0BAA7D;AACA,OAAOC,OAAP,MAAoB,uBAApB;AAGA,MAAMC,kBAAkB,GAAGV,KAAK,CAACW,SAAN,EAA3B;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AACzB,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBb,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM;AAAA,OAACc,eAAD;AAAA,OAAkBC;AAAlB,MAAwCf,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM;AAAA,OAACgB,aAAD;AAAA,OAAgBC;AAAhB,MAAoCjB,QAAQ,CAAC,EAAD,CAAlD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AAEZ,QAAIH,CAAC,CAACsB,OAAF,CAAUP,KAAK,CAACC,OAAhB,KAA4B,CAAChB,CAAC,CAACuB,OAAF,CAAUR,KAAK,CAACC,OAAhB,CAAjC,EAA2D;AACvDC,MAAAA,UAAU,CAACjB,CAAC,CAACwB,OAAF,CAAUxB,CAAC,CAACyB,MAAF,CAASV,KAAK,CAACC,OAAf,EAAwB,CAAC,OAAD,EAAU,OAAV,CAAxB,CAAV,CAAD,CAAV;AACH,KAFD,MAEO;AACHC,MAAAA,UAAU,CAAC,EAAD,CAAV;AACH;AACJ,GAPQ,EAON,CAACF,KAAK,CAACC,OAAP,CAPM,CAAT;AASAb,EAAAA,SAAS,CAAC,MAAM;AAEZ,QAAIY,KAAK,CAACW,OAAN,IAAiB,IAAjB,IAAyBd,kBAAkB,CAACe,OAAhD,EAAyD;AACrDf,MAAAA,kBAAkB,CAACe,OAAnB,CAA2BC,KAA3B;AACH;;AAED,QAAI,CAACb,KAAK,CAACW,OAAX,EAAoB;AAChBL,MAAAA,gBAAgB,CAAC,EAAD,CAAhB;AACH;AAEJ,GAVQ,EAUN,CAACN,KAAK,CAACW,OAAP,EAAgBd,kBAAkB,CAACe,OAAnC,CAVM,CAAT;AAYAxB,EAAAA,SAAS,CAAC,MAAM;AAEZ,QAAIiB,aAAJ,EAAmB;AACf,UAAIS,OAAO,GAAG,IAAIC,MAAJ,CAAWV,aAAX,EAA0B,GAA1B,CAAd;;AACA,UAAIW,IAAI,GAAG/B,CAAC,CAACgC,MAAF,CAAShB,OAAT,EAAkB,UAAUiB,MAAV,EAAkB;AAC3C,YAAIb,aAAJ,EAAmB;AACf,iBAAOS,OAAO,CAACK,IAAR,CAAaD,MAAM,CAACE,KAApB,KAA8BF,MAAM,CAACG,KAAP,GAAe,CAApD;AACH,SAFD,MAEO;AACH,iBAAO,IAAP;AACH;AACJ,OANU,CAAX;;AAOAjB,MAAAA,kBAAkB,CAACY,IAAD,CAAlB;AACH,KAVD,MAUO;AACHZ,MAAAA,kBAAkB,CAACH,OAAD,CAAlB;AACH;AACJ,GAfQ,EAeN,CAACA,OAAD,EAAUI,aAAV,CAfM,CAAT;;AAiBA,QAAMiB,aAAa,GAAG,CAACC,IAAD,EAAOC,UAAP,EAAmBC,KAAnB,KAA6B;AAC/C,QAAIzB,KAAK,CAAC0B,QAAV,EAAoB;AAChB1B,MAAAA,KAAK,CAAC0B,QAAN,CAAeH,IAAf,EAAqBC,UAArB,EAAiCC,KAAjC;AACH;AACJ,GAJD;;AAMA,SACI,MAAC,KAAD,CAAO,QAAP,QACI,MAAC,KAAD;AACI,IAAA,QAAQ,EAAEzB,KAAK,CAAC2B,QAAN,IAAkB,IAAlB,GAAyB3B,KAAK,CAAC2B,QAAN,GAAiB,IAAjB,GAAwB,KAAjD,GAAyD,KADvE;AAEI,IAAA,YAAY,EAAE3B,KAAK,CAAC4B,YAAN,IAAsB,IAAtB,GAA6B5B,KAAK,CAAC4B,YAAN,GAAqB,IAArB,GAA4B,KAAzD,GAAiE,KAFnF;AAGI,IAAA,OAAO,EAAE5B,KAAK,CAACW,OAAN,IAAiB,IAAjB,GAAwBX,KAAK,CAACW,OAAN,GAAgB,IAAhB,GAAuB,KAA/C,GAAuD,KAHpE;AAII,IAAA,KAAK,oBAAOX,KAAK,CAAC6B,KAAb,CAJT;AAI+B,IAAA,QAAQ,EAAE7B,KAAK,CAAC8B,QAJ/C;AAKI,IAAA,SAAS,EAAG,GAAE9B,KAAK,CAAC+B,SAAN,GAAkB/B,KAAK,CAAC+B,SAAxB,GAAoC,EAAG,EALzD;AAMI,IAAA,KAAK,EAAE/B,KAAK,CAACgC,KAAN,GAAchC,KAAK,CAACgC,KAApB,GAA4B,MANvC;AAOI,IAAA,EAAE,EAAEhC,KAAK,CAACiC,EAAN,GAAWjC,KAAK,CAACiC,EAAjB,GAAsB,YAP9B;AAQI,IAAA,MAAM,EAAEvC,aAAa,CAACwC,QAAQ,CAAClC,KAAK,CAACmC,MAAP,CAAT,CAAb,GAAwCD,QAAQ,CAAClC,KAAK,CAACmC,MAAP,CAAhD,GAAiE,IAR7E;AASI,IAAA,MAAM,EAAE;AATZ,KAUI,MAAC,IAAD;AACI,IAAA,QAAQ,EAAE,KADd;AAEI,IAAA,KAAK,EAAEnC,KAAK,CAACoC,KAAN,GAAcpC,KAAK,CAACoC,KAApB,GAA4B,aAFvC;AAGI,IAAA,IAAI,EAAC,OAHT;AAII,IAAA,KAAK,EAAE;AAAED,MAAAA,MAAM,EAAE;AAAV;AAJX,KAMI,MAAC,OAAD;AAAS,IAAA,QAAQ,EAAEnC,KAAK,CAACqC;AAAzB,KAEI,MAAC,GAAD,QACI,MAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAa,IAAA,EAAE,EAAE,EAAjB;AAAqB,IAAA,EAAE,EAAE,EAAzB;AAA6B,IAAA,EAAE,EAAE,EAAjC;AAAqC,IAAA,EAAE,EAAE;AAAzC,KACI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI,MAAC,KAAD;AAAO,IAAA,GAAG,EAAExC,kBAAZ;AAAgC,IAAA,SAAS,MAAzC;AAA0C,IAAA,KAAK,EAAEQ,aAAjD;AAAgE,IAAA,QAAQ,EAAGiC,CAAD,IAAO;AAAEhC,MAAAA,gBAAgB,CAACgC,CAAC,CAACC,MAAF,CAASnB,KAAV,CAAhB;AAAkC,KAArH;AAAuH,IAAA,SAAS,EAAC,iBAAjI;AAAmJ,IAAA,IAAI,EAAC,OAAxJ;AAAgK,IAAA,OAAO,MAAvK;AACI,IAAA,MAAM,EACFf,aAAa,GACT,MAAC,aAAD;AACI,MAAA,SAAS,EAAC,gBADd;AAEI,MAAA,OAAO,EAAGiC,CAAD,IAAO;AAAEhC,QAAAA,gBAAgB,CAAC,EAAD,CAAhB;AAAsB;AAF5C,MADS,GAKT,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC;AAAX,MAPZ;AAQM,IAAA,WAAW,EAAC;AARlB,IADJ,CADJ,CADJ,CAFJ,EAiBI,MAAC,GAAD;AAAK,IAAA,MAAM,EAAE,CAAC,EAAD,EAAK,EAAL;AAAb,KACI,MAAC,GAAD;AAAK,IAAA,SAAS,EAAC,YAAf;AAA4B,IAAA,EAAE,EAAE,CAAhC;AAAmC,IAAA,EAAE,EAAE,CAAvC;AAA0C,IAAA,EAAE,EAAE,EAA9C;AAAkD,IAAA,EAAE,EAAE,EAAtD;AAA0D,IAAA,EAAE,EAAE;AAA9D,KACA,MAAC,UAAD;AAAY,IAAA,QAAQ,MAApB;AAAqB,IAAA,UAAU,MAA/B;AAAgC,IAAA,aAAa,EAAErB,CAAC,CAACuD,GAAF,CAAMxC,KAAN,EAAa,CAAC,WAAD,EAAc,WAAd,CAAb,KAA4C;AAA3F,KACI,mBAEQL,cAAc,CAACQ,eAAD,CAAd,GACIA,eAAe,CAACsC,GAAhB,CAAoB,CAAClB,IAAD,EAAOE,KAAP,KAAiB;AACjC,WACI;AAAK,MAAA,GAAG,EAAEA;AAAV,OACI,MAAC,GAAD;AACI,MAAA,GAAG,EAAEA,KADT,CAEI;AAFJ;AAGI,MAAA,SAAS,EAAExC,CAAC,CAACyD,OAAF,CAAU1C,KAAK,CAACsB,aAAhB,KAAkCrC,CAAC,CAACyD,OAAF,CAAUnB,IAAI,CAACH,KAAf,CAAlC,GAA0D,aAA1D,GAA0E,WAHzF;AAII,MAAA,OAAO,EAAE,MAAME,aAAa,CAACC,IAAI,CAACH,KAAN,EAAaK,KAAb,CAJhC;AAKI,MAAA,KAAK,EAAE;AAAEkB,QAAAA,MAAM,EAAE,OAAV;AAAmBC,QAAAA,UAAU,EAAE;AAA/B;AALX,OAMI,MAAC,GAAD;AAAK,MAAA,IAAI,EAAE,EAAX;AAAe,MAAA,KAAK,EAAE;AAAED,QAAAA,MAAM,EAAE;AAAV;AAAtB,OACI,MAAC,WAAD;AACI,MAAA,KAAK,EAAE;AAAEE,QAAAA,OAAO,EAAE,UAAX;AAAuBC,QAAAA,aAAa,EAAE,YAAtC;AAAoDC,QAAAA,UAAU,EAAE,QAAhE;AAA0EC,QAAAA,QAAQ,EAAE,QAApF;AAA8FC,QAAAA,YAAY,EAAE;AAA5G,OADX;AAEI,MAAA,cAAc,EAAE;AAAEC,QAAAA,eAAe,EAAE,SAAnB;AAA8BL,QAAAA,OAAO,EAAE;AAAvC,OAFpB;AAGI,MAAA,WAAW,EAAE,CAACxC,aAAD,CAHjB;AAII,MAAA,UAAU,MAJd;AAKI,MAAA,eAAe,EAAEkB,IAAI,CAACH,KAL1B;AAMI,MAAA,SAAS,EAAC;AANd,MADJ,CANJ,EAgBI,MAAC,GAAD;AAAK,MAAA,IAAI,EAAE,EAAX;AAAe,MAAA,KAAK,EAAE;AAAEuB,QAAAA,MAAM,EAAE;AAAV;AAAtB,OACI;AAAK,MAAA,SAAS,EAAC;AAAf,OACM,IAAGjD,aAAa,CAAC6B,IAAI,CAACF,KAAN,CAAb,GAA4B5B,YAAY,CAAC8B,IAAI,CAACF,KAAN,EAAa,IAAb,EAAmB,KAAnB,EAA0B,CAA1B,EAA6B,IAA7B,CAAxC,GAA6E,CAAE,GADxF,CADJ,CAhBJ,CADJ,CADJ;AA0BH,GA3BD,CADJ,GA8BI;AAAK,IAAA,KAAK,EAAE;AAAEsB,MAAAA,MAAM,EAAE;AAAV;AAAZ,KACI,MAAC,KAAD;AACI,IAAA,KAAK,EAAE;AAAEQ,MAAAA,QAAQ,EAAE;AAAZ,KADX;AAEI,IAAA,KAAK,EAAC,YAFV;AAGI,IAAA,UAAU,EAAE;AACRR,MAAAA,MAAM,EAAE;AADA,KAHhB;AAOI,IAAA,WAAW,EAAE;AAPjB,IADJ,CAhCZ,CADJ,CADA,CADJ,CAjBJ,CANJ,CAVJ,CADJ,CADJ;AA6FH,CA9ID;;AAgJA,MAAMS,eAAe,GAAGC,KAAK,KAAK;AAC9BC,EAAAA,YAAY,EAAED,KAAK,CAACC,YADU;AAE9BC,EAAAA,GAAG,EAAEF,KAAK,CAACE;AAFmB,CAAL,CAA7B;;AAKA,MAAMC,kBAAkB,GAAG,EAA3B;AAEA,eAAehE,OAAO,CAAC4D,eAAD,EAAkBI,kBAAlB,CAAP,CAA6C5E,IAAI,CAAC6E,MAAL,GAAcvE,UAAU,CAACa,SAAD,CAAxB,CAA7C,CAAf","sourcesContent":["import { CloseOutlined } from '@ant-design/icons';\nimport { Card, Col, Empty, Form, Icon, Input, Modal, Row } from 'antd';\nimport _ from 'lodash';\nimport { withRouter } from 'next/dist/client/router';\nimport React, { useEffect, useState } from 'react';\nimport Scrollbars from 'react-custom-scrollbars';\nimport Highlighter from 'react-highlight-words';\nimport { connect } from 'react-redux';\nimport { formatNumber, isValidNumber, notEmptyLength  } from '../../../common-function';\nimport Loading from '../../general/Loading';\n\n\nconst areaModalSearchRef = React.createRef();\n\nconst AreaModal = (props) => {\n    const [options, setOptions] = useState([])\n    const [filteredOptions, setFilteredOptions] = useState([])\n    const [searchKeyword, setSearchKeyword] = useState('')\n\n    useEffect(() => {\n\n        if (_.isArray(props.options) && !_.isEmpty(props.options)) {\n            setOptions(_.reverse(_.sortBy(props.options, ['count', 'value'])));\n        } else {\n            setOptions([]);\n        }\n    }, [props.options])\n\n    useEffect(() => {\n\n        if (props.visible == true && areaModalSearchRef.current) {\n            areaModalSearchRef.current.focus();\n        }\n\n        if (!props.visible) {\n            setSearchKeyword('');\n        }\n\n    }, [props.visible, areaModalSearchRef.current])\n\n    useEffect(() => {\n\n        if (searchKeyword) {\n            let keyword = new RegExp(searchKeyword, 'i');\n            let data = _.filter(options, function (option) {\n                if (searchKeyword) {\n                    return keyword.test(option.value) && option.count > 0;\n                } else {\n                    return true;\n                }\n            })\n            setFilteredOptions(data)\n        } else {\n            setFilteredOptions(options)\n        }\n    }, [options, searchKeyword])\n\n    const selectedValue = (item, alphaIndex, index) => {\n        if (props.onChange) {\n            props.onChange(item, alphaIndex, index);\n        }\n    }\n\n    return (\n        <React.Fragment>\n            <Modal\n                closable={props.closable != null ? props.closable ? true : false : false}\n                maskClosable={props.maskClosable != null ? props.maskClosable ? true : false : false}\n                visible={props.visible != null ? props.visible ? true : false : false}\n                style={{ ...props.style }} onCancel={props.onCancel}\n                className={`${props.className ? props.className : ''}`}\n                width={props.width ? props.width : '100%'}\n                id={props.id ? props.id : 'area-modal'}\n                zIndex={isValidNumber(parseInt(props.zIndex)) ? parseInt(props.zIndex) : 1000}\n                footer={null}>\n                <Card\n                    bordered={false}\n                    title={props.title ? props.title : \"Select Area\"}\n                    size=\"small\"\n                    style={{ zIndex: 1001 }}\n                >\n                    <Loading spinning={props.loading}>\n\n                        <Row>\n                            <Col xs={24} sm={24} md={24} lg={24} xl={24}>\n                                <div className=\"thin-border round-border-big padding-sm\">\n                                    <Input ref={areaModalSearchRef} autoFocus value={searchKeyword} onChange={(e) => { setSearchKeyword(e.target.value) }} className='no-border-input' size=\"small\" compact\n                                        suffix={\n                                            searchKeyword ?\n                                                <CloseOutlined\n                                                    className='cursor-pointer'\n                                                    onClick={(e) => { setSearchKeyword('') }} />\n                                                :\n                                                <Icon type=\"search\" />\n                                        } placeholder=\"Search Here...\" />\n                                </div>\n                            </Col>\n                        </Row>\n                        <Row gutter={[15, 15]}>\n                            <Col className=\"gutter-row\" xs={0} sm={0} md={24} lg={24} xl={24}>\n                            <Scrollbars autoHide autoHeight autoHeightMax={_.get(props, ['bodyStyle', 'maxHeight']) || 500}>\n                                <div>\n                                    {\n                                        notEmptyLength(filteredOptions) ?\n                                            filteredOptions.map((item, index) => {\n                                                return (\n                                                    <div key={index}>\n                                                        <Row\n                                                            key={index}\n                                                            // gutter={[10, 10]} \n                                                            className={_.toLower(props.selectedValue) == _.toLower(item.value) ? \"selectedRow\" : \"selectRow\"}\n                                                            onClick={() => selectedValue(item.value, index)}\n                                                            style={{ height: '3.5em', lineHeight: '3.5em' }}>\n                                                            <Col span={12} style={{ height: '100%' }}>\n                                                                <Highlighter\n                                                                    style={{ padding: '0px 10px', textTransform: 'capitalize', whiteSpace: 'noWrap', overflow: 'hidden', textOverflow: 'ellipsis' }}\n                                                                    highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\n                                                                    searchWords={[searchKeyword]}\n                                                                    autoEscape\n                                                                    textToHighlight={item.value}\n                                                                    className=\"text-truncate\"\n                                                                />\n                                                            </Col>\n                                                            <Col span={12} style={{ height: '100%' }}>\n                                                                <div className=\"fill-parent flex-justify-end flex-items-align-center\">\n                                                                    {`(${isValidNumber(item.count) ? formatNumber(item.count, null, false, 0, true) : 0})`}\n                                                                </div>\n                                                            </Col>\n                                                        </Row>\n                                                    </div>\n                                                );\n                                            })\n                                            :\n                                            <div style={{ height: '100%' }}>\n                                                <Empty\n                                                    style={{ position: 'relative' }}\n                                                    image=\"/empty.png\"\n                                                    imageStyle={{\n                                                        height: 60,\n                                                    }\n                                                    }\n                                                    description={<span>No Result</span>}\n                                                >\n                                                </Empty>\n                                            </div>\n                                    }\n                                </div>\n                                </Scrollbars>\n                            </Col>\n\n                        </Row>\n                    </Loading>\n                </Card>\n            </Modal>\n        </React.Fragment>\n    );\n}\n\nconst mapStateToProps = state => ({\n    productsList: state.productsList,\n    app: state.app,\n});\n\nconst mapDispatchToProps = {\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Form.create()(withRouter(AreaModal)));"]},"metadata":{},"sourceType":"module"}