{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport _ from 'lodash';\nimport { withRouter } from 'next/dist/client/router';\nimport { connect } from 'react-redux';\nimport { getProfileSeoData } from '../../../common-function';\nimport ReduxPersistWrapper from '../../../components/general/ReduxPersistWrapper';\nimport ProfileHomePage from '../../../components/profile/page/ProfileHomePage';\nimport client from '../../../feathers';\nconst searchBarRef = React.createRef();\n\nconst Index = props => {\n  return __jsx(ReduxPersistWrapper, {\n    cookie: props.cookie\n  }, props.app.initedRedux ? __jsx(ProfileHomePage, null) : null);\n};\n\nexport async function getServerSideProps(context) {\n  let id = _.get(context, `req.params.id`) || _.get(context, `req.query.id`);\n\n  let profile = {};\n  let seoData = {};\n\n  if (id) {\n    profile = await client.service('users').find({\n      query: {\n        userurlId: id\n      }\n    });\n    profile = _.get(profile, 'data[0]') || {};\n  }\n\n  if (_.isPlainObject(profile) && !_.isEmpty(profile)) {\n    seoData = getProfileSeoData(profile);\n  }\n\n  return {\n    props: {\n      cookie: _.get(context, ['req', 'headers', 'cookie']) || null,\n      seoData: _objectSpread({}, seoData)\n    }\n  };\n}\n\nconst mapStateToProps = state => ({\n  app: state.app,\n  user: state.user,\n  productsList: state.productsList\n});\n\nconst mapDispatchToProps = {};\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Index));","map":{"version":3,"sources":["/Users/faraheen/ccar-cms-next-mobile/pages/profile/[id]/index.jsx"],"names":["_","withRouter","connect","getProfileSeoData","ReduxPersistWrapper","ProfileHomePage","client","searchBarRef","React","createRef","Index","props","cookie","app","initedRedux","getServerSideProps","context","id","get","profile","seoData","service","find","query","userurlId","isPlainObject","isEmpty","mapStateToProps","state","user","productsList","mapDispatchToProps"],"mappings":";;;;;;;;;AAAA,OAAOA,CAAP,MAAc,QAAd;AACA,SAASC,UAAT,QAA2B,yBAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,QAAkC,0BAAlC;AACA,OAAOC,mBAAP,MAAgC,iDAAhC;AACA,OAAOC,eAAP,MAA4B,kDAA5B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAGA,MAAMC,YAAY,GAAGC,KAAK,CAACC,SAAN,EAArB;;AACA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAGrB,SACI,MAAC,mBAAD;AAAqB,IAAA,MAAM,EAAEA,KAAK,CAACC;AAAnC,KAEQD,KAAK,CAACE,GAAN,CAAUC,WAAV,GACI,MAAC,eAAD,OADJ,GAGI,IALZ,CADJ;AAUH,CAbD;;AAgBA,OAAO,eAAeC,kBAAf,CAAkCC,OAAlC,EAA2C;AAE9C,MAAIC,EAAE,GAAGjB,CAAC,CAACkB,GAAF,CAAMF,OAAN,EAAgB,eAAhB,KAAmChB,CAAC,CAACkB,GAAF,CAAMF,OAAN,EAAgB,cAAhB,CAA5C;;AACA,MAAIG,OAAO,GAAG,EAAd;AACA,MAAIC,OAAO,GAAG,EAAd;;AACA,MAAIH,EAAJ,EAAQ;AACJE,IAAAA,OAAO,GAAG,MAAMb,MAAM,CAACe,OAAP,CAAe,OAAf,EAAwBC,IAAxB,CAA6B;AACzCC,MAAAA,KAAK,EAAE;AACHC,QAAAA,SAAS,EAAEP;AADR;AADkC,KAA7B,CAAhB;AAKAE,IAAAA,OAAO,GAAGnB,CAAC,CAACkB,GAAF,CAAMC,OAAN,EAAe,SAAf,KAA6B,EAAvC;AACH;;AAED,MAAInB,CAAC,CAACyB,aAAF,CAAgBN,OAAhB,KAA4B,CAACnB,CAAC,CAAC0B,OAAF,CAAUP,OAAV,CAAjC,EAAqD;AACjDC,IAAAA,OAAO,GAAGjB,iBAAiB,CAACgB,OAAD,CAA3B;AACH;;AACD,SAAO;AACHR,IAAAA,KAAK,EAAE;AACHC,MAAAA,MAAM,EAAEZ,CAAC,CAACkB,GAAF,CAAMF,OAAN,EAAe,CAAC,KAAD,EAAQ,SAAR,EAAmB,QAAnB,CAAf,KAAgD,IADrD;AAEHI,MAAAA,OAAO,oBACAA,OADA;AAFJ;AADJ,GAAP;AAQH;;AAED,MAAMO,eAAe,GAAGC,KAAK,KAAK;AAC9Bf,EAAAA,GAAG,EAAEe,KAAK,CAACf,GADmB;AAE9BgB,EAAAA,IAAI,EAAED,KAAK,CAACC,IAFkB;AAG9BC,EAAAA,YAAY,EAAEF,KAAK,CAACE;AAHU,CAAL,CAA7B;;AAOA,MAAMC,kBAAkB,GAAG,EAA3B;AAEA,eAAe7B,OAAO,CAACyB,eAAD,EAAkBI,kBAAlB,CAAP,CAA6C9B,UAAU,CAACS,KAAD,CAAvD,CAAf","sourcesContent":["import _ from 'lodash';\nimport { withRouter } from 'next/dist/client/router';\nimport { connect } from 'react-redux';\nimport { getProfileSeoData } from '../../../common-function';\nimport ReduxPersistWrapper from '../../../components/general/ReduxPersistWrapper';\nimport ProfileHomePage from '../../../components/profile/page/ProfileHomePage';\nimport client from '../../../feathers';\n\n\nconst searchBarRef = React.createRef();\nconst Index = (props) => {\n\n\n    return (\n        <ReduxPersistWrapper cookie={props.cookie}>\n            {\n                props.app.initedRedux ?\n                    <ProfileHomePage />\n                    :\n                    null\n            }\n        </ReduxPersistWrapper>\n    )\n}\n\n\nexport async function getServerSideProps(context) {\n\n    let id = _.get(context, `req.params.id`) || _.get(context, `req.query.id`);\n    let profile = {};\n    let seoData = {};\n    if (id) {\n        profile = await client.service('users').find({\n            query: {\n                userurlId: id,\n            }\n        })\n        profile = _.get(profile, 'data[0]') || {}\n    }\n\n    if (_.isPlainObject(profile) && !_.isEmpty(profile)) {\n        seoData = getProfileSeoData(profile);\n    }\n    return {\n        props: {\n            cookie: _.get(context, ['req', 'headers', 'cookie']) || null,\n            seoData: {\n                ...seoData,\n            }\n        }\n    }\n}\n\nconst mapStateToProps = state => ({\n    app: state.app,\n    user: state.user,\n    productsList: state.productsList,\n});\n\n\nconst mapDispatchToProps = {\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Index));"]},"metadata":{},"sourceType":"module"}