{"ast":null,"code":"var __jsx = React.createElement;\nimport { CloseOutlined } from '@ant-design/icons';\nimport { Card, Col, Empty, Form, Icon, Input, Modal, Row } from 'antd';\nimport _ from 'lodash';\nimport { withRouter } from 'next/dist/client/router';\nimport React, { useEffect, useState } from 'react';\nimport Scrollbars from 'react-custom-scrollbars';\nimport Highlighter from 'react-highlight-words';\nimport { connect } from 'react-redux';\nimport { formatNumber, isValidNumber, notEmptyLength } from '../../../common-function';\nimport { raceFlagIcon } from '../../../icon';\nimport { StateList } from '../../../params/stateList';\nconst stateModalSearchRef = React.createRef();\n\nconst StateModal = props => {\n  const {\n    0: options,\n    1: setOptions\n  } = useState([]);\n  const {\n    0: searchKeyword,\n    1: setSearchKeyword\n  } = useState('');\n  const {\n    0: filteredOptions,\n    1: setFilteredOptions\n  } = useState([]);\n  useEffect(() => {\n    if (props.options != null && _.isArray(props.options)) {\n      let otherOption = {\n        value: 'others',\n        count: 0,\n        icon: raceFlagIcon\n      };\n\n      let data = _.compact(_.map(props.options, function (state) {\n        let selectedOption = _.find(StateList, function (item) {\n          return _.toLower(item.value) == _.toLower(state.value);\n        });\n\n        if (selectedOption) {\n          selectedOption.count = state.count;\n          return selectedOption;\n        } else {\n          otherOption.count += state.count;\n        }\n      }));\n\n      if (otherOption.count > 0) {\n        setOptions((data || []).concat(otherOption));\n      } else {\n        setOptions(data);\n      }\n    } else {\n      setOptions([]);\n    }\n  }, [props.options]);\n  useEffect(() => {\n    if (props.visible == true && stateModalSearchRef.current) {\n      stateModalSearchRef.current.focus();\n    }\n\n    if (!props.visible) {\n      setSearchKeyword('');\n    }\n  }, [props.visible, stateModalSearchRef.current]);\n  useEffect(() => {\n    if (_.isArray(options) && notEmptyLength(options)) {\n      let data = _.reverse(_.sortBy(_.filter(options, function (option) {\n        if (searchKeyword) {\n          let keyword = new RegExp(searchKeyword, 'i');\n          return keyword.test(option.value) && option.count > 0;\n        } else {\n          return true;\n        }\n      }), ['count', 'value']));\n\n      setFilteredOptions(data);\n    } else {\n      setFilteredOptions([]);\n    }\n  }, [options, searchKeyword]);\n\n  const selectedValue = (item, alphaIndex, index) => {\n    if (props.onChange) {\n      props.onChange(item, alphaIndex, index);\n    }\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", null, notEmptyLength(filteredOptions) ? filteredOptions.map((item, index) => {\n    return __jsx(\"div\", {\n      key: index\n    }, __jsx(Row, {\n      key: index,\n      className: _.toLower(props.selectedValue) == _.toLower(item.value) ? \"selectedRow\" : \"selectRow\",\n      onClick: () => selectedValue(item.value, index),\n      style: {\n        height: '3.5em',\n        lineHeight: '3.5em'\n      }\n    }, __jsx(Col, {\n      span: 5,\n      style: {\n        height: '100%',\n        padding: 5,\n        lineHeight: 0\n      }\n    }, __jsx(\"img\", {\n      className: \"w-100 h-100 obj-fit-c\",\n      src: item.icon\n    })), __jsx(Col, {\n      span: 12,\n      style: {\n        height: '100%'\n      }\n    }, __jsx(\"p\", {\n      style: {\n        padding: '0px 10px',\n        textTransform: 'capitalize',\n        whiteSpace: 'noWrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        fontWeight: '700'\n      }\n    }, item.value)), __jsx(Col, {\n      span: 7,\n      style: {\n        height: '100%'\n      }\n    }, __jsx(\"div\", {\n      className: \"fill-parent flex-justify-end flex-items-align-center\"\n    }, `(${isValidNumber(item.count) ? formatNumber(item.count, null, false, 0, true) : 0})`))));\n  }) : __jsx(\"div\", {\n    style: {\n      height: '100%'\n    }\n  }, __jsx(Empty, {\n    style: {\n      position: 'relative'\n    },\n    image: \"/empty.png\",\n    imageStyle: {\n      height: 60\n    },\n    description: __jsx(\"span\", null, \"No Result\")\n  }))));\n};\n\nconst mapStateToProps = state => ({\n  productsList: state.productsList,\n  app: state.app\n});\n\nconst mapDispatchToProps = {};\nexport default connect(mapStateToProps, mapDispatchToProps)(Form.create()(withRouter(StateModal)));","map":{"version":3,"sources":["/Users/faraheen/ccar-cms-next-mobile/components/product-list/filter-modal/StateModal.jsx"],"names":["CloseOutlined","Card","Col","Empty","Form","Icon","Input","Modal","Row","_","withRouter","React","useEffect","useState","Scrollbars","Highlighter","connect","formatNumber","isValidNumber","notEmptyLength","raceFlagIcon","StateList","stateModalSearchRef","createRef","StateModal","props","options","setOptions","searchKeyword","setSearchKeyword","filteredOptions","setFilteredOptions","isArray","otherOption","value","count","icon","data","compact","map","state","selectedOption","find","item","toLower","concat","visible","current","focus","reverse","sortBy","filter","option","keyword","RegExp","test","selectedValue","alphaIndex","index","onChange","height","lineHeight","padding","textTransform","whiteSpace","overflow","textOverflow","fontWeight","position","mapStateToProps","productsList","app","mapDispatchToProps","create"],"mappings":"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","sourcesContent":["import { CloseOutlined } from '@ant-design/icons';\nimport { Card, Col, Empty, Form, Icon, Input, Modal, Row } from 'antd';\nimport _ from 'lodash';\nimport { withRouter } from 'next/dist/client/router';\nimport React, { useEffect, useState } from 'react';\nimport Scrollbars from 'react-custom-scrollbars';\nimport Highlighter from 'react-highlight-words';\nimport { connect } from 'react-redux';\nimport { formatNumber, isValidNumber, notEmptyLength } from '../../../common-function';\nimport { raceFlagIcon } from '../../../icon';\nimport { StateList } from '../../../params/stateList';\n\n\n\nconst stateModalSearchRef = React.createRef();\n\nconst StateModal = (props) => {\n    const [options, setOptions] = useState([])\n    const [searchKeyword, setSearchKeyword] = useState('')\n    const [filteredOptions, setFilteredOptions] = useState([])\n\n    useEffect(() => {\n        if (props.options != null && _.isArray(props.options)) {\n\n            let otherOption = {\n                value : 'others',\n                count : 0,\n                icon : raceFlagIcon\n            }\n\n            let data = _.compact(_.map(props.options, function (state) {\n                let selectedOption = _.find(StateList, function (item) {\n                    return _.toLower(item.value) == _.toLower(state.value);\n                })\n                if (selectedOption) {\n                    selectedOption.count = state.count;\n                    return selectedOption;\n                } else {\n                    otherOption.count += state.count;\n                }\n            }))\n\n            if(otherOption.count > 0){\n                setOptions((data || []).concat(otherOption))\n            }else{\n                setOptions((data))\n            }\n        } else {\n            setOptions([]);\n        }\n    }, [props.options])\n\n    useEffect(() => {\n\n        if (props.visible == true && stateModalSearchRef.current) {\n            stateModalSearchRef.current.focus();\n        }\n\n        if (!props.visible) {\n            setSearchKeyword('');\n        }\n\n    }, [props.visible, stateModalSearchRef.current])\n\n    useEffect(() => {\n        if (_.isArray(options) && notEmptyLength(options)) {\n            let data = _.reverse(_.sortBy(_.filter(options, function (option) {\n                if (searchKeyword) {\n                    let keyword = new RegExp(searchKeyword, 'i');\n                    return keyword.test(option.value) && option.count > 0;\n                } else {\n                    return true;\n                }\n            }), ['count', 'value']))\n            setFilteredOptions(data)\n        } else {\n            setFilteredOptions([]);\n        }\n    }, [options, searchKeyword])\n\n    const selectedValue = (item, alphaIndex, index) => {\n        if (props.onChange) {\n            props.onChange(item, alphaIndex, index);\n        }\n    }\n\n    return (\n        <React.Fragment>\n            <div >\n                {\n                    notEmptyLength(filteredOptions) ?\n                    filteredOptions.map((item, index) => {\n                    return (\n                        <div key={index}>\n                            <Row\n                                key={index}\n                                className={_.toLower(props.selectedValue) == _.toLower(item.value) ? \"selectedRow\" : \"selectRow\"}\n                                onClick={() => selectedValue(item.value, index)}\n                                style={{ height: '3.5em', lineHeight: '3.5em' }}>\n\n                                <Col span={5} style={{ height: '100%', padding: 5, lineHeight: 0 }}>\n                                    <img className=\"w-100 h-100 obj-fit-c\" src={item.icon} />\n                                </Col>\n                                <Col span={12} style={{ height: '100%' }}>\n                                    <p style={{ padding: '0px 10px', textTransform: 'capitalize', whiteSpace: 'noWrap', overflow: 'hidden', textOverflow: 'ellipsis', fontWeight:'700' }}>{item.value}</p>\n                                </Col>\n                                <Col span={7} style={{ height: '100%' }}>\n                                    <div className=\"fill-parent flex-justify-end flex-items-align-center\">\n                                        {`(${isValidNumber(item.count) ? formatNumber(item.count, null, false, 0, true) : 0})`}\n                                    </div>\n                                </Col>\n                            </Row>\n                        </div>\n                    );\n                })\n                :\n                <div style={{ height: '100%' }}>\n                    <Empty\n                        style={{ position: 'relative' }}\n                        image=\"/empty.png\"\n                        imageStyle={{\n                        height: 60,\n                    }}\n                        description={<span>No Result</span>}\n                    >\n                    </Empty>\n                </div>\n             }\n            </div>\n        </React.Fragment>\n    );\n}\n\nconst mapStateToProps = state => ({\n    productsList: state.productsList,\n    app: state.app,\n});\n\nconst mapDispatchToProps = {\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Form.create()(withRouter(StateModal)));"]},"metadata":{},"sourceType":"module"}