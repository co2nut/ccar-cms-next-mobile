{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport _ from 'lodash';\nimport { withRouter } from 'next/dist/client/router';\nimport { connect } from 'react-redux';\nimport brandFilterTotal from '../../../api/brandFilterTotal';\nimport carAdsFilter from '../../../api/carAdsFilter';\nimport { convertProductRouteParamsToFilterObject, formatNumber, getCarMarketSeoData } from '../../../common-function';\nimport CarMarketPage from '../../../components/product-list/page/CarMarketPage';\nimport { loading } from '../../../redux/actions/app-actions';\nimport ReduxPersistWrapper from '../../../components/general/ReduxPersistWrapper';\nimport { getCarBrand } from '../../../params/carBrandsList';\nconst modals = ['make', 'model', 'state', 'area', 'bodyType', 'color', 'fuelType'];\n\nconst antIcon = __jsx(\"img\", {\n  src: \"/assets/Ccar-logo.png\",\n  style: {\n    fontSize: 60\n  }\n});\n\nconst PAGESIZE = 30;\nconst searchBarRef = React.createRef();\n\nconst Index = props => {\n  return __jsx(ReduxPersistWrapper, {\n    cookie: props.cookie\n  }, props.app.initedRedux ? __jsx(CarMarketPage, {\n    productList: props.productList || {},\n    config: props.config || {},\n    availableOptions: props.availableOptions || {},\n    productListTotal: props.productListTotal || 0,\n    filterGroup: props.filterGroup || {}\n  }) : null);\n};\n\nexport async function getServerSideProps(context) {\n  const {\n    parameter1,\n    parameter2,\n    parameter3\n  } = context.params;\n  let filterObj = context.query || {};\n\n  if (filterObj.data) {\n    try {\n      filterObj.data = JSON.parse(filterObj.data) || {};\n      filterObj = _objectSpread(_objectSpread({}, filterObj.data), filterObj);\n    } catch (error) {}\n\n    delete filterObj.data;\n  }\n\n  if (filterObj.sorting) {\n    try {\n      filterObj.sorting = JSON.parse(filterObj.sorting) || {};\n    } catch (error) {}\n  }\n\n  filterObj = convertProductRouteParamsToFilterObject(filterObj);\n\n  if (_.get(filterObj, ['filterGroup'])) {\n    filterObj.filterGroup.condition = '';\n  }\n\n  let promises = [];\n  promises.push(carAdsFilter(_.cloneDeep(filterObj), PAGESIZE));\n  promises.push(brandFilterTotal(modals, _.cloneDeep(filterObj)));\n  let [carAdsRes, brandFilterRes] = await Promise.all(promises);\n  let seoData = getCarMarketSeoData(_.get(filterObj, 'filterGroup') || {}, _.get(carAdsRes, 'total') || 0);\n  return {\n    props: {\n      cookie: _.get(context, ['req', 'headers', 'cookie']) || null,\n      productList: _.get(carAdsRes, ['data']) || [],\n      productListTotal: _.get(carAdsRes, ['total']) || 0,\n      filterGroup: _.get(filterObj, ['filterGroup']) || {},\n      config: _.get(filterObj, ['config']) || {},\n      availableOptions: brandFilterRes || {},\n      seoData: _objectSpread({}, seoData)\n    }\n  };\n}\n\nconst mapStateToProps = state => ({\n  app: state.app,\n  user: state.user,\n  productsList: state.productsList\n});\n\nconst mapDispatchToProps = {\n  loading: loading\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Index));","map":{"version":3,"sources":["/Users/faraheen/ccar-cms-next-mobile/pages/cars-on-sale/[parameter1]/index.js"],"names":["_","withRouter","connect","brandFilterTotal","carAdsFilter","convertProductRouteParamsToFilterObject","formatNumber","getCarMarketSeoData","CarMarketPage","loading","ReduxPersistWrapper","getCarBrand","modals","antIcon","fontSize","PAGESIZE","searchBarRef","React","createRef","Index","props","cookie","app","initedRedux","productList","config","availableOptions","productListTotal","filterGroup","getServerSideProps","context","parameter1","parameter2","parameter3","params","filterObj","query","data","JSON","parse","error","sorting","get","condition","promises","push","cloneDeep","carAdsRes","brandFilterRes","Promise","all","seoData","mapStateToProps","state","user","productsList","mapDispatchToProps"],"mappings":"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","sourcesContent":["import _ from 'lodash'\nimport { withRouter } from 'next/dist/client/router'\nimport { connect } from 'react-redux'\nimport brandFilterTotal from '../../../api/brandFilterTotal'\nimport carAdsFilter from '../../../api/carAdsFilter'\nimport { convertProductRouteParamsToFilterObject, formatNumber, getCarMarketSeoData } from '../../../common-function'\nimport CarMarketPage from '../../../components/product-list/page/CarMarketPage'\nimport { loading } from '../../../redux/actions/app-actions'\nimport ReduxPersistWrapper from '../../../components/general/ReduxPersistWrapper'\nimport { getCarBrand } from '../../../params/carBrandsList'\n\n\nconst modals = ['make', 'model', 'state', 'area', 'bodyType', 'color', 'fuelType'];\nconst antIcon = <img src=\"/assets/Ccar-logo.png\" style={{ fontSize: 60 }} />;\nconst PAGESIZE = 30;\nconst searchBarRef = React.createRef();\nconst Index = (props) => {\n\n    return (\n        <ReduxPersistWrapper cookie={props.cookie}>\n            {\n                props.app.initedRedux ?\n                    <CarMarketPage\n                        productList={props.productList || {}}\n                        config={props.config || {}}\n                        availableOptions={props.availableOptions || {}}\n                        productListTotal={props.productListTotal || 0}\n                        filterGroup={props.filterGroup || {}} />\n                    :\n                    null\n            }\n        </ReduxPersistWrapper>\n    )\n}\n\n\nexport async function getServerSideProps(context) {\n\n    const { parameter1, parameter2, parameter3 } = context.params;\n\n    let filterObj = context.query || {};\n    if (filterObj.data) {\n        try {\n            filterObj.data = JSON.parse(filterObj.data) || {};\n            filterObj = {\n                ...filterObj.data,\n                ...filterObj,\n            }\n        } catch (error) {\n\n        }\n        delete filterObj.data;\n    }\n    if (filterObj.sorting) {\n        try {\n            filterObj.sorting = JSON.parse(filterObj.sorting) || {};\n        } catch (error) {\n\n        }\n    }\n    filterObj = convertProductRouteParamsToFilterObject(filterObj);\n    if (_.get(filterObj, ['filterGroup'])) {\n        filterObj.filterGroup.condition = '';\n    }\n\n    let promises = [];\n    promises.push(carAdsFilter(_.cloneDeep(filterObj), PAGESIZE));\n    promises.push(brandFilterTotal(modals, _.cloneDeep(filterObj)));\n\n    let [carAdsRes, brandFilterRes] = await Promise.all(promises)\n\n    let seoData = getCarMarketSeoData(_.get(filterObj, 'filterGroup') || {}, _.get(carAdsRes, 'total') || 0);\n\n    return {\n        props: {\n            cookie: _.get(context, ['req', 'headers', 'cookie']) || null,\n            productList: _.get(carAdsRes, ['data']) || [],\n            productListTotal: _.get(carAdsRes, ['total']) || 0,\n            filterGroup: _.get(filterObj, ['filterGroup']) || {},\n            config: _.get(filterObj, ['config']) || {},\n            availableOptions: brandFilterRes || {},\n            seoData: {\n                ...seoData\n            }\n        }\n    }\n}\n\n\nconst mapStateToProps = state => ({\n    app: state.app,\n    user: state.user,\n    productsList: state.productsList,\n});\n\n\nconst mapDispatchToProps = {\n    loading: loading,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Index))"]},"metadata":{},"sourceType":"module"}