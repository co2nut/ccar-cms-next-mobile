{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport { Row, Col, Menu } from 'antd';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport { carBrandsList } from '../../../params/carBrandsList';\nimport _ from 'lodash';\nimport { notEmptyLength, isValidNumber, formatNumber } from '../../../common-function';\nimport Link from 'next/link';\nimport { routePaths } from '../../../route';\n\nfunction getWindowDimensions() {\n  var _window = window,\n      width = _window.innerWidth,\n      height = _window.innerHeight;\n  return {\n    width: width,\n    height: height\n  };\n}\n\nfunction useWindowDimensions() {\n  _s();\n\n  var _useState = useState(getWindowDimensions()),\n      windowDimensions = _useState[0],\n      setWindowDimensions = _useState[1];\n\n  useEffect(function () {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener(\"resize\", handleResize);\n    return function () {\n      return window.removeEventListener(\"resize\", handleResize);\n    };\n  }, []);\n  return windowDimensions;\n}\n\n_s(useWindowDimensions, \"XalQq70mIWrnM+6Jr3XornfayDc=\");\n\nvar MakeModal = function MakeModal(props) {\n  _s2();\n\n  var _useWindowDimensions = useWindowDimensions(),\n      height = _useWindowDimensions.height,\n      width = _useWindowDimensions.width;\n\n  var _useState2 = useState([]),\n      groupedCarBrandsList = _useState2[0],\n      setGroupedCarBrandsList = _useState2[1];\n\n  var _useState3 = useState(false),\n      modelVisible = _useState3[0],\n      setModelVisible = _useState3[1];\n\n  var _useState4 = useState([]),\n      options = _useState4[0],\n      setOptions = _useState4[1];\n\n  var _useState5 = useState(''),\n      searchKeyword = _useState5[0],\n      setSearchKeyword = _useState5[1];\n\n  var _useState6 = useState([]),\n      filteredOptions = _useState6[0],\n      setFilteredOptions = _useState6[1];\n\n  var _useState7 = useState({}),\n      selectedValue = _useState7[0],\n      setSelectedValue = _useState7[1];\n\n  var _useState8 = useState([]),\n      modelOptions = _useState8[0],\n      setModelOptions = _useState8[1];\n\n  var _useState9 = useState(false),\n      modelLoading = _useState9[0],\n      setModelLoading = _useState9[1];\n\n  useEffect(function () {\n    if (props.options != null && _.isArray(props.options)) {\n      var data = _.compact(_.map(carBrandsList, function (brand) {\n        var selectedOption = _.find(props.options, function (item) {\n          return _.toLower(item.value) == _.toLower(brand.value);\n        });\n\n        if (selectedOption) {\n          brand.count = selectedOption.count;\n          return brand;\n        } else {\n          return null;\n        }\n      }));\n\n      setOptions(data);\n    } else {\n      setOptions(carBrandsList);\n    }\n  }, [props.options]);\n  useEffect(function () {\n    if (!modelVisible) {\n      setSelectedValue({});\n      setModelOptions([]);\n    }\n  }, [modelVisible]);\n  useEffect(function () {\n    if (_.get(selectedValue, ['brand', 'value']) && props.showModel !== false) {\n      getModelOptions(_.get(selectedValue, ['brand', 'value']));\n    }\n  }, [selectedValue]);\n  useEffect(function () {\n    if (_.isArray(options) && notEmptyLength(options)) {\n      var data = _.reverse(_.sortBy(_.filter(options, function (option) {\n        if (searchKeyword) {\n          var keyword = new RegExp(searchKeyword, 'i');\n          return keyword.test(option.value);\n        } else {\n          return true;\n        }\n      }), ['count', 'value']));\n\n      setFilteredOptions(groupCarBrandsList(data));\n    } else {\n      setFilteredOptions(groupCarBrandsList(carBrandsList));\n    }\n  }, [options, searchKeyword]);\n\n  function groupCarBrandsList(data) {\n    var start = 'A';\n    var end = 'Z';\n    var groupedData = [];\n\n    if (notEmptyLength(data)) {\n      var _loop = function _loop(index) {\n        var selectedCarBrands = data.filter(function (brand) {\n          var firstLetter = _.upperCase(brand.value.substr(0, 1));\n\n          return firstLetter == String.fromCharCode(index);\n        });\n\n        if (notEmptyLength(selectedCarBrands)) {\n          var item = {\n            title: String.fromCharCode(index),\n            index: index,\n            data: selectedCarBrands\n          };\n          groupedData.push(item);\n        }\n      };\n\n      for (var index = start.charCodeAt(0); index <= end.charCodeAt(0); index++) {\n        _loop(index);\n      }\n\n      return groupedData;\n    } else {\n      return [];\n    }\n  }\n\n  function getModelOptions(make) {\n    if (make) {\n      setModelOptions([]);\n      setModelLoading(true);\n      Axios.get(\"\".concat(client.io.io.uri, \"priceRangeSearchUsed\"), {\n        params: {\n          match: {\n            make: make\n          }\n        }\n      }).then(function (res) {\n        setModelLoading(false);\n\n        if (notEmptyLength(res.data.usedCarPrice)) {\n          var uniqModels = _.filter(_.cloneDeep(_.uniqBy(res.data.usedCarPrice, 'model')));\n\n          setModelOptions(_.isArray(uniqModels) && notEmptyLength(uniqModels) ? uniqModels : []);\n          console.log(uniqModels);\n        } else {\n          setModelOptions([]);\n        }\n      })[\"catch\"](function (err) {\n        console.log(err);\n        setModelLoading(false);\n        setModelOptions([]);\n      });\n    } else {\n      setModelOptions([]);\n    }\n  } // useEffect(() => {\n  //     if (notEmptyLength(props.brands)) {\n  //         groupCarBrandsList(props.brands)\n  //     } else {\n  //         if (props.default) {\n  //             groupCarBrandsList(carBrandsList);\n  //         } else {\n  //             groupCarBrandsList(null);\n  //         }\n  //     }\n  // }, [props.brands]);\n  // function onSelect(value) {\n  //     if (props.onSelect) {\n  //         props.onSelect(value);\n  //     }\n  // }\n  // function groupCarBrandsList(data) {\n  //     let start = 'A';\n  //     let end = 'Z';\n  //     let groupedData = [];\n  //     if (notEmptyLength(data)) {\n  //         for (let index = start.charCodeAt(0); index <= end.charCodeAt(0); index++) {\n  //             let selectedCarBrands = data.filter(function (brand) {\n  //                 let firstLetter = _.upperCase(brand.value.substr(0, 1));\n  //                 return firstLetter == String.fromCharCode(index);\n  //             })\n  //             if (notEmptyLength(selectedCarBrands)) {\n  //                 let item = {\n  //                     title: String.fromCharCode(index),\n  //                     index: index,\n  //                     data: selectedCarBrands,\n  //                 }\n  //                 groupedData.push(item);\n  //             }\n  //         }\n  //         setGroupedCarBrandsList(groupedData);\n  //     } else {\n  //         setGroupedCarBrandsList([]);\n  //     }\n  // }\n\n\n  return (// <Row>\n    //     <Col span={24}>\n    //         <Menu className=\"brand\" defaultOpenKeys={['sub1']} mode=\"inline\">\n    //             {groupedCarBrandsList.map(function (item, parentsIndex) {\n    //                 return (\n    //                     <Menu.ItemGroup title={item.title} className=\"newcar-menu-header\" id={parentsIndex + 'direction'}>\n    //                         {item.data.map(function (row2, childIndex) {\n    //                             return (\n    //                                 <Menu.Item className={props.selected == _.toLower(row2.value) ? 'brandpics background-yellow-lighten-5' : \"brandpics\"} id={parentsIndex + '' + childIndex} key={parentsIndex + '' + childIndex}>\n    //                                     <Link shallow={false} href={routePaths.newCarFilter.to || '/'} as={typeof (routePaths.newCarFilter.as) == 'function' ? routePaths.newCarFilter.as({make : row2.value}) : '/'} passHref>\n    //                                         <a>\n    //                                             <div className={props.selected == _.toLower(row2.value) ? 'flex-items-align-center cursor-pointer ccar-yellow' : 'flex-items-align-center cursor-pointer'}\n    //                                                 onClick={(e) => { onSelect(row2.value) }}\n    //                                                 >\n    //                                                     <img src={row2.icon} />\n    //                                                     {row2.value}\n    //                                                 </div>\n    //                                             </a>\n    //                                     </Link>\n    //                                 </Menu.Item>\n    //                                 )\n    //                             })\n    //                             }\n    //                     </Menu.ItemGroup>\n    //                 )\n    //             })\n    //             }\n    //         </Menu>\n    //     </Col>\n    // </Row>\n    __jsx(Row, null, __jsx(Col, {\n      span: 24\n    }, __jsx(\"div\", null, __jsx(Menu, {\n      className: \"brand\",\n      defaultOpenKeys: ['sub1'],\n      mode: \"inline\"\n    }, filteredOptions.length > 0 ? filteredOptions.map(function (item, parentsIndex) {\n      return __jsx(Menu.ItemGroup, {\n        title: item.title,\n        className: \"newcar-menu-header\",\n        id: parentsIndex + 'direction'\n      }, item.data.map(function (row2, childIndex) {\n        return __jsx(Menu.Item, {\n          className: props.selected == _.toLower(row2.value) ? 'brandpics background-yellow-lighten-5' : \"brandpics\",\n          id: parentsIndex + '' + childIndex,\n          key: parentsIndex + '' + childIndex\n        }, __jsx(\"span\", {\n          className: \"d-inline-block cursor-pointer\",\n          onClick: function onClick(e) {\n            if (props.showModel !== false) {\n              setSelectedValue(_objectSpread(_objectSpread({}, selectedValue), {}, {\n                brand: row2\n              }));\n              setModelVisible(true);\n            } else {\n              if (props.onSelect) {\n                props.onSelect(row2);\n              }\n            }\n          }\n        }, __jsx(\"div\", {\n          className: props.selected == _.toLower(row2.value) ? 'flex-items-align-center cursor-pointer ccar-yellow' : 'flex-items-align-center cursor-pointer'\n        }, __jsx(\"img\", {\n          src: row2.icon\n        }), row2.value, props.showCount == false ? null : __jsx(\"div\", {\n          className: \"fill-parent flex-justify-end flex-items-align-center\",\n          style: {\n            marginLeft: '5px'\n          }\n        }, \"[\".concat(isValidNumber(row2.count) ? formatNumber(row2.count, null, false, 0, true) : 0, \"]\")))));\n      }));\n    }) : null))))\n  );\n};\n\n_s2(MakeModal, \"9pIEA6QBv7PR/shIUnCg6kmF9lM=\", false, function () {\n  return [useWindowDimensions];\n});\n\n_c = MakeModal;\nexport default MakeModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"MakeModal\");","map":{"version":3,"sources":["/Users/faraheen/ccar-cms-next-mobile/components/product-list/filter-modal/MakeModal.jsx"],"names":["React","useState","useEffect","Row","Col","Menu","InfiniteScroll","carBrandsList","_","notEmptyLength","isValidNumber","formatNumber","Link","routePaths","getWindowDimensions","window","width","innerWidth","height","innerHeight","useWindowDimensions","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener","MakeModal","props","groupedCarBrandsList","setGroupedCarBrandsList","modelVisible","setModelVisible","options","setOptions","searchKeyword","setSearchKeyword","filteredOptions","setFilteredOptions","selectedValue","setSelectedValue","modelOptions","setModelOptions","modelLoading","setModelLoading","isArray","data","compact","map","brand","selectedOption","find","item","toLower","value","count","get","showModel","getModelOptions","reverse","sortBy","filter","option","keyword","RegExp","test","groupCarBrandsList","start","end","groupedData","index","selectedCarBrands","firstLetter","upperCase","substr","String","fromCharCode","title","push","charCodeAt","make","Axios","client","io","uri","params","match","then","res","usedCarPrice","uniqModels","cloneDeep","uniqBy","console","log","err","length","parentsIndex","row2","childIndex","selected","e","onSelect","icon","showCount","marginLeft"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Row, Col, Menu } from 'antd';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport { carBrandsList } from '../../../params/carBrandsList';\nimport _ from 'lodash';\nimport { notEmptyLength, isValidNumber, formatNumber } from '../../../common-function';\nimport Link from 'next/link';\nimport { routePaths } from '../../../route';\n\n\nfunction getWindowDimensions() {\n    const { innerWidth: width, innerHeight: height } = window;\n    return {\n        width,\n        height\n    };\n}\n\nfunction useWindowDimensions() {\n    const [windowDimensions, setWindowDimensions] = useState(\n        getWindowDimensions()\n    );\n\n    useEffect(() => {\n        function handleResize() {\n            setWindowDimensions(getWindowDimensions());\n        }\n\n        window.addEventListener(\"resize\", handleResize);\n        return () => window.removeEventListener(\"resize\", handleResize);\n    }, []);\n\n    return windowDimensions;\n}\n\n\nconst MakeModal = (props) => {\n    const { height, width } = useWindowDimensions();\n    const [groupedCarBrandsList, setGroupedCarBrandsList] = useState([])\n    const [modelVisible, setModelVisible] = useState(false)\n    const [options, setOptions] = useState([])\n    const [searchKeyword, setSearchKeyword] = useState('')\n    const [filteredOptions, setFilteredOptions] = useState([])\n    const [selectedValue, setSelectedValue] = useState({});\n    const [modelOptions, setModelOptions] = useState([]);\n    const [modelLoading, setModelLoading] = useState(false);\n\n    useEffect(() => {\n        if (props.options != null && _.isArray(props.options)) {\n            let data = _.compact(_.map(carBrandsList, function (brand) {\n                let selectedOption = _.find(props.options, function (item) {\n                    return _.toLower(item.value) == _.toLower(brand.value);\n                })\n                if (selectedOption) {\n                    brand.count = selectedOption.count;\n                    return brand;\n                } else {\n                    return null;\n                }\n            }))\n            setOptions(data)\n        } else {\n            setOptions(carBrandsList);\n        }\n    }, [props.options])\n\n    useEffect(() => {\n        if (!modelVisible) {\n            setSelectedValue({});\n            setModelOptions([]);\n        }\n\n    }, [modelVisible])\n\n\n    useEffect(() => {\n\n        if (_.get(selectedValue, ['brand', 'value']) && props.showModel !== false) {\n            getModelOptions(_.get(selectedValue, ['brand', 'value']));\n        }\n\n    }, [selectedValue])\n\n    useEffect(() => {\n        if (_.isArray(options) && notEmptyLength(options)) {\n            let data = _.reverse(_.sortBy(_.filter(options, function (option) {\n                if (searchKeyword) {\n                    let keyword = new RegExp(searchKeyword, 'i');\n                    return keyword.test(option.value);\n                } else {\n                    return true;\n                }\n            }), ['count', 'value']))\n            setFilteredOptions(groupCarBrandsList(data))\n        } else {\n            setFilteredOptions(groupCarBrandsList(carBrandsList));\n        }\n    }, [options, searchKeyword])\n\n\n    function groupCarBrandsList(data) {\n\n        let start = 'A';\n        let end = 'Z';\n        let groupedData = [];\n\n\n        if (notEmptyLength(data)) {\n            for (let index = start.charCodeAt(0); index <= end.charCodeAt(0); index++) {\n                let selectedCarBrands = data.filter(function (brand) {\n                    let firstLetter = _.upperCase(brand.value.substr(0, 1));\n                    return firstLetter == String.fromCharCode(index);\n                })\n\n                if (notEmptyLength(selectedCarBrands)) {\n                    let item = {\n                        title: String.fromCharCode(index),\n                        index: index,\n                        data: selectedCarBrands,\n                    }\n                    groupedData.push(item);\n                }\n            }\n            return groupedData;\n        } else {\n            return [];\n        }\n    }\n\n    function getModelOptions(make) {\n\n        if (make) {\n            setModelOptions([]);\n            setModelLoading(true);\n\n            Axios.get(`${client.io.io.uri}priceRangeSearchUsed`,\n                {\n                    params: {\n                        match: {\n                            make: make\n                        },\n                    }\n                }\n            ).then((res) => {\n                setModelLoading(false);\n                if (notEmptyLength(res.data.usedCarPrice)) {\n                    let uniqModels = _.filter(_.cloneDeep(_.uniqBy(res.data.usedCarPrice, 'model')));\n                    setModelOptions(_.isArray(uniqModels) && notEmptyLength(uniqModels) ? uniqModels : []);\n                    console.log(uniqModels);\n                } else {\n                    setModelOptions([])\n                }\n            })\n                .catch((err) => {\n                    console.log(err);\n                    setModelLoading(false);\n                    setModelOptions([]);\n                })\n        } else {\n            setModelOptions([]);\n        }\n    }\n\n    // useEffect(() => {\n\n    //     if (notEmptyLength(props.brands)) {\n    //         groupCarBrandsList(props.brands)\n    //     } else {\n    //         if (props.default) {\n    //             groupCarBrandsList(carBrandsList);\n    //         } else {\n    //             groupCarBrandsList(null);\n    //         }\n    //     }\n    // }, [props.brands]);\n\n    // function onSelect(value) {\n    //     if (props.onSelect) {\n    //         props.onSelect(value);\n    //     }\n    // }\n    // function groupCarBrandsList(data) {\n\n    //     let start = 'A';\n    //     let end = 'Z';\n    //     let groupedData = [];\n\n\n    //     if (notEmptyLength(data)) {\n    //         for (let index = start.charCodeAt(0); index <= end.charCodeAt(0); index++) {\n    //             let selectedCarBrands = data.filter(function (brand) {\n    //                 let firstLetter = _.upperCase(brand.value.substr(0, 1));\n    //                 return firstLetter == String.fromCharCode(index);\n    //             })\n\n    //             if (notEmptyLength(selectedCarBrands)) {\n    //                 let item = {\n    //                     title: String.fromCharCode(index),\n    //                     index: index,\n    //                     data: selectedCarBrands,\n    //                 }\n    //                 groupedData.push(item);\n    //             }\n    //         }\n\n    //         setGroupedCarBrandsList(groupedData);\n    //     } else {\n    //         setGroupedCarBrandsList([]);\n    //     }\n    // }\n\n    return (\n        // <Row>\n        //     <Col span={24}>\n        //         <Menu className=\"brand\" defaultOpenKeys={['sub1']} mode=\"inline\">\n        //             {groupedCarBrandsList.map(function (item, parentsIndex) {\n        //                 return (\n        //                     <Menu.ItemGroup title={item.title} className=\"newcar-menu-header\" id={parentsIndex + 'direction'}>\n        //                         {item.data.map(function (row2, childIndex) {\n        //                             return (\n        //                                 <Menu.Item className={props.selected == _.toLower(row2.value) ? 'brandpics background-yellow-lighten-5' : \"brandpics\"} id={parentsIndex + '' + childIndex} key={parentsIndex + '' + childIndex}>\n        //                                     <Link shallow={false} href={routePaths.newCarFilter.to || '/'} as={typeof (routePaths.newCarFilter.as) == 'function' ? routePaths.newCarFilter.as({make : row2.value}) : '/'} passHref>\n        //                                         <a>\n        //                                             <div className={props.selected == _.toLower(row2.value) ? 'flex-items-align-center cursor-pointer ccar-yellow' : 'flex-items-align-center cursor-pointer'}\n        //                                                 onClick={(e) => { onSelect(row2.value) }}\n        //                                                 >\n        //                                                     <img src={row2.icon} />\n        //                                                     {row2.value}\n        //                                                 </div>\n        //                                             </a>\n        //                                     </Link>\n        //                                 </Menu.Item>\n        //                                 )\n        //                             })\n        //                             }\n        //                     </Menu.ItemGroup>\n        //                 )\n        //             })\n        //             }\n        //         </Menu>\n        //     </Col>\n        // </Row>\n\n        <Row>\n            <Col span={24}>\n                <div>\n                    <Menu className=\"brand\" defaultOpenKeys={['sub1']} mode=\"inline\">\n                        {\n                            filteredOptions.length > 0 ?\n                                filteredOptions.map(function (item, parentsIndex) {\n                                    return (\n                                        <Menu.ItemGroup title={item.title} className=\"newcar-menu-header\" id={parentsIndex + 'direction'}>\n                                            {item.data.map(function (row2, childIndex) {\n                                                return (\n                                                    <Menu.Item className={props.selected == _.toLower(row2.value) ? 'brandpics background-yellow-lighten-5' : \"brandpics\"} id={parentsIndex + '' + childIndex} key={parentsIndex + '' + childIndex}>\n                                                        <span className=\"d-inline-block cursor-pointer\" onClick={(e) => {\n\n                                                                if(props.showModel !== false){\n                                                                    setSelectedValue({\n                                                                        ...selectedValue,\n                                                                        brand: row2,\n                                                                    })\n                                                                    setModelVisible(true);\n                                                                }else{\n                                                                    if(props.onSelect){\n                                                                        props.onSelect(row2)\n                                                                    }\n                                                                }\n                                                            }}>\n                                                                <div className={props.selected == _.toLower(row2.value) ? 'flex-items-align-center cursor-pointer ccar-yellow' : 'flex-items-align-center cursor-pointer'}\n                                                                >\n                                                                    <img src={row2.icon} />\n                                                                    {row2.value}\n                                                                    {\n                                                                        props.showCount == false ?\n                                                                            null\n                                                                            :\n                                                                            <div className=\"fill-parent flex-justify-end flex-items-align-center\" style={{ marginLeft: '5px' }}>\n                                                                                {`[${isValidNumber(row2.count) ? formatNumber(row2.count, null, false, 0, true) : 0}]`}\n                                                                            </div>\n                                                                    }\n                                                                </div>\n                                                            </span>\n                                                        </Menu.Item>\n                                                    )\n                                                })\n                                                }\n                                            </Menu.ItemGroup>\n                                        )\n                                    })\n                                    :\n                                    null\n                            }\n                        </Menu>\n                    </div>\n                </Col>\n            </Row>\n    );\n}\n\nexport default MakeModal;"]},"metadata":{},"sourceType":"module"}