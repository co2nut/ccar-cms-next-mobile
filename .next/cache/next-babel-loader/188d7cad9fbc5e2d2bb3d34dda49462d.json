{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { DownOutlined, UpOutlined } from '@ant-design/icons';\nimport { Button, Col, Empty, Form, Icon, Input, message, Row } from 'antd';\nimport _ from 'lodash';\nimport React, { useEffect, useState } from 'react'; // import UserAvatar from './user-avatar';\n// import UserAvatar from '../carFreak/components/user-avatar';\n\nimport Scrollbars from 'react-custom-scrollbars';\nimport { connect } from 'react-redux';\nimport client from '../../feathers';\nimport UserAvatar from './user-avatarCCARLive';\nimport { isValidNumber, notEmptyLength, objectRemoveEmptyValue, viewPort } from '../../common-function';\nimport { withRouter } from 'next/router';\nimport { loading } from '../../redux/actions/app-actions';\nimport { setUser } from '../../redux/actions/user-actions';\nvar itemCol = {\n  xs: 6,\n  sm: 6,\n  md: 4,\n  lg: 2,\n  xl: 2,\n  xxl: 2\n};\nvar BROADCASTER_LIMIT = 40;\n\nvar BroadcasterListScroll = function BroadcasterListScroll(props) {\n  _s();\n\n  var _useState = useState([]),\n      broadcasters = _useState[0],\n      setBroadcasters = _useState[1];\n\n  var _useState2 = useState([]),\n      defaultBroadcasters = _useState2[0],\n      setDefaultBroadcasters = _useState2[1];\n\n  var _useState3 = useState([]),\n      activeBroadcasters = _useState3[0],\n      setActiveBroadcasters = _useState3[1];\n\n  var _useState4 = useState(''),\n      searchWord = _useState4[0],\n      setSearchWord = _useState4[1];\n\n  useEffect(function () {\n    if (_.isArray(props.broadcasters)) {\n      setDefaultBroadcasters(props.broadcasters);\n    } else {\n      getDefaultBroadCasters();\n    }\n  }, [props.broadcasters]);\n  useEffect(function () {\n    if (_.isArray(props.activeBroadcasters) && notEmptyLength(props.activeBroadcasters)) {\n      setActiveBroadcasters(props.activeBroadcasters);\n    } else {\n      setActiveBroadcasters([]);\n    }\n  }, [props.activeBroadcasters]);\n  useEffect(function () {\n    setBroadcasters(reorderActiveBroadcaster(filterSearchWord(defaultBroadcasters), activeBroadcasters));\n  }, [searchWord, activeBroadcasters, defaultBroadcasters]);\n\n  function getDefaultBroadCasters() {\n    client.service('users').find({\n      query: {\n        allowLive: 'yes' // $limit: BROADCASTER_LIMIT,\n\n      }\n    }).then(function (res) {\n      if (notEmptyLength(res.data)) {\n        setDefaultBroadcasters(res.data);\n      } else {\n        setDefaultBroadcasters([]);\n      }\n    })[\"catch\"](function (err) {\n      message.error(err.message);\n    });\n  }\n\n  function reorderActiveBroadcaster(broadcasters, activeBroadcasters) {\n    if (_.isArray(activeBroadcasters) && notEmptyLength(broadcasters)) {\n      //Put Active Broadcaster to front\n      var newData = _.sortBy(broadcasters, function (broadcaster) {\n        return isActiveBroadcaster(broadcaster) ? -1 : 1;\n      });\n\n      return newData;\n    } else {\n      return broadcasters;\n    }\n  }\n\n  function filterSearchWord(broadcasters) {\n    if (_.isArray(broadcasters) && notEmptyLength(broadcasters) && searchWord != null) {\n      try {\n        var newData = _.filter(broadcasters, function (item) {\n          if (!item.name) {\n            item.name = \"\".concat(item.firstName ? item.firstName : '', \" \").concat(item.lastName ? item.lastName : '');\n          }\n\n          var regex = new RegExp(\"^\".concat(searchWord), 'i');\n          return regex.test(item.name);\n        });\n\n        return newData;\n      } catch (_unused) {\n        return [];\n      }\n    } else {\n      return broadcasters;\n    }\n  }\n\n  function isActiveBroadcaster(broadcaster) {\n    if (_.isPlainObject(broadcaster) && notEmptyLength(objectRemoveEmptyValue(broadcaster))) {\n      return _.some(activeBroadcasters, function (activeBroadcaster) {\n        return activeBroadcaster.dealerDbId == broadcaster._id;\n      });\n    } else {\n      return false;\n    }\n  }\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    id: \"broadcaster-list-container\",\n    className: \"width-100 height-100 \".concat(props.className ? props.className : ''),\n    style: _objectSpread({}, props.style)\n  }, props.allowSearch != null && props.allowSearch == true ? __jsx(Col, {\n    xs: 24,\n    sm: 24,\n    md: 24,\n    lg: 24,\n    xl: 24\n  }, __jsx(\"div\", {\n    className: \"width-30 round-border-big thin-border padding-x-sm padding-y-xs margin-bottom-lg\"\n  }, __jsx(Input, {\n    placeholder: \"Search\",\n    className: \"no-border-input\",\n    size: \"small\",\n    compact: true,\n    suffix: __jsx(Icon, {\n      type: \"search\"\n    }),\n    onChange: function onChange(e) {\n      setSearchWord(e.target.value);\n    }\n  }))) : null, __jsx(Scrollbars, {\n    autoHeight: true\n  }, _.isArray(broadcasters) && notEmptyLength(broadcasters) ? _.map(broadcasters, function (broadcaster) {\n    return __jsx(\"span\", {\n      className: \"relative-wrapper d-inline-block \".concat(isActiveBroadcaster(broadcaster) ? 'cursor-pointer' : 'cursor-not-allowed', \" width-100\"),\n      onClick: function onClick(e) {\n        var selectedActiveBroadcaster = _.find(activeBroadcasters, function (activeBroadcaster) {\n          return activeBroadcaster.dealerDbId == broadcaster._id;\n        });\n\n        if (!selectedActiveBroadcaster || !selectedActiveBroadcaster.dealerSocketId) {// props.router.push(`/live-streamer/${broadcaster._id}`)\n        } else {\n          //donar it manages the routes\n          props.router.push(\"/live/\".concat(selectedActiveBroadcaster.dealerSocketId), undefined, {\n            shallow: true\n          });\n        }\n      }\n    }, __jsx(UserAvatar, {\n      isBroadcastersList: true,\n      avatarClassName: \"\".concat(isActiveBroadcaster(broadcaster) ? 'border-red' : 'border-grey cursor-not-allowed', \" \").concat(props.avatarClassName ? props.avatarClassName : ''),\n      avatarStyle: isActiveBroadcaster(broadcaster) ? {\n        borderWidth: 'thick'\n      } : {},\n      className: \"\".concat(isActiveBroadcaster(broadcaster) ? '' : 'cursor-not-allowed'),\n      size: isValidNumber(props.size) ? props.size : 50,\n      showName: !props.showName || props.showName == false ? false : true,\n      textClassName: \"text-truncate margin-top-md \".concat(props.textClassName ? props.textClassName : ''),\n      data: broadcaster\n    }));\n  }) : __jsx(\"div\", {\n    className: \"width-100\"\n  }, __jsx(Empty, null)))));\n};\n\n_s(BroadcasterListScroll, \"L7dd6/RPv70CeHC5GBLlV4/0Us0=\");\n\n_c = BroadcasterListScroll;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    app: state.app,\n    user: state.user\n  };\n};\n\nvar mapDispatchToProps = {\n  loading: loading,\n  setUser: setUser\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Form.create()(withRouter(BroadcasterListScroll)));\n\nvar _c;\n\n$RefreshReg$(_c, \"BroadcasterListScroll\");","map":{"version":3,"sources":["/Users/faraheen/ccar-cms-next-mobile/components/live/BroadCasterListScroll.jsx"],"names":["DownOutlined","UpOutlined","Button","Col","Empty","Form","Icon","Input","message","Row","_","React","useEffect","useState","Scrollbars","connect","client","UserAvatar","isValidNumber","notEmptyLength","objectRemoveEmptyValue","viewPort","withRouter","loading","setUser","itemCol","xs","sm","md","lg","xl","xxl","BROADCASTER_LIMIT","BroadcasterListScroll","props","broadcasters","setBroadcasters","defaultBroadcasters","setDefaultBroadcasters","activeBroadcasters","setActiveBroadcasters","searchWord","setSearchWord","isArray","getDefaultBroadCasters","reorderActiveBroadcaster","filterSearchWord","service","find","query","allowLive","then","res","data","err","error","newData","sortBy","broadcaster","isActiveBroadcaster","filter","item","name","firstName","lastName","regex","RegExp","test","isPlainObject","some","activeBroadcaster","dealerDbId","_id","className","style","allowSearch","e","target","value","map","selectedActiveBroadcaster","dealerSocketId","router","push","undefined","shallow","avatarClassName","borderWidth","size","showName","textClassName","mapStateToProps","state","app","user","mapDispatchToProps","create"],"mappings":"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","sourcesContent":["import { DownOutlined, UpOutlined } from '@ant-design/icons';\nimport { Button, Col, Empty, Form, Icon, Input, message, Row } from 'antd';\nimport _ from 'lodash';\nimport React, { useEffect, useState } from 'react';\n// import UserAvatar from './user-avatar';\n// import UserAvatar from '../carFreak/components/user-avatar';\nimport Scrollbars from 'react-custom-scrollbars';\nimport { connect } from 'react-redux';\nimport client from '../../feathers';\nimport UserAvatar from './user-avatarCCARLive';\nimport { isValidNumber, notEmptyLength, objectRemoveEmptyValue, viewPort } from '../../common-function';\nimport { withRouter } from 'next/router';\nimport { loading } from '../../redux/actions/app-actions';\nimport { setUser } from '../../redux/actions/user-actions';\n\n\nconst itemCol = {\n    xs: 6,\n    sm: 6,\n    md: 4,\n    lg: 2,\n    xl: 2,\n    xxl: 2,\n}\n\nconst BROADCASTER_LIMIT = 40;\n\nconst BroadcasterListScroll = (props) => {\n\n    const [broadcasters, setBroadcasters] = useState([])\n    const [defaultBroadcasters, setDefaultBroadcasters] = useState([])\n    const [activeBroadcasters, setActiveBroadcasters] = useState([])\n    const [searchWord, setSearchWord] = useState('');\n\n\n\n\n    useEffect(() => {\n        if (_.isArray(props.broadcasters)) {\n            setDefaultBroadcasters(props.broadcasters);\n        } else {\n            getDefaultBroadCasters();\n        }\n    }, [props.broadcasters])\n\n    useEffect(() => {\n        if (_.isArray(props.activeBroadcasters) && notEmptyLength(props.activeBroadcasters)) {\n            setActiveBroadcasters(props.activeBroadcasters);\n        } else {\n            setActiveBroadcasters([]);\n        }\n    }, [props.activeBroadcasters])\n\n\n    useEffect(() => {\n\n        setBroadcasters(reorderActiveBroadcaster(filterSearchWord(defaultBroadcasters), activeBroadcasters));\n\n    }, [searchWord, activeBroadcasters, defaultBroadcasters])\n\n\n    function getDefaultBroadCasters() {\n        client.service('users').find({\n            query: {\n                allowLive: 'yes',\n                // $limit: BROADCASTER_LIMIT,\n            }\n        }).then(res => {\n            if (notEmptyLength(res.data)) {\n                setDefaultBroadcasters(res.data);\n            } else {\n                setDefaultBroadcasters([]);\n            }\n        }).catch(err => {\n            message.error(err.message)\n        });\n    }\n\n    function reorderActiveBroadcaster(broadcasters, activeBroadcasters) {\n\n        if (_.isArray(activeBroadcasters) && notEmptyLength(broadcasters)) {\n            //Put Active Broadcaster to front\n            let newData = _.sortBy(broadcasters, function (broadcaster) {\n                return isActiveBroadcaster(broadcaster) ? -1 : 1;\n            })\n            return newData;\n        } else {\n            return broadcasters;\n        }\n    }\n\n    function filterSearchWord(broadcasters) {\n        if (_.isArray(broadcasters) && notEmptyLength(broadcasters) && searchWord != null) {\n            try {\n                let newData = _.filter(broadcasters, function (item) {\n                    if (!item.name) {\n                        item.name = `${item.firstName ? item.firstName : ''} ${item.lastName ? item.lastName : ''}`\n                    }\n                    let regex = new RegExp(`^${searchWord}`, 'i');\n                    return regex.test(item.name);\n                })\n                return newData;\n            } catch {\n                return [];\n            }\n        } else {\n            return broadcasters;\n        }\n    }\n\n    function isActiveBroadcaster(broadcaster) {\n        if (_.isPlainObject(broadcaster) && notEmptyLength(objectRemoveEmptyValue(broadcaster))) {\n            return _.some(activeBroadcasters, function (activeBroadcaster) {\n                return activeBroadcaster.dealerDbId == broadcaster._id\n            })\n        } else {\n            return false;\n        }\n    }\n\n    return (\n        <React.Fragment>\n            <div id=\"broadcaster-list-container\" className={`width-100 height-100 ${props.className ? props.className : ''}`} style={{ ...props.style }}>\n\n                {\n                    props.allowSearch != null && props.allowSearch == true ?\n                        <Col xs={24} sm={24} md={24} lg={24} xl={24}>\n                            <div className='width-30 round-border-big thin-border padding-x-sm padding-y-xs margin-bottom-lg'>\n                                <Input placeholder=\"Search\" className='no-border-input' size=\"small\" compact suffix={<Icon type=\"search\" />} onChange={(e) => { setSearchWord(e.target.value) }} ></Input>\n                            </div>\n                        </Col>\n                        :\n                        null\n\n                }\n\n                <Scrollbars autoHeight> \n                        {\n                            _.isArray(broadcasters) && notEmptyLength(broadcasters) ?\n                                _.map(broadcasters, function (broadcaster) {\n                                    return (\n                                        <span className={`relative-wrapper d-inline-block ${isActiveBroadcaster(broadcaster) ? 'cursor-pointer' : 'cursor-not-allowed'} width-100`} onClick={(e) => {\n                                            let selectedActiveBroadcaster = _.find(activeBroadcasters, function (activeBroadcaster) {\n                                                return activeBroadcaster.dealerDbId == broadcaster._id;\n                                            })\n                                            if (!selectedActiveBroadcaster || !selectedActiveBroadcaster.dealerSocketId) {\n                                                // props.router.push(`/live-streamer/${broadcaster._id}`)\n                                            }\n                                            else {\n                                                //donar it manages the routes\n                                                props.router.push(`/live/${selectedActiveBroadcaster.dealerSocketId}`, undefined, { shallow: true })\n                                            }\n                                        }}>\n                                            <UserAvatar\n                                                isBroadcastersList={true}\n                                                avatarClassName={`${isActiveBroadcaster(broadcaster) ? 'border-red' : 'border-grey cursor-not-allowed'} ${props.avatarClassName ? props.avatarClassName : ''}`}\n                                                avatarStyle={isActiveBroadcaster(broadcaster) ? { borderWidth: 'thick' } : {}}\n                                                className={`${isActiveBroadcaster(broadcaster) ? '' : 'cursor-not-allowed'}`}\n                                                size={isValidNumber(props.size) ? props.size : 50}\n                                                showName={!props.showName || props.showName == false ? false : true}\n                                                textClassName={`text-truncate margin-top-md ${props.textClassName ? props.textClassName : ''}`}\n                                                data={broadcaster} />\n                                            {/* {\n                                                isActiveBroadcaster(broadcaster) ?\n                                                    <span className='d-inline-block background-red white text-align-center round-border width-50' style={{ padding: 3, fontSize: 12, position: 'absolute', top: (isValidNumber(props.size) ? props.size : 80) - (isValidNumber(props.size) ? props.size : 80) * 0.2, left: 0, right: 0, margin: 'auto' }} >\n                                                        Live\n                                                        </span>\n                                                    :\n                                                    <span className='d-inline-block background-grey white text-align-center round-border width-50' style={{ padding: 3, fontSize: 12, position: 'absolute', top: (isValidNumber(props.size) ? props.size : 80) - (isValidNumber(props.size) ? props.size : 80) * 0.2, left: 0, right: 0, margin: 'auto' }} >\n                                                        Live\n                                                        </span>\n                                            } */}\n                                        </span>\n                                    )\n                                })\n                                :\n                                <div className=\"width-100\">\n                                    <Empty></Empty>\n                                </div>\n                        }\n                </Scrollbars>\n            </div>\n        </React.Fragment>\n    )\n}\n\n\nconst mapStateToProps = state => ({\n    app: state.app,\n    user: state.user,\n});\n\nconst mapDispatchToProps = {\n    loading: loading,\n    setUser: setUser,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Form.create()(withRouter(BroadcasterListScroll)));"]},"metadata":{},"sourceType":"module"}