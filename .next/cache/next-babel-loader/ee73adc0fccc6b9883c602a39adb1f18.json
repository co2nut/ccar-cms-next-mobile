{"ast":null,"code":"var __jsx = React.createElement;\nimport { Button, Form, Icon, message, Modal } from 'antd';\nimport _ from 'lodash';\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport client from '../../feathers';\nimport { withRouter } from 'next/router';\nimport { notEmptyLength } from '../../common-function';\nimport { loginMode } from '../../redux/actions/app-actions';\n\nconst FollowButton = props => {\n  const {\n    0: follow,\n    1: setFollowButton\n  } = useState([]);\n  const {\n    0: confirmModalState,\n    1: setConfirmModalState\n  } = useState(false);\n  const {\n    0: isFollowed,\n    1: setIsFollowed\n  } = useState(false);\n  useEffect(() => {\n    init();\n  }, [props.followerId, props[props.type + 'Id']]);\n\n  function init() {\n    if (!_.isEmpty(props.followerId) && !_.isEmpty(props[props.type + 'Id'])) {\n      let query = {};\n      query[props.type + 'Id'] = props[props.type + 'Id'];\n      query.type = props.type;\n      query.followerId = props.followerId;\n      client.service('follows').find({\n        query: query\n      }).then(res => {\n        if (notEmptyLength(res.data)) {\n          setFollowButton(res.data[0]);\n          setIsFollowed(true);\n        } else {\n          setFollowButton(null);\n          setIsFollowed(false);\n        }\n      }).catch(err => {\n        message.error(err.message);\n      });\n    }\n  }\n\n  function handleSuccess(success) {\n    setConfirmModalState(false);\n\n    if (props.handleSuccess) {\n      props.handleSuccess(success);\n    }\n  }\n\n  function handleError(error) {\n    setConfirmModalState(false);\n\n    if (props.handleError) {\n      props.handleError(error);\n    }\n  }\n\n  function handleSubmit() {\n    if (!_.isEmpty(props.followerId) && !_.isEmpty(props[props.type + 'Id'])) {\n      let promises = [];\n      promises.push(client.authenticate());\n\n      if (!isFollowed) {\n        let data = {};\n        data.type = props.type;\n        data.followerId = props.followerId;\n        data[props.type + 'Id'] = props[props.type + 'Id'];\n        data.actionType = `follow${_.capitalize(props.type)}`;\n        promises.push(client.service('follows').create(data));\n      } else {\n        promises.push(client.service('follows').remove(follow._id));\n      } //Write in follow model\n\n\n      Promise.all(promises).then(([auth, followRes]) => {\n        handleSuccess({\n          type: isFollowed ? 'remove' : 'save',\n          data: followRes\n        });\n\n        if (props.notify) {\n          message.success(isFollowed ? 'Unfollowed' : 'Followed');\n        }\n\n        init();\n      }).catch(error => {\n        handleError({\n          message: \"Follow Failed\"\n        });\n\n        if (props.notify) {\n          message.error('Follow Failed');\n        }\n      });\n    } else {\n      if (props.notify) {\n        message.error('Something Went Wrong!');\n      }\n\n      handleError({\n        message: \"Something Went Wrong!\"\n      });\n    }\n  }\n\n  ;\n\n  function handleChange() {\n    if (!props.followerId) {\n      handleError({\n        message: 'Please login to follow.'\n      });\n      props.loginMode(true);\n      return null;\n    }\n\n    if (!props[props.type + 'Id']) {\n      handleError({\n        message: 'Item not found!'\n      });\n      return null;\n    }\n\n    if (isFollowed) {\n      setConfirmModalState(true);\n    } else {\n      handleSubmit();\n    }\n  }\n\n  return __jsx(\"span\", {\n    className: props.className ? props.className : null,\n    style: props.style ? props.style : null\n  }, __jsx(Modal, {\n    visible: confirmModalState,\n    title: \"Are you sure?\",\n    maskClosable: true,\n    centered: true,\n    onOk: e => {\n      handleSubmit();\n      setConfirmModalState(false);\n    },\n    onCancel: e => {\n      setConfirmModalState(false);\n    }\n  }, __jsx(\"div\", null, props.description || 'Do you want to unfollow?')), _.get(props, ['userId']) == _.get(props.user, ['info', 'user', '_id']) ? null : isFollowed ? __jsx(\"a\", {\n    onClick: () => {\n      handleChange();\n    }\n  }, props.followingButton ? props.followingButton() : __jsx(\"span\", null, __jsx(Icon, {\n    type: \"check\",\n    style: {\n      color: '#F57F17'\n    },\n    className: \"margin-right-xs\"\n  }), \"Following\")) : __jsx(\"a\", {\n    onClick: () => {\n      handleChange();\n    }\n  }, props.followButton ? props.followButton() : __jsx(Button, null, \"+ Follow\")));\n};\n\nconst mapStateToProps = state => ({\n  app: state.app,\n  user: state.user\n});\n\nconst mapDispatchToProps = {\n  loginMode: loginMode\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Form.create()(withRouter(FollowButton)));","map":{"version":3,"sources":["/Users/faraheen/ccar-cms-next-mobile/components/profile/FollowButton.jsx"],"names":["Button","Form","Icon","message","Modal","_","React","useEffect","useState","connect","client","withRouter","notEmptyLength","loginMode","FollowButton","props","follow","setFollowButton","confirmModalState","setConfirmModalState","isFollowed","setIsFollowed","init","followerId","type","isEmpty","query","service","find","then","res","data","catch","err","error","handleSuccess","success","handleError","handleSubmit","promises","push","authenticate","actionType","capitalize","create","remove","_id","Promise","all","auth","followRes","notify","handleChange","className","style","e","description","get","user","followingButton","color","followButton","mapStateToProps","state","app","mapDispatchToProps"],"mappings":"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","sourcesContent":["import { Button, Form, Icon, message, Modal } from 'antd';\nimport _ from 'lodash';\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport client from '../../feathers';\nimport { withRouter } from 'next/router';\nimport { notEmptyLength } from '../../common-function';\nimport { loginMode } from '../../redux/actions/app-actions';\n\n\n\nconst FollowButton = (props) => {\n\n\n    const [follow, setFollowButton] = useState([]);\n    const [confirmModalState, setConfirmModalState] = useState(false);\n    const [isFollowed, setIsFollowed] = useState(false);\n\n    useEffect(() => {\n        init();\n    }, [props.followerId, props[props.type + 'Id']])\n\n    function init() {\n        if (!_.isEmpty(props.followerId) && !_.isEmpty(props[props.type + 'Id'])) {\n            let query = {};\n            query[props.type + 'Id'] = props[props.type + 'Id'];\n            query.type = props.type;\n            query.followerId = props.followerId\n\n            client.service('follows').find({\n                query: query\n            }).then(res => {\n                if (notEmptyLength(res.data)) {\n                    setFollowButton(res.data[0])\n                    setIsFollowed(true);\n                } else {\n                    setFollowButton(null)\n                    setIsFollowed(false);\n                }\n            }).catch(err => {\n                message.error(err.message)\n            });\n        }\n    }\n\n    function handleSuccess(success) {\n        setConfirmModalState(false);\n        if (props.handleSuccess) {\n            props.handleSuccess(success);\n        }\n    }\n\n\n    function handleError(error) {\n        setConfirmModalState(false);\n        if (props.handleError) {\n            props.handleError(error);\n        }\n    }\n\n    function handleSubmit() {\n        if (!_.isEmpty(props.followerId) && !_.isEmpty(props[props.type + 'Id'])) {\n            let promises = [];\n            promises.push(client.authenticate());\n            if (!isFollowed) {\n                let data = {}\n                data.type = props.type;\n                data.followerId = props.followerId;\n                data[props.type + 'Id'] = props[props.type + 'Id'];\n                data.actionType = `follow${_.capitalize(props.type)}`\n                promises.push(client.service('follows').create(data))\n            } else {\n                promises.push(client.service('follows').remove(follow._id))\n            }\n\n            //Write in follow model\n            Promise.all(promises).then(([auth, followRes]) => {\n                handleSuccess({\n                    type: isFollowed ? 'remove' : 'save',\n                    data: followRes\n                });\n                if (props.notify) {\n                    message.success(isFollowed ? 'Unfollowed' : 'Followed')\n                }\n\n                init();\n\n            }).catch(error => {\n                handleError({ message: \"Follow Failed\" })\n                if (props.notify) {\n                    message.error('Follow Failed')\n                }\n\n            })\n        } else {\n            if (props.notify) {\n                message.error('Something Went Wrong!')\n            }\n            handleError({ message: \"Something Went Wrong!\" })\n\n        }\n\n\n    };\n\n    function handleChange() {\n\n\n        if (!props.followerId) {\n            handleError({ message: 'Please login to follow.' });\n            props.loginMode(true);\n            return null;\n        }\n\n        if (!props[props.type + 'Id']) {\n            handleError({ message: 'Item not found!' });\n            return null;\n        }\n\n        if (isFollowed) {\n            setConfirmModalState(true);\n        } else {\n            handleSubmit();\n        }\n\n    }\n\n\n\n    return (\n\n        <span className={props.className ? props.className : null} style={props.style ? props.style : null}>\n            <Modal\n                visible={confirmModalState}\n                title=\"Are you sure?\"\n                maskClosable={true}\n                centered={true}\n                onOk={(e) => { handleSubmit(); setConfirmModalState(false); }}\n                onCancel={(e) => { setConfirmModalState(false) }}\n            >\n                <div>\n                    {props.description || 'Do you want to unfollow?'}\n\n                </div>\n            </Modal>\n\n            {\n                _.get(props, ['userId']) == _.get(props.user, ['info', 'user', '_id']) ?\n                    null\n                    :\n                    isFollowed ?\n                        <a onClick={() => { handleChange() }}>\n\n                            {\n                                props.followingButton ?\n                                    props.followingButton()\n                                    :\n                                    <span>\n                                        <Icon type=\"check\" style={{ color: '#F57F17' }} className=\"margin-right-xs\" />\n                                    Following\n                                </span>\n                            }\n                        </a>\n                        :\n                        <a onClick={() => { handleChange() }}>\n                            {\n                                props.followButton ?\n                                    props.followButton()\n                                    :\n                                    <Button>+ Follow</Button>\n                            }\n                        </a>\n            }\n\n        </span>\n    );\n}\n\n\nconst mapStateToProps = state => ({\n    app: state.app,\n    user: state.user,\n});\n\nconst mapDispatchToProps = {\n    loginMode: loginMode,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Form.create()(withRouter(FollowButton)));"]},"metadata":{},"sourceType":"module"}