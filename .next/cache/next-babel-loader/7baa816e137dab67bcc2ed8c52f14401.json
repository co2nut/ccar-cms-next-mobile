{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport _ from 'lodash';\nimport axios from 'axios';\nimport client from '../feathers';\nimport { isValidNumber, notEmptyLength, convertToRangeFormat, convertRangeFormatBack, convertFilterRange, objectRemoveEmptyValue } from '../common-function';\nvar PAGESIZE = 30;\n\nvar distinctArr = function distinctArr(value, index, self) {\n  return self.indexOf(value) === index;\n};\n\nexport default function (_x, _x2) {\n  return _ref.apply(this, arguments);\n}\n\nfunction _ref() {\n  _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(data, limit) {\n    var andFilter, match;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!_.isPlainObject(data)) {\n              data = {};\n            }\n\n            if (!_.has(data, ['filterGroup'])) {\n              data.filterGroup = {};\n            } else {\n              data.filterGroup = _.cloneDeep(data.filterGroup);\n            }\n\n            if (!_.has(data, ['config'])) {\n              data.config = {\n                page: 1,\n                sorting: {}\n              };\n            }\n\n            if (!isValidNumber(parseInt(limit))) {\n              limit = PAGESIZE;\n            }\n\n            if (!isValidNumber(parseInt(data.config.page))) {\n              data.config.page = 1;\n            }\n\n            if (!_.get(data.config, ['sorting', 'carspec.year']) && !_.get(data.config, ['sorting', 'mileageFilter']) && !_.get(data.config, ['sorting', 'searchPrice'])) {\n              data.config.sorting = {};\n            }\n\n            andFilter = {\n              $and: []\n            };\n\n            if (_.isArray(data.filterGroup.$and) && !_.isEmpty(data.filterGroup.$and)) {\n              andFilter.$and = _toConsumableArray(data.filterGroup.$and);\n            }\n\n            if (notEmptyLength(data.filterGroup) && notEmptyLength(data.filterGroup.yearRange)) {\n              data.filterGroup.yearRange = convertToRangeFormat(data.filterGroup.yearRange);\n              data.filterGroup.yearRange = convertFilterRange(data.filterGroup.yearRange, 'carspec.year');\n\n              if (notEmptyLength(data.filterGroup.yearRange)) {\n                andFilter.$and = [].concat(_toConsumableArray(andFilter.$and), _toConsumableArray(data.filterGroup.yearRange));\n                data.filterGroup = Object.assign(data.filterGroup, andFilter);\n              }\n\n              delete data.filterGroup.yearRange;\n            }\n\n            if (notEmptyLength(data.filterGroup) && notEmptyLength(data.filterGroup.priceRange)) {\n              data.filterGroup.priceRange = convertToRangeFormat(data.filterGroup.priceRange);\n              data.filterGroup.priceRange = convertFilterRange(data.filterGroup.priceRange, 'searchPrice');\n\n              if (notEmptyLength(data.filterGroup.priceRange)) {\n                andFilter.$and = [].concat(_toConsumableArray(andFilter.$and), _toConsumableArray(data.filterGroup.priceRange));\n                data.filterGroup = Object.assign(data.filterGroup, andFilter);\n              }\n\n              delete data.filterGroup.priceRange;\n            }\n\n            if (notEmptyLength(data.filterGroup) && notEmptyLength(data.filterGroup.mileageRange)) {\n              data.filterGroup.mileageRange = convertToRangeFormat(data.filterGroup.mileageRange);\n              data.filterGroup.mileageRange = convertFilterRange(data.filterGroup.mileageRange, 'mileageFilter');\n\n              if (notEmptyLength(data.filterGroup.mileageRange)) {\n                andFilter.$and = [].concat(_toConsumableArray(andFilter.$and), _toConsumableArray(data.filterGroup.mileageRange));\n                data.filterGroup = Object.assign(data.filterGroup, andFilter);\n              }\n\n              delete data.filterGroup.mileageRange;\n            }\n\n            if (notEmptyLength(data.filterGroup) && notEmptyLength(data.filterGroup.engineCapacityRange)) {\n              data.filterGroup.engineCapacityRange = convertToRangeFormat(data.filterGroup.engineCapacityRange);\n              data.filterGroup.engineCapacityRange = convertFilterRange(data.filterGroup.engineCapacityRange, 'carspec.engineCapacity');\n\n              if (notEmptyLength(data.filterGroup.engineCapacityRange)) {\n                andFilter.$and = [].concat(_toConsumableArray(andFilter.$and), _toConsumableArray(data.filterGroup.engineCapacityRange));\n                data.filterGroup = Object.assign(data.filterGroup, andFilter);\n              }\n\n              delete data.filterGroup.engineCapacityRange;\n            }\n\n            data.filterGroup = objectRemoveEmptyValue(data.filterGroup);\n            match = {\n              $match: _objectSpread({}, data.filterGroup)\n            };\n            _context.next = 16;\n            return axios.get(\"\".concat(client.io.io.uri, \"carAdsFilterV3\"), {\n              params: {\n                match: match,\n                sorting: data.config.sorting,\n                limit: limit,\n                skip: (data.config.page - 1) * limit\n              }\n            }).then(function (res) {\n              return res.data;\n            })[\"catch\"](function (err) {\n              return {};\n            });\n\n          case 16:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 17:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _ref.apply(this, arguments);\n}","map":{"version":3,"sources":["/Users/faraheen/ccar-cms-next-mobile/api/carAdsFilter.js"],"names":["_","axios","client","isValidNumber","notEmptyLength","convertToRangeFormat","convertRangeFormatBack","convertFilterRange","objectRemoveEmptyValue","PAGESIZE","distinctArr","value","index","self","indexOf","data","limit","isPlainObject","has","filterGroup","cloneDeep","config","page","sorting","parseInt","get","andFilter","$and","isArray","isEmpty","yearRange","Object","assign","priceRange","mileageRange","engineCapacityRange","match","$match","io","uri","params","skip","then","res","err"],"mappings":"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","sourcesContent":["import _ from 'lodash'\nimport axios from 'axios';\nimport client from '../feathers'\nimport { isValidNumber, notEmptyLength, convertToRangeFormat, convertRangeFormatBack, convertFilterRange, objectRemoveEmptyValue } from '../common-function';\n\nconst PAGESIZE = 30;\nconst distinctArr = (value, index, self) => {\n  return self.indexOf(value) === index\n}\n\nexport default async function (data, limit) {\n\n  if (!_.isPlainObject(data)) {\n    data = {};\n  }\n\n  if (!_.has(data, ['filterGroup'])) {\n    data.filterGroup = {};\n  } else {\n    data.filterGroup = _.cloneDeep(data.filterGroup)\n  }\n\n  if (!_.has(data, ['config'])) {\n    data.config = {\n      page: 1,\n      sorting: {},\n    };\n  }\n\n  if (!isValidNumber(parseInt(limit))) {\n    limit = PAGESIZE;\n  }\n\n  if (!isValidNumber(parseInt(data.config.page))) {\n    data.config.page = 1;\n  }\n\n  if (!_.get(data.config, ['sorting', 'carspec.year']) && !_.get(data.config, ['sorting', 'mileageFilter']) && !_.get(data.config, ['sorting', 'searchPrice'])) {\n    data.config.sorting = {};\n  }\n\n  let andFilter = { $and: [] }\n\n  if (_.isArray(data.filterGroup.$and) && !_.isEmpty(data.filterGroup.$and)) {\n    andFilter.$and = [...data.filterGroup.$and];\n  }\n\n  if (notEmptyLength(data.filterGroup) && notEmptyLength(data.filterGroup.yearRange)) {\n    data.filterGroup.yearRange = convertToRangeFormat(data.filterGroup.yearRange);\n    data.filterGroup.yearRange = convertFilterRange(data.filterGroup.yearRange, 'carspec.year')\n    if (notEmptyLength(data.filterGroup.yearRange)) {\n      andFilter.$and = [...andFilter.$and, ...data.filterGroup.yearRange]\n      data.filterGroup = Object.assign(data.filterGroup, andFilter)\n    }\n    delete data.filterGroup.yearRange;\n  }\n\n  if (notEmptyLength(data.filterGroup) && notEmptyLength(data.filterGroup.priceRange)) {\n    data.filterGroup.priceRange = convertToRangeFormat(data.filterGroup.priceRange);\n    data.filterGroup.priceRange = convertFilterRange(data.filterGroup.priceRange, 'searchPrice')\n    if (notEmptyLength(data.filterGroup.priceRange)) {\n      andFilter.$and = [...andFilter.$and, ...data.filterGroup.priceRange]\n      data.filterGroup = Object.assign(data.filterGroup, andFilter)\n    }\n    delete data.filterGroup.priceRange;\n  }\n\n  if (notEmptyLength(data.filterGroup) && notEmptyLength(data.filterGroup.mileageRange)) {\n    data.filterGroup.mileageRange = convertToRangeFormat(data.filterGroup.mileageRange);\n    data.filterGroup.mileageRange = convertFilterRange(data.filterGroup.mileageRange, 'mileageFilter')\n    if (notEmptyLength(data.filterGroup.mileageRange)) {\n      andFilter.$and = [...andFilter.$and, ...data.filterGroup.mileageRange]\n      data.filterGroup = Object.assign(data.filterGroup, andFilter)\n    }\n    delete data.filterGroup.mileageRange;\n  }\n\n  if (notEmptyLength(data.filterGroup) && notEmptyLength(data.filterGroup.engineCapacityRange)) {\n    data.filterGroup.engineCapacityRange = convertToRangeFormat(data.filterGroup.engineCapacityRange);\n    data.filterGroup.engineCapacityRange = convertFilterRange(data.filterGroup.engineCapacityRange, 'carspec.engineCapacity')\n    if (notEmptyLength(data.filterGroup.engineCapacityRange)) {\n      andFilter.$and = [...andFilter.$and, ...data.filterGroup.engineCapacityRange]\n      data.filterGroup = Object.assign(data.filterGroup, andFilter)\n    }\n    delete data.filterGroup.engineCapacityRange;\n  }\n\n\n  data.filterGroup = objectRemoveEmptyValue(data.filterGroup);\n  let match = { $match: { ...data.filterGroup } }\n  return await axios.get(`${client.io.io.uri}carAdsFilterV3`,\n    {\n      params: {\n        match,\n        sorting: data.config.sorting,\n        limit: limit,\n        skip: (data.config.page - 1) * limit,\n      }\n    }\n  ).then((res) => {\n    return res.data;\n  })\n    .catch((err) => {\n      return {};\n    })\n\n}"]},"metadata":{},"sourceType":"module"}