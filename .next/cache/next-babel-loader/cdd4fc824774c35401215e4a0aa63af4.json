{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Avatar, Col, Empty, Row, Tabs, Tooltip } from 'antd';\nimport axios from 'axios';\nimport _ from 'lodash';\nimport moment from 'moment';\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport client from '../../feathers';\nimport Scrollbars from 'react-custom-scrollbars';\nimport { withRouter } from 'next/dist/client/router';\nimport { Form } from '@ant-design/compatible';\nimport { notEmptyLength, arrayLengthCount } from '../../common-function';\nimport Loading from '../general/Loading';\nimport { SmallDashOutlined } from '@ant-design/icons';\nimport { allIcon } from '../../icon';\nconst opts = {\n  height: '390',\n  width: '640',\n  playerVars: {\n    // https://developers.google.com/youtube/player_parameters\n    autoplay: 0\n  }\n};\nconst AUTHORSIZE = 10;\n\nconst SocialNewTabs = props => {\n  const {\n    0: activeKey,\n    1: setActiveKey\n  } = useState(null);\n  const {\n    0: newslist,\n    1: setNewslist\n  } = useState([]);\n  const {\n    0: newsLoading,\n    1: setNewsLoading\n  } = useState(false);\n  const {\n    0: authorList,\n    1: setAuthorList\n  } = useState([]);\n  const {\n    0: authorLoading,\n    1: setAuthorLoading\n  } = useState(false);\n  const {\n    0: selectedAuthor,\n    1: setSelectedAuthor\n  } = useState(null);\n  const {\n    0: filterGroup,\n    1: setFilterGroup\n  } = useState({\n    authorId: null,\n    language: null\n  });\n  useEffect(() => {\n    getAuthorList();\n  }, []);\n  useEffect(() => {\n    getNewslist();\n  }, [filterGroup, authorList]);\n\n  function getAuthorList() {\n    let match = {\n      publisher: {\n        $ne: 'youtube'\n      }\n    };\n\n    if (props.isNewCar) {\n      match.carYear = moment().format('YYYY');\n\n      if (notEmptyLength(props.data)) {\n        let data = _.compact([_.toLower(props.data.model)]);\n\n        if (notEmptyLength(data)) {\n          match.keywords = {\n            $in: data\n          };\n        }\n      }\n    }\n\n    setAuthorLoading(true);\n    axios.get(`${client.io.io.uri}getAuthorList`, {\n      params: {\n        limit: AUTHORSIZE,\n        $match: match\n      }\n    }).then(res => {\n      //Wait for render done just unloading\n      setTimeout(() => {\n        setAuthorLoading(false);\n      }, 500);\n\n      if (notEmptyLength(res.data.data)) {\n        setAuthorList(res.data.data);\n      } else {\n        setAuthorList([]);\n      }\n    }).catch(err => {\n      setAuthorLoading(false); // message.error(err.message)\n    });\n  }\n\n  function getNewslist(key) {\n    let query = {\n      $sort: {\n        publishedAt: -1\n      },\n      $limit: 5,\n      $populate: ['authorId'],\n      publisher: {\n        $ne: 'youtube'\n      }\n    };\n\n    if (props.isNewCar) {\n      query.carYear = moment().format('YYYY');\n\n      if (notEmptyLength(props.data)) {\n        let temp = _.compact([props.data.model]);\n\n        if (notEmptyLength(temp)) {\n          temp = _.map(temp, function (item) {\n            return _.toLower(item);\n          });\n          query.keywords = {\n            $in: temp\n          };\n        }\n      }\n    }\n\n    if (filterGroup.authorId != null && filterGroup.authorId != \"\") {\n      query.authorId = filterGroup.authorId;\n    } else {\n      delete query['authorId'];\n    }\n\n    if (filterGroup.language != null && filterGroup.language != \"\" && filterGroup.language != \"all\") {\n      query.language = filterGroup.language;\n      setActiveKey(filterGroup.language);\n    } else {\n      delete query['language'];\n\n      if (languageCount() > 1) {\n        setActiveKey(null);\n      } else {\n        let langs = [];\n\n        _.forEach(authorList, function (item) {\n          langs = _.union(langs, item.language);\n        });\n\n        setActiveKey(langs ? langs[0] : null);\n      }\n    }\n\n    setNewsLoading(true);\n    client.service('news').find({\n      query: query\n    }).then(res => {\n      //Wait for render done just unloading\n      setTimeout(() => {\n        setNewsLoading(false);\n      }, 500);\n\n      if (res.data.length > 0) {\n        setNewslist(res.data);\n      } else {\n        setNewslist([]);\n      }\n    }).catch(err => {\n      setNewsLoading(false); // message.error(err.message)\n    });\n  }\n\n  function isSelectedAuthor(author, selectedAuthor) {\n    if (author == null && selectedAuthor == null) {\n      return true;\n    } else if (notEmptyLength(author) && notEmptyLength(selectedAuthor)) {\n      return _.isEqual(author, selectedAuthor);\n    } else {\n      return false;\n    }\n  }\n\n  function languageExisted(lang) {\n    if (lang != null) {\n      if (notEmptyLength(selectedAuthor)) {\n        return _.includes(selectedAuthor.language, lang);\n      } else {\n        let langs = [];\n\n        _.forEach(authorList, function (item) {\n          langs = _.union(langs, item.language);\n        });\n\n        return _.includes(langs, lang);\n      }\n    } else {\n      return false;\n    }\n  }\n\n  function languageCount(author) {\n    let langs = [];\n\n    if (notEmptyLength(author)) {\n      return notEmptyLength(author.language) ? author.language.length : 0;\n    } else {\n      _.forEach(authorList, function (item) {\n        langs = _.union(langs, item.language);\n      });\n    }\n\n    return langs.length;\n  }\n\n  const _renderAuthorList = data => {\n    if (notEmptyLength(data)) {\n      let allIconHtml = __jsx(\"div\", {\n        key: \"authorList\",\n        className: !isSelectedAuthor(null, selectedAuthor) ? \"padding-md flex-justify-center flex-items-align-center\" : \"padding-md flex-justify-center flex-items-align-center border-selected-yellow thin-border\"\n      }, __jsx(Tooltip, {\n        title: \"All\",\n        placement: \"right\"\n      }, __jsx(\"a\", {\n        onClick: () => {\n          setFilterGroup(_objectSpread(_objectSpread({}, filterGroup), {}, {\n            authorId: null,\n            language: null\n          }));\n          setSelectedAuthor(null);\n        }\n      }, __jsx(\"span\", {\n        className: \"d-inline-block avatar background-grey-lighten-2 overflow-hidden relative-wrapper\",\n        style: {\n          width: 50,\n          height: 50\n        }\n      }, __jsx(\"img\", {\n        src: allIcon,\n        className: \"width-50 height-50 absolute-center\"\n      })))));\n\n      let list = data.map(function (item, i) {\n        return __jsx(\"div\", {\n          key: 'alistData' + i,\n          className: !isSelectedAuthor(item, selectedAuthor) ? \"padding-md flex-justify-center flex-items-align-center\" : \"padding-md flex-justify-center flex-items-align-center border-selected-yellow thin-border\"\n        }, __jsx(Tooltip, {\n          title: item.name ? item.name : null,\n          placement: \"right\"\n        }, __jsx(\"a\", {\n          onClick: () => {\n            setFilterGroup(_objectSpread(_objectSpread({}, filterGroup), {}, {\n              authorId: item._id,\n              language: languageCount(item) > 1 ? null : item.language[0]\n            }));\n            setSelectedAuthor(item);\n          }\n        }, __jsx(Avatar, {\n          size: 50,\n          src: item.thumbnailUrl ? item.thumbnailUrl : null,\n          icon: item.thumbnailUrl ? null : 'user'\n        }))));\n      });\n      list.unshift(allIconHtml);\n      return __jsx(Loading, {\n        spinning: authorLoading\n      }, list);\n    } else {\n      return null;\n    }\n  };\n\n  const renderContent = data => {\n    switch (data.language) {\n      case \"en\":\n        return data.content ? data.content : null;\n\n      case \"cn\":\n        return data.content ? data.content2 : null;\n\n      case 'my':\n        return data.content3 ? data.content3 : null;\n\n      default:\n        break;\n    }\n  };\n\n  const _renderNewsList = data => {\n    if (notEmptyLength(data)) {\n      return __jsx(Row, {\n        gutter: [10, 10]\n      }, __jsx(\"div\", {\n        key: \"newsList\",\n        className: \"d-flex scroller-type\",\n        style: {\n          overflow: 'scroll'\n        }\n      }, data.map(function (item, i) {\n        return __jsx(Col, {\n          key: item._id,\n          xs: 18,\n          sm: 18,\n          md: 18,\n          lg: 18,\n          xl: 18\n        }, __jsx(\"div\", {\n          className: \"box-shadow-thin round-border wrap\",\n          style: {\n            height: '300px'\n          }\n        }, __jsx(\"a\", {\n          style: {\n            color: '#000000'\n          },\n          href: item.originalUrl\n        }, __jsx(\"div\", {\n          className: \"inews\"\n        }, __jsx(\"img\", {\n          src: item.thumbnailUrl,\n          style: {\n            width: \"100%\",\n            height: '150px'\n          }\n        })), __jsx(\"div\", {\n          className: \"ftitle\"\n        }, __jsx(\"h4\", null, item.title), __jsx(\"p\", null, renderContent(item)), __jsx(\"span\", {\n          style: {\n            textTransform: 'capitalize'\n          }\n        }, item.authorId ? item.authorId.name : null, \" | \", moment(item.publishedAt).format('DD-MM-YYYY'))))));\n      })));\n    } else {\n      return null;\n    }\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"padding-x-xs\",\n    style: {\n      touchAction: 'pan-y'\n    }\n  }, _renderNewsList(newslist)));\n};\n\nconst mapStateToProps = state => ({\n  app: state.app,\n  newCars: state.newCars\n});\n\nconst mapDispatchToProps = {};\nexport default connect(mapStateToProps, mapDispatchToProps)(Form.create()(withRouter(SocialNewTabs)));","map":{"version":3,"sources":["/Users/faraheen/ccar-cms-next-mobile/components/news/social-new-tabs.jsx"],"names":["Avatar","Col","Empty","Row","Tabs","Tooltip","axios","_","moment","React","useEffect","useState","connect","client","Scrollbars","withRouter","Form","notEmptyLength","arrayLengthCount","Loading","SmallDashOutlined","allIcon","opts","height","width","playerVars","autoplay","AUTHORSIZE","SocialNewTabs","props","activeKey","setActiveKey","newslist","setNewslist","newsLoading","setNewsLoading","authorList","setAuthorList","authorLoading","setAuthorLoading","selectedAuthor","setSelectedAuthor","filterGroup","setFilterGroup","authorId","language","getAuthorList","getNewslist","match","publisher","$ne","isNewCar","carYear","format","data","compact","toLower","model","keywords","$in","get","io","uri","params","limit","$match","then","res","setTimeout","catch","err","key","query","$sort","publishedAt","$limit","$populate","temp","map","item","languageCount","langs","forEach","union","service","find","length","isSelectedAuthor","author","isEqual","languageExisted","lang","includes","_renderAuthorList","allIconHtml","list","i","name","_id","thumbnailUrl","unshift","renderContent","content","content2","content3","_renderNewsList","overflow","color","originalUrl","title","textTransform","touchAction","mapStateToProps","state","app","newCars","mapDispatchToProps","create"],"mappings":"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","sourcesContent":["import { Avatar, Col, Empty, Row, Tabs, Tooltip } from 'antd';\nimport axios from 'axios';\nimport _ from 'lodash';\nimport moment from 'moment';\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport client from '../../feathers';\nimport Scrollbars from 'react-custom-scrollbars';\nimport { withRouter } from 'next/dist/client/router';\nimport { Form } from '@ant-design/compatible';\nimport { notEmptyLength, arrayLengthCount } from '../../common-function';\nimport Loading from '../general/Loading';\nimport { SmallDashOutlined } from '@ant-design/icons';\nimport { allIcon } from '../../icon';\n\n\n\nconst opts = {\n    height: '390',\n    width: '640',\n    playerVars: {\n        // https://developers.google.com/youtube/player_parameters\n        autoplay: 0,\n    },\n};\n\nconst AUTHORSIZE = 10\nconst SocialNewTabs = (props) => {\n\n\n    const [activeKey, setActiveKey] = useState(null);\n    const [newslist, setNewslist] = useState([]);\n    const [newsLoading, setNewsLoading] = useState(false);\n    const [authorList, setAuthorList] = useState([]);\n    const [authorLoading, setAuthorLoading] = useState(false);\n    const [selectedAuthor, setSelectedAuthor] = useState(null);\n    const [filterGroup, setFilterGroup] = useState({\n        authorId: null,\n        language: null,\n    });\n\n\n\n    useEffect(() => {\n        getAuthorList();\n    }, [])\n\n\n    useEffect(() => {\n        getNewslist();\n    }, [filterGroup, authorList])\n\n    function getAuthorList() {\n\n        let match = {\n            publisher: {\n                $ne: 'youtube',\n            }\n        };\n\n        if (props.isNewCar) {\n            match.carYear = moment().format('YYYY');\n\n            if (notEmptyLength(props.data)) {\n                let data = _.compact([_.toLower(props.data.model)]);\n                if (notEmptyLength(data)) {\n                    match.keywords = {\n                        $in: data,\n                    }\n                }\n            }\n        }\n\n        setAuthorLoading(true);\n        axios.get(`${client.io.io.uri}getAuthorList`,\n            {\n                params: {\n                    limit: AUTHORSIZE,\n                    $match: match,\n                }\n            }).then((res) => {\n                //Wait for render done just unloading\n                setTimeout(() => {\n                    setAuthorLoading(false);\n                }, 500);\n                if (notEmptyLength(res.data.data)) {\n                    setAuthorList(res.data.data);\n                } else {\n                    setAuthorList([]);\n                }\n            }).catch(err => {\n                setAuthorLoading(false);\n                // message.error(err.message)\n            });\n    }\n\n    function getNewslist(key) {\n        let query = {\n            $sort: {\n                publishedAt: -1\n            },\n            $limit: 5,\n            $populate: ['authorId'],\n            publisher: { $ne: 'youtube' }\n        }\n\n        if (props.isNewCar) {\n            query.carYear = moment().format('YYYY');\n            if (notEmptyLength(props.data)) {\n                let temp = _.compact([props.data.model]);\n                if (notEmptyLength(temp)) {\n                    temp = _.map(temp, function (item) {\n                        return _.toLower(item);\n                    })\n                    query.keywords = {\n                        $in: temp,\n                    }\n                }\n            }\n        }\n\n        if (filterGroup.authorId != null && filterGroup.authorId != \"\") {\n            query.authorId = filterGroup.authorId;\n        } else {\n            delete query['authorId'];\n        }\n\n        if (filterGroup.language != null && filterGroup.language != \"\" && filterGroup.language != \"all\") {\n            query.language = filterGroup.language;\n            setActiveKey(filterGroup.language);\n        } else {\n            delete query['language'];\n            if (languageCount() > 1) {\n                setActiveKey(null);\n            } else {\n                let langs = [];\n                _.forEach(authorList, function (item) {\n                    langs = _.union(langs, item.language);\n                })\n                setActiveKey((langs) ? langs[0] : null);\n            }\n        }\n\n        setNewsLoading(true)\n        client.service('news').find({\n            query: query,\n        }).then((res) => {\n            //Wait for render done just unloading\n            setTimeout(() => {\n                setNewsLoading(false);\n            }, 500);\n            if (res.data.length > 0) {\n                setNewslist(res.data);\n            } else {\n                setNewslist([]);\n            }\n        }).catch(err => {\n            setNewsLoading(false)\n            // message.error(err.message)\n        });\n\n\n    }\n\n\n    function isSelectedAuthor(author, selectedAuthor) {\n        if (author == null && selectedAuthor == null) {\n            return true;\n        } else if (notEmptyLength(author) && notEmptyLength(selectedAuthor)) {\n            return _.isEqual(author, selectedAuthor);\n        } else {\n            return false;\n        }\n    }\n\n    function languageExisted(lang) {\n        if (lang != null) {\n            if (notEmptyLength(selectedAuthor)) {\n                return _.includes(selectedAuthor.language, lang)\n            } else {\n                let langs = [];\n                _.forEach(authorList, function (item) {\n                    langs = _.union(langs, item.language);\n                })\n\n                return _.includes(langs, lang)\n            }\n        } else {\n            return false;\n        }\n    }\n\n    function languageCount(author) {\n        let langs = [];\n        if (notEmptyLength(author)) {\n            return notEmptyLength(author.language) ? author.language.length : 0;\n        } else {\n            _.forEach(authorList, function (item) {\n                langs = _.union(langs, item.language);\n            })\n        }\n        return langs.length;\n    }\n\n    const _renderAuthorList = (data) => {\n\n        if (notEmptyLength(data)) {\n            let allIconHtml = (\n                <div key='authorList' className={!isSelectedAuthor(null, selectedAuthor) ? \"padding-md flex-justify-center flex-items-align-center\" : \"padding-md flex-justify-center flex-items-align-center border-selected-yellow thin-border\"}>\n                    <Tooltip title=\"All\" placement=\"right\">\n                        <a onClick={() => { setFilterGroup({ ...filterGroup, authorId: null, language: null }); setSelectedAuthor(null); }}>\n                            <span className='d-inline-block avatar background-grey-lighten-2 overflow-hidden relative-wrapper' style={{ width : 50, height : 50 }} >\n                              <img src={allIcon} className=\"width-50 height-50 absolute-center\" />\n                            </span>\n                        </a>\n                    </Tooltip>\n                </div>\n            );\n\n            let list = data.map(function (item, i) {\n                return (\n                    <div key={'alistData' + i} className={!isSelectedAuthor(item, selectedAuthor) ? \"padding-md flex-justify-center flex-items-align-center\" : \"padding-md flex-justify-center flex-items-align-center border-selected-yellow thin-border\"}>\n                        <Tooltip title={item.name ? item.name : null} placement=\"right\">\n                            <a onClick={() => { setFilterGroup({ ...filterGroup, authorId: item._id, language: languageCount(item) > 1 ? null : item.language[0] }); setSelectedAuthor(item); }}>\n                                <Avatar size={50} src={item.thumbnailUrl ? item.thumbnailUrl : null} icon={item.thumbnailUrl ? null : 'user'} />\n                            </a>\n                        </Tooltip>\n                    </div>\n\n                );\n\n            });\n\n            list.unshift(allIconHtml);\n            return (\n                <Loading spinning={authorLoading}>\n                    {list}\n                </Loading>\n            );\n        } else {\n            return null;\n        }\n\n    }\n\n    const renderContent = (data) => {\n        switch (data.language) {\n            case \"en\":\n                return (\n                    data.content ? data.content : null\n                )\n            case \"cn\":\n                return (\n                    data.content ? data.content2 : null\n                )\n            case 'my':\n                return (\n                    data.content3 ? data.content3 : null\n                )\n            default:\n                break;\n        }\n    }\n\n    const _renderNewsList = (data) => {\n        if (notEmptyLength(data)) {\n            return (\n                    <Row gutter={[10, 10]}>\n                         <div key='newsList' className=\"d-flex scroller-type\" style={{overflow:'scroll' }}>\n                        {data.map(function (item, i) {\n                                return (\n                                    <Col key={item._id} xs={18} sm={18} md={18} lg={18} xl={18}>\n                                        <div className=\"box-shadow-thin round-border wrap\" style={{height:'300px'}}>\n                                        <a style={{color:'#000000'}} href={item.originalUrl} >\n                                            <div className=\"inews\">\n                                                <img src={item.thumbnailUrl} style={{ width: \"100%\", height:'150px' }} />\n                                            </div>\n                                            <div className=\"ftitle\">\n                                                <h4>{item.title}</h4>\n                                                <p>\n                                                    {renderContent(item)}\n                                                </p>\n                                                <span style={{ textTransform: 'capitalize' }}>\n                                                    {item.authorId ? item.authorId.name : null} | {moment(item.publishedAt).format('DD-MM-YYYY')}\n                                                </span>\n                                            </div>\n                                        </a>\n                                        </div> \n                                    </Col>\n                                )\n                            })\n                        }\n                        </div>\n                    </Row>\n            )\n        } else {\n            return null;\n        }\n    }\n\n\n    return (\n\n        <React.Fragment>\n            <div className=\"padding-x-xs\" style={{touchAction:'pan-y'}}>\n                {_renderNewsList(newslist)}\n            </div>\n        </React.Fragment>\n\n    );\n}\n\n\nconst mapStateToProps = state => ({\n    app: state.app,\n    newCars: state.newCars,\n});\n\nconst mapDispatchToProps = {\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Form.create()(withRouter(SocialNewTabs)));"]},"metadata":{},"sourceType":"module"}