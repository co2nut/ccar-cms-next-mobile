{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { LOADING, ADVANCE_MODE, LOGIN_MODE, REGISTER_MODE, UPDATE_ACTIVE_MENU, FILTER_CAR_BRAND_MODE, FILTER_CAR_SELECTED_CAR_BRAND_ROW, FILTER_CAR_SEARCH_KEYWORDS, FILTER_CAR_SELECTED_CAR_MODEL_ROW, FILTER_CAR_MODEL_SEARCH_KEYWORDS, FILTER_CAR_MODEL_MODE, FILTER_COLOR_MODE, FILTER_CAR_SELECTED_COLOR_MODEL_ROW, FILTER_COLOR_MODEL_SEARCH_KEYWORDS, FILTER_BODY_TYPE_MODE, FILTER_CAR_SELECTED_BODY_TYPE_MODEL_ROW, FILTER_BODY_TYPE_MODEL_SEARCH_KEYWORDS, FILTER_DRIVEN_WHEELS_MODE, FILTER_CAR_SELECTED_DRIVEN_WHEELS_MODEL_ROW, FILTER_DRIVEN_WHEELS_MODEL_SEARCH_KEYWORDS, FILTER_FUEL_TYPE_MODE, FILTER_CAR_SELECTED_FUEL_TYPE_MODEL_ROW, FILTER_FUEL_TYPE_MODEL_SEARCH_KEYWORDS, FILTER_STATE_MODE, FILTER_CAR_SELECTED_STATE_MODEL_ROW, FILTER_STATE_MODEL_SEARCH_KEYWORDS, FILTER_CAR_BRANDS, FILTER_CAR_MODELS, FILTER_COLORS, FILTER_BODY_TYPES, FILTER_DRIVEN_WHEELS, FILTER_FUEL_TYPES, FILTER_STATES, QUICK_SEARCH_PRODUCTS_LIST, SHOW_CONTACT_LIST, SET_APPLY_YEAR, SET_APPLY_PRICE, SET_APPLY_MILEAGE, SET_MENU_HEIGHT, SET_NOTIFICATION_TOKEN, SET_NOTIFICATION_TOKEN_TIME_OUT_DATE, SET_INITED_REDUX, SET_DISABLE_WINDOW_SCROLL } from '../actions/app-actions';\nimport localStorage from 'local-storage';\nimport { checkIsNeedPersist, checkNeedPersist, getPersistObj, persistRedux } from '../config';\nimport _ from 'lodash';\nimport app from 'next/app';\nconst INITIAL_STATE = {\n  notificationToken: null,\n  notificationTokenTimeOutDate: null,\n  disableWindowScroll: false,\n  initedRedux: false,\n  loading: false,\n  advanceMode: false,\n  loginMode: false,\n  registerMode: false,\n  filterCarBrandMode: false,\n  filterCarSelectedCarBrandData: '',\n  filterCarSelectedCarBrandIndex: '',\n  filterCarSearchKeywords: '',\n  filterCarModelMode: false,\n  filterCarSelectedCarModelData: '',\n  filterCarSelectedCarModelIndex: '',\n  filterCarModelSearchKeywords: '',\n  filterCarModelMode: false,\n  filterCarSelectedCarModelData: '',\n  filterCarSelectedCarModelIndex: '',\n  filterCarModelSearchKeywords: '',\n  filterColorMode: false,\n  filterCarSelectedColorData: '',\n  filterCarSelectedColorIndex: '',\n  filterColorSearchKeywords: '',\n  filterBodyTypeMode: false,\n  filterCarSelectedBodyTypeData: '',\n  filterCarSelectedBodyTypeIndex: '',\n  filterBodyTypeSearchKeywords: '',\n  filterFuelTypeMode: false,\n  filterCarSelectedFuelTypeData: '',\n  filterCarSelectedFuelTypeIndex: '',\n  filterFuelTypeSearchKeywords: '',\n  filterStateMode: false,\n  filterCarSelectedStateData: '',\n  filterCarSelectedStateIndex: '',\n  filterStateSearchKeywords: '',\n  carBrands: [],\n  carModels: [],\n  colors: [],\n  bodyTypes: [],\n  drivenWheels: [],\n  fuelTypes: [],\n  states: [],\n  quickSearchMode: '',\n  quickSearchCarSpecsData: {},\n  quickSearchProductadsData: {},\n  activeMenu: -1,\n  values: {},\n  showContact: false,\n  applyYear: undefined,\n  applyPrice: undefined,\n  applyMileage: undefined,\n  menuHeight: undefined\n};\nexport default function (state = INITIAL_STATE, action) {\n  // checkNeedPersist(_.get(action, 'type'), 'app', _.get(action, 'payload'), _.get(action, 'isRestoreData'));\n  let persistStates = _.get(localStorage.get('redux') || {}, 'app') || INITIAL_STATE;\n\n  let newState = _objectSpread(_objectSpread({}, state), persistStates);\n\n  if (!_.isEqual(state, newState)) {\n    state = newState;\n  }\n\n  switch (action.type) {\n    case LOADING:\n      state = _objectSpread(_objectSpread({}, state), {}, {\n        loading: action.payload\n      });\n      break;\n\n    case ADVANCE_MODE:\n      state = _objectSpread(_objectSpread({}, state), {}, {\n        advanceMode: action.payload\n      });\n      break;\n\n    case LOGIN_MODE:\n      state = _objectSpread(_objectSpread({}, state), {}, {\n        loginMode: action.data\n      });\n      break;\n\n    case REGISTER_MODE:\n      state = _objectSpread(_objectSpread({}, state), {}, {\n        registerMode: action.data\n      });\n      break;\n\n    case UPDATE_ACTIVE_MENU:\n      state = _objectSpread(_objectSpread({}, state), {}, {\n        activeMenu: action.data\n      });\n      break;\n    //\n\n    case FILTER_CAR_BRANDS:\n      state = _objectSpread(_objectSpread({}, state), {}, {\n        carBrands: action.data\n      });\n      break;\n\n    case FILTER_CAR_MODELS:\n      state = _objectSpread(_objectSpread({}, state), {}, {\n        carModels: action.data\n      });\n      break;\n\n    case FILTER_COLORS:\n      state = _objectSpread(_objectSpread({}, state), {}, {\n        colors: action.data\n      });\n      break;\n\n    case FILTER_BODY_TYPES:\n      state = _objectSpread(_objectSpread({}, state), {}, {\n        bodyTypes: action.data\n      });\n      break;\n\n    case FILTER_DRIVEN_WHEELS:\n      state = _objectSpread(_objectSpread({}, state), {}, {\n        drivenWheels: action.data\n      });\n      break;\n\n    case FILTER_FUEL_TYPES:\n      state = _objectSpread(_objectSpread({}, state), {}, {\n        fuelTypes: action.data\n      });\n      break;\n\n    case FILTER_STATES:\n      state = _objectSpread(_objectSpread({}, state), {}, {\n        states: action.data\n      });\n      break;\n    // filter car\n    //.......................................\n\n    case FILTER_CAR_BRAND_MODE:\n      state = _objectSpread(_objectSpread({}, state), {}, {\n        filterCarBrandMode: action.data\n      });\n      break;\n\n    case FILTER_CAR_SELECTED_CAR_BRAND_ROW:\n      if (action.index) {\n        state = _objectSpread(_objectSpread({}, state), {}, {\n          filterCarSelectedCarBrandData: action.data,\n          filterCarSelectedCarBrandIndex: action.index\n        });\n        break;\n      } else {\n        state = _objectSpread(_objectSpread({}, state), {}, {\n          filterCarSelectedCarBrandData: action.data\n        });\n        break;\n      }\n\n    case FILTER_CAR_SEARCH_KEYWORDS:\n      state = _objectSpread(_objectSpread({}, state), {}, {\n        filterCarSearchKeywords: action.data\n      });\n      break;\n    // end filter car ..............................\n    // filter car\n    //.......................................\n\n    case FILTER_CAR_MODEL_MODE:\n      state = _objectSpread(_objectSpread({}, state), {}, {\n        filterCarModelMode: action.data\n      });\n      break;\n\n    case FILTER_CAR_SELECTED_CAR_MODEL_ROW:\n      if (action.index) {\n        state = _objectSpread(_objectSpread({}, state), {}, {\n          filterCarSelectedCarModelData: action.data,\n          filterCarSelectedCarModelIndex: action.index\n        });\n        break;\n      } else {\n        state = _objectSpread(_objectSpread({}, state), {}, {\n          filterCarSelectedCarModelData: action.data\n        });\n        break;\n      }\n\n    case FILTER_CAR_MODEL_SEARCH_KEYWORDS:\n      state = _objectSpread(_objectSpread({}, state), {}, {\n        filterCarModelSearchKeywords: action.data\n      });\n      break;\n    // end filter model ..............................\n    // filter color\n    //.......................................\n\n    case FILTER_COLOR_MODE:\n      state = _objectSpread(_objectSpread({}, state), {}, {\n        filterColorMode: action.data\n      });\n      break;\n\n    case FILTER_CAR_SELECTED_COLOR_MODEL_ROW:\n      if (action.index) {\n        state = _objectSpread(_objectSpread({}, state), {}, {\n          filterCarSelectedColorData: action.data,\n          filterCarSelectedColorIndex: action.index\n        });\n        break;\n      } else {\n        state = _objectSpread(_objectSpread({}, state), {}, {\n          filterCarSelectedColorData: action.data\n        });\n        break;\n      }\n\n    case FILTER_COLOR_MODEL_SEARCH_KEYWORDS:\n      state = _objectSpread(_objectSpread({}, state), {}, {\n        filterColorSearchKeywords: action.data\n      });\n      break;\n    // end filter model ..............................\n    // filter body type\n    //.......................................\n\n    case FILTER_BODY_TYPE_MODE:\n      state = _objectSpread(_objectSpread({}, state), {}, {\n        filterBodyTypeMode: action.data\n      });\n      break;\n\n    case FILTER_CAR_SELECTED_BODY_TYPE_MODEL_ROW:\n      if (action.index) {\n        state = _objectSpread(_objectSpread({}, state), {}, {\n          filterCarSelectedBodyTypeData: action.data,\n          filterCarSelectedBodyTypeIndex: action.index\n        });\n        break;\n      } else {\n        state = _objectSpread(_objectSpread({}, state), {}, {\n          filterCarSelectedBodyTypeData: action.data\n        });\n        break;\n      }\n\n    case FILTER_BODY_TYPE_MODEL_SEARCH_KEYWORDS:\n      state = _objectSpread(_objectSpread({}, state), {}, {\n        filterBodyTypeSearchKeywords: action.data\n      });\n      break;\n    // end filter model ..............................\n    // filter driven wheels\n    //.......................................\n\n    case FILTER_DRIVEN_WHEELS_MODE:\n      state = _objectSpread(_objectSpread({}, state), {}, {\n        filterDrivenWheelMode: action.data\n      });\n      break;\n\n    case FILTER_CAR_SELECTED_DRIVEN_WHEELS_MODEL_ROW:\n      if (action.index) {\n        state = _objectSpread(_objectSpread({}, state), {}, {\n          filterCarSelectedDrivenWheelData: action.data,\n          filterCarSelectedDrivenWheelIndex: action.index\n        });\n        break;\n      } else {\n        state = _objectSpread(_objectSpread({}, state), {}, {\n          filterCarSelectedDrivenWheelData: action.data\n        });\n        break;\n      }\n\n    case FILTER_DRIVEN_WHEELS_MODEL_SEARCH_KEYWORDS:\n      state = _objectSpread(_objectSpread({}, state), {}, {\n        filterDrivenWheelSearchKeywords: action.data\n      });\n      break;\n    // end filter driven wheels ..............................\n    // filter driven wheels\n    //.......................................\n\n    case FILTER_FUEL_TYPE_MODE:\n      state = _objectSpread(_objectSpread({}, state), {}, {\n        filterFuelTypeMode: action.data\n      });\n      break;\n\n    case FILTER_CAR_SELECTED_FUEL_TYPE_MODEL_ROW:\n      if (action.index) {\n        state = _objectSpread(_objectSpread({}, state), {}, {\n          filterCarSelectedFuelTypeData: action.data,\n          filterCarSelectedFuelTypeIndex: action.index\n        });\n        break;\n      } else {\n        state = _objectSpread(_objectSpread({}, state), {}, {\n          filterCarSelectedFuelTypeData: action.data\n        });\n        break;\n      }\n\n    case FILTER_FUEL_TYPE_MODEL_SEARCH_KEYWORDS:\n      state = _objectSpread(_objectSpread({}, state), {}, {\n        filterFuelTypeSearchKeywords: action.data\n      });\n      break;\n    // end filter driven wheels ..............................\n    // filter driven wheels\n    //.......................................\n\n    case FILTER_STATE_MODE:\n      state = _objectSpread(_objectSpread({}, state), {}, {\n        filterStateMode: action.data\n      });\n      break;\n\n    case FILTER_CAR_SELECTED_STATE_MODEL_ROW:\n      if (action.index) {\n        state = _objectSpread(_objectSpread({}, state), {}, {\n          filterCarSelectedStateData: action.data,\n          filterCarSelectedStateIndex: action.index\n        });\n        break;\n      } else {\n        state = _objectSpread(_objectSpread({}, state), {}, {\n          filterCarSelectedStateData: action.data\n        });\n        break;\n      }\n\n    case FILTER_STATE_MODEL_SEARCH_KEYWORDS:\n      state = _objectSpread(_objectSpread({}, state), {}, {\n        filterStateSearchKeywords: action.data\n      });\n      break;\n    // end filter driven wheels ..............................\n\n    case QUICK_SEARCH_PRODUCTS_LIST:\n      state = _objectSpread(_objectSpread({}, state), {}, {\n        quickSearchMode: action.mode,\n        quickSearchCarSpecsData: action.quickSearchCarSpecsData,\n        quickSearchProductadsData: action.quickSearchProductadsData,\n        values: action.values\n      });\n      break;\n\n    case SHOW_CONTACT_LIST:\n      state = _objectSpread(_objectSpread({}, state), {}, {\n        showContact: action.boolean\n      });\n      break;\n\n    case SET_APPLY_YEAR:\n      state = _objectSpread(_objectSpread({}, state), {}, {\n        applyYear: action.data\n      });\n      break;\n\n    case SET_APPLY_PRICE:\n      state = _objectSpread(_objectSpread({}, state), {}, {\n        applyPrice: action.data\n      });\n      break;\n\n    case SET_APPLY_MILEAGE:\n      state = _objectSpread(_objectSpread({}, state), {}, {\n        applyMileage: action.data\n      });\n      break;\n\n    case SET_MENU_HEIGHT:\n      state = _objectSpread(_objectSpread({}, state), {}, {\n        menuHeight: action.data\n      });\n      break;\n\n    case SET_NOTIFICATION_TOKEN:\n      state = _objectSpread(_objectSpread({}, state), {}, {\n        notificationToken: action.data\n      });\n      break;\n\n    case SET_NOTIFICATION_TOKEN_TIME_OUT_DATE:\n      state = _objectSpread(_objectSpread({}, state), {}, {\n        notificationTokenTimeOutDate: action.data\n      });\n      break;\n\n    case SET_INITED_REDUX:\n      state = _objectSpread(_objectSpread({}, state), {}, {\n        initedRedux: action.data\n      });\n      break;\n\n    case SET_DISABLE_WINDOW_SCROLL:\n      state = _objectSpread(_objectSpread({}, state), {}, {\n        disableWindowScroll: action.data == true ? true : false\n      });\n      break;\n\n    default:\n      state = state;\n      break;\n  }\n\n  persistRedux('app', state);\n  return state;\n}","map":{"version":3,"sources":["/Users/faraheen/ccar-cms-next-mobile/redux/reducers/app-reducer.js"],"names":["LOADING","ADVANCE_MODE","LOGIN_MODE","REGISTER_MODE","UPDATE_ACTIVE_MENU","FILTER_CAR_BRAND_MODE","FILTER_CAR_SELECTED_CAR_BRAND_ROW","FILTER_CAR_SEARCH_KEYWORDS","FILTER_CAR_SELECTED_CAR_MODEL_ROW","FILTER_CAR_MODEL_SEARCH_KEYWORDS","FILTER_CAR_MODEL_MODE","FILTER_COLOR_MODE","FILTER_CAR_SELECTED_COLOR_MODEL_ROW","FILTER_COLOR_MODEL_SEARCH_KEYWORDS","FILTER_BODY_TYPE_MODE","FILTER_CAR_SELECTED_BODY_TYPE_MODEL_ROW","FILTER_BODY_TYPE_MODEL_SEARCH_KEYWORDS","FILTER_DRIVEN_WHEELS_MODE","FILTER_CAR_SELECTED_DRIVEN_WHEELS_MODEL_ROW","FILTER_DRIVEN_WHEELS_MODEL_SEARCH_KEYWORDS","FILTER_FUEL_TYPE_MODE","FILTER_CAR_SELECTED_FUEL_TYPE_MODEL_ROW","FILTER_FUEL_TYPE_MODEL_SEARCH_KEYWORDS","FILTER_STATE_MODE","FILTER_CAR_SELECTED_STATE_MODEL_ROW","FILTER_STATE_MODEL_SEARCH_KEYWORDS","FILTER_CAR_BRANDS","FILTER_CAR_MODELS","FILTER_COLORS","FILTER_BODY_TYPES","FILTER_DRIVEN_WHEELS","FILTER_FUEL_TYPES","FILTER_STATES","QUICK_SEARCH_PRODUCTS_LIST","SHOW_CONTACT_LIST","SET_APPLY_YEAR","SET_APPLY_PRICE","SET_APPLY_MILEAGE","SET_MENU_HEIGHT","SET_NOTIFICATION_TOKEN","SET_NOTIFICATION_TOKEN_TIME_OUT_DATE","SET_INITED_REDUX","SET_DISABLE_WINDOW_SCROLL","localStorage","checkIsNeedPersist","checkNeedPersist","getPersistObj","persistRedux","_","app","INITIAL_STATE","notificationToken","notificationTokenTimeOutDate","disableWindowScroll","initedRedux","loading","advanceMode","loginMode","registerMode","filterCarBrandMode","filterCarSelectedCarBrandData","filterCarSelectedCarBrandIndex","filterCarSearchKeywords","filterCarModelMode","filterCarSelectedCarModelData","filterCarSelectedCarModelIndex","filterCarModelSearchKeywords","filterColorMode","filterCarSelectedColorData","filterCarSelectedColorIndex","filterColorSearchKeywords","filterBodyTypeMode","filterCarSelectedBodyTypeData","filterCarSelectedBodyTypeIndex","filterBodyTypeSearchKeywords","filterFuelTypeMode","filterCarSelectedFuelTypeData","filterCarSelectedFuelTypeIndex","filterFuelTypeSearchKeywords","filterStateMode","filterCarSelectedStateData","filterCarSelectedStateIndex","filterStateSearchKeywords","carBrands","carModels","colors","bodyTypes","drivenWheels","fuelTypes","states","quickSearchMode","quickSearchCarSpecsData","quickSearchProductadsData","activeMenu","values","showContact","applyYear","undefined","applyPrice","applyMileage","menuHeight","state","action","persistStates","get","newState","isEqual","type","payload","data","index","filterDrivenWheelMode","filterCarSelectedDrivenWheelData","filterCarSelectedDrivenWheelIndex","filterDrivenWheelSearchKeywords","mode","boolean"],"mappings":"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","sourcesContent":["import {\n  LOADING,\n\n  ADVANCE_MODE,\n  LOGIN_MODE,\n  REGISTER_MODE,\n  UPDATE_ACTIVE_MENU,\n\n  FILTER_CAR_BRAND_MODE,\n  FILTER_CAR_SELECTED_CAR_BRAND_ROW,\n  FILTER_CAR_SEARCH_KEYWORDS,\n\n  FILTER_CAR_SELECTED_CAR_MODEL_ROW,\n  FILTER_CAR_MODEL_SEARCH_KEYWORDS,\n  FILTER_CAR_MODEL_MODE,\n\n  FILTER_COLOR_MODE,\n  FILTER_CAR_SELECTED_COLOR_MODEL_ROW,\n  FILTER_COLOR_MODEL_SEARCH_KEYWORDS,\n\n  FILTER_BODY_TYPE_MODE,\n  FILTER_CAR_SELECTED_BODY_TYPE_MODEL_ROW,\n  FILTER_BODY_TYPE_MODEL_SEARCH_KEYWORDS,\n\n  FILTER_DRIVEN_WHEELS_MODE,\n  FILTER_CAR_SELECTED_DRIVEN_WHEELS_MODEL_ROW,\n  FILTER_DRIVEN_WHEELS_MODEL_SEARCH_KEYWORDS,\n\n  FILTER_FUEL_TYPE_MODE,\n  FILTER_CAR_SELECTED_FUEL_TYPE_MODEL_ROW,\n  FILTER_FUEL_TYPE_MODEL_SEARCH_KEYWORDS,\n\n  FILTER_STATE_MODE,\n  FILTER_CAR_SELECTED_STATE_MODEL_ROW,\n  FILTER_STATE_MODEL_SEARCH_KEYWORDS,\n\n  FILTER_CAR_BRANDS,\n  FILTER_CAR_MODELS,\n  FILTER_COLORS,\n  FILTER_BODY_TYPES,\n  FILTER_DRIVEN_WHEELS,\n  FILTER_FUEL_TYPES,\n  FILTER_STATES,\n\n  QUICK_SEARCH_PRODUCTS_LIST,\n\n  SHOW_CONTACT_LIST,\n\n  SET_APPLY_YEAR,\n  SET_APPLY_PRICE,\n  SET_APPLY_MILEAGE,\n\n  SET_MENU_HEIGHT,\n  SET_NOTIFICATION_TOKEN,\n  SET_NOTIFICATION_TOKEN_TIME_OUT_DATE,\n  SET_INITED_REDUX,\n  SET_DISABLE_WINDOW_SCROLL,\n} from '../actions/app-actions';\n\nimport localStorage from 'local-storage';\nimport { checkIsNeedPersist, checkNeedPersist, getPersistObj, persistRedux } from '../config';\nimport _ from 'lodash';\nimport app from 'next/app';\n\n\nconst INITIAL_STATE = {\n  notificationToken: null,\n  notificationTokenTimeOutDate: null,\n  disableWindowScroll: false,\n\n  initedRedux: false,\n  loading: false,\n  advanceMode: false,\n  loginMode: false,\n  registerMode: false,\n\n  filterCarBrandMode: false,\n  filterCarSelectedCarBrandData: '',\n  filterCarSelectedCarBrandIndex: '',\n  filterCarSearchKeywords: '',\n\n  filterCarModelMode: false,\n  filterCarSelectedCarModelData: '',\n  filterCarSelectedCarModelIndex: '',\n  filterCarModelSearchKeywords: '',\n\n  filterCarModelMode: false,\n  filterCarSelectedCarModelData: '',\n  filterCarSelectedCarModelIndex: '',\n  filterCarModelSearchKeywords: '',\n\n  filterColorMode: false,\n  filterCarSelectedColorData: '',\n  filterCarSelectedColorIndex: '',\n  filterColorSearchKeywords: '',\n\n  filterBodyTypeMode: false,\n  filterCarSelectedBodyTypeData: '',\n  filterCarSelectedBodyTypeIndex: '',\n  filterBodyTypeSearchKeywords: '',\n\n  filterFuelTypeMode: false,\n  filterCarSelectedFuelTypeData: '',\n  filterCarSelectedFuelTypeIndex: '',\n  filterFuelTypeSearchKeywords: '',\n\n  filterStateMode: false,\n  filterCarSelectedStateData: '',\n  filterCarSelectedStateIndex: '',\n  filterStateSearchKeywords: '',\n\n  carBrands: [],\n  carModels: [],\n  colors: [],\n  bodyTypes: [],\n  drivenWheels: [],\n  fuelTypes: [],\n  states: [],\n\n  quickSearchMode: '',\n  quickSearchCarSpecsData: {},\n  quickSearchProductadsData: {},\n  activeMenu: -1,\n  values: {},\n\n  showContact: false,\n\n  applyYear: undefined,\n  applyPrice: undefined,\n  applyMileage: undefined,\n\n  menuHeight: undefined,\n}\n\nexport default function (state = INITIAL_STATE, action) {\n\n\n  // checkNeedPersist(_.get(action, 'type'), 'app', _.get(action, 'payload'), _.get(action, 'isRestoreData'));\n\n  let persistStates = _.get(localStorage.get('redux') || {}, 'app') || INITIAL_STATE;\n  let newState = {\n    ...state,\n    ...persistStates\n  }\n\n  if(!_.isEqual(state, newState)){\n    state = newState;\n  }\n  switch (action.type) {\n    case LOADING:\n      state = {\n        ...state,\n        loading: action.payload,\n      };\n      break;\n    case ADVANCE_MODE:\n      state = {\n        ...state,\n        advanceMode: action.payload,\n      };\n      break;\n    case LOGIN_MODE:\n      state = {\n        ...state,\n        loginMode: action.data\n      };\n      break;\n    case REGISTER_MODE:\n      state = {\n        ...state,\n        registerMode: action.data\n      };\n      break;\n    case UPDATE_ACTIVE_MENU:\n      state = {\n        ...state,\n        activeMenu: action.data\n      };\n      break;\n\n    //\n    case FILTER_CAR_BRANDS:\n      state = {\n        ...state,\n        carBrands: action.data\n      };\n      break;\n    case FILTER_CAR_MODELS:\n      state = {\n        ...state,\n        carModels: action.data\n      };\n      break;\n    case FILTER_COLORS:\n      state = {\n        ...state,\n        colors: action.data\n      };\n      break;\n    case FILTER_BODY_TYPES:\n      state = {\n        ...state,\n        bodyTypes: action.data\n      };\n      break;\n    case FILTER_DRIVEN_WHEELS:\n      state = {\n        ...state,\n        drivenWheels: action.data\n      };\n      break;\n    case FILTER_FUEL_TYPES:\n      state = {\n        ...state,\n        fuelTypes: action.data\n      };\n      break;\n    case FILTER_STATES:\n      state = {\n        ...state,\n        states: action.data\n      };\n      break;\n    // filter car\n    //.......................................\n    case FILTER_CAR_BRAND_MODE:\n      state = {\n        ...state,\n        filterCarBrandMode: action.data\n      };\n      break;\n    case FILTER_CAR_SELECTED_CAR_BRAND_ROW:\n      if (action.index) {\n        state = {\n          ...state,\n          filterCarSelectedCarBrandData: action.data,\n          filterCarSelectedCarBrandIndex: action.index\n        };\n        break;\n      } else {\n        state = {\n          ...state,\n          filterCarSelectedCarBrandData: action.data\n        };\n        break;\n      }\n    case FILTER_CAR_SEARCH_KEYWORDS:\n      state = {\n        ...state,\n        filterCarSearchKeywords: action.data\n      };\n      break;\n    // end filter car ..............................\n\n    // filter car\n    //.......................................\n    case FILTER_CAR_MODEL_MODE:\n      state = {\n        ...state,\n        filterCarModelMode: action.data\n      };\n      break;\n    case FILTER_CAR_SELECTED_CAR_MODEL_ROW:\n      if (action.index) {\n        state = {\n          ...state,\n          filterCarSelectedCarModelData: action.data,\n          filterCarSelectedCarModelIndex: action.index\n        };\n        break;\n      } else {\n        state = {\n          ...state,\n          filterCarSelectedCarModelData: action.data\n        };\n        break;\n      }\n    case FILTER_CAR_MODEL_SEARCH_KEYWORDS:\n      state = {\n        ...state,\n        filterCarModelSearchKeywords: action.data\n      };\n      break;\n    // end filter model ..............................\n\n    // filter color\n    //.......................................\n    case FILTER_COLOR_MODE:\n      state = {\n        ...state,\n        filterColorMode: action.data\n      };\n      break;\n    case FILTER_CAR_SELECTED_COLOR_MODEL_ROW:\n      if (action.index) {\n        state = {\n          ...state,\n          filterCarSelectedColorData: action.data,\n          filterCarSelectedColorIndex: action.index\n        };\n        break;\n      } else {\n        state = {\n          ...state,\n          filterCarSelectedColorData: action.data\n        };\n        break;\n      }\n    case FILTER_COLOR_MODEL_SEARCH_KEYWORDS:\n      state = {\n        ...state,\n        filterColorSearchKeywords: action.data\n      };\n      break;\n    // end filter model ..............................\n\n    // filter body type\n    //.......................................\n    case FILTER_BODY_TYPE_MODE:\n      state = {\n        ...state,\n        filterBodyTypeMode: action.data\n      };\n      break;\n    case FILTER_CAR_SELECTED_BODY_TYPE_MODEL_ROW:\n      if (action.index) {\n        state = {\n          ...state,\n          filterCarSelectedBodyTypeData: action.data,\n          filterCarSelectedBodyTypeIndex: action.index\n        };\n        break;\n      } else {\n        state = {\n          ...state,\n          filterCarSelectedBodyTypeData: action.data\n        };\n        break;\n      }\n    case FILTER_BODY_TYPE_MODEL_SEARCH_KEYWORDS:\n      state = {\n        ...state,\n        filterBodyTypeSearchKeywords: action.data\n      };\n      break;\n    // end filter model ..............................\n\n    // filter driven wheels\n    //.......................................\n    case FILTER_DRIVEN_WHEELS_MODE:\n      state = {\n        ...state,\n        filterDrivenWheelMode: action.data\n      };\n      break;\n    case FILTER_CAR_SELECTED_DRIVEN_WHEELS_MODEL_ROW:\n      if (action.index) {\n        state = {\n          ...state,\n          filterCarSelectedDrivenWheelData: action.data,\n          filterCarSelectedDrivenWheelIndex: action.index\n        };\n        break;\n      } else {\n        state = {\n          ...state,\n          filterCarSelectedDrivenWheelData: action.data\n        };\n        break;\n      }\n    case FILTER_DRIVEN_WHEELS_MODEL_SEARCH_KEYWORDS:\n      state = {\n        ...state,\n        filterDrivenWheelSearchKeywords: action.data\n      };\n      break;\n    // end filter driven wheels ..............................\n\n    // filter driven wheels\n    //.......................................\n    case FILTER_FUEL_TYPE_MODE:\n      state = {\n        ...state,\n        filterFuelTypeMode: action.data\n      };\n      break;\n    case FILTER_CAR_SELECTED_FUEL_TYPE_MODEL_ROW:\n      if (action.index) {\n        state = {\n          ...state,\n          filterCarSelectedFuelTypeData: action.data,\n          filterCarSelectedFuelTypeIndex: action.index\n        };\n        break;\n      } else {\n        state = {\n          ...state,\n          filterCarSelectedFuelTypeData: action.data\n        };\n        break;\n      }\n    case FILTER_FUEL_TYPE_MODEL_SEARCH_KEYWORDS:\n      state = {\n        ...state,\n        filterFuelTypeSearchKeywords: action.data\n      };\n      break;\n    // end filter driven wheels ..............................\n\n    // filter driven wheels\n    //.......................................\n    case FILTER_STATE_MODE:\n      state = {\n        ...state,\n        filterStateMode: action.data\n      };\n      break;\n    case FILTER_CAR_SELECTED_STATE_MODEL_ROW:\n      if (action.index) {\n        state = {\n          ...state,\n          filterCarSelectedStateData: action.data,\n          filterCarSelectedStateIndex: action.index\n        };\n        break;\n      } else {\n        state = {\n          ...state,\n          filterCarSelectedStateData: action.data\n        };\n        break;\n      }\n    case FILTER_STATE_MODEL_SEARCH_KEYWORDS:\n      state = {\n        ...state,\n        filterStateSearchKeywords: action.data\n      };\n      break;\n    // end filter driven wheels ..............................\n\n    case QUICK_SEARCH_PRODUCTS_LIST:\n      state = {\n        ...state,\n        quickSearchMode: action.mode,\n        quickSearchCarSpecsData: action.quickSearchCarSpecsData,\n        quickSearchProductadsData: action.quickSearchProductadsData,\n        values: action.values\n      };\n      break;\n    case SHOW_CONTACT_LIST:\n      state = {\n        ...state,\n        showContact: action.boolean\n      };\n      break;\n    case SET_APPLY_YEAR:\n      state = {\n        ...state,\n        applyYear: action.data\n      };\n      break;\n    case SET_APPLY_PRICE:\n      state = {\n        ...state,\n        applyPrice: action.data\n      };\n      break;\n    case SET_APPLY_MILEAGE:\n      state = {\n        ...state,\n        applyMileage: action.data\n      };\n      break;\n    case SET_MENU_HEIGHT:\n      state = {\n        ...state,\n        menuHeight: action.data\n      };\n      break;\n    case SET_NOTIFICATION_TOKEN:\n      state = {\n        ...state,\n        notificationToken: action.data\n      };\n      break;\n    case SET_NOTIFICATION_TOKEN_TIME_OUT_DATE:\n      state = {\n        ...state,\n        notificationTokenTimeOutDate: action.data\n      };\n      break;\n    case SET_INITED_REDUX:\n      state = {\n        ...state,\n        initedRedux: action.data\n      };\n      break;\n    case SET_DISABLE_WINDOW_SCROLL:\n      state = {\n        ...state,\n        disableWindowScroll: action.data == true ? true : false,\n      };\n      break;\n    default:\n      state = state\n      break;\n  }\n\n\n  persistRedux('app', state)\n  return state;\n}"]},"metadata":{},"sourceType":"module"}