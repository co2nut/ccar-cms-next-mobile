{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Form, Icon } from 'antd';\nimport _ from 'lodash';\nimport TweenOne from 'rc-tween-one';\nimport BezierPlugin from 'rc-tween-one/lib/plugin/BezierPlugin';\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport client from '../../feathers';\nimport { getStreamUrl, liveIcon } from './config';\nimport UserAvatar from './user-avatarCCARLive';\nimport { withRouter } from 'next/router';\nimport { setUser } from '../../redux/actions/user-actions';\nimport { isValidNumber, notEmptyLength, objectRemoveEmptyValue } from '../../common-function';\nTweenOne.plugins.push(BezierPlugin);\nconst defaultHeight = 400;\n\nconst LiveBoxPreview1 = props => {\n  // props.data.dealerDisplayName\n  const {\n    0: videoLoading,\n    1: setVideoLoading\n  } = useState(false);\n  const {\n    0: pictureUrl,\n    1: setPictureUrl\n  } = useState(false);\n  const {\n    0: numberOfCurrentlyConnectedClients,\n    1: setNumberOfCurrentlyConnectedClients\n  } = useState(props.data.connectedUsers);\n\n  const getThumbnailUrl = () => {\n    const dealerSocketId = props.dealerSocketId;\n    return `${getStreamUrl(client.io.io.uri)}/dealerVideoThumbnails/${dealerSocketId}.png?${Date.now()}`;\n  };\n\n  useEffect(() => {\n    //the dealer this represents has changed\n    getThumbnailUrl();\n  }, [props.dealerSocketId]);\n  useEffect(x => {\n    const _handleThumbnailEvent = data => {\n      const dealerSocketId = data.dealerSocketId;\n\n      if (dealerSocketId === props.dealerSocketId) {\n        setPictureUrl(getThumbnailUrl());\n      }\n    };\n\n    const _handleNumberOfConnectedChanged = data => {\n      let {\n        connectedUsers,\n        dealerSocketId\n      } = data.dealerSocketId;\n\n      if (dealerSocketId === props.dealerSocketId) {\n        //by odin it is this\n        setNumberOfCurrentlyConnectedClients(connectedUsers);\n      }\n    };\n\n    props.sharedSocket.on('broadcastVideoThumbnailHasChanged', _handleThumbnailEvent);\n    props.sharedSocket.on('numberOfViews', _handleNumberOfConnectedChanged);\n    setPictureUrl(getThumbnailUrl());\n    return () => {\n      props.sharedSocket.off('broadcastVideoThumbnailHasChanged', _handleThumbnailEvent);\n      props.sharedSocket.off('numberOfViews', _handleNumberOfConnectedChanged);\n    };\n  }, []);\n\n  function handleOnClick(e) {\n    if (props.onClick) {\n      props.onClick(e);\n    }\n  }\n\n  return _.isPlainObject(props.data) && notEmptyLength(objectRemoveEmptyValue(props.data)) ? __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: `${props.className ? props.className : ''} background-white`,\n    style: _objectSpread({\n      height: `${defaultHeight}px`,\n      width: '100%'\n    }, props.style),\n    onClick: e => {\n      handleOnClick(e);\n    }\n  }, __jsx(\"div\", {\n    className: \"width-100 relative-wrapper\",\n    style: {\n      height: !props.style || !isValidNumber(props.style.height) ? `${defaultHeight * 1}px` : `${parseFloat(props.style.height) * 1}px`\n    }\n  }, __jsx(\"img\", {\n    // src={_.get(props.data , ['dealerVideoThumbnailUrl'])} \n    src: pictureUrl,\n    className: \"fill-parent absolute-center img-cover background-black\"\n  }), __jsx(\"div\", {\n    className: \"absolute-center flex-items-align-center flex-justify-center fill-parent background-black opacity-30 \"\n  }), __jsx(\"img\", {\n    src: liveIcon,\n    style: {\n      position: 'absolute',\n      top: 0,\n      left: 10,\n      margin: 'auto',\n      width: '50px',\n      height: '50px'\n    }\n  }), __jsx(\"div\", {\n    className: \"background-grey-darken-4 opacity-80 round-border-light flex-items-align-center flex-justify-center padding-x-sm\",\n    style: {\n      position: 'absolute',\n      top: 10,\n      left: 70,\n      margin: 'auto',\n      height: '30px'\n    }\n  }, __jsx(Icon, {\n    type: \"eye\",\n    theme: \"filled\",\n    className: \"margin-right-sm white\"\n  }), __jsx(\"span\", {\n    className: \"d-inline-block white\"\n  }, numberOfCurrentlyConnectedClients)), __jsx(\"div\", {\n    className: \"background-transparent flex-items-align-center flex-justify-center\",\n    style: {\n      position: 'absolute',\n      bottom: 0,\n      left: 10,\n      margin: 'auto',\n      width: '90%',\n      height: !props.style || !isValidNumber(props.style.height) ? `${defaultHeight * 0.85 * 0.4}px` : `${parseFloat(props.style.height) * 0.85 * 0.4}px`\n    }\n  }, __jsx(UserAvatar, {\n    redirectProfile: true,\n    data: {\n      name: props.data.dealerDisplayName,\n      avatar: props.data.dealerAvatar\n    },\n    size: 70,\n    className: \"margin-right-md\"\n  }), __jsx(\"span\", {\n    className: \"d-inline-block width-80\"\n  }, __jsx(\"div\", {\n    className: \"font-weight-bold white subtitle1 text-truncate \"\n  }, props.data.title), __jsx(\"div\", {\n    className: \"font-weight-normal white subtitle1 text-truncate\"\n  }, _.isPlainObject(props.data) && notEmptyLength(objectRemoveEmptyValue(props.data)) ? `${props.data.name}` : null)))))) : null;\n};\n\nconst mapStateToProps = state => ({\n  app: state.app,\n  user: state.user\n});\n\nconst mapDispatchToProps = {\n  setUser: setUser\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Form.create()(withRouter(LiveBoxPreview1)));","map":{"version":3,"sources":["/Users/faraheen/ccar-cms-next-mobile/components/live/live-box-preview-1.jsx"],"names":["Form","Icon","_","TweenOne","BezierPlugin","React","useEffect","useState","connect","client","getStreamUrl","liveIcon","UserAvatar","withRouter","setUser","isValidNumber","notEmptyLength","objectRemoveEmptyValue","plugins","push","defaultHeight","LiveBoxPreview1","props","videoLoading","setVideoLoading","pictureUrl","setPictureUrl","numberOfCurrentlyConnectedClients","setNumberOfCurrentlyConnectedClients","data","connectedUsers","getThumbnailUrl","dealerSocketId","io","uri","Date","now","x","_handleThumbnailEvent","_handleNumberOfConnectedChanged","sharedSocket","on","off","handleOnClick","e","onClick","isPlainObject","className","height","width","style","parseFloat","position","top","left","margin","bottom","name","dealerDisplayName","avatar","dealerAvatar","title","mapStateToProps","state","app","user","mapDispatchToProps","create"],"mappings":"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","sourcesContent":["import { Form, Icon } from 'antd';\nimport _ from 'lodash';\nimport TweenOne from 'rc-tween-one';\nimport BezierPlugin from 'rc-tween-one/lib/plugin/BezierPlugin';\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport client from '../../feathers';\nimport { getStreamUrl, liveIcon } from './config';\nimport UserAvatar from './user-avatarCCARLive';\nimport { withRouter } from 'next/router';\nimport { setUser } from '../../redux/actions/user-actions';\nimport { isValidNumber, notEmptyLength, objectRemoveEmptyValue  } from '../../common-function';\nTweenOne.plugins.push(BezierPlugin);\n\n\nconst defaultHeight = 400;\n\nconst LiveBoxPreview1 = (props) => {\n    // props.data.dealerDisplayName\n    const [videoLoading, setVideoLoading] = useState(false);\n    const [pictureUrl, setPictureUrl] = useState(false);\n    const [numberOfCurrentlyConnectedClients, setNumberOfCurrentlyConnectedClients] = useState(props.data.connectedUsers);\n\n    const getThumbnailUrl = () => {\n        const dealerSocketId = props.dealerSocketId;\n        return `${getStreamUrl(client.io.io.uri)}/dealerVideoThumbnails/${dealerSocketId}.png?${Date.now()}`\n    }\n\n    useEffect(() => {\n        //the dealer this represents has changed\n        getThumbnailUrl();\n\n    },[props.dealerSocketId]);\n\n\n    useEffect(x => {\n\n        const _handleThumbnailEvent = (data) => {\n            const dealerSocketId = data.dealerSocketId;\n            if(dealerSocketId === props.dealerSocketId){\n              setPictureUrl(\n                getThumbnailUrl()\n              );\n            }\n        }\n\n        const _handleNumberOfConnectedChanged = (data) => {\n            let  { connectedUsers, dealerSocketId } = data.dealerSocketId\n            if (dealerSocketId === props.dealerSocketId) {\n              //by odin it is this\n              setNumberOfCurrentlyConnectedClients(connectedUsers);\n            }\n        }\n\n        props.sharedSocket.on('broadcastVideoThumbnailHasChanged', _handleThumbnailEvent)\n        props.sharedSocket.on('numberOfViews', _handleNumberOfConnectedChanged)\n        setPictureUrl(\n            getThumbnailUrl()\n        );\n        return () => {\n            props.sharedSocket.off('broadcastVideoThumbnailHasChanged', _handleThumbnailEvent);\n            props.sharedSocket.off('numberOfViews', _handleNumberOfConnectedChanged);\n        }\n    },[]);\n\n\n    function handleOnClick(e) {\n        if (props.onClick) {\n            props.onClick(e);\n        }\n    }\n    \n    \n    return (\n        _.isPlainObject(props.data) && notEmptyLength(objectRemoveEmptyValue(props.data)) ?\n            <React.Fragment>\n                <div className={`${props.className ? props.className : ''} background-white`} style={{ height: `${defaultHeight}px`, width: '100%', ...props.style }} onClick={(e) => { handleOnClick(e) }}\n                    \n                >\n                    {/* <div className=\"width-100 relative-wrapper\" style={{ height: !props.style || !isValidNumber(props.style.height) ? `${defaultHeight * 0.85}px` : `${parseFloat(props.style.height) * 0.85}px` }} > */}\n                    <div className=\"width-100 relative-wrapper\" style={{ height: !props.style || !isValidNumber(props.style.height) ? `${defaultHeight * 1}px` : `${parseFloat(props.style.height) * 1}px` }} >\n                        <img \n                            // src={_.get(props.data , ['dealerVideoThumbnailUrl'])} \n                            src={pictureUrl}\n                            className='fill-parent absolute-center img-cover background-black'\n                        />\n                        {/* <video ref={props.videoRef} autoPlay muted className='fill-parent absolute-center background-black'/> */}\n                        <div className=\"absolute-center flex-items-align-center flex-justify-center fill-parent background-black opacity-30 \" >\n                        </div>\n                        <img src={liveIcon} style={{ position: 'absolute', top: 0, left: 10, margin: 'auto', width: '50px', height: '50px' }} />\n                        <div className=\"background-grey-darken-4 opacity-80 round-border-light flex-items-align-center flex-justify-center padding-x-sm\" style={{ position: 'absolute', top: 10, left: 70, margin: 'auto', height: '30px' }}>\n                            <Icon type=\"eye\" theme=\"filled\" className='margin-right-sm white' />\n                            <span className='d-inline-block white' >\n                                {numberOfCurrentlyConnectedClients}\n                            </span>\n                        </div>\n                        <div className=\"background-transparent flex-items-align-center flex-justify-center\" style={{ position: 'absolute', bottom: 0, left: 10, margin: 'auto', width: '90%', height: !props.style || !isValidNumber(props.style.height) ? `${defaultHeight * 0.85 * 0.4}px` : `${parseFloat(props.style.height) * 0.85 * 0.4}px` }}>\n                            <UserAvatar \n                                redirectProfile \n                                data={{\n                                    name:props.data.dealerDisplayName,\n                                    avatar:props.data.dealerAvatar,\n                                }} \n                                size={70} \n                                className='margin-right-md'\n                            />\n                            <span className='d-inline-block width-80' >\n                                <div className=\"font-weight-bold white subtitle1 text-truncate \">\n                                    {props.data.title}\n                                </div>\n                                <div className=\"font-weight-normal white subtitle1 text-truncate\">\n                                    {_.isPlainObject(props.data) && notEmptyLength(objectRemoveEmptyValue(props.data)) ? `${props.data.name}` : null}\n                                </div>\n                            </span>\n                        </div>\n                    </div>\n                    {/* <div className=\"width-100 flex-justify-space-between flex-items-align-center\" style={{ height: !props.style || !isValidNumber(props.style.height) ? `${defaultHeight * 0.15}px` : `${parseFloat(props.style.height) * 0.15}px` }}>\n\n                        <span className=\"height-100 flex-justify-start flex-items-align-center padding-x-sm\">\n                            <span className='flex-items-align-center flex-justify-center cursor-pointer margin-right-sm' >\n                                <img src={likeIcon} style={{ width: '20px', height: '20px' }} className='margin-right-xs' />\n                                <span className='grey headline  ' >\n                                    Like\n                                </span>\n                            </span>\n                            <span className='flex-items-align-center flex-justify-center cursor-pointer margin-right-sm' >\n                                <img src={commentIcon} style={{ width: '20px', height: '20px' }} className='margin-right-xs' />\n                                <span className='grey headline  ' >\n                                    Comment\n                                </span>\n                            </span>\n                            <span className='flex-items-align-center flex-justify-center cursor-pointer margin-right-sm' >\n                                <img src={shareIcon} style={{ width: '20px', height: '20px' }} className='margin-right-xs' />\n                                <span className='grey headline  ' >\n                                    Share\n                                </span>\n                            </span>\n                        </span>\n\n                        <span className=\"height-100 flex-justify-end flex-items-align-center padding-x-sm\">\n                            <span className='flex-items-align-center flex-justify-center cursor-pointer margin-right-sm' >\n                                {notEmptyLength(objectRemoveEmptyValue(props.data.reactionSummary)) ?\n                                    <React.Fragment>\n                                        <span className='d-inline-block margin-right-xs' >\n                                            {formatNumber(getTotalReactions(props.data.reactionSummary), 'auto', true, 1, true)}\n                                        </span>\n                                        {\n                                            notEmptyLength(getTopReactions(props.data.reactionSummary, 3)) ?\n                                                _.map(getTopReactions(props.data.reactionSummary, 3), function (reaction, index) {\n                                                    return (\n                                                        <React.Fragment>\n                                                            <img src={reactionGif[`${reaction.type}Gif`]} style={{ width: '25px', height: '25px', position: 'relative', left: -7 * index, zIndex: defaultReactions.length - index }} />\n                                                        </React.Fragment>\n                                                    )\n                                                })\n                                                :\n                                                null\n                                        }\n                                    </React.Fragment>\n                                    :\n                                    null\n                                }\n                            </span>\n                            <span className='flex-items-align-center flex-justify-center cursor-pointer' >\n                                {\n                                    props.data.totalChat ?\n                                        <React.Fragment>\n                                            <span className='d-inline-block margin-right-xs grey headline  ' >\n                                                {formatNumber(props.data.totalChat, 'auto', true, 1, true)} comments\n                                        </span>\n                                        </React.Fragment>\n                                        :\n                                        null\n                                }\n                            </span>\n                        </span>\n                    </div> */}\n                </div>\n\n            </React.Fragment>\n            :\n            null\n    );\n}\n\n\nconst mapStateToProps = state => ({\n    app: state.app,\n    user: state.user,\n});\n\nconst mapDispatchToProps = {\n    setUser: setUser,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Form.create()(withRouter(LiveBoxPreview1)));"]},"metadata":{},"sourceType":"module"}