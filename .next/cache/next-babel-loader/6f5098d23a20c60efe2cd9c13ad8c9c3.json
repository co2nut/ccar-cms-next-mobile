{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport _, { upperFirst } from 'lodash';\nimport moment from 'moment';\nimport { FETCH_REVISION_ANSWERED_QUESTIONS } from '../actions/kpp-actions';\nimport { isValidNumber } from '../../common-function';\nimport localStorage from 'local-storage';\nimport { checkIsNeedPersist, checkNeedPersist, getPersistObj, persistRedux } from '../config';\nvar INITIAL_STATE = {\n  answeredEnRevisionSectionAPaper: [],\n  answeredEnRevisionSectionBPaper: [],\n  answeredEnRevisionSectionCPaper: [],\n  answeredBmRevisionSectionAPaper: [],\n  answeredBmRevisionSectionBPaper: [],\n  answeredBmRevisionSectionCPaper: []\n};\nexport default function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  // checkNeedPersist(_.get(action, 'type'), 'kpp', _.get(action, 'payload'), _.get(action, 'isRestoreData'));\n  var persistStates = _.get(localStorage.get('redux') || {}, 'kpp') || INITIAL_STATE;\n\n  var newState = _objectSpread(_objectSpread({}, state), persistStates);\n\n  if (!_.isEqual(state, newState)) {\n    state = newState;\n  }\n\n  switch (action.type) {\n    case FETCH_REVISION_ANSWERED_QUESTIONS:\n      if (!action.payload || !isValidNumber(action.payload.group) || !action.payload.language) {\n        state = state;\n      } else {\n        state[\"answered\".concat(_.upperFirst(action.payload.language), \"RevisionSection\").concat(String.fromCharCode(65 + parseInt(action.payload.group)), \"Paper\")] = action.payload.data;\n        state = _objectSpread({}, state);\n      }\n\n      break;\n\n    default:\n      state = state;\n      break;\n  }\n\n  persistRedux('kpp', state);\n  return state;\n}","map":{"version":3,"sources":["/Users/faraheen/ccar-cms-next-mobile/redux/reducers/kpp-reducer.js"],"names":["_","upperFirst","moment","FETCH_REVISION_ANSWERED_QUESTIONS","isValidNumber","localStorage","checkIsNeedPersist","checkNeedPersist","getPersistObj","persistRedux","INITIAL_STATE","answeredEnRevisionSectionAPaper","answeredEnRevisionSectionBPaper","answeredEnRevisionSectionCPaper","answeredBmRevisionSectionAPaper","answeredBmRevisionSectionBPaper","answeredBmRevisionSectionCPaper","state","action","persistStates","get","newState","isEqual","type","payload","group","language","String","fromCharCode","parseInt","data"],"mappings":";;;;;;AAAA,OAAOA,CAAP,IAAYC,UAAZ,QAA8B,QAA9B;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,iCAAT,QAAkD,wBAAlD;AACA,SAASC,aAAT,QAA8B,uBAA9B;AACA,OAAOC,YAAP,MAAyB,eAAzB;AACA,SAASC,kBAAT,EAA6BC,gBAA7B,EAA+CC,aAA/C,EAA8DC,YAA9D,QAAkF,WAAlF;AAGA,IAAMC,aAAa,GAAG;AAClBC,EAAAA,+BAA+B,EAAE,EADf;AAElBC,EAAAA,+BAA+B,EAAE,EAFf;AAGlBC,EAAAA,+BAA+B,EAAE,EAHf;AAIlBC,EAAAA,+BAA+B,EAAE,EAJf;AAKlBC,EAAAA,+BAA+B,EAAE,EALf;AAMlBC,EAAAA,+BAA+B,EAAE;AANf,CAAtB;AAUA,eAAe,YAAyC;AAAA,MAA/BC,KAA+B,uEAAvBP,aAAuB;AAAA,MAARQ,MAAQ;AAEpD;AAEA,MAAIC,aAAa,GAAGnB,CAAC,CAACoB,GAAF,CAAMf,YAAY,CAACe,GAAb,CAAiB,OAAjB,KAA6B,EAAnC,EAAuC,KAAvC,KAAiDV,aAArE;;AACA,MAAIW,QAAQ,mCACLJ,KADK,GAELE,aAFK,CAAZ;;AAIA,MAAG,CAACnB,CAAC,CAACsB,OAAF,CAAUL,KAAV,EAAiBI,QAAjB,CAAJ,EAA+B;AAC7BJ,IAAAA,KAAK,GAAGI,QAAR;AACD;;AACD,UAAQH,MAAM,CAACK,IAAf;AACI,SAAKpB,iCAAL;AACI,UAAI,CAACe,MAAM,CAACM,OAAR,IAAmB,CAACpB,aAAa,CAACc,MAAM,CAACM,OAAP,CAAeC,KAAhB,CAAjC,IAA2D,CAACP,MAAM,CAACM,OAAP,CAAeE,QAA/E,EAAyF;AACrFT,QAAAA,KAAK,GAAGA,KAAR;AACH,OAFD,MAEO;AACHA,QAAAA,KAAK,mBAAYjB,CAAC,CAACC,UAAF,CAAaiB,MAAM,CAACM,OAAP,CAAeE,QAA5B,CAAZ,4BAAmEC,MAAM,CAACC,YAAP,CAAoB,KAAKC,QAAQ,CAACX,MAAM,CAACM,OAAP,CAAeC,KAAhB,CAAjC,CAAnE,WAAL,GAA2IP,MAAM,CAACM,OAAP,CAAeM,IAA1J;AACAb,QAAAA,KAAK,qBACEA,KADF,CAAL;AAGH;;AACD;;AACJ;AACIA,MAAAA,KAAK,GAAGA,KAAR;AACA;AAbR;;AAeAR,EAAAA,YAAY,CAAC,KAAD,EAAQQ,KAAR,CAAZ;AAEA,SAAOA,KAAP;AACH","sourcesContent":["import _, { upperFirst } from 'lodash'\nimport moment from 'moment'\nimport { FETCH_REVISION_ANSWERED_QUESTIONS } from '../actions/kpp-actions';\nimport { isValidNumber } from '../../common-function';\nimport localStorage from 'local-storage';\nimport { checkIsNeedPersist, checkNeedPersist, getPersistObj, persistRedux } from '../config';\n\n\nconst INITIAL_STATE = {\n    answeredEnRevisionSectionAPaper: [],\n    answeredEnRevisionSectionBPaper: [],\n    answeredEnRevisionSectionCPaper: [],\n    answeredBmRevisionSectionAPaper: [],\n    answeredBmRevisionSectionBPaper: [],\n    answeredBmRevisionSectionCPaper: [],\n\n}\n\nexport default function (state = INITIAL_STATE, action) {\n\n    // checkNeedPersist(_.get(action, 'type'), 'kpp', _.get(action, 'payload'), _.get(action, 'isRestoreData'));\n\n    let persistStates = _.get(localStorage.get('redux') || {}, 'kpp') || INITIAL_STATE;\n    let newState = {\n        ...state,\n        ...persistStates\n    }\n    if(!_.isEqual(state, newState)){\n      state = newState;\n    }\n    switch (action.type) {\n        case FETCH_REVISION_ANSWERED_QUESTIONS:\n            if (!action.payload || !isValidNumber(action.payload.group) || !action.payload.language) {\n                state = state;\n            } else {\n                state[`answered${_.upperFirst(action.payload.language)}RevisionSection${String.fromCharCode(65 + parseInt(action.payload.group))}Paper`] = action.payload.data;\n                state = {\n                    ...state\n                };\n            }\n            break;\n        default:\n            state = state\n            break;\n    }\n    persistRedux('kpp', state)\n\n    return state;\n}"]},"metadata":{},"sourceType":"module"}