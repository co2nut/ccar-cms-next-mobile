{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { AppstoreOutlined, BarsOutlined } from '@ant-design/icons';\nimport { Tag, Collapse, Button, Col, Divider, Drawer, Empty, Icon, Pagination, Radio, Row, Select, Spin, Tooltip, Form } from 'antd';\nimport axios from 'axios';\nimport _ from 'lodash';\nimport { withRouter } from 'next/dist/client/router';\nimport Link from 'next/link';\nimport { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { convertParameterToProductListUrl, notEmptyLength, isValidNumber, convertRangeFormatBack, objectRemoveEmptyValue, formatNumber } from '../../../common-function';\nimport LayoutV2 from '../../../components/general/LayoutV2';\nimport ProductList from '../../../components/product-list/ProductList';\nimport ProductListFilterForm from '../../../components/product-list/ProductListFilterForm';\nimport client from '../../../feathers';\nimport { loading, updateActiveMenu } from '../../../redux/actions/app-actions';\nimport { getCarBrand } from '../../../params/carBrandsList';\nimport GridProductSkeleton from '../../skeleton-loader/GridProductSkeleton';\nimport queryString from 'query-string';\nimport carAdsFilter from '../../../api/carAdsFilter';\nimport brandFilterTotal from '../../../api/brandFilterTotal';\nimport { setProductListLoading } from '../../../redux/actions/productsList-actions';\nimport MakeModal from '../filter-modal/MakeModal';\nimport StateModal from '../filter-modal/StateModal';\nimport Scrollbars from 'react-custom-scrollbars';\nimport DetailFilterForm from '../DetailFilterForm';\nconst priceRangeOptions = [[50000, '<'], [50000, 100000], [100000, 200000], [200000, 400000], [400000, 600000], [600000, 800000], [800000, 1000000], [1000000, '>=']];\nconst years = [2020, 2019, 2018, 2017, 2016, 2015, 2014, 2013, 2012, 2011, 2010, 2009, 2008, 2007, 2006, 2005, 2004, 2003, 2002, 2001, 2000, 1999, 1998, 1997, 1996, 1995, 1994, 1993, 1992, 1991, 1990];\nconst modals = ['make', 'model', 'state', 'area', 'bodyType', 'color', 'fuelType'];\n\nconst antIcon = __jsx(\"img\", {\n  src: \"/assets/Ccar-logo.png\",\n  style: {\n    fontSize: 60\n  }\n});\n\nconst PAGESIZE = 30;\nconst searchBarRef = React.createRef();\nlet timeoutFunction;\nconst SWITCH_OFF_COLOR = '#9E9E9E';\nconst SWITCH_ON_COLOR = '#FFCC32';\n\nconst CarMarketPage = props => {\n  const {\n    0: mainConfig,\n    1: setMainConfig\n  } = useState(props.config || {\n    page: 1,\n    sorting: {},\n    view: 'gridView'\n  });\n  const {\n    0: view,\n    1: setView\n  } = useState('gridView');\n  const {\n    0: currentFilterGroup,\n    1: setCurrentFilterGroup\n  } = useState(props.filterGroup || {});\n  const {\n    0: availableFilterOption,\n    1: setAvailableFilterOption\n  } = useState(props.availableOptions || {});\n  const {\n    0: total,\n    1: setTotal\n  } = useState(props.productListTotal || 0);\n  const {\n    0: productList,\n    1: setProductList\n  } = useState(props.productList || []);\n  const {\n    0: spinning,\n    1: setSpinning\n  } = useState(false);\n  const {\n    0: isEmptyData,\n    1: setIsEmptyData\n  } = useState(false);\n  const {\n    0: initRan,\n    1: setInitRan\n  } = useState({\n    filterGroup: false,\n    config: false\n  });\n  const {\n    0: visible,\n    1: setVisible\n  } = useState();\n  const {\n    0: drawerType,\n    1: setDrawerType\n  } = useState('brand');\n  const {\n    0: expandKey,\n    1: setExpandKey\n  } = useState();\n  const {\n    0: origAvailableFilterOption,\n    1: setOrigAvailableFilterOption\n  } = useState({});\n  useEffect(() => {\n    props.updateActiveMenu('2');\n    getOrigAvailableOptions();\n  }, []);\n  useEffect(() => {\n    setInitRan({\n      filterGroup: true,\n      config: true\n    });\n  }, []);\n  useEffect(() => {\n    if (initRan.filterGroup && initRan.config) {\n      getDataFromUrl();\n    }\n  }, [props.router.query]);\n  useEffect(() => {\n    if (initRan.filterGroup && initRan.config) {\n      props.setProductListLoading(true);\n\n      if (window) {\n        window.scroll(0, 0);\n      }\n\n      clearTimeout(timeoutFunction);\n      timeoutFunction = setTimeout(() => {\n        carAdsFilter({\n          filterGroup: currentFilterGroup,\n          config: mainConfig\n        }, PAGESIZE).then(res => {\n          props.setProductListLoading(false);\n          setProductList(_.get(res, ['data']) || []);\n          setTotal(_.get(res, ['total']) || 0);\n        }).catch(err => {\n          props.setProductListLoading(false);\n        });\n        brandFilterTotal(modals, {\n          filterGroup: currentFilterGroup,\n          config: mainConfig\n        }).then(res => {\n          setAvailableFilterOption(res);\n        }).catch(err => {});\n      }, 500);\n    }\n  }, [currentFilterGroup, mainConfig]);\n  useEffect(() => {\n    setTimeout(() => {\n      let productList2 = _.cloneDeep(productList);\n\n      let inputProductList = _.map(productList2, function (v) {\n        v.productAdsId = v._id;\n        return {\n          productAdsId: v.productAdsId\n        };\n      });\n\n      if (_.isEmpty(inputProductList) === false) {\n        axios.post(`${client.io.io.uri}processImpression`, {\n          params: {\n            productList: inputProductList,\n            source: 'web'\n          }\n        }).then(res => {});\n      }\n    }, 3000);\n  }, [productList]);\n\n  const showDrawer = () => {\n    visible == true ? setVisible(false) : setVisible(true);\n  };\n\n  const onClose = () => {\n    visible == false ? setVisible(true) : setVisible(false);\n  };\n\n  function pushParameterToUrl(data, config) {\n    try {\n      let path = convertParameterToProductListUrl(data, config);\n      let asPath = path.split('?')[0].split('/');\n      asPath = _.map(asPath, function (item, i) {\n        if (i > 1) {\n          item = `[parameter${i - 1}]`;\n        }\n\n        return item;\n      });\n      asPath = asPath.join('/');\n      setProductList([]);\n      props.setProductListLoading(true);\n      props.router.push(asPath, path, {\n        shallow: true\n      });\n    } catch (error) {}\n  }\n\n  function getUrlData() {\n    try {\n      let querySearch = props.router.asPath.split('?')[1];\n      let query = queryString.parse(querySearch);\n\n      if (!query) {\n        query = {};\n      }\n\n      let filterGroup = query.data ? JSON.parse(query.data) : {};\n      let sorting = query.sorting ? JSON.parse(query.sorting) : {};\n      let config = {\n        page: query.page,\n        sorting: sorting,\n        view: query.view\n      };\n\n      if (!isValidNumber(parseInt(config.page))) {\n        config.page = 1;\n      }\n\n      if (!_.get(config, ['sorting', 'carspec.year']) && !_.get(config, ['sorting', 'mileageFilter']) && !_.get(config, ['sorting', 'searchPrice'])) {\n        config.sorting = {};\n      }\n\n      if (_.get(config, ['view']) != 'gridView' && _.get(config, ['view']) != 'listView') {\n        config.view = 'gridView';\n      }\n\n      setMainConfig(config); //Only state need to check manually;\n\n      let state = props.router.asPath.split('?')[0].split('/');\n      state = state[state.length - 1];\n      let stateArr = state.split('_');\n      filterGroup.state = _.isArray(stateArr) && !_.isEmpty(stateArr) ? _.get(stateArr, [1]) || '' : '';\n      filterGroup.area = _.isArray(stateArr) && !_.isEmpty(stateArr) ? _.get(stateArr, [2]) || '' : '';\n\n      if (filterGroup.priceRange) {\n        filterGroup.priceRange = convertRangeFormatBack(filterGroup.priceRange);\n      }\n\n      if (filterGroup.yearRange) {\n        filterGroup.yearRange = convertRangeFormatBack(filterGroup.yearRange);\n      }\n\n      if (filterGroup.mileageRange) {\n        filterGroup.mileageRange = convertRangeFormatBack(filterGroup.mileageRange);\n      }\n\n      if (filterGroup.engineCapactityRange) {\n        filterGroup.engineCapactityRange = convertRangeFormatBack(filterGroup.engineCapactityRange);\n      }\n\n      setCurrentFilterGroup(_objectSpread(_objectSpread({}, currentFilterGroup), filterGroup));\n    } catch (error) {\n      console.log('error', error);\n    }\n  }\n\n  function pushParameterToUrl(data, config) {\n    let path = convertParameterToProductListUrl(data, config);\n\n    if (path != `${props.router.asPath}${props.router.query}`) {\n      props.router.push(path);\n      setExpandKey(null);\n    }\n  }\n\n  function getDataFromUrl() {\n    window.scrollTo(0, 0);\n    props.loading(true);\n    let andFilter = {\n      $and: []\n    };\n    let data = getUrlData();\n\n    if (!notEmptyLength(data)) {\n      return;\n    }\n\n    if (notEmptyLength(data.filterGroup) && notEmptyLength(data.filterGroup.yearRange)) {\n      data.filterGroup.yearRange = convertToRangeFormat(data.filterGroup.yearRange);\n      data.filterGroup.yearRange = convertFilterRange(data.filterGroup.yearRange, 'carspec.year');\n\n      if (notEmptyLength(data.filterGroup.yearRange)) {\n        andFilter.$and = [...andFilter.$and, ...data.filterGroup.yearRange];\n        data.filterGroup = Object.assign(data.filterGroup, andFilter);\n      }\n\n      delete data.filterGroup.yearRange;\n    }\n\n    if (notEmptyLength(data.filterGroup) && notEmptyLength(data.filterGroup.priceRange)) {\n      data.filterGroup.priceRange = convertToRangeFormat(data.filterGroup.priceRange);\n      data.filterGroup.priceRange = convertFilterRange(data.filterGroup.priceRange, 'searchPrice');\n\n      if (notEmptyLength(data.filterGroup.priceRange)) {\n        andFilter.$and = [...andFilter.$and, ...data.filterGroup.priceRange];\n        data.filterGroup = Object.assign(data.filterGroup, andFilter);\n      }\n\n      delete data.filterGroup.priceRange;\n    }\n\n    if (notEmptyLength(data.filterGroup) && notEmptyLength(data.filterGroup.mileageRange)) {\n      data.filterGroup.mileageRange = convertToRangeFormat(data.filterGroup.mileageRange);\n      data.filterGroup.mileageRange = convertFilterRange(data.filterGroup.mileageRange, 'mileageFilter');\n\n      if (notEmptyLength(data.filterGroup.mileageRange)) {\n        andFilter.$and = [...andFilter.$and, ...data.filterGroup.mileageRange];\n        data.filterGroup = Object.assign(data.filterGroup, andFilter);\n      }\n\n      delete data.filterGroup.mileageRange;\n    }\n\n    if (notEmptyLength(data.filterGroup) && notEmptyLength(data.filterGroup.engineCapacityRange)) {\n      data.filterGroup.engineCapacityRange = convertToRangeFormat(data.filterGroup.engineCapacityRange);\n      data.filterGroup.engineCapacityRange = convertFilterRange(data.filterGroup.engineCapacityRange, 'carspec.engineCapacity');\n\n      if (notEmptyLength(data.filterGroup.engineCapacityRange)) {\n        andFilter.$and = [...andFilter.$and, ...data.filterGroup.engineCapacityRange];\n        data.filterGroup = Object.assign(data.filterGroup, andFilter);\n      }\n\n      delete data.filterGroup.engineCapacityRange;\n    }\n\n    data.filterGroup = objectRemoveEmptyValue(data.filterGroup);\n    let match = {\n      $match: _objectSpread({}, data.filterGroup)\n    };\n    axios.get(`${client.io.io.uri}carAdsFilterV3`, {\n      params: {\n        match,\n        sorting: data.mainConfig.sorting || {},\n        limit: PAGESIZE,\n        skip: ((_.get(data.mainConfig, ['page']) || 1) - 1) * PAGESIZE\n      }\n    }).then(res => {\n      props.loading(false);\n\n      if (notEmptyLength(res.data.data)) {\n        setProductList(res.data.data);\n        setTotal(res.data.total);\n      } else {\n        setProductList([]);\n        setTotal(0);\n      }\n    }).catch(err => {\n      props.loading(false); // message.error(err.message);\n    });\n    let promises = [];\n\n    _.forEach(modals, function (modal) {\n      promises.push(axios.get(`${client.io.io.uri}brandFilterTotalV3`, {\n        params: {\n          filterType: modal,\n          match\n        },\n        headers: {\n          'Authorization': client.settings.accessToken\n        }\n      }));\n    });\n\n    Promise.all(promises).then(responses => {\n      if (_.isArray(responses) && !_.isEmpty(responses)) {\n        let options = {};\n\n        _.forEach(responses, function (response, index) {\n          options[`${modals[index]}List`] = response.data.uniqueInfo[`${modals[index]}List`];\n        });\n\n        setAvailableFilterOption(options);\n      }\n    }).catch(err => {// message.error(err.message);\n    });\n  }\n\n  async function getOrigAvailableOptions(match) {\n    if (!_.isPlainObject(match) && _.isEmpty(match)) {\n      match = {};\n    }\n\n    let promises = [];\n\n    _.forEach(modals, function (modal) {\n      promises.push(axios.get(`${client.io.io.uri}brandFilterTotalV3`, {\n        params: {\n          filterType: modal,\n          match\n        },\n        headers: {\n          'Authorization': client.settings.accessToken\n        }\n      }));\n    });\n\n    let responses = await Promise.all(promises);\n\n    if (_.isArray(responses) && !_.isEmpty(responses)) {\n      let options = {};\n\n      _.forEach(responses, function (response, index) {\n        options[`${modals[index]}List`] = response.data.uniqueInfo[`${modals[index]}List`];\n      });\n\n      setOrigAvailableFilterOption(options);\n    }\n  }\n\n  const _renderFilterTags = filterGroup => {\n    try {\n      const showTags = ['make', 'model', 'state', 'condition', 'yearRange', 'priceRange', 'mileageRange', 'transmission', 'color', 'bodyType', 'fuelType', 'engineCapacityRange'];\n\n      if (_.isPlainObject(filterGroup) && !_.isEmpty(filterGroup)) {\n        filterGroup = _.pick(objectRemoveEmptyValue(filterGroup), showTags);\n\n        if (filterGroup.yearRange) {\n          filterGroup.yearRange = convertRangeFormatToText(filterGroup.yearRange);\n        }\n\n        if (filterGroup.priceRange) {\n          filterGroup.priceRange = convertRangeFormatToText(filterGroup.priceRange, 'price');\n        }\n\n        if (filterGroup.mileageRange) {\n          filterGroup.mileageRange = convertRangeFormatToText(filterGroup.mileageRange, 'mileage');\n        }\n\n        if (filterGroup.engineCapacityRange) {\n          filterGroup.engineCapacityRange = convertRangeFormatToText(filterGroup.engineCapacityRange, 'engineCapacity');\n        }\n\n        filterGroup = Object.entries(filterGroup) || [];\n        return __jsx(Scrollbars, {\n          autoHide: true,\n          autoHeight: true\n        }, __jsx(\"div\", {\n          className: \" flex-items-align-center flex-justify-start\"\n        }, _.map(filterGroup || [], function (item) {\n          return __jsx(Tag, {\n            key: `${item[0]}-tag`,\n            className: \" capitalize margin-right-md\",\n            closable: true,\n            onClose: () => {\n              let cloneFilterGroup = _.cloneDeep(currentFilterGroup) || {};\n              delete cloneFilterGroup[item[0]];\n              pushParameterToUrl(cloneFilterGroup, _objectSpread(_objectSpread({}, mainConfig), {}, {\n                page: 1\n              }));\n            },\n            color: \"orange\"\n          }, item[1] || 'N/A');\n        })));\n      }\n\n      return null;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const _renderGridViewRes = data => {\n    if (notEmptyLength(data)) {\n      return __jsx(ProductList, {\n        data: data\n      });\n    } else {\n      return __jsx(\"div\", {\n        style: {\n          height: '30em'\n        }\n      }, __jsx(Empty, {\n        style: {\n          position: 'absolute',\n          top: '50%',\n          transform: 'translate(50%,-50%)',\n          right: '50%'\n        },\n        image: \"/empty.png\",\n        imageStyle: {\n          height: 60\n        },\n        description: __jsx(\"span\", null, \"No Result\")\n      }));\n    }\n  };\n\n  const menuView = __jsx(MakeModal, {\n    options: _.isArray(_.get(availableFilterOption, ['makeList'])) && !_.isEmpty(_.get(availableFilterOption, ['makeList'])) && !currentFilterGroup.make ? _.get(availableFilterOption, ['makeList']) : _.get(origAvailableFilterOption, ['makeList']) || [],\n    onSelect: (brand, model) => {\n      setCurrentFilterGroup(_objectSpread(_objectSpread({}, currentFilterGroup), {}, {\n        make: _.toLower(_.get(brand, 'value') || ''),\n        model: _.toLower(_.get(model, 'model') || ''),\n        selectFilter: brand.value.concat([])\n      }));\n      pushParameterToUrl(_objectSpread(_objectSpread({}, currentFilterGroup), {}, {\n        make: _.toLower(_.get(brand, 'value') || ''),\n        model: _.toLower(_.get(model, 'model') || '')\n      }), mainConfig);\n    }\n  });\n\n  const stateView = __jsx(StateModal, {\n    options: _.isArray(_.get(availableFilterOption, ['stateList'])) && !_.isEmpty(_.get(availableFilterOption, ['stateList'])) && !currentFilterGroup.state ? _.get(availableFilterOption, ['stateList']) : _.get(origAvailableFilterOption, ['stateList']) || [],\n    onSelect: state => {\n      if (_.get(state, ['value'])) {\n        setCurrentFilterGroup(_objectSpread(_objectSpread({}, currentFilterGroup), {}, {\n          state: _.toLower(state.value)\n        }));\n        pushParameterToUrl(_objectSpread(_objectSpread({}, currentFilterGroup), {}, {\n          state: _.toLower(state.value)\n        }), mainConfig);\n      }\n    }\n  }); //   const yearView = (\n  //     <YearRangeFiltering onChange={(data) => {\n  //       if (_.isPlainObject(data) && !_.isEmpty(data)) {\n  //         setCurrentFilterGroup({\n  //           ...currentFilterGroup,\n  //           ...data\n  //         })\n  //         pushParameterToUrl({ ...currentFilterGroup, ...data }, mainConfig)\n  //       }\n  //     }} />\n  //   )\n\n\n  const priceView = __jsx(Row, {\n    style: {\n      marginTop: '10px'\n    }\n  }, _.map(priceRangeOptions, function (priceRange) {\n    return __jsx(Col, {\n      span: 8,\n      style: {\n        marginBottom: '10px'\n      }\n    }, __jsx(Button, {\n      className: \"margin-x-sm\",\n      onClick: e => {\n        pushParameterToUrl(_objectSpread(_objectSpread({}, currentFilterGroup), {}, {\n          priceRange: priceRange\n        }), _objectSpread(_objectSpread({}, mainConfig), {}, {\n          page: 1\n        }));\n      }\n    }, !priceRange[1] || priceRange[1] == '<' || priceRange[1] == '<=' ? `0-${formatNumber(priceRange[0], 'auto', false, 0)}` : priceRange[1] == '==' ? `Equal ${formatNumber(priceRange[0], 'auto', false, 0)}` : priceRange[1] == '>' || priceRange[1] == '>=' ? `Over ${formatNumber(priceRange[0], 'auto', false, 0)}` : `${formatNumber(priceRange[0], 'auto', false, 0)} - ${formatNumber(priceRange[1], 'auto', false, 0)} `));\n  })); // const detailView = (\n  //   <div style={{ marginTop: '10px' }}>\n  //     <DetailFilterForm options={availableFilterOption} onChange={(data) => {\n  //       if (_.isPlainObject(data) && !_.isEmpty(data)) {\n  //         setCurrentFilterGroup({\n  //           ...currentFilterGroup,\n  //           ...data\n  //         })\n  //         pushParameterToUrl({ ...currentFilterGroup, ...data }, mainConfig)\n  //       }\n  //     }} />\n  //   </div>\n  // )\n\n\n  const conditionView = __jsx(Form.Item, {\n    style: {\n      margin: '0px',\n      marginBottom: '0px',\n      padding: '2px 2px 0px 0px'\n    }\n  }, __jsx(Radio.Group, {\n    className: \"condition-form \",\n    style: {\n      textAlign: 'center',\n      width: '100%',\n      padding: '0px'\n    },\n    value: currentFilterGroup.condition ? currentFilterGroup.condition : 'all',\n    onChange: e => {\n      setCurrentFilterGroup(_objectSpread(_objectSpread({}, currentFilterGroup), {}, {\n        condition: e.target.value\n      }));\n      pushParameterToUrl(_objectSpread(_objectSpread({}, currentFilterGroup), {}, {\n        condition: _.toLower(e.target.value)\n      }), _objectSpread(_objectSpread({}, mainConfig), {}, {\n        page: 1\n      }));\n    }\n  }, __jsx(Row, {\n    gutter: [10, 0],\n    type: \"flex\",\n    align: \"middle\",\n    justify: \"space-around\",\n    className: \"fill-parent\"\n  }, __jsx(Col, {\n    xs: 8,\n    sm: 8,\n    md: 8,\n    lg: 8,\n    xl: 8\n  }, __jsx(Radio.Button, {\n    className: \"w-100\",\n    style: {\n      backgroundColor: \"\",\n      padding: 0\n    },\n    value: \"used\",\n    onClick: e => {\n      if (currentFilterGroup.condition == 'used') {\n        setCurrentFilterGroup(_objectSpread(_objectSpread({}, currentFilterGroup), {}, {\n          condition: ''\n        }));\n      }\n    }\n  }, __jsx(\"p\", {\n    style: {\n      fontSize: \"10px\",\n      textAlign: \"center\",\n      fontWeight: \"bold\"\n    }\n  }, \"USED\"))), __jsx(Col, {\n    xs: 8,\n    sm: 8,\n    md: 8,\n    lg: 8,\n    xl: 8\n  }, __jsx(Radio.Button, {\n    className: \"w-100\",\n    style: {\n      backgroundColor: \"\",\n      padding: 0\n    },\n    value: \"recon\",\n    onClick: e => {\n      if (currentFilterGroup.condition == 'recon') {\n        setCurrentFilterGroup(_objectSpread(_objectSpread({}, currentFilterGroup), {}, {\n          condition: ''\n        }));\n      }\n    }\n  }, __jsx(\"p\", {\n    style: {\n      fontSize: \"10px\",\n      textAlign: \"center\",\n      fontWeight: \"bold\"\n    }\n  }, \"RECON\"))), __jsx(Col, {\n    xs: 8,\n    sm: 8,\n    md: 8,\n    lg: 8,\n    xl: 8\n  }, __jsx(Radio.Button, {\n    className: \"w-100\",\n    style: {\n      backgroundColor: \"\",\n      padding: 0\n    },\n    value: \"new\",\n    onClick: e => {\n      if (currentFilterGroup.condition == 'new') {\n        setCurrentFilterGroup(_objectSpread(_objectSpread({}, currentFilterGroup), {}, {\n          condition: ''\n        }));\n      }\n    }\n  }, __jsx(\"p\", {\n    style: {\n      fontSize: \"10px\",\n      textAlign: \"center\",\n      fontWeight: \"bold\"\n    }\n  }, \"NEW\"))))));\n\n  const sortingView = () => {\n    const compA = searchTypeObj => {\n      return __jsx(\"div\", {\n        style: {\n          width: '20px',\n          height: '20px',\n          float: 'right',\n          backgroundColor: '#000000'\n        },\n        className: \"cursor-pointer thin-border round-border\",\n        onClick: e => {\n          pushParameterToUrl(currentFilterGroup, {\n            sorting: _objectSpread({}, searchTypeObj),\n            page: 1\n          });\n        }\n      });\n    };\n\n    const compB = searchTypeObj => {\n      return __jsx(\"div\", {\n        style: {\n          width: '20px',\n          height: '20px',\n          float: 'right'\n        },\n        className: \"cursor-pointer thin-border round-border\",\n        onClick: e => {\n          pushParameterToUrl(currentFilterGroup, {\n            sorting: _objectSpread({}, searchTypeObj),\n            page: 1\n          });\n        }\n      });\n    };\n\n    return __jsx(\"div\", {\n      className: \"width-100\"\n    }, __jsx(\"div\", {\n      className: \"margin-top-sm\"\n    }, __jsx(\"h4\", null, \"Sort\"), __jsx(Row, null, __jsx(Col, {\n      span: 20\n    }, __jsx(\"p\", null, \"Price: Low to High\")), __jsx(Col, {\n      span: 4,\n      style: {\n        textAlign: 'right'\n      }\n    }, _.get(mainConfig, ['sorting', 'searchPrice']) == 1 ? compA({\n      'searchPrice': null\n    }) : compB({\n      'searchPrice': 1\n    }))), __jsx(Row, null, __jsx(Col, {\n      span: 20\n    }, __jsx(\"p\", null, \"Price: High to Low\")), __jsx(Col, {\n      span: 4\n    }, _.get(mainConfig, ['sorting', 'searchPrice']) == -1 ? compA({\n      'searchPrice': null\n    }) : compB({\n      'searchPrice': -1\n    }))), __jsx(Row, null, __jsx(Col, {\n      span: 20\n    }, __jsx(\"p\", null, \" Year: Old to New \")), __jsx(Col, {\n      span: 4\n    }, _.get(mainConfig, ['sorting', 'carspec.year']) == 1 ? compA({\n      'carspec.year': null\n    }) : compB({\n      'carspec.year': 1\n    }))), __jsx(Row, null, __jsx(Col, {\n      span: 20\n    }, __jsx(\"p\", null, \" Year: New to Old \")), __jsx(Col, {\n      span: 4\n    }, _.get(mainConfig, ['sorting', 'carspec.year']) == -1 ? compA({\n      'carspec.year': null\n    }) : compB({\n      'carspec.year': -1\n    }))), __jsx(Row, null, __jsx(Col, {\n      span: 20\n    }, __jsx(\"p\", null, \" Mileage: Low to High \")), __jsx(Col, {\n      span: 4\n    }, _.get(mainConfig, ['sorting', 'mileageFilter']) == 1 ? compA({\n      'mileageFilter': null\n    }) : compB({\n      'mileageFilter': 1\n    }))), __jsx(Row, null, __jsx(Col, {\n      span: 20\n    }, __jsx(\"p\", null, \"Mileage: High to Low\")), __jsx(Col, {\n      span: 4\n    }, _.get(mainConfig, ['sorting', 'mileageFilter']) == -1 ? compA({\n      'mileageFilter': null\n    }) : compB({\n      'mileageFilter': -1\n    })))));\n  };\n\n  return __jsx(LayoutV2, null, __jsx(\"div\", {\n    className: \"section-version3\"\n  }, __jsx(\"div\", {\n    className: \"container-version3 padding-x-sm\",\n    style: {\n      touchAction: 'pan-y'\n    }\n  }, __jsx(Spin, {\n    indicator: antIcon,\n    spinning: spinning,\n    indicator: __jsx(\"img\", {\n      src: \"/loading.gif\",\n      style: {\n        width: 100,\n        height: 100,\n        position: 'sticky',\n        position: '-webkit-sticky',\n        top: 0,\n        bottom: 0,\n        left: 0,\n        right: 0,\n        margin: 'auto'\n      }\n    })\n  }, __jsx(Row, {\n    gutter: [{\n      xs: 8,\n      sm: 8,\n      md: 15,\n      lg: 15,\n      xl: 15\n    }, 16]\n  }, __jsx(Col, {\n    className: \"gutter-row\",\n    xs: 24,\n    sm: 24,\n    md: 24,\n    lg: 18,\n    xl: 18\n  }, __jsx(Row, {\n    className: \"margin-bottom-md\"\n  }, __jsx(Col, {\n    span: 20\n  }, __jsx(\"span\", {\n    style: {\n      fontSize: '16px'\n    }\n  }, total, \" \"), props.router.query.parameter1 ? __jsx(\"span\", {\n    style: {\n      fontSize: '16px'\n    },\n    className: \"capitalize\"\n  }, getCarBrand(_.toLower(props.router.query.parameter1)).value || props.router.query.parameter1, \" \") : '', __jsx(\"span\", {\n    style: {\n      fontSize: '16px'\n    }\n  }, \"Cars for Sale\")), __jsx(Col, {\n    span: 4,\n    style: {\n      textAlign: 'right'\n    }\n  }, __jsx(\"div\", {\n    onClick: () => {\n      setExpandKey(expandKey == '7' ? null : '7');\n    }\n  }, __jsx(\"img\", {\n    style: {\n      width: '40%',\n      height: '20px'\n    },\n    src: \"/assets/sorting-2.png\"\n  })))), __jsx(Row, null, __jsx(Col, {\n    span: 24\n  }, __jsx(\"span\", {\n    className: \"flex-items-align-center flex-justify-space-around collapsible-drawer\"\n  }, __jsx(\"span\", {\n    className: \"flex-items-align-center\"\n  }, __jsx(\"span\", {\n    className: \"margin-right-lg\",\n    onClick: () => {\n      setExpandKey(expandKey == '1' ? null : '1');\n    }\n  }, \"Brand \", __jsx(Icon, {\n    type: \"down\"\n  }), \" \"), __jsx(\"span\", {\n    className: \"margin-right-lg\",\n    onClick: () => {\n      setExpandKey(expandKey == '2' ? null : '2');\n    }\n  }, \"State \", __jsx(Icon, {\n    type: \"down\"\n  }), \" \"), __jsx(\"span\", {\n    className: \"margin-right-lg\",\n    onClick: () => {\n      setExpandKey(expandKey == '3' ? null : '3');\n    }\n  }, \"Year \", __jsx(Icon, {\n    type: \"down\"\n  }), \" \"), __jsx(\"span\", {\n    className: \"margin-right-lg\",\n    onClick: () => {\n      setExpandKey(expandKey == '4' ? null : '4');\n    }\n  }, \"Price \", __jsx(Icon, {\n    type: \"down\"\n  }), \" \"), __jsx(\"span\", {\n    onClick: () => {\n      setExpandKey(expandKey == '5' ? null : '5');\n    }\n  }, \"Detail \", __jsx(Icon, {\n    type: \"down\"\n  }), \" \"))))), __jsx(Row, {\n    style: {\n      marginTop: '10px'\n    }\n  }, __jsx(Col, {\n    span: 9\n  }, __jsx(Button, {\n    style: {\n      padding: '0px 10px'\n    },\n    onClick: () => {\n      setExpandKey(expandKey == '6' ? null : '6');\n    }\n  }, \" \", currentFilterGroup.condition ? currentFilterGroup.condition.toUpperCase() : 'Condition', __jsx(Icon, {\n    type: \"down\"\n  }), \" \")), __jsx(Col, {\n    span: 15\n  }, __jsx(Col, {\n    style: {\n      paddingRight: '5px'\n    },\n    xs: 8,\n    sm: 8,\n    md: 8,\n    lg: 8,\n    xl: 8\n  }, __jsx(\"div\", {\n    className: \"w-100 text-truncate-twoline flex-items-align-center\",\n    style: {\n      height: 38,\n      padding: 2,\n      borderRadius: 5,\n      backgroundColor: currentFilterGroup.readyStock ? \"rgb(156,31,20)\" : \"#EDECEA\",\n      color: currentFilterGroup.readyStock ? \"#ffffff\" : \"##000000A6\"\n    },\n    value: \"readyStock\",\n    onClick: e => {\n      setCurrentFilterGroup(_objectSpread(_objectSpread({}, currentFilterGroup), {}, {\n        readyStock: !currentFilterGroup.readyStock\n      }));\n      pushParameterToUrl(_objectSpread(_objectSpread({}, currentFilterGroup), {}, {\n        readyStock: currentFilterGroup.readyStock ? false : true\n      }), _objectSpread(_objectSpread({}, mainConfig), {}, {\n        page: 1\n      }));\n    }\n  }, __jsx(\"p\", {\n    style: {\n      fontSize: \"10px\",\n      textAlign: \"center\",\n      fontWeight: \"bold\",\n      marginBottom: '0px'\n    }\n  }, \" READY \"), __jsx(\"p\", {\n    style: {\n      fontSize: \"10px\",\n      textAlign: \"center\",\n      fontWeight: \"bold\",\n      marginBottom: '0px'\n    }\n  }, \" STOCK\"))), __jsx(Col, {\n    style: {\n      paddingRight: '5px'\n    },\n    xs: 8,\n    sm: 8,\n    md: 8,\n    lg: 8,\n    xl: 8\n  }, __jsx(\"div\", {\n    className: \"w-100\",\n    style: {\n      alignItems: 'center',\n      paddingTop: '15%',\n      height: 38,\n      borderRadius: 5,\n      backgroundColor: currentFilterGroup.registrationUrl ? \"rgb(252,101,134)\" : \"#EDECEA\",\n      color: currentFilterGroup.readyStock ? \"#ffffff\" : \"##000000A6\"\n    },\n    value: \"registrationUrl\",\n    onClick: e => {\n      setCurrentFilterGroup(_objectSpread(_objectSpread({}, currentFilterGroup), {}, {\n        registrationUrl: !currentFilterGroup.registrationUrl\n      }));\n      pushParameterToUrl(_objectSpread(_objectSpread({}, currentFilterGroup), {}, {\n        registrationUrl: currentFilterGroup.registrationUrl ? false : true\n      }), _objectSpread(_objectSpread({}, mainConfig), {}, {\n        page: 1\n      }));\n    }\n  }, __jsx(\"p\", {\n    style: {\n      fontSize: \"10px\",\n      textAlign: \"center\",\n      fontWeight: \"bold\",\n      marginBottom: '0px'\n    }\n  }, \"REG\"))), __jsx(Col, {\n    xs: 8,\n    sm: 8,\n    md: 8,\n    lg: 8,\n    xl: 8\n  }, __jsx(\"div\", {\n    className: \"w-100\",\n    style: {\n      alignItems: 'center',\n      height: 38,\n      paddingLeft: '25%',\n      paddingTop: '10%',\n      borderRadius: 5,\n      backgroundColor: currentFilterGroup.car360View ? \"rgb(85,204,212)\" : \"#EDECEA\"\n    },\n    value: \"360\",\n    onClick: e => {\n      setCurrentFilterGroup(_objectSpread(_objectSpread({}, currentFilterGroup), {}, {\n        car360View: !currentFilterGroup.car360View\n      }));\n      pushParameterToUrl(_objectSpread(_objectSpread({}, currentFilterGroup), {}, {\n        car360View: !currentFilterGroup.car360View\n      }), _objectSpread(_objectSpread({}, mainConfig), {}, {\n        page: 1\n      }));\n    }\n  }, __jsx(\"img\", {\n    style: {\n      width: '60%'\n    },\n    src: \"/assets/profile/icon-list/carmarket-bar-icon/360.png\"\n  })))), __jsx(Col, {\n    xs: 24,\n    sm: 24,\n    md: 24,\n    lg: 24,\n    xl: 24\n  }, __jsx(Collapse, {\n    className: \"collapse-no-header border-none collapse-body-no-padding collapse-body-overflow-visible\",\n    activeKey: expandKey\n  }, __jsx(Collapse.Panel, {\n    key: \"1\",\n    showArrow: false,\n    collapsible: true\n  }, __jsx(\"div\", {\n    style: {\n      marginTop: '10px'\n    },\n    className: \"width-100\"\n  }, menuView)), __jsx(Collapse.Panel, {\n    key: \"2\",\n    showArrow: false,\n    collapsible: true\n  }, __jsx(\"div\", {\n    className: \"width-100\"\n  }, stateView)), __jsx(Collapse.Panel, {\n    key: \"3\",\n    showArrow: false,\n    collapsible: true\n  }, __jsx(\"div\", {\n    className: \"width-100\"\n  })), __jsx(Collapse.Panel, {\n    key: \"4\",\n    showArrow: false,\n    collapsible: true\n  }, __jsx(\"div\", {\n    className: \"width-100\"\n  }, priceView)), __jsx(Collapse.Panel, {\n    key: \"6\",\n    showArrow: false,\n    collapsible: true\n  }, __jsx(\"div\", {\n    className: \"width-100\"\n  }, conditionView)), __jsx(Collapse.Panel, {\n    key: \"7\",\n    showArrow: false,\n    collapsible: true\n  }, sortingView())))), __jsx(Divider, {\n    style: {\n      marginTop: '15px',\n      marginBottom: '10px'\n    }\n  }), _renderFilterTags(currentFilterGroup), __jsx(Collapse, {\n    className: \"collapse-no-header border-none collapse-body-no-padding collapse-body-overflow-visible\",\n    activeKey: expandKey\n  }, __jsx(Collapse.Panel, {\n    key: \"5\",\n    showArrow: false\n  }, __jsx(\"div\", {\n    className: \"width-100\"\n  }))), __jsx(Row, {\n    style: {\n      marginBottom: '10px',\n      marginTop: '10px'\n    }\n  }, __jsx(Col, {\n    xs: 24,\n    sm: 24,\n    md: 24,\n    lg: 24,\n    xl: 24,\n    className: \"background-white margin-bottom-xl\"\n  }, __jsx(Row, null, __jsx(Col, {\n    xs: 24,\n    sm: 24,\n    md: 24,\n    lg: 24,\n    xl: 24\n  }, __jsx(\"div\", {\n    className: \"d-flex scroller-type\"\n  }, _renderGridViewRes(notEmptyLength(productList) ? productList : []))))), __jsx(Col, {\n    style: {\n      textAlign: 'center'\n    },\n    xs: 24,\n    sm: 24,\n    md: 24,\n    lg: 24,\n    xl: 24\n  }, __jsx(Pagination, {\n    defaultCurrent: 1,\n    current: mainConfig.page,\n    pageSize: PAGESIZE,\n    total: total,\n    onChange: page => {\n      pushParameterToUrl(currentFilterGroup, _objectSpread(_objectSpread({}, mainConfig), {}, {\n        page: page\n      }));\n    }\n  })))))))));\n};\n\nconst mapStateToProps = state => ({\n  app: state.app,\n  user: state.user,\n  productsList: state.productsList\n});\n\nconst mapDispatchToProps = {\n  loading: loading,\n  setProductListLoading: setProductListLoading,\n  updateActiveMenu: updateActiveMenu\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(CarMarketPage));","map":{"version":3,"sources":["/Users/faraheen/ccar-cms-next-mobile/components/product-list/page/CarMarketPage.jsx"],"names":["AppstoreOutlined","BarsOutlined","Tag","Collapse","Button","Col","Divider","Drawer","Empty","Icon","Pagination","Radio","Row","Select","Spin","Tooltip","Form","axios","_","withRouter","Link","useEffect","useState","connect","convertParameterToProductListUrl","notEmptyLength","isValidNumber","convertRangeFormatBack","objectRemoveEmptyValue","formatNumber","LayoutV2","ProductList","ProductListFilterForm","client","loading","updateActiveMenu","getCarBrand","GridProductSkeleton","queryString","carAdsFilter","brandFilterTotal","setProductListLoading","MakeModal","StateModal","Scrollbars","DetailFilterForm","priceRangeOptions","years","modals","antIcon","fontSize","PAGESIZE","searchBarRef","React","createRef","timeoutFunction","SWITCH_OFF_COLOR","SWITCH_ON_COLOR","CarMarketPage","props","mainConfig","setMainConfig","config","page","sorting","view","setView","currentFilterGroup","setCurrentFilterGroup","filterGroup","availableFilterOption","setAvailableFilterOption","availableOptions","total","setTotal","productListTotal","productList","setProductList","spinning","setSpinning","isEmptyData","setIsEmptyData","initRan","setInitRan","visible","setVisible","drawerType","setDrawerType","expandKey","setExpandKey","origAvailableFilterOption","setOrigAvailableFilterOption","getOrigAvailableOptions","getDataFromUrl","router","query","window","scroll","clearTimeout","setTimeout","then","res","get","catch","err","productList2","cloneDeep","inputProductList","map","v","productAdsId","_id","isEmpty","post","io","uri","params","source","showDrawer","onClose","pushParameterToUrl","data","path","asPath","split","item","i","join","push","shallow","error","getUrlData","querySearch","parse","JSON","parseInt","state","length","stateArr","isArray","area","priceRange","yearRange","mileageRange","engineCapactityRange","console","log","scrollTo","andFilter","$and","convertToRangeFormat","convertFilterRange","Object","assign","engineCapacityRange","match","$match","limit","skip","promises","forEach","modal","filterType","headers","settings","accessToken","Promise","all","responses","options","response","index","uniqueInfo","isPlainObject","_renderFilterTags","showTags","pick","convertRangeFormatToText","entries","cloneFilterGroup","_renderGridViewRes","height","position","top","transform","right","menuView","make","brand","model","toLower","selectFilter","value","concat","stateView","priceView","marginTop","marginBottom","e","conditionView","margin","padding","textAlign","width","condition","target","backgroundColor","fontWeight","sortingView","compA","searchTypeObj","float","compB","touchAction","bottom","left","xs","sm","md","lg","xl","parameter1","toUpperCase","paddingRight","borderRadius","readyStock","color","alignItems","paddingTop","registrationUrl","paddingLeft","car360View","mapStateToProps","app","user","productsList","mapDispatchToProps"],"mappings":"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","sourcesContent":["import { AppstoreOutlined, BarsOutlined } from '@ant-design/icons'\nimport { Tag, Collapse, Button, Col, Divider, Drawer, Empty, Icon, Pagination, Radio, Row, Select, Spin, Tooltip, Form } from 'antd'\nimport axios from 'axios'\nimport _ from 'lodash'\nimport { withRouter } from 'next/dist/client/router'\nimport Link from 'next/link'\nimport { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { convertParameterToProductListUrl, notEmptyLength, isValidNumber, convertRangeFormatBack, objectRemoveEmptyValue, formatNumber } from '../../../common-function'\nimport LayoutV2 from '../../../components/general/LayoutV2'\nimport ProductList from '../../../components/product-list/ProductList'\nimport ProductListFilterForm from '../../../components/product-list/ProductListFilterForm'\nimport client from '../../../feathers'\nimport { loading, updateActiveMenu } from '../../../redux/actions/app-actions'\nimport { getCarBrand } from '../../../params/carBrandsList'\nimport GridProductSkeleton from '../../skeleton-loader/GridProductSkeleton'\nimport queryString from 'query-string';\nimport carAdsFilter from '../../../api/carAdsFilter'\nimport brandFilterTotal from '../../../api/brandFilterTotal'\nimport { setProductListLoading } from '../../../redux/actions/productsList-actions'\nimport MakeModal from '../filter-modal/MakeModal';\nimport StateModal from '../filter-modal/StateModal';\nimport Scrollbars from 'react-custom-scrollbars';\nimport DetailFilterForm from '../DetailFilterForm';\n\nconst priceRangeOptions = [[50000, '<'], [50000, 100000], [100000, 200000], [200000, 400000], [400000, 600000], [600000, 800000], [800000, 1000000], [1000000, '>='], ];\nconst years = [2020, 2019, 2018, 2017, 2016, 2015, 2014, 2013, 2012, 2011, 2010, 2009, 2008, 2007, 2006, 2005, 2004, 2003, 2002, 2001, 2000, 1999, 1998, 1997, 1996, 1995, 1994, 1993, 1992, 1991, 1990]\nconst modals = ['make', 'model', 'state', 'area', 'bodyType', 'color', 'fuelType'];\nconst antIcon = <img src=\"/assets/Ccar-logo.png\" style={{ fontSize: 60 }} />;\nconst PAGESIZE = 30;\nconst searchBarRef = React.createRef();\nlet timeoutFunction;\n\nconst SWITCH_OFF_COLOR = '#9E9E9E';\nconst SWITCH_ON_COLOR = '#FFCC32';\n\nconst CarMarketPage = (props) => {\n    const [mainConfig, setMainConfig] = useState(props.config || {\n        page: 1,\n        sorting: {},\n        view: 'gridView',\n    })\n    const [view, setView] = useState('gridView')\n    const [currentFilterGroup, setCurrentFilterGroup] = useState(props.filterGroup || {})\n    const [availableFilterOption, setAvailableFilterOption] = useState(props.availableOptions || {})\n    const [total, setTotal] = useState(props.productListTotal || 0)\n    const [productList, setProductList] = useState(props.productList || [])\n    const [spinning, setSpinning] = useState(false)\n    const [isEmptyData, setIsEmptyData] = useState(false);\n    const [initRan, setInitRan] = useState({\n        filterGroup: false,\n        config: false,\n    });\n    const [visible, setVisible] = useState()\n    const [drawerType, setDrawerType] = useState('brand')\n    const [expandKey, setExpandKey] = useState();\n    const [origAvailableFilterOption, setOrigAvailableFilterOption] = useState({})\n\n    useEffect(() => {\n        props.updateActiveMenu('2');\n        getOrigAvailableOptions();\n    }, [])\n\n    useEffect(() => {\n        setInitRan({\n            filterGroup: true,\n            config: true,\n        })\n\n    }, [])\n\n    useEffect(() => {\n        if (initRan.filterGroup && initRan.config) {\n            getDataFromUrl();\n        }\n    }, [props.router.query])\n\n\n    useEffect(() => {\n\n        if (initRan.filterGroup && initRan.config) {\n            props.setProductListLoading(true);\n            if (window) {\n                window.scroll(0, 0)\n            }\n            clearTimeout(timeoutFunction);\n            timeoutFunction = setTimeout(() => {\n                carAdsFilter({\n                    filterGroup: currentFilterGroup,\n                    config: mainConfig\n                }, PAGESIZE).then(res => {\n                    props.setProductListLoading(false);\n                    setProductList(_.get(res, ['data']) || []);\n                    setTotal(_.get(res, ['total']) || 0);\n\n                }).catch(err => {\n                    props.setProductListLoading(false);\n                });\n                brandFilterTotal(modals, {\n                    filterGroup: currentFilterGroup,\n                    config: mainConfig\n                }).then(res => {\n                    setAvailableFilterOption(res);\n                }).catch(err => {\n                });\n            }, 500);\n        }\n    }, [currentFilterGroup, mainConfig])\n\n    useEffect(() => {\n        setTimeout(() => {\n\n            let productList2 = _.cloneDeep(productList)\n\n            let inputProductList = _.map(productList2, function (v) {\n                v.productAdsId = v._id\n                return { productAdsId: v.productAdsId }\n            });\n\n            if (_.isEmpty(inputProductList) === false) {\n                axios.post(`${client.io.io.uri}processImpression`,\n                    {\n                        params: {\n                            productList: inputProductList,\n                            source: 'web',\n                        }\n                    }).then((res) => { })\n            }\n        },\n            3000);\n\n    }, [productList])\n\n    const showDrawer = () => {\n        visible == true ? setVisible(false) : setVisible(true)\n    }\n\n    const onClose = () => {\n        visible == false ? setVisible(true) : setVisible(false)\n    }\n\n    function pushParameterToUrl(data, config) {\n\n        try {\n            let path = convertParameterToProductListUrl(data, config)\n            let asPath = path.split('?')[0].split('/');\n            asPath = _.map(asPath, function (item, i) {\n                if (i > 1) {\n                    item = `[parameter${i - 1}]`\n                }\n                return item;\n            })\n            asPath = asPath.join('/')\n            setProductList([]);\n            props.setProductListLoading(true);\n            props.router.push(asPath, path, { shallow: true })\n        } catch (error) {\n\n        }\n\n    }\n\n    function getUrlData() {\n        try {\n            let querySearch = props.router.asPath.split('?')[1];\n            let query = queryString.parse(querySearch);\n            if (!query) {\n                query = {};\n            }\n\n            let filterGroup = query.data ? JSON.parse(query.data) : {};\n            let sorting = query.sorting ? JSON.parse(query.sorting) : {};\n            let config = {\n                page: query.page,\n                sorting: sorting,\n                view: query.view,\n            }\n\n            if (!isValidNumber(parseInt(config.page))) {\n                config.page = 1;\n            }\n\n            if (!_.get(config, ['sorting', 'carspec.year']) && !_.get(config, ['sorting', 'mileageFilter']) && !_.get(config, ['sorting', 'searchPrice'])) {\n                config.sorting = {};\n            }\n            if (_.get(config, ['view']) != 'gridView' && _.get(config, ['view']) != 'listView') {\n                config.view = 'gridView';\n            }\n            setMainConfig(config);\n\n\n            //Only state need to check manually;\n            let state = props.router.asPath.split('?')[0].split('/');\n            state = state[state.length - 1]\n\n            let stateArr = state.split('_');\n\n            filterGroup.state = _.isArray(stateArr) && !_.isEmpty(stateArr) ? _.get(stateArr, [1]) || '' : '';\n            filterGroup.area = _.isArray(stateArr) && !_.isEmpty(stateArr) ? _.get(stateArr, [2]) || '' : '';\n\n            if (filterGroup.priceRange) {\n                filterGroup.priceRange = convertRangeFormatBack(filterGroup.priceRange)\n            }\n            if (filterGroup.yearRange) {\n                filterGroup.yearRange = convertRangeFormatBack(filterGroup.yearRange)\n            }\n            if (filterGroup.mileageRange) {\n                filterGroup.mileageRange = convertRangeFormatBack(filterGroup.mileageRange)\n            }\n            if (filterGroup.engineCapactityRange) {\n                filterGroup.engineCapactityRange = convertRangeFormatBack(filterGroup.engineCapactityRange)\n            }\n\n            setCurrentFilterGroup({\n                ...currentFilterGroup,\n                ...filterGroup,\n            });\n\n        } catch (error) {\n            console.log('error', error);\n        }\n    }\n\n    function pushParameterToUrl(data, config) {\n        let path = convertParameterToProductListUrl(data, config)\n        if (path != `${props.router.asPath}${props.router.query}`) {\n          props.router.push(path)\n          setExpandKey(null)\n        }\n      }\n\n    function getDataFromUrl() {\n        window.scrollTo(0, 0);\n        props.loading(true);\n        let andFilter = { $and: [] }\n        let data = getUrlData();\n        if (!notEmptyLength(data)) {\n          return;\n        }\n    \n        if (notEmptyLength(data.filterGroup) && notEmptyLength(data.filterGroup.yearRange)) {\n          data.filterGroup.yearRange = convertToRangeFormat(data.filterGroup.yearRange);\n          data.filterGroup.yearRange = convertFilterRange(data.filterGroup.yearRange, 'carspec.year')\n          if (notEmptyLength(data.filterGroup.yearRange)) {\n            andFilter.$and = [...andFilter.$and, ...data.filterGroup.yearRange]\n            data.filterGroup = Object.assign(data.filterGroup, andFilter)\n          }\n          delete data.filterGroup.yearRange;\n        }\n    \n        if (notEmptyLength(data.filterGroup) && notEmptyLength(data.filterGroup.priceRange)) {\n          data.filterGroup.priceRange = convertToRangeFormat(data.filterGroup.priceRange);\n          data.filterGroup.priceRange = convertFilterRange(data.filterGroup.priceRange, 'searchPrice')\n          if (notEmptyLength(data.filterGroup.priceRange)) {\n            andFilter.$and = [...andFilter.$and, ...data.filterGroup.priceRange]\n            data.filterGroup = Object.assign(data.filterGroup, andFilter)\n          }\n          delete data.filterGroup.priceRange;\n        }\n    \n        if (notEmptyLength(data.filterGroup) && notEmptyLength(data.filterGroup.mileageRange)) {\n          data.filterGroup.mileageRange = convertToRangeFormat(data.filterGroup.mileageRange);\n          data.filterGroup.mileageRange = convertFilterRange(data.filterGroup.mileageRange, 'mileageFilter')\n          if (notEmptyLength(data.filterGroup.mileageRange)) {\n            andFilter.$and = [...andFilter.$and, ...data.filterGroup.mileageRange]\n            data.filterGroup = Object.assign(data.filterGroup, andFilter)\n          }\n          delete data.filterGroup.mileageRange;\n        }\n    \n        if (notEmptyLength(data.filterGroup) && notEmptyLength(data.filterGroup.engineCapacityRange)) {\n          data.filterGroup.engineCapacityRange = convertToRangeFormat(data.filterGroup.engineCapacityRange);\n          data.filterGroup.engineCapacityRange = convertFilterRange(data.filterGroup.engineCapacityRange, 'carspec.engineCapacity')\n          if (notEmptyLength(data.filterGroup.engineCapacityRange)) {\n            andFilter.$and = [...andFilter.$and, ...data.filterGroup.engineCapacityRange]\n            data.filterGroup = Object.assign(data.filterGroup, andFilter)\n          }\n          delete data.filterGroup.engineCapacityRange;\n        }\n    \n        data.filterGroup = objectRemoveEmptyValue(data.filterGroup);\n        let match = { $match: { ...data.filterGroup } }\n        axios.get(`${client.io.io.uri}carAdsFilterV3`,\n          {\n            params: {\n              match,\n              sorting: data.mainConfig.sorting || {},\n              limit: PAGESIZE,\n              skip: ((_.get(data.mainConfig, ['page']) || 1) - 1) * PAGESIZE,\n            }\n          })\n          .then((res) => {\n    \n            props.loading(false);\n            if (notEmptyLength(res.data.data)) {\n              setProductList(res.data.data)\n              setTotal(res.data.total);\n            } else {\n              setProductList([])\n              setTotal(0);\n            }\n          })\n          .catch((err) => {\n            props.loading(false);\n            // message.error(err.message);\n          })\n    \n        let promises = [];\n        _.forEach(modals, function (modal) {\n          promises.push(\n            axios.get(`${client.io.io.uri}brandFilterTotalV3`, {\n              params: { filterType: modal, match },\n              headers: { 'Authorization': client.settings.accessToken }\n            })\n          )\n        })\n    \n        Promise.all(promises).then((responses) => {\n          if (_.isArray(responses) && !_.isEmpty((responses))) {\n            let options = {}\n            _.forEach(responses, function (response, index) {\n              options[`${modals[index]}List`] = response.data.uniqueInfo[`${modals[index]}List`];\n            })\n    \n            setAvailableFilterOption(options)\n          }\n        }).catch((err) => {\n          // message.error(err.message);\n        })\n    \n      }\n\n      async function getOrigAvailableOptions(match) {\n        if (!_.isPlainObject(match) && _.isEmpty(match)) {\n          match = {};\n        }\n        let promises = [];\n        _.forEach(modals, function (modal) {\n          promises.push(\n            axios.get(`${client.io.io.uri}brandFilterTotalV3`, {\n              params: { filterType: modal, match },\n              headers: { 'Authorization': client.settings.accessToken }\n            })\n          )\n        })\n    \n        let responses = await Promise.all(promises);\n    \n        if (_.isArray(responses) && !_.isEmpty((responses))) {\n          let options = {}\n          _.forEach(responses, function (response, index) {\n            options[`${modals[index]}List`] = response.data.uniqueInfo[`${modals[index]}List`];\n          })\n          setOrigAvailableFilterOption(options)\n        }\n      }\n\n      const _renderFilterTags = (filterGroup) => {\n        try {\n          const showTags = ['make', 'model', 'state', 'condition', 'yearRange', 'priceRange', 'mileageRange', 'transmission', 'color', 'bodyType', 'fuelType', 'engineCapacityRange'];\n          if (_.isPlainObject(filterGroup) && !_.isEmpty(filterGroup)) {\n            filterGroup = _.pick(objectRemoveEmptyValue(filterGroup), showTags);\n            if(filterGroup.yearRange){\n              filterGroup.yearRange = convertRangeFormatToText(filterGroup.yearRange);\n            }\n            if(filterGroup.priceRange){\n              filterGroup.priceRange = convertRangeFormatToText(filterGroup.priceRange, 'price');\n            }\n            if(filterGroup.mileageRange){\n              filterGroup.mileageRange = convertRangeFormatToText(filterGroup.mileageRange, 'mileage');\n            }\n            if(filterGroup.engineCapacityRange){\n              filterGroup.engineCapacityRange = convertRangeFormatToText(filterGroup.engineCapacityRange, 'engineCapacity');\n            }\n            filterGroup = Object.entries(filterGroup) || [];\n            return (\n              <Scrollbars autoHide autoHeight> \n                <div className=\" flex-items-align-center flex-justify-start\">\n                  {\n                    _.map(filterGroup || [], function (item) {\n                      return (\n                        <Tag key={`${item[0]}-tag`} className=\" capitalize margin-right-md\" closable onClose={() => { \n                          let cloneFilterGroup = _.cloneDeep(currentFilterGroup) || {};\n                          delete cloneFilterGroup[item[0]];\n                          pushParameterToUrl(cloneFilterGroup, { ...mainConfig, page: 1 })\n                        }} color=\"orange\">{item[1] || 'N/A'}</Tag>\n                      )\n                    })\n                  }\n                </div>\n              </Scrollbars>\n            )\n          }\n    \n          return null;\n        } catch (error) {\n          console.log(error);\n        }\n      }\n\n    const _renderGridViewRes = (data) => {\n        if (notEmptyLength(data)) {\n            return (\n                <ProductList data={data} /> \n            )\n        } else {\n            return (\n                <div style={{ height: '30em' }}>\n                    <Empty\n                        style={{ position: 'absolute', top: '50%', transform: 'translate(50%,-50%)', right: '50%' }}\n                        image=\"/empty.png\"\n                        imageStyle={{ height: 60 }}\n                        description={<span>No Result</span>} \n                    >\n                    </Empty>\n                </div>\n            )\n        }\n    }\n\n    const menuView = (\n        <MakeModal \n          options={_.isArray(_.get(availableFilterOption, ['makeList'])) && !_.isEmpty(_.get(availableFilterOption, ['makeList'])) && !currentFilterGroup.make ? _.get(availableFilterOption, ['makeList']) : _.get(origAvailableFilterOption, ['makeList']) || []}\n          onSelect={(brand, model) => {\n            setCurrentFilterGroup({\n              ...currentFilterGroup,\n              make: _.toLower(_.get(brand, 'value') || ''),\n              model: _.toLower(_.get(model, 'model') || ''),\n              selectFilter: (brand.value).concat([])\n            })\n            pushParameterToUrl({ ...currentFilterGroup, make: _.toLower(_.get(brand, 'value') || ''), model: _.toLower(_.get(model, 'model') || ''), }, mainConfig)\n          }}\n        />\n      );\n    \n      const stateView = (\n        <StateModal\n          options={_.isArray(_.get(availableFilterOption, ['stateList'])) && !_.isEmpty(_.get(availableFilterOption, ['stateList'])) && !currentFilterGroup.state ? _.get(availableFilterOption, ['stateList']) : _.get(origAvailableFilterOption, ['stateList']) || []}\n          onSelect={(state) => {\n            if (_.get(state, ['value'])) {\n              setCurrentFilterGroup({\n                ...currentFilterGroup,\n                state: _.toLower(state.value),\n              })\n              pushParameterToUrl({ ...currentFilterGroup, state: _.toLower(state.value) }, mainConfig)\n            }\n          }}\n        /> \n      )\n    \n    //   const yearView = (\n    //     <YearRangeFiltering onChange={(data) => {\n    //       if (_.isPlainObject(data) && !_.isEmpty(data)) {\n    //         setCurrentFilterGroup({\n    //           ...currentFilterGroup,\n    //           ...data\n    //         })\n    //         pushParameterToUrl({ ...currentFilterGroup, ...data }, mainConfig)\n    //       }\n    //     }} />\n    //   )\n    \n      const priceView = (\n        <Row style={{ marginTop: '10px' }}>\n          {/* <div className=\"d-flex scroller-type margin-x-sm\" style={{ overflow: 'scroll' }}> */}\n          {\n            _.map(priceRangeOptions, function (priceRange) {\n              return (\n                <Col span={8} style={{ marginBottom: '10px' }}>\n                  <Button className=\"margin-x-sm\" onClick={(e) => {\n                    pushParameterToUrl({ ...currentFilterGroup, priceRange: priceRange }, { ...mainConfig, page: 1 })\n                  }}>\n                    {\n                      !priceRange[1] || priceRange[1] == '<' || priceRange[1] == '<=' ?\n                        `0-${formatNumber(priceRange[0], 'auto', false, 0)}`\n                        :\n                        priceRange[1] == '==' ?\n                          `Equal ${formatNumber(priceRange[0], 'auto', false, 0)}`\n                          :\n                          priceRange[1] == '>' || priceRange[1] == '>=' ?\n                            `Over ${formatNumber(priceRange[0], 'auto', false, 0)}`\n                            :\n                            `${formatNumber(priceRange[0], 'auto', false, 0)} - ${formatNumber(priceRange[1], 'auto', false, 0)} `\n                    }\n                  </Button>\n                </Col>\n              )\n            })\n          }\n          {/* </div> */}\n        </Row>\n      )\n\n      // const detailView = (\n      //   <div style={{ marginTop: '10px' }}>\n      //     <DetailFilterForm options={availableFilterOption} onChange={(data) => {\n      //       if (_.isPlainObject(data) && !_.isEmpty(data)) {\n      //         setCurrentFilterGroup({\n      //           ...currentFilterGroup,\n      //           ...data\n      //         })\n      //         pushParameterToUrl({ ...currentFilterGroup, ...data }, mainConfig)\n      //       }\n      //     }} />\n      //   </div>\n      // )\n    \n      const conditionView =\n        (\n          <Form.Item style={{ margin: '0px', marginBottom: '0px', padding: '2px 2px 0px 0px' }}>\n            <Radio.Group className='condition-form ' style={{ textAlign: 'center', width: '100%', padding: '0px' }}\n              value={currentFilterGroup.condition ? currentFilterGroup.condition : 'all'}\n              onChange={(e) => { setCurrentFilterGroup({ ...currentFilterGroup, condition: e.target.value }); pushParameterToUrl({ ...currentFilterGroup, condition: _.toLower(e.target.value) }, { ...mainConfig, page: 1 }) }} >\n              <Row gutter={[10, 0]} type=\"flex\" align=\"middle\" justify=\"space-around\" className='fill-parent'>\n                <Col xs={8} sm={8} md={8} lg={8} xl={8}>\n                  <Radio.Button className=\"w-100\" style={{ backgroundColor: \"\", padding: 0 }} value=\"used\" onClick={(e) => { if (currentFilterGroup.condition == 'used') { setCurrentFilterGroup({ ...currentFilterGroup, condition: '' }) } }}>\n                    <p style={{ fontSize: \"10px\", textAlign: \"center\", fontWeight: \"bold\" }}>USED</p>\n                  </Radio.Button>\n                </Col>\n                <Col xs={8} sm={8} md={8} lg={8} xl={8}>\n                  <Radio.Button className=\"w-100\" style={{ backgroundColor: \"\", padding: 0 }} value=\"recon\" onClick={(e) => { if (currentFilterGroup.condition == 'recon') { setCurrentFilterGroup({ ...currentFilterGroup, condition: '' }) } }}>\n                    <p style={{ fontSize: \"10px\", textAlign: \"center\", fontWeight: \"bold\" }}>RECON</p>\n                  </Radio.Button>\n                </Col>\n                <Col xs={8} sm={8} md={8} lg={8} xl={8}>\n                  <Radio.Button className=\"w-100\" style={{ backgroundColor: \"\", padding: 0 }} value=\"new\" onClick={(e) => { if (currentFilterGroup.condition == 'new') { setCurrentFilterGroup({ ...currentFilterGroup, condition: '' }) } }}>\n                    <p style={{ fontSize: \"10px\", textAlign: \"center\", fontWeight: \"bold\" }}>NEW</p>\n                  </Radio.Button>\n                </Col>\n              </Row>\n            </Radio.Group>\n          </Form.Item>\n        )\n\n        const sortingView = () => {\n            const compA = (searchTypeObj) => { return <div style={{ width: '20px', height: '20px', float: 'right', backgroundColor: '#000000' }} className=\"cursor-pointer thin-border round-border\" onClick={(e) => { pushParameterToUrl(currentFilterGroup, { sorting: { ...searchTypeObj }, page: 1 }) }} /> }\n            const compB = (searchTypeObj) => { return <div style={{ width: '20px', height: '20px', float: 'right' }} className=\"cursor-pointer thin-border round-border\" onClick={(e) => { pushParameterToUrl(currentFilterGroup, { sorting: { ...searchTypeObj }, page: 1 }) }} /> }\n        \n            return (\n              <div className=\"width-100\" >\n                <div className=\"margin-top-sm\">\n                  <h4>Sort</h4>\n                  <Row>\n                    <Col span={20}><p>Price: Low to High</p></Col>\n                    <Col span={4} style={{ textAlign: 'right' }}>\n                      {_.get(mainConfig, ['sorting', 'searchPrice']) == 1 ? compA({ 'searchPrice': null }) : compB({ 'searchPrice': 1 })}\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col span={20}><p>Price: High to Low</p></Col>\n                    <Col span={4}>\n                      {_.get(mainConfig, ['sorting', 'searchPrice']) == -1 ? compA({ 'searchPrice': null }) : compB({ 'searchPrice': -1 })}\n                    </Col>\n                  </Row>\n        \n                  <Row>\n                    <Col span={20}><p> Year: Old to New </p></Col>\n                    <Col span={4}>\n                      {_.get(mainConfig, ['sorting', 'carspec.year']) == 1 ? compA({ 'carspec.year': null }) : compB({ 'carspec.year': 1 })}\n                    </Col>\n                  </Row>\n        \n                  <Row>\n                    <Col span={20}><p> Year: New to Old </p></Col>\n                    <Col span={4}>\n                      {_.get(mainConfig, ['sorting', 'carspec.year']) == -1 ? compA({ 'carspec.year': null }) : compB({ 'carspec.year': -1 })}\n                    </Col>\n                  </Row>\n        \n                  <Row>\n                    <Col span={20}><p> Mileage: Low to High </p></Col>\n                    <Col span={4}>\n                      {_.get(mainConfig, ['sorting', 'mileageFilter']) == 1 ? compA({ 'mileageFilter': null }) : compB({ 'mileageFilter': 1 })}\n                    </Col>\n                  </Row>\n        \n                  <Row>\n                    <Col span={20}><p>Mileage: High to Low</p></Col>\n                    <Col span={4}>\n                      {_.get(mainConfig, ['sorting', 'mileageFilter']) == -1 ? compA({ 'mileageFilter': null }) : compB({ 'mileageFilter': -1 })}\n                    </Col>\n                  </Row>\n                </div>\n              </div>\n            )\n          }\n\n    return (\n        <LayoutV2>\n            <div className=\"section-version3\">\n                <div className='container-version3 padding-x-sm' style={{touchAction:'pan-y'}}>\n                    <Spin indicator={antIcon} spinning={spinning} indicator={\n                            <img src=\"/loading.gif\" style={{ width: 100, height: 100, position: 'sticky', position: '-webkit-sticky', top: 0, bottom: 0, left: 0, right: 0, margin: 'auto' }} />\n                        }>\n                            <Row gutter={[{ xs: 8, sm: 8, md: 15, lg: 15, xl: 15 }, 16]}>\n                                <Col className=\"gutter-row\" xs={24} sm={24} md={24} lg={18} xl={18}>\n\n                                    <Row className=\"margin-bottom-md\">\n                                        <Col span={20}>\n                                            <span style={{fontSize:'16px'}}>{total} </span>\n                                                {props.router.query.parameter1 ?\n                                            <span style={{fontSize:'16px'}} className='capitalize'>{getCarBrand(_.toLower(props.router.query.parameter1)).value || props.router.query.parameter1} </span> : ''}\n                                            <span style={{fontSize:'16px'}}>Cars for Sale</span>\n                                        </Col>\n                                        <Col span={4} style={{ textAlign: 'right' }}>\n                                        <   div onClick={() => { setExpandKey(expandKey == '7' ? null : '7') }}>\n                                                <img style={{ width: '40%', height: '20px' }} src=\"/assets/sorting-2.png\"></img>\n                                            </div>\n                                        </Col>\n                                    </Row>\n\n                                    <Row>\n                                        <Col span={24}>\n                                            <span className='flex-items-align-center flex-justify-space-around collapsible-drawer'>\n                                            <span className='flex-items-align-center' >\n                                            <span className=\"margin-right-lg\" onClick={() => { setExpandKey(expandKey == '1' ? null : '1') }} >Brand <Icon type=\"down\" /> </span>\n                                            <span className=\"margin-right-lg\" onClick={() => { setExpandKey(expandKey == '2' ? null : '2') }} >State <Icon type=\"down\" /> </span>\n                                            <span className=\"margin-right-lg\" onClick={() => { setExpandKey(expandKey == '3' ? null : '3') }} >Year <Icon type=\"down\" /> </span>\n                                            <span className=\"margin-right-lg\" onClick={() => { setExpandKey(expandKey == '4' ? null : '4') }} >Price <Icon type=\"down\" /> </span>\n                                            <span onClick={() => { setExpandKey(expandKey == '5' ? null : '5') }} >Detail <Icon type=\"down\" /> </span>\n                                            </span>\n                                            </span>\n                                        </Col>\n                                    </Row>\n\n                                    <Row style={{ marginTop: '10px' }}>\n                  <Col span={9}>\n                    <Button style={{ padding: '0px 10px' }} onClick={() => { setExpandKey(expandKey == '6' ? null : '6') }}> {currentFilterGroup.condition ? currentFilterGroup.condition.toUpperCase() : 'Condition'}<Icon type=\"down\" /> </Button>\n                  </Col>\n\n                  <Col span={15}>\n                    <Col style={{ paddingRight: '5px' }} xs={8} sm={8} md={8} lg={8} xl={8}>\n                      <div className=\"w-100 text-truncate-twoline flex-items-align-center\" style={{ height: 38, padding: 2, borderRadius: 5, backgroundColor: currentFilterGroup.readyStock ? \"rgb(156,31,20)\" : \"#EDECEA\", color: currentFilterGroup.readyStock ? \"#ffffff\" : \"##000000A6\" }} value=\"readyStock\" onClick={(e) => { setCurrentFilterGroup({ ...currentFilterGroup, readyStock: !currentFilterGroup.readyStock }); pushParameterToUrl({ ...currentFilterGroup, readyStock: currentFilterGroup.readyStock ? false : true }, { ...mainConfig, page: 1 }) }}>\n                        <p style={{ fontSize: \"10px\", textAlign: \"center\", fontWeight: \"bold\", marginBottom: '0px' }}> READY </p>\n                        <p style={{ fontSize: \"10px\", textAlign: \"center\", fontWeight: \"bold\", marginBottom: '0px' }}> STOCK</p>\n                      </div>\n                    </Col>\n                    <Col style={{ paddingRight: '5px' }} xs={8} sm={8} md={8} lg={8} xl={8}>\n                      <div className=\"w-100\" style={{ alignItems: 'center', paddingTop: '15%', height: 38, borderRadius: 5, backgroundColor: currentFilterGroup.registrationUrl ? \"rgb(252,101,134)\" : \"#EDECEA\", color: currentFilterGroup.readyStock ? \"#ffffff\" : \"##000000A6\" }} value=\"registrationUrl\" onClick={(e) => { setCurrentFilterGroup({ ...currentFilterGroup, registrationUrl: !currentFilterGroup.registrationUrl }); pushParameterToUrl({ ...currentFilterGroup, registrationUrl: currentFilterGroup.registrationUrl ? false : true }, { ...mainConfig, page: 1 }) }}>\n                        <p style={{ fontSize: \"10px\", textAlign: \"center\", fontWeight: \"bold\", marginBottom: '0px' }}>REG</p>\n                      </div>\n                    </Col>\n                    <Col xs={8} sm={8} md={8} lg={8} xl={8}>\n                      <div className=\"w-100\" style={{ alignItems: 'center', height: 38, paddingLeft: '25%', paddingTop: '10%', borderRadius: 5, backgroundColor: currentFilterGroup.car360View ? \"rgb(85,204,212)\" : \"#EDECEA\" }} value=\"360\" onClick={(e) => { setCurrentFilterGroup({ ...currentFilterGroup, car360View: !currentFilterGroup.car360View }); pushParameterToUrl({ ...currentFilterGroup, car360View: !currentFilterGroup.car360View }, { ...mainConfig, page: 1 }) }}>\n                        <img style={{ width: '60%' }} src=\"/assets/profile/icon-list/carmarket-bar-icon/360.png\" />\n                      </div>\n                    </Col>\n                  </Col>\n\n                  <Col xs={24} sm={24} md={24} lg={24} xl={24}>\n                    <Collapse className=\"collapse-no-header border-none collapse-body-no-padding collapse-body-overflow-visible\" activeKey={expandKey}>\n                      <Collapse.Panel key=\"1\" showArrow={false} collapsible={true}>\n                        <div style={{ marginTop: '10px' }} className=\"width-100\">\n                          {menuView}\n                        </div>\n                      </Collapse.Panel>\n                      <Collapse.Panel key=\"2\" showArrow={false} collapsible={true}>\n                        <div className=\"width-100\" >\n                          {stateView}\n                        </div>\n                      </Collapse.Panel>\n                      <Collapse.Panel key=\"3\" showArrow={false} collapsible={true}>\n                        <div className=\"width-100\" >\n                          {/* {yearView} */}\n                        </div>\n                      </Collapse.Panel>\n                      <Collapse.Panel key=\"4\" showArrow={false} collapsible={true}>\n                        <div className=\"width-100\" >\n                          {priceView}\n                        </div>\n                      </Collapse.Panel>\n                      <Collapse.Panel key=\"6\" showArrow={false} collapsible={true}>\n                        <div className=\"width-100\" >\n                          {conditionView}\n                        </div>\n                      </Collapse.Panel>\n                      <Collapse.Panel key=\"7\" showArrow={false} collapsible={true}>\n                        {sortingView()}\n                      </Collapse.Panel>\n                    </Collapse>\n                  </Col>\n                </Row>\n\n                <Divider style={{ marginTop: '15px', marginBottom: '10px' }} />\n\n                {_renderFilterTags(currentFilterGroup)}\n\n\n                <Collapse className=\"collapse-no-header border-none collapse-body-no-padding collapse-body-overflow-visible\" activeKey={expandKey}>\n                  <Collapse.Panel key=\"5\" showArrow={false}>\n                    <div className=\"width-100\" >\n                      {/* {detailView} */}\n                    </div>\n                  </Collapse.Panel>\n                </Collapse>\n\n                                    {/* <Row gutter={[0, 20]}>\n                                        <Col xs={24} sm={24} md={7} lg={6} xl={6} >\n                                            <Radio.Group\n                                                className=\"wrap-businessType-radio\"\n                                                onChange={(e) => { setCurrentFilterGroup({ ...currentFilterGroup, condition: e.target.value }); pushParameterToUrl({ ...currentFilterGroup, condition: _.toLower(e.target.value) }, { ...mainConfig, page: 1 }) }}\n                                                value={currentFilterGroup.condition ? currentFilterGroup.condition : ''}>\n                                                <Radio.Button value=\"\">All</Radio.Button>\n                                                <Radio.Button value=\"used\">Used</Radio.Button>\n                                                <Radio.Button value=\"recon\">Recon</Radio.Button>\n                                                <Radio.Button value=\"new\">New</Radio.Button>\n                                            </Radio.Group>\n                                        </Col>\n                                        <Col xs={24} sm={24} md={6} lg={5} xl={5}>\n                                            <label>Sort by: </label>\n                                            <Select defaultValue=\"createdAt:-1\" style={{ width: 120 }}\n                                                dropdownMatchSelectWidth={false}\n                                                onChange={(e) => {\n                                                    let sorting = {};\n                                                    let str = e.split(':') || [];\n                                                    sorting[str[0]] = parseInt(str[1]);\n                                                    setCurrentFilterGroup({ ...currentFilterGroup });\n                                                    pushParameterToUrl(currentFilterGroup, { ...mainConfig, sorting: sorting, page: 1 })\n                                                }}\n                                                value={\n                                                    _.isPlainObject(mainConfig.sorting) && !_.isEmpty(objectRemoveEmptyValue(mainConfig.sorting)) ?\n                                                        `${_.get(Object.entries(mainConfig.sorting), [0, 0])}:${mainConfig.sorting[_.get(Object.entries(mainConfig.sorting), [0, 0])]}`\n                                                        :\n                                                        ''}\n                                            >\n                                                <Select.Option value=\"createdAt:-1\">Best Value</Select.Option>\n                                                <Select.Option value=\"searchPrice:1\">Price (Low to High)</Select.Option>\n                                                <Select.Option value=\"searchPrice:-1\">Price (High to Low)</Select.Option>\n                                                <Select.Option value=\"carspec.year:-1\">Year (New to Old)</Select.Option>\n                                                <Select.Option value=\"carspec.year:1\">Year (Old to New)</Select.Option>\n                                                <Select.Option value=\"mileageFilter:1\">Mileage (Low to High)</Select.Option>\n                                                <Select.Option value=\"mileageFilter:-1\">Mileage (High to Low)</Select.Option>\n                                            </Select>\n                                        </Col>\n\n                                        <Col xs={12} sm={12} md={4} lg={3} xl={3} style={{ paddingTop: '15px' }}>\n                                            <Row>\n                                                <Col xs={10} sm={14} md={14} lg={14} xl={14} ><label>Reg Card:</label></Col>\n                                                <Col xs={12} sm={12} md={10} lg={10} xl={10} >\n                                                    <Switch offColor={SWITCH_OFF_COLOR} onColor={SWITCH_ON_COLOR} height={20} width={40} checkedIcon={null} uncheckedIcon={null} checked={currentFilterGroup.registrationUrl} onChange={(checked) => { setCurrentFilterGroup({ ...currentFilterGroup, registrationUrl: checked }); pushParameterToUrl({ ...currentFilterGroup, registrationUrl: checked }, { ...mainConfig, page: 1 }) }} />\n                                                </Col>\n                                            </Row>\n                                        </Col>\n                                        <Col xs={12} sm={12} md={4} lg={3} xl={3} style={{ paddingTop: '15px' }}>\n                                            <Row>\n                                                <Col xs={12} sm={14} md={14} lg={14} xl={14} ><label>360&deg; View:</label></Col>\n                                                <Col xs={10} sm={10} md={10} lg={10} xl={10} >\n                                                    <Switch offColor={SWITCH_OFF_COLOR} onColor={SWITCH_ON_COLOR} height={20} width={40} checkedIcon={null} uncheckedIcon={null} checked={currentFilterGroup.car360View} onChange={(checked) => { setCurrentFilterGroup({ ...currentFilterGroup, car360View: checked }); pushParameterToUrl({ ...currentFilterGroup, car360View: checked }, { ...mainConfig, page: 1 }) }} />\n                                                </Col>\n                                            </Row>\n                                        </Col>\n                                        <Col xs={0} sm={0} md={{ span: 0 }} lg={{ span: 4 }} xl={{ span: 4 }} style={{ float: 'right' }}>\n                                            <Radio.Group onChange={(e) => { setView(e.target.value) }} value={view} className=\"wrap-gridView-btn\" style={{ float: 'right', marginRight: '10px' }}>\n                                                <Tooltip title=\"List View\"><Radio.Button value=\"listView\"><BarsOutlined style={{ fontSize: '16px' }} /> </Radio.Button></Tooltip>\n                                                <Tooltip title=\"Grid View\"><Radio.Button value=\"gridView\"><AppstoreOutlined style={{ fontSize: '16px' }} /> </Radio.Button></Tooltip>\n                                            </Radio.Group>\n                                        </Col>\n                                    </Row> */}\n\n                                    <Row style={{ marginBottom: '10px', marginTop:'10px' }} >\n                                        <Col xs={24} sm={24} md={24} lg={24} xl={24} className=\"background-white margin-bottom-xl\">\n                                            <Row>\n                                                <Col xs={24} sm={24} md={24} lg={24} xl={24}>\n                                                    <div className=\"d-flex scroller-type\"   >\n                                                        {_renderGridViewRes(notEmptyLength(productList) ? productList : [])}\n                                                    </div>\n                                                </Col>\n                                            </Row>\n                                        </Col>\n                                        <Col style={{ textAlign: 'center' }} xs={24} sm={24} md={24} lg={24} xl={24}>\n                                            <Pagination defaultCurrent={1} current={mainConfig.page} pageSize={PAGESIZE} total={total} onChange={(page) => { pushParameterToUrl(currentFilterGroup, { ...mainConfig, page: page }) }} />\n                                        </Col>\n                                    </Row>\n                                </Col>\n                            </Row>\n                        </Spin>\n                    </div>\n            </div>\n        </LayoutV2>\n    )\n}\n\n\nconst mapStateToProps = state => ({\n    app: state.app,\n    user: state.user,\n    productsList: state.productsList,\n});\n\n\nconst mapDispatchToProps = {\n    loading: loading,\n    setProductListLoading: setProductListLoading,\n    updateActiveMenu: updateActiveMenu,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(CarMarketPage))"]},"metadata":{},"sourceType":"module"}