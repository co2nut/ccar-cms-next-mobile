{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport { Button, Form, message, Modal } from 'antd';\nimport _ from 'lodash';\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'next/router';\nimport { loading, loginMode } from '../../redux/actions/app-actions';\nimport client from '../../feathers';\nimport { setUser } from '../../redux/actions/user-actions';\nimport { notEmptyLength } from '../../common-function';\n\nvar Wishlist = function Wishlist(props) {\n  _s();\n\n  var _useState = useState([]),\n      wishlist = _useState[0],\n      setWishlist = _useState[1];\n\n  var _useState2 = useState(false),\n      confirmModalState = _useState2[0],\n      setConfirmModalState = _useState2[1];\n\n  var _useState3 = useState(false),\n      isSaved = _useState3[0],\n      setIsSaved = _useState3[1];\n\n  useEffect(function () {\n    init();\n  }, [props.saverId, props[props.type + 'Id']]);\n\n  function init() {\n    if (!_.isEmpty(props.saverId) && !_.isEmpty(props[props.type + 'Id'])) {\n      var query = {};\n      query[props.type + 'Id'] = props[props.type + 'Id'];\n      query.type = props.type;\n      query.saverId = props.saverId;\n      client.service('wishlists').find({\n        query: query\n      }).then(function (res) {\n        if (notEmptyLength(res.data)) {\n          setWishlist(res.data[0]);\n          setIsSaved(true);\n        } else {\n          setWishlist(null);\n          setIsSaved(false);\n        }\n      })[\"catch\"](function (err) {\n        message.error(err.message);\n      });\n    }\n  }\n\n  function handleSuccess(success) {\n    setConfirmModalState(false);\n\n    if (props.handleSuccess) {\n      props.handleSuccess(success);\n    }\n  }\n\n  function handleError(error) {\n    setConfirmModalState(false);\n\n    if (props.handleError) {\n      props.handleError(error);\n    }\n  }\n\n  function handleSubmit() {\n    if (!_.isEmpty(props.saverId) && !_.isEmpty(props[props.type + 'Id'])) {\n      var promises = [];\n      promises.push(client.authenticate());\n\n      if (!isSaved) {\n        var data = {};\n        data.type = props.type;\n        data.saverId = props.saverId;\n        data[props.type + 'Id'] = props[props.type + 'Id'];\n        promises.push(client.service('wishlists').create(data));\n      } else {\n        promises.push(client.service('wishlists').remove(wishlist._id));\n      }\n\n      props.loading(true); //Write in wishlist model\n\n      Promise.all(promises).then(function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n            auth = _ref2[0],\n            wishlistRes = _ref2[1];\n\n        props.loading(false);\n        handleSuccess({\n          type: isSaved ? 'remove' : 'save',\n          data: wishlistRes\n        });\n        init();\n      })[\"catch\"](function (error) {\n        props.loading(false);\n        handleError({\n          message: \"Submit Wishlist Failed\"\n        });\n      });\n    } else {\n      handleError({\n        message: \"Something Went Wrong!\"\n      });\n    }\n  }\n\n  ;\n\n  function handleChange() {\n    if (!props.saverId) {\n      props.loginMode(true);\n      handleError({\n        message: 'Please login to save the wishlist.'\n      });\n      return null;\n    }\n\n    if (!props[props.type + 'Id']) {\n      handleError({\n        message: 'Item not found!'\n      });\n      return null;\n    }\n\n    if (isSaved) {\n      setConfirmModalState(true);\n    } else {\n      handleSubmit();\n    }\n  }\n\n  return __jsx(\"span\", {\n    className: props.className ? props.className : null,\n    style: props.style ? props.style : null\n  }, __jsx(Modal, {\n    visible: confirmModalState,\n    title: \"Are you sure?\",\n    maskClosable: true,\n    centered: true,\n    onOk: function onOk(e) {\n      handleSubmit();\n      setConfirmModalState(false);\n    },\n    onCancel: function onCancel(e) {\n      setConfirmModalState(false);\n    }\n  }, __jsx(\"div\", null, \"Do you want to remove this product from your wishlist?\")), isSaved ? __jsx(\"a\", {\n    onClick: function onClick() {\n      return props.readOnly ? null : handleChange();\n    }\n  }, props.savedButton ? props.savedButton() : __jsx(Button, {\n    style: {\n      color: '#F57F17'\n    }\n  }, \"Saved\")) : __jsx(\"a\", {\n    onClick: function onClick() {\n      return props.readOnly ? null : handleChange();\n    }\n  }, props.saveButton ? props.saveButton() : __jsx(Button, null, \"Save\")));\n};\n\n_s(Wishlist, \"WD33Sc0LQ3K7uARaOxBvKST1lIc=\");\n\n_c = Wishlist;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    app: state.app,\n    user: state.user\n  };\n};\n\nvar mapDispatchToProps = {\n  loginMode: loginMode,\n  loading: loading,\n  setUser: setUser\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Form.create()(withRouter(Wishlist)));\n\nvar _c;\n\n$RefreshReg$(_c, \"Wishlist\");","map":{"version":3,"sources":["/Users/faraheen/ccar-cms-next-mobile/components/general/Wishlist.jsx"],"names":["Button","Form","message","Modal","_","React","useEffect","useState","connect","withRouter","loading","loginMode","client","setUser","notEmptyLength","Wishlist","props","wishlist","setWishlist","confirmModalState","setConfirmModalState","isSaved","setIsSaved","init","saverId","type","isEmpty","query","service","find","then","res","data","err","error","handleSuccess","success","handleError","handleSubmit","promises","push","authenticate","create","remove","_id","Promise","all","auth","wishlistRes","handleChange","className","style","e","readOnly","savedButton","color","saveButton","mapStateToProps","state","app","user","mapDispatchToProps"],"mappings":"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","sourcesContent":["import { Button, Form, message, Modal } from 'antd';\nimport _ from 'lodash';\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'next/router';\nimport { loading, loginMode } from '../../redux/actions/app-actions';\nimport client from '../../feathers';\nimport { setUser } from '../../redux/actions/user-actions';\nimport { notEmptyLength } from '../../common-function';\n\n\n\nconst Wishlist = (props) => {\n\n\n    const [wishlist, setWishlist] = useState([]);\n    const [confirmModalState, setConfirmModalState] = useState(false);\n    const [isSaved, setIsSaved] = useState(false);\n\n    useEffect(() => {\n        init();\n    }, [props.saverId, props[props.type + 'Id']])\n\n    function init() {\n        if (!_.isEmpty(props.saverId) && !_.isEmpty(props[props.type + 'Id'])) {\n            let query = {};\n            query[props.type + 'Id'] = props[props.type + 'Id'];\n            query.type = props.type;\n            query.saverId = props.saverId\n\n            client.service('wishlists').find({\n                query: query\n            }).then(res => {\n                if (notEmptyLength(res.data)) {\n                    setWishlist(res.data[0])\n                    setIsSaved(true);\n                } else {\n                    setWishlist(null)\n                    setIsSaved(false);\n                }\n            }).catch(err => {\n                message.error(err.message)\n            });\n        }\n    }\n\n    function handleSuccess(success) {\n        setConfirmModalState(false);\n        if (props.handleSuccess) {\n            props.handleSuccess(success);\n        }\n    }\n\n\n    function handleError(error) {\n        setConfirmModalState(false);\n        if (props.handleError) {\n            props.handleError(error);\n        }\n    }\n\n    function handleSubmit() {\n        if (!_.isEmpty(props.saverId) && !_.isEmpty(props[props.type + 'Id'])) {\n            let promises = [];\n            promises.push(client.authenticate());\n            if (!isSaved) {\n                let data = {}\n                data.type = props.type;\n                data.saverId = props.saverId;\n                data[props.type + 'Id'] = props[props.type + 'Id'];\n                promises.push(client.service('wishlists').create(data))\n            } else {\n                promises.push(client.service('wishlists').remove(wishlist._id))\n            }\n\n            props.loading(true);\n            //Write in wishlist model\n            Promise.all(promises).then(([auth, wishlistRes]) => {\n                props.loading(false);\n                handleSuccess({\n                    type: isSaved ? 'remove' : 'save',\n                    data: wishlistRes\n                });\n\n                init();\n\n            }).catch(error => {\n                props.loading(false);\n                handleError({ message: \"Submit Wishlist Failed\" })\n            })\n        } else {\n            handleError({ message: \"Something Went Wrong!\" })\n\n        }\n\n\n    };\n\n    function handleChange() {\n\n        if (!props.saverId) {\n            props.loginMode(true);\n            handleError({ message: 'Please login to save the wishlist.' });\n            return null;\n        }\n\n        if (!props[props.type + 'Id']) {\n            handleError({ message: 'Item not found!' });\n            return null;\n        }\n\n        if (isSaved) {\n            setConfirmModalState(true);\n        } else {\n            handleSubmit();\n        }\n\n    }\n\n\n\n    return (\n\n        <span className={props.className ? props.className : null} style={props.style ? props.style : null}>\n            <Modal\n                visible={confirmModalState}\n                title=\"Are you sure?\"\n                maskClosable={true}\n                centered={true}\n                onOk={(e) => { handleSubmit(); setConfirmModalState(false); }}\n                onCancel={(e) => { setConfirmModalState(false) }}\n            >\n                <div>\n                    Do you want to remove this product from your wishlist?\n                </div>\n            </Modal>\n\n            {\n                isSaved ?\n                    <a onClick={() => props.readOnly ? null : handleChange()}>\n\n                        {\n                            props.savedButton ?\n                                props.savedButton()\n                                :\n                                <Button style={{ color: '#F57F17' }}>Saved</Button>\n                        }\n                    </a>\n                    :\n                    <a onClick={() => props.readOnly ? null : handleChange()}>\n                        {\n                            props.saveButton ?\n                                props.saveButton()\n                                :\n                                <Button>Save</Button>\n                        }\n                    </a>\n            }\n\n        </span>\n    );\n}\n\n\nconst mapStateToProps = state => ({\n    app: state.app,\n    user: state.user,\n});\nconst mapDispatchToProps = {\n    loginMode: loginMode,\n    loading: loading,\n    setUser: setUser,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Form.create()(withRouter(Wishlist)));"]},"metadata":{},"sourceType":"module"}