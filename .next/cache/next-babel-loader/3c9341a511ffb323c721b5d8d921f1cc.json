{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { withRouter } from 'next/dist/client/router';\nimport { connect } from 'react-redux';\nimport ReduxPersistWrapper from '../../../components/general/ReduxPersistWrapper';\nimport ProfileHomePage from '../../../components/profile/page/ProfileHomePage';\nvar searchBarRef = React.createRef();\n\nvar Index = function Index(props) {\n  return __jsx(ReduxPersistWrapper, {\n    cookie: props.cookie\n  }, props.app.initedRedux ? __jsx(ProfileHomePage, null) : null);\n};\n\n_c = Index;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    app: state.app,\n    user: state.user,\n    productsList: state.productsList\n  };\n};\n\nvar mapDispatchToProps = {};\nexport var __N_SSP = true;\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Index));\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/Users/faraheen/ccar-cms-next-mobile/pages/profile/[id]/index.jsx"],"names":["withRouter","connect","ReduxPersistWrapper","ProfileHomePage","searchBarRef","React","createRef","Index","props","cookie","app","initedRedux","mapStateToProps","state","user","productsList","mapDispatchToProps"],"mappings":";;AACA,SAASA,UAAT,QAA2B,yBAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,mBAAP,MAAgC,iDAAhC;AACA,OAAOC,eAAP,MAA4B,kDAA5B;AAIA,IAAMC,YAAY,GAAGC,KAAK,CAACC,SAAN,EAArB;;AACA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD,EAAW;AAGrB,SACI,MAAC,mBAAD;AAAqB,IAAA,MAAM,EAAEA,KAAK,CAACC;AAAnC,KAEQD,KAAK,CAACE,GAAN,CAAUC,WAAV,GACI,MAAC,eAAD,OADJ,GAGI,IALZ,CADJ;AAUH,CAbD;;KAAMJ,K;;AA2CN,IAAMK,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAC9BH,IAAAA,GAAG,EAAEG,KAAK,CAACH,GADmB;AAE9BI,IAAAA,IAAI,EAAED,KAAK,CAACC,IAFkB;AAG9BC,IAAAA,YAAY,EAAEF,KAAK,CAACE;AAHU,GAAL;AAAA,CAA7B;;AAOA,IAAMC,kBAAkB,GAAG,EAA3B;;AAEA,eAAef,OAAO,CAACW,eAAD,EAAkBI,kBAAlB,CAAP,CAA6ChB,UAAU,CAACO,KAAD,CAAvD,CAAf","sourcesContent":["import _ from 'lodash';\nimport { withRouter } from 'next/dist/client/router';\nimport { connect } from 'react-redux';\nimport { getProfileSeoData } from '../../../common-function';\nimport ReduxPersistWrapper from '../../../components/general/ReduxPersistWrapper';\nimport ProfileHomePage from '../../../components/profile/page/ProfileHomePage';\nimport client from '../../../feathers';\n\n\nconst searchBarRef = React.createRef();\nconst Index = (props) => {\n\n\n    return (\n        <ReduxPersistWrapper cookie={props.cookie}>\n            {\n                props.app.initedRedux ?\n                    <ProfileHomePage />\n                    :\n                    null\n            }\n        </ReduxPersistWrapper>\n    )\n}\n\n\nexport async function getServerSideProps(context) {\n\n    let id = _.get(context, `req.params.id`) || _.get(context, `req.query.id`);\n    let profile = {};\n    let seoData = {};\n    if (id) {\n        profile = await client.service('users').find({\n            query: {\n                userurlId: id,\n            }\n        })\n        profile = _.get(profile, 'data[0]') || {}\n    }\n\n    if (_.isPlainObject(profile) && !_.isEmpty(profile)) {\n        seoData = getProfileSeoData(profile);\n    }\n    return {\n        props: {\n            cookie: _.get(context, ['req', 'headers', 'cookie']) || null,\n            seoData: {\n                ...seoData,\n            }\n        }\n    }\n}\n\nconst mapStateToProps = state => ({\n    app: state.app,\n    user: state.user,\n    productsList: state.productsList,\n});\n\n\nconst mapDispatchToProps = {\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Index));"]},"metadata":{},"sourceType":"module"}