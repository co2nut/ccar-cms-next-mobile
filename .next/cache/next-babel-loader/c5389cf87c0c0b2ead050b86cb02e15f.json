{"ast":null,"code":"var __jsx = React.createElement;\nimport { Form } from 'antd';\nimport _ from 'lodash';\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { EmailIcon, EmailShareButton, FacebookIcon, FacebookShareButton, HatenaIcon, HatenaShareButton, InstapaperIcon, InstapaperShareButton, LineIcon, LineShareButton, LinkedinIcon, LinkedinShareButton, LivejournalIcon, LivejournalShareButton, MailruIcon, MailruShareButton, OKIcon, OKShareButton, PocketIcon, PocketShareButton, RedditIcon, RedditShareButton, TelegramIcon, TelegramShareButton, TumblrIcon, TumblrShareButton, TwitterIcon, TwitterShareButton, ViberIcon, ViberShareButton, VKIcon, VKShareButton, WeiboIcon, WeiboShareButton, WhatsappIcon, WhatsappShareButton, WorkplaceIcon, WorkplaceShareButton } from \"react-share\";\nimport { withRouter } from 'next/router';\nimport { notEmptyLength } from '../../common-function';\n\nconst SocialShareButton = props => {\n  const {\n    0: link,\n    1: setLink\n  } = useState(window.location.href);\n  const {\n    0: title,\n    1: setTitle\n  } = useState('');\n  const {\n    0: iconSize,\n    1: setIconSize\n  } = useState(38);\n  const {\n    0: shape,\n    1: setShape\n  } = useState('square');\n  const {\n    0: network,\n    1: setNetwork\n  } = useState([// 'email',\n  'facebook', // 'messenger',\n  // 'hatena',\n  // 'instapaper',\n  // 'linkedin',\n  'line', // 'livejournal',\n  // 'mailru',\n  // 'ok',\n  // 'pinterest',\n  // 'pocket',\n  // 'reddit',\n  'telegram', // 'tumblr',\n  'twitter', // 'viber',\n  // 'vk',\n  // 'weibo',\n  'whatsapp' // 'workplace',\n  ]);\n  useEffect(() => {\n    if (props.link) {\n      setLink(props.link);\n    }\n  }, [props.link]);\n  useEffect(() => {\n    if (props.title) {\n      setTitle(props.title);\n    }\n  }, [props.title]);\n  useEffect(() => {\n    if (props.iconSize) {\n      setIconSize(props.iconSize);\n    }\n  }, [props.iconSize]);\n  useEffect(() => {\n    if (notEmptyLength(props.network)) {\n      setNetwork(props.network);\n    }\n  }, [props.network]);\n  useEffect(() => {\n    if (props.shape) {\n      setShape(props.shape);\n    }\n  }, [props.shape]);\n\n  const _renderSocialShareButton = value => {\n    switch (value) {\n      case 'email':\n        return __jsx(EmailShareButton, {\n          url: link,\n          title: title,\n          className: \"margin-sm flex-justify-center flex-items-align-center round-border\"\n        }, __jsx(EmailIcon, {\n          size: iconSize,\n          round: shape == 'square' ? false : true\n        }));\n\n      case 'facebook':\n        return __jsx(FacebookShareButton, {\n          url: link,\n          quote: title,\n          className: \"margin-sm flex-justify-center flex-items-align-center round-border\"\n        }, __jsx(FacebookIcon, {\n          size: iconSize,\n          round: shape == 'square' ? false : true\n        }));\n      // case 'messenger':\n      //     return (\n      //         <FacebookMessengerShareButton url={link} title={title} className='margin-sm flex-justify-center flex-items-align-center round-border'>\n      //             <FacebookMessengerIcon size={iconSize} round={shape == 'square' ? false : true} />\n      //         </FacebookMessengerShareButton>\n      //     )\n\n      case 'hatena':\n        return __jsx(HatenaShareButton, {\n          url: link,\n          title: title,\n          className: \"margin-sm flex-justify-center flex-items-align-center round-border\"\n        }, __jsx(HatenaIcon, {\n          size: iconSize,\n          round: shape == 'square' ? false : true\n        }));\n\n      case 'instapaper':\n        return __jsx(InstapaperShareButton, {\n          url: link,\n          title: title,\n          className: \"margin-sm flex-justify-center flex-items-align-center round-border\"\n        }, __jsx(InstapaperIcon, {\n          size: iconSize,\n          round: shape == 'square' ? false : true\n        }));\n\n      case 'linkedin':\n        return __jsx(LinkedinShareButton, {\n          edinShareButton: true,\n          url: link,\n          title: title,\n          className: \"margin-sm flex-justify-center flex-items-align-center round-border\"\n        }, __jsx(LinkedinIcon, {\n          size: iconSize,\n          round: shape == 'square' ? false : true\n        }));\n\n      case 'line':\n        return __jsx(LineShareButton, {\n          url: link,\n          title: title,\n          className: \"margin-sm flex-justify-center flex-items-align-center round-border\"\n        }, __jsx(LineIcon, {\n          size: iconSize,\n          round: shape == 'square' ? false : true\n        }));\n\n      case 'livejournal':\n        return __jsx(LivejournalShareButton, {\n          url: link,\n          title: title,\n          className: \"margin-sm flex-justify-center flex-items-align-center round-border\"\n        }, __jsx(LivejournalIcon, {\n          size: iconSize,\n          round: shape == 'square' ? false : true\n        }));\n\n      case 'mailru':\n        return __jsx(MailruShareButton, {\n          url: link,\n          title: title,\n          className: \"margin-sm flex-justify-center flex-items-align-center round-border\"\n        }, __jsx(MailruIcon, {\n          size: iconSize,\n          round: shape == 'square' ? false : true\n        }));\n\n      case 'ok':\n        return __jsx(OKShareButton, {\n          url: link,\n          title: title,\n          className: \"margin-sm flex-justify-center flex-items-align-center round-border\"\n        }, __jsx(OKIcon, {\n          size: iconSize,\n          round: shape == 'square' ? false : true\n        }));\n      // case 'pinterest':\n      //     return (\n      //         <PinterestShareButton url={link} title={title} className='margin-sm flex-justify-center flex-items-align-center round-border'>\n      //             <PinterestIcon size={iconSize} round={shape == 'square' ? false : true} />\n      //         </PinterestShareButton>\n      //     )\n\n      case 'pocket':\n        return __jsx(PocketShareButton, {\n          url: link,\n          title: title,\n          className: \"margin-sm flex-justify-center flex-items-align-center round-border\"\n        }, __jsx(PocketIcon, {\n          size: iconSize,\n          round: shape == 'square' ? false : true\n        }));\n\n      case 'reddit':\n        return __jsx(RedditShareButton, {\n          url: link,\n          title: title,\n          className: \"margin-sm flex-justify-center flex-items-align-center round-border\"\n        }, __jsx(RedditIcon, {\n          size: iconSize,\n          round: shape == 'square' ? false : true\n        }));\n\n      case 'telegram':\n        return __jsx(TelegramShareButton, {\n          url: link,\n          title: title,\n          className: \"margin-sm flex-justify-center flex-items-align-center round-border\"\n        }, __jsx(TelegramIcon, {\n          size: iconSize,\n          round: shape == 'square' ? false : true\n        }));\n\n      case 'tumblr':\n        return __jsx(TumblrShareButton, {\n          url: link,\n          title: title,\n          className: \"margin-sm flex-justify-center flex-items-align-center round-border\"\n        }, __jsx(TumblrIcon, {\n          size: iconSize,\n          round: shape == 'square' ? false : true\n        }));\n\n      case 'twitter':\n        return __jsx(TwitterShareButton, {\n          url: link,\n          title: title,\n          className: \"margin-sm flex-justify-center flex-items-align-center round-border\"\n        }, __jsx(TwitterIcon, {\n          size: iconSize,\n          round: shape == 'square' ? false : true\n        }));\n\n      case 'viber':\n        return __jsx(ViberShareButton, {\n          url: link,\n          title: title,\n          className: \"margin-sm flex-justify-center flex-items-align-center round-border\"\n        }, __jsx(ViberIcon, {\n          size: iconSize,\n          round: shape == 'square' ? false : true\n        }));\n\n      case 'vk':\n        return __jsx(VKShareButton, {\n          url: link,\n          title: title,\n          className: \"margin-sm flex-justify-center flex-items-align-center round-border\"\n        }, __jsx(VKIcon, {\n          size: iconSize,\n          round: shape == 'square' ? false : true\n        }));\n\n      case 'weibo':\n        return __jsx(WeiboShareButton, {\n          url: link,\n          title: title,\n          className: \"margin-sm flex-justify-center flex-items-align-center round-border\"\n        }, __jsx(WeiboIcon, {\n          size: iconSize,\n          round: shape == 'square' ? false : true\n        }));\n\n      case 'whatsapp':\n        return __jsx(WhatsappShareButton, {\n          url: link,\n          title: title,\n          className: \"margin-sm flex-justify-center flex-items-align-center round-border\"\n        }, __jsx(WhatsappIcon, {\n          size: iconSize,\n          round: shape == 'square' ? false : true\n        }));\n\n      case 'workplace':\n        return __jsx(WorkplaceShareButton, {\n          url: link,\n          title: title,\n          className: \"margin-sm flex-justify-center flex-items-align-center round-border\"\n        }, __jsx(WorkplaceIcon, {\n          size: iconSize,\n          round: shape == 'square' ? false : true\n        }));\n\n      default:\n        break;\n    }\n  };\n\n  return __jsx(React.Fragment, null, notEmptyLength(network) ? _.map(network, function (v) {\n    return _renderSocialShareButton(v);\n  }) : null);\n};\n\nconst mapStateToProps = state => ({\n  app: state.app,\n  user: state.user\n});\n\nconst mapDispatchToProps = {};\nexport default connect(mapStateToProps, mapDispatchToProps)(Form.create()(withRouter(SocialShareButton)));","map":{"version":3,"sources":["/Users/faraheen/ccar-cms-next-mobile/components/general/SocialShareButton.jsx"],"names":["Form","_","React","useEffect","useState","connect","EmailIcon","EmailShareButton","FacebookIcon","FacebookShareButton","HatenaIcon","HatenaShareButton","InstapaperIcon","InstapaperShareButton","LineIcon","LineShareButton","LinkedinIcon","LinkedinShareButton","LivejournalIcon","LivejournalShareButton","MailruIcon","MailruShareButton","OKIcon","OKShareButton","PocketIcon","PocketShareButton","RedditIcon","RedditShareButton","TelegramIcon","TelegramShareButton","TumblrIcon","TumblrShareButton","TwitterIcon","TwitterShareButton","ViberIcon","ViberShareButton","VKIcon","VKShareButton","WeiboIcon","WeiboShareButton","WhatsappIcon","WhatsappShareButton","WorkplaceIcon","WorkplaceShareButton","withRouter","notEmptyLength","SocialShareButton","props","link","setLink","window","location","href","title","setTitle","iconSize","setIconSize","shape","setShape","network","setNetwork","_renderSocialShareButton","value","map","v","mapStateToProps","state","app","user","mapDispatchToProps","create"],"mappings":";AAAA,SAASA,IAAT,QAAqB,MAArB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,EAAoBC,gBAApB,EAAsCC,YAAtC,EAAoDC,mBAApD,EAAyEC,UAAzE,EAAqFC,iBAArF,EAAwGC,cAAxG,EAAwHC,qBAAxH,EAA+IC,QAA/I,EAAyJC,eAAzJ,EAA0KC,YAA1K,EAAwLC,mBAAxL,EAA6MC,eAA7M,EAA8NC,sBAA9N,EAAsPC,UAAtP,EAAkQC,iBAAlQ,EAAqRC,MAArR,EAA6RC,aAA7R,EAA4SC,UAA5S,EAAwTC,iBAAxT,EAA2UC,UAA3U,EAAuVC,iBAAvV,EAA0WC,YAA1W,EAAwXC,mBAAxX,EAA6YC,UAA7Y,EAAyZC,iBAAzZ,EAA4aC,WAA5a,EAAybC,kBAAzb,EAA6cC,SAA7c,EAAwdC,gBAAxd,EAA0eC,MAA1e,EAAkfC,aAAlf,EAAigBC,SAAjgB,EAA4gBC,gBAA5gB,EAA8hBC,YAA9hB,EAA4iBC,mBAA5iB,EAAikBC,aAAjkB,EAAglBC,oBAAhlB,QAA4mB,aAA5mB;AACA,SAASC,UAAT,QAA2B,aAA3B;AACA,SAASC,cAAT,QAA+B,uBAA/B;;AAGA,MAAMC,iBAAiB,GAAIC,KAAD,IAAW;AAEjC,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkB7C,QAAQ,CAAC8C,MAAM,CAACC,QAAP,CAAgBC,IAAjB,CAAhC;AACA,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBlD,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAAA,OAACmD,QAAD;AAAA,OAAWC;AAAX,MAA0BpD,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM;AAAA,OAACqD,KAAD;AAAA,OAAQC;AAAR,MAAoBtD,QAAQ,CAAC,QAAD,CAAlC;AACA,QAAM;AAAA,OAACuD,OAAD;AAAA,OAAUC;AAAV,MAAwBxD,QAAQ,CAAC,CACnC;AACA,YAFmC,EAGnC;AACA;AACA;AACA;AACA,QAPmC,EAQnC;AACA;AACA;AACA;AACA;AACA;AACA,YAdmC,EAenC;AACA,WAhBmC,EAiBnC;AACA;AACA;AACA,YApBmC,CAqBnC;AArBmC,GAAD,CAAtC;AAyBAD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI4C,KAAK,CAACC,IAAV,EAAgB;AACZC,MAAAA,OAAO,CAACF,KAAK,CAACC,IAAP,CAAP;AACH;AACJ,GAJQ,EAIN,CAACD,KAAK,CAACC,IAAP,CAJM,CAAT;AAMA7C,EAAAA,SAAS,CAAC,MAAM;AAEZ,QAAI4C,KAAK,CAACM,KAAV,EAAiB;AACbC,MAAAA,QAAQ,CAACP,KAAK,CAACM,KAAP,CAAR;AACH;AACJ,GALQ,EAKN,CAACN,KAAK,CAACM,KAAP,CALM,CAAT;AAOAlD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI4C,KAAK,CAACQ,QAAV,EAAoB;AAChBC,MAAAA,WAAW,CAACT,KAAK,CAACQ,QAAP,CAAX;AACH;AACJ,GAJQ,EAIN,CAACR,KAAK,CAACQ,QAAP,CAJM,CAAT;AAMApD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI0C,cAAc,CAACE,KAAK,CAACY,OAAP,CAAlB,EAAmC;AAC/BC,MAAAA,UAAU,CAACb,KAAK,CAACY,OAAP,CAAV;AACH;AACJ,GAJQ,EAIN,CAACZ,KAAK,CAACY,OAAP,CAJM,CAAT;AAMAxD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI4C,KAAK,CAACU,KAAV,EAAiB;AACbC,MAAAA,QAAQ,CAACX,KAAK,CAACU,KAAP,CAAR;AACH;AACJ,GAJQ,EAIN,CAACV,KAAK,CAACU,KAAP,CAJM,CAAT;;AASA,QAAMI,wBAAwB,GAAIC,KAAD,IAAW;AACxC,YAAQA,KAAR;AACI,WAAK,OAAL;AACI,eACI,MAAC,gBAAD;AAAkB,UAAA,GAAG,EAAEd,IAAvB;AAA6B,UAAA,KAAK,EAAEK,KAApC;AAA2C,UAAA,SAAS,EAAC;AAArD,WACI,MAAC,SAAD;AAAW,UAAA,IAAI,EAAEE,QAAjB;AAA2B,UAAA,KAAK,EAAEE,KAAK,IAAI,QAAT,GAAoB,KAApB,GAA4B;AAA9D,UADJ,CADJ;;AAKJ,WAAK,UAAL;AACI,eACI,MAAC,mBAAD;AAAqB,UAAA,GAAG,EAAET,IAA1B;AAAgC,UAAA,KAAK,EAAEK,KAAvC;AAA8C,UAAA,SAAS,EAAC;AAAxD,WACI,MAAC,YAAD;AAAc,UAAA,IAAI,EAAEE,QAApB;AAA8B,UAAA,KAAK,EAAEE,KAAK,IAAI,QAAT,GAAoB,KAApB,GAA4B;AAAjE,UADJ,CADJ;AAKJ;AACA;AACA;AACA;AACA;AACA;;AACA,WAAK,QAAL;AACI,eACI,MAAC,iBAAD;AAAmB,UAAA,GAAG,EAAET,IAAxB;AAA8B,UAAA,KAAK,EAAEK,KAArC;AAA4C,UAAA,SAAS,EAAC;AAAtD,WACI,MAAC,UAAD;AAAY,UAAA,IAAI,EAAEE,QAAlB;AAA4B,UAAA,KAAK,EAAEE,KAAK,IAAI,QAAT,GAAoB,KAApB,GAA4B;AAA/D,UADJ,CADJ;;AAKJ,WAAK,YAAL;AACI,eACI,MAAC,qBAAD;AAAuB,UAAA,GAAG,EAAET,IAA5B;AAAkC,UAAA,KAAK,EAAEK,KAAzC;AAAgD,UAAA,SAAS,EAAC;AAA1D,WACI,MAAC,cAAD;AAAgB,UAAA,IAAI,EAAEE,QAAtB;AAAgC,UAAA,KAAK,EAAEE,KAAK,IAAI,QAAT,GAAoB,KAApB,GAA4B;AAAnE,UADJ,CADJ;;AAKJ,WAAK,UAAL;AACI,eACI,MAAC,mBAAD;AAAqB,UAAA,eAAe,MAApC;AAAqC,UAAA,GAAG,EAAET,IAA1C;AAAgD,UAAA,KAAK,EAAEK,KAAvD;AAA8D,UAAA,SAAS,EAAC;AAAxE,WACI,MAAC,YAAD;AAAc,UAAA,IAAI,EAAEE,QAApB;AAA8B,UAAA,KAAK,EAAEE,KAAK,IAAI,QAAT,GAAoB,KAApB,GAA4B;AAAjE,UADJ,CADJ;;AAKJ,WAAK,MAAL;AACI,eACI,MAAC,eAAD;AAAiB,UAAA,GAAG,EAAET,IAAtB;AAA4B,UAAA,KAAK,EAAEK,KAAnC;AAA0C,UAAA,SAAS,EAAC;AAApD,WACI,MAAC,QAAD;AAAU,UAAA,IAAI,EAAEE,QAAhB;AAA0B,UAAA,KAAK,EAAEE,KAAK,IAAI,QAAT,GAAoB,KAApB,GAA4B;AAA7D,UADJ,CADJ;;AAKJ,WAAK,aAAL;AACI,eACI,MAAC,sBAAD;AAAwB,UAAA,GAAG,EAAET,IAA7B;AAAmC,UAAA,KAAK,EAAEK,KAA1C;AAAiD,UAAA,SAAS,EAAC;AAA3D,WACI,MAAC,eAAD;AAAiB,UAAA,IAAI,EAAEE,QAAvB;AAAiC,UAAA,KAAK,EAAEE,KAAK,IAAI,QAAT,GAAoB,KAApB,GAA4B;AAApE,UADJ,CADJ;;AAKJ,WAAK,QAAL;AACI,eACI,MAAC,iBAAD;AAAmB,UAAA,GAAG,EAAET,IAAxB;AAA8B,UAAA,KAAK,EAAEK,KAArC;AAA4C,UAAA,SAAS,EAAC;AAAtD,WACI,MAAC,UAAD;AAAY,UAAA,IAAI,EAAEE,QAAlB;AAA4B,UAAA,KAAK,EAAEE,KAAK,IAAI,QAAT,GAAoB,KAApB,GAA4B;AAA/D,UADJ,CADJ;;AAKJ,WAAK,IAAL;AACI,eACI,MAAC,aAAD;AAAe,UAAA,GAAG,EAAET,IAApB;AAA0B,UAAA,KAAK,EAAEK,KAAjC;AAAwC,UAAA,SAAS,EAAC;AAAlD,WACI,MAAC,MAAD;AAAQ,UAAA,IAAI,EAAEE,QAAd;AAAwB,UAAA,KAAK,EAAEE,KAAK,IAAI,QAAT,GAAoB,KAApB,GAA4B;AAA3D,UADJ,CADJ;AAKJ;AACA;AACA;AACA;AACA;AACA;;AACA,WAAK,QAAL;AACI,eACI,MAAC,iBAAD;AAAmB,UAAA,GAAG,EAAET,IAAxB;AAA8B,UAAA,KAAK,EAAEK,KAArC;AAA4C,UAAA,SAAS,EAAC;AAAtD,WACI,MAAC,UAAD;AAAY,UAAA,IAAI,EAAEE,QAAlB;AAA4B,UAAA,KAAK,EAAEE,KAAK,IAAI,QAAT,GAAoB,KAApB,GAA4B;AAA/D,UADJ,CADJ;;AAKJ,WAAK,QAAL;AACI,eACI,MAAC,iBAAD;AAAmB,UAAA,GAAG,EAAET,IAAxB;AAA8B,UAAA,KAAK,EAAEK,KAArC;AAA4C,UAAA,SAAS,EAAC;AAAtD,WACI,MAAC,UAAD;AAAY,UAAA,IAAI,EAAEE,QAAlB;AAA4B,UAAA,KAAK,EAAEE,KAAK,IAAI,QAAT,GAAoB,KAApB,GAA4B;AAA/D,UADJ,CADJ;;AAKJ,WAAK,UAAL;AACI,eACI,MAAC,mBAAD;AAAqB,UAAA,GAAG,EAAET,IAA1B;AAAgC,UAAA,KAAK,EAAEK,KAAvC;AAA8C,UAAA,SAAS,EAAC;AAAxD,WACI,MAAC,YAAD;AAAc,UAAA,IAAI,EAAEE,QAApB;AAA8B,UAAA,KAAK,EAAEE,KAAK,IAAI,QAAT,GAAoB,KAApB,GAA4B;AAAjE,UADJ,CADJ;;AAKJ,WAAK,QAAL;AACI,eACI,MAAC,iBAAD;AAAmB,UAAA,GAAG,EAAET,IAAxB;AAA8B,UAAA,KAAK,EAAEK,KAArC;AAA4C,UAAA,SAAS,EAAC;AAAtD,WACI,MAAC,UAAD;AAAY,UAAA,IAAI,EAAEE,QAAlB;AAA4B,UAAA,KAAK,EAAEE,KAAK,IAAI,QAAT,GAAoB,KAApB,GAA4B;AAA/D,UADJ,CADJ;;AAKJ,WAAK,SAAL;AACI,eACI,MAAC,kBAAD;AAAoB,UAAA,GAAG,EAAET,IAAzB;AAA+B,UAAA,KAAK,EAAEK,KAAtC;AAA6C,UAAA,SAAS,EAAC;AAAvD,WACI,MAAC,WAAD;AAAa,UAAA,IAAI,EAAEE,QAAnB;AAA6B,UAAA,KAAK,EAAEE,KAAK,IAAI,QAAT,GAAoB,KAApB,GAA4B;AAAhE,UADJ,CADJ;;AAKJ,WAAK,OAAL;AACI,eACI,MAAC,gBAAD;AAAkB,UAAA,GAAG,EAAET,IAAvB;AAA6B,UAAA,KAAK,EAAEK,KAApC;AAA2C,UAAA,SAAS,EAAC;AAArD,WACI,MAAC,SAAD;AAAW,UAAA,IAAI,EAAEE,QAAjB;AAA2B,UAAA,KAAK,EAAEE,KAAK,IAAI,QAAT,GAAoB,KAApB,GAA4B;AAA9D,UADJ,CADJ;;AAKJ,WAAK,IAAL;AACI,eACI,MAAC,aAAD;AAAe,UAAA,GAAG,EAAET,IAApB;AAA0B,UAAA,KAAK,EAAEK,KAAjC;AAAwC,UAAA,SAAS,EAAC;AAAlD,WACI,MAAC,MAAD;AAAQ,UAAA,IAAI,EAAEE,QAAd;AAAwB,UAAA,KAAK,EAAEE,KAAK,IAAI,QAAT,GAAoB,KAApB,GAA4B;AAA3D,UADJ,CADJ;;AAKJ,WAAK,OAAL;AACI,eACI,MAAC,gBAAD;AAAkB,UAAA,GAAG,EAAET,IAAvB;AAA6B,UAAA,KAAK,EAAEK,KAApC;AAA2C,UAAA,SAAS,EAAC;AAArD,WACI,MAAC,SAAD;AAAW,UAAA,IAAI,EAAEE,QAAjB;AAA2B,UAAA,KAAK,EAAEE,KAAK,IAAI,QAAT,GAAoB,KAApB,GAA4B;AAA9D,UADJ,CADJ;;AAKJ,WAAK,UAAL;AACI,eACI,MAAC,mBAAD;AAAqB,UAAA,GAAG,EAAET,IAA1B;AAAgC,UAAA,KAAK,EAAEK,KAAvC;AAA8C,UAAA,SAAS,EAAC;AAAxD,WACI,MAAC,YAAD;AAAc,UAAA,IAAI,EAAEE,QAApB;AAA8B,UAAA,KAAK,EAAEE,KAAK,IAAI,QAAT,GAAoB,KAApB,GAA4B;AAAjE,UADJ,CADJ;;AAKJ,WAAK,WAAL;AACI,eACI,MAAC,oBAAD;AAAsB,UAAA,GAAG,EAAET,IAA3B;AAAiC,UAAA,KAAK,EAAEK,KAAxC;AAA+C,UAAA,SAAS,EAAC;AAAzD,WACI,MAAC,aAAD;AAAe,UAAA,IAAI,EAAEE,QAArB;AAA+B,UAAA,KAAK,EAAEE,KAAK,IAAI,QAAT,GAAoB,KAApB,GAA4B;AAAlE,UADJ,CADJ;;AAKJ;AACI;AAhIR;AAkIH,GAnID;;AAqIA,SAEI,MAAC,KAAD,CAAO,QAAP,QAGQZ,cAAc,CAACc,OAAD,CAAd,GACI1D,CAAC,CAAC8D,GAAF,CAAMJ,OAAN,EAAe,UAAUK,CAAV,EAAa;AACxB,WAAOH,wBAAwB,CAACG,CAAD,CAA/B;AACH,GAFD,CADJ,GAKI,IARZ,CAFJ;AAcH,CApND;;AAuNA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAC9BC,EAAAA,GAAG,EAAED,KAAK,CAACC,GADmB;AAE9BC,EAAAA,IAAI,EAAEF,KAAK,CAACE;AAFkB,CAAL,CAA7B;;AAKA,MAAMC,kBAAkB,GAAG,EAA3B;AAEA,eAAehE,OAAO,CAAC4D,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CrE,IAAI,CAACsE,MAAL,GAAc1B,UAAU,CAACE,iBAAD,CAAxB,CAA7C,CAAf","sourcesContent":["import { Form } from 'antd';\nimport _ from 'lodash';\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { EmailIcon, EmailShareButton, FacebookIcon, FacebookShareButton, HatenaIcon, HatenaShareButton, InstapaperIcon, InstapaperShareButton, LineIcon, LineShareButton, LinkedinIcon, LinkedinShareButton, LivejournalIcon, LivejournalShareButton, MailruIcon, MailruShareButton, OKIcon, OKShareButton, PocketIcon, PocketShareButton, RedditIcon, RedditShareButton, TelegramIcon, TelegramShareButton, TumblrIcon, TumblrShareButton, TwitterIcon, TwitterShareButton, ViberIcon, ViberShareButton, VKIcon, VKShareButton, WeiboIcon, WeiboShareButton, WhatsappIcon, WhatsappShareButton, WorkplaceIcon, WorkplaceShareButton } from \"react-share\";\nimport { withRouter } from 'next/router';\nimport { notEmptyLength } from '../../common-function';\n\n\nconst SocialShareButton = (props) => {\n\n    const [link, setLink] = useState(window.location.href);\n    const [title, setTitle] = useState('');\n    const [iconSize, setIconSize] = useState(38);\n    const [shape, setShape] = useState('square');\n    const [network, setNetwork] = useState([\n        // 'email',\n        'facebook',\n        // 'messenger',\n        // 'hatena',\n        // 'instapaper',\n        // 'linkedin',\n        'line',\n        // 'livejournal',\n        // 'mailru',\n        // 'ok',\n        // 'pinterest',\n        // 'pocket',\n        // 'reddit',\n        'telegram',\n        // 'tumblr',\n        'twitter',\n        // 'viber',\n        // 'vk',\n        // 'weibo',\n        'whatsapp',\n        // 'workplace',\n    ]);\n\n\n    useEffect(() => {\n        if (props.link) {\n            setLink(props.link)\n        }\n    }, [props.link])\n\n    useEffect(() => {\n\n        if (props.title) {\n            setTitle(props.title)\n        }\n    }, [props.title])\n\n    useEffect(() => {\n        if (props.iconSize) {\n            setIconSize(props.iconSize)\n        }\n    }, [props.iconSize])\n\n    useEffect(() => {\n        if (notEmptyLength(props.network)) {\n            setNetwork(props.network)\n        }\n    }, [props.network])\n\n    useEffect(() => {\n        if (props.shape) {\n            setShape(props.shape)\n        }\n    }, [props.shape])\n\n\n\n\n    const _renderSocialShareButton = (value) => {\n        switch (value) {\n            case 'email':\n                return (\n                    <EmailShareButton url={link} title={title} className='margin-sm flex-justify-center flex-items-align-center round-border'>\n                        <EmailIcon size={iconSize} round={shape == 'square' ? false : true}  />\n                    </EmailShareButton>\n                )\n            case 'facebook':\n                return (\n                    <FacebookShareButton url={link} quote={title} className='margin-sm flex-justify-center flex-items-align-center round-border'>\n                        <FacebookIcon size={iconSize} round={shape == 'square' ? false : true} />\n                    </FacebookShareButton>\n                )\n            // case 'messenger':\n            //     return (\n            //         <FacebookMessengerShareButton url={link} title={title} className='margin-sm flex-justify-center flex-items-align-center round-border'>\n            //             <FacebookMessengerIcon size={iconSize} round={shape == 'square' ? false : true} />\n            //         </FacebookMessengerShareButton>\n            //     )\n            case 'hatena':\n                return (\n                    <HatenaShareButton url={link} title={title} className='margin-sm flex-justify-center flex-items-align-center round-border'>\n                        <HatenaIcon size={iconSize} round={shape == 'square' ? false : true} />\n                    </HatenaShareButton>\n                )\n            case 'instapaper':\n                return (\n                    <InstapaperShareButton url={link} title={title} className='margin-sm flex-justify-center flex-items-align-center round-border'>\n                        <InstapaperIcon size={iconSize} round={shape == 'square' ? false : true} />\n                    </InstapaperShareButton>\n                )\n            case 'linkedin':\n                return (\n                    <LinkedinShareButton edinShareButton url={link} title={title} className='margin-sm flex-justify-center flex-items-align-center round-border'>\n                        <LinkedinIcon size={iconSize} round={shape == 'square' ? false : true} />\n                    </LinkedinShareButton>\n                )\n            case 'line':\n                return (\n                    <LineShareButton url={link} title={title} className='margin-sm flex-justify-center flex-items-align-center round-border'>\n                        <LineIcon size={iconSize} round={shape == 'square' ? false : true} />\n                    </LineShareButton>\n                )\n            case 'livejournal':\n                return (\n                    <LivejournalShareButton url={link} title={title} className='margin-sm flex-justify-center flex-items-align-center round-border'>\n                        <LivejournalIcon size={iconSize} round={shape == 'square' ? false : true} />\n                    </LivejournalShareButton>\n                )\n            case 'mailru':\n                return (\n                    <MailruShareButton url={link} title={title} className='margin-sm flex-justify-center flex-items-align-center round-border'>\n                        <MailruIcon size={iconSize} round={shape == 'square' ? false : true} />\n                    </MailruShareButton>\n                )\n            case 'ok':\n                return (\n                    <OKShareButton url={link} title={title} className='margin-sm flex-justify-center flex-items-align-center round-border'>\n                        <OKIcon size={iconSize} round={shape == 'square' ? false : true} />\n                    </OKShareButton>\n                )\n            // case 'pinterest':\n            //     return (\n            //         <PinterestShareButton url={link} title={title} className='margin-sm flex-justify-center flex-items-align-center round-border'>\n            //             <PinterestIcon size={iconSize} round={shape == 'square' ? false : true} />\n            //         </PinterestShareButton>\n            //     )\n            case 'pocket':\n                return (\n                    <PocketShareButton url={link} title={title} className='margin-sm flex-justify-center flex-items-align-center round-border'>\n                        <PocketIcon size={iconSize} round={shape == 'square' ? false : true} />\n                    </PocketShareButton>\n                )\n            case 'reddit':\n                return (\n                    <RedditShareButton url={link} title={title} className='margin-sm flex-justify-center flex-items-align-center round-border'>\n                        <RedditIcon size={iconSize} round={shape == 'square' ? false : true} />\n                    </RedditShareButton>\n                )\n            case 'telegram':\n                return (\n                    <TelegramShareButton url={link} title={title} className='margin-sm flex-justify-center flex-items-align-center round-border'>\n                        <TelegramIcon size={iconSize} round={shape == 'square' ? false : true} />\n                    </TelegramShareButton>\n                )\n            case 'tumblr':\n                return (\n                    <TumblrShareButton url={link} title={title} className='margin-sm flex-justify-center flex-items-align-center round-border'>\n                        <TumblrIcon size={iconSize} round={shape == 'square' ? false : true} />\n                    </TumblrShareButton>\n                )\n            case 'twitter':\n                return (\n                    <TwitterShareButton url={link} title={title} className='margin-sm flex-justify-center flex-items-align-center round-border'>\n                        <TwitterIcon size={iconSize} round={shape == 'square' ? false : true} />\n                    </TwitterShareButton>\n                )\n            case 'viber':\n                return (\n                    <ViberShareButton url={link} title={title} className='margin-sm flex-justify-center flex-items-align-center round-border'>\n                        <ViberIcon size={iconSize} round={shape == 'square' ? false : true} />\n                    </ViberShareButton>\n                )\n            case 'vk':\n                return (\n                    <VKShareButton url={link} title={title} className='margin-sm flex-justify-center flex-items-align-center round-border'>\n                        <VKIcon size={iconSize} round={shape == 'square' ? false : true} />\n                    </VKShareButton>\n                )\n            case 'weibo':\n                return (\n                    <WeiboShareButton url={link} title={title} className='margin-sm flex-justify-center flex-items-align-center round-border'>\n                        <WeiboIcon size={iconSize} round={shape == 'square' ? false : true} />\n                    </WeiboShareButton>\n                )\n            case 'whatsapp':\n                return (\n                    <WhatsappShareButton url={link} title={title} className='margin-sm flex-justify-center flex-items-align-center round-border'>\n                        <WhatsappIcon size={iconSize} round={shape == 'square' ? false : true} />\n                    </WhatsappShareButton>\n                )\n            case 'workplace':\n                return (\n                    <WorkplaceShareButton url={link} title={title} className='margin-sm flex-justify-center flex-items-align-center round-border'>\n                        <WorkplaceIcon size={iconSize} round={shape == 'square' ? false : true} />\n                    </WorkplaceShareButton>\n                )\n            default:\n                break;\n        }\n    }\n\n    return (\n\n        <React.Fragment>\n\n            {\n                notEmptyLength(network) ?\n                    _.map(network, function (v) {\n                        return _renderSocialShareButton(v);\n                    })\n                    :\n                    null\n            }\n        </React.Fragment>\n    );\n}\n\n\nconst mapStateToProps = state => ({\n    app: state.app,\n    user: state.user,\n});\n\nconst mapDispatchToProps = {\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Form.create()(withRouter(SocialShareButton)));"]},"metadata":{},"sourceType":"module"}