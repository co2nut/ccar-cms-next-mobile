{"ast":null,"code":"var __jsx = React.createElement;\nimport { CloseOutlined } from '@ant-design/icons';\nimport { Card, Col, Empty, Form, Icon, Input, Modal, Row } from 'antd';\nimport _ from 'lodash';\nimport { withRouter } from 'next/dist/client/router';\nimport React, { useEffect, useState } from 'react';\nimport Scrollbars from 'react-custom-scrollbars';\nimport Highlighter from 'react-highlight-words';\nimport { connect } from 'react-redux';\nimport { formatNumber, isValidNumber, notEmptyLength } from '../../../common-function';\nimport { bodyTypeList } from '../../../params/bodyTypeList';\nconst bodyTypeModalSearchRef = React.createRef();\n\nconst BodyTypeModal = props => {\n  const {\n    0: options,\n    1: setOptions\n  } = useState([]);\n  const {\n    0: searchKeyword,\n    1: setSearchKeyword\n  } = useState('');\n  const {\n    0: filteredOptions,\n    1: setFilteredOptions\n  } = useState([]);\n  useEffect(() => {\n    if (props.options != null && _.isArray(props.options)) {\n      let data = _.compact(_.map(bodyTypeList, function (bodyType) {\n        let selectedOption = _.find(props.options, function (item) {\n          return _.toLower(item.value) == _.toLower(bodyType.value);\n        });\n\n        if (selectedOption) {\n          bodyType.count = selectedOption.count;\n          return bodyType;\n        } else {\n          return null;\n        }\n      }));\n\n      setOptions(data);\n    } else {\n      setOptions([]);\n    }\n  }, [props.options]);\n  useEffect(() => {\n    if (props.visible == true && bodyTypeModalSearchRef.current) {\n      bodyTypeModalSearchRef.current.focus();\n    }\n\n    if (!props.visible) {\n      setSearchKeyword('');\n    }\n  }, [props.visible, bodyTypeModalSearchRef.current]);\n  useEffect(() => {\n    if (_.isArray(options) && notEmptyLength(options)) {\n      let data = _.reverse(_.sortBy(_.filter(options, function (option) {\n        if (searchKeyword) {\n          let keyword = new RegExp(searchKeyword, 'i');\n          return keyword.test(option.value) && option.count > 0;\n        } else {\n          return true;\n        }\n      }), ['count', 'value']));\n\n      setFilteredOptions(data);\n    } else {\n      setFilteredOptions([]);\n    }\n  }, [options, searchKeyword]);\n\n  const selectedValue = (item, alphaIndex, index) => {\n    if (props.onChange) {\n      props.onChange(item, alphaIndex, index);\n    }\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Row, null, __jsx(Col, {\n    xs: 24,\n    sm: 24,\n    md: 24,\n    lg: 24,\n    xl: 24\n  }, __jsx(\"div\", {\n    className: \"d-flex scroller-type\",\n    style: {\n      overflow: 'scroll'\n    }\n  }, filteredOptions.length > 1 ? filteredOptions.map((item, index) => {\n    return __jsx(Col, {\n      span: 5,\n      key: index,\n      className: \"col-centered\",\n      style: {\n        margin: '0px 10px'\n      },\n      onClick: e => {\n        if (props.onSelect) {\n          props.onSelect(item);\n        }\n      }\n    }, __jsx(\"div\", {\n      className: \"cursor-pointer\"\n    }, __jsx(\"img\", {\n      className: \"w-100\",\n      style: {\n        width: '80%',\n        height: '100%',\n        border: 'none'\n      },\n      src: item.icon\n    }), __jsx(\"p\", {\n      style: {\n        textTransform: 'uppercase',\n        marginBottom: '0px',\n        fontSize: '12px',\n        marginTop: '-10px',\n        fontWeight: '600'\n      }\n    }, item.value)));\n  }) : null))));\n};\n\nconst mapStateToProps = state => ({\n  productsList: state.productsList,\n  app: state.app\n});\n\nconst mapDispatchToProps = {};\nexport default connect(mapStateToProps, mapDispatchToProps)(Form.create()(withRouter(BodyTypeModal)));","map":{"version":3,"sources":["/Users/faraheen/ccar-cms-next-mobile/components/product-list/filter-modal/BodyTypeModal.jsx"],"names":["CloseOutlined","Card","Col","Empty","Form","Icon","Input","Modal","Row","_","withRouter","React","useEffect","useState","Scrollbars","Highlighter","connect","formatNumber","isValidNumber","notEmptyLength","bodyTypeList","bodyTypeModalSearchRef","createRef","BodyTypeModal","props","options","setOptions","searchKeyword","setSearchKeyword","filteredOptions","setFilteredOptions","isArray","data","compact","map","bodyType","selectedOption","find","item","toLower","value","count","visible","current","focus","reverse","sortBy","filter","option","keyword","RegExp","test","selectedValue","alphaIndex","index","onChange","overflow","length","margin","e","onSelect","width","height","border","icon","textTransform","marginBottom","fontSize","marginTop","fontWeight","mapStateToProps","state","productsList","app","mapDispatchToProps","create"],"mappings":"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","sourcesContent":["import { CloseOutlined } from '@ant-design/icons';\nimport { Card, Col, Empty, Form, Icon, Input, Modal, Row } from 'antd';\nimport _ from 'lodash';\nimport { withRouter } from 'next/dist/client/router';\nimport React, { useEffect, useState } from 'react';\nimport Scrollbars from 'react-custom-scrollbars';\nimport Highlighter from 'react-highlight-words';\nimport { connect } from 'react-redux';\nimport { formatNumber, isValidNumber, notEmptyLength } from '../../../common-function';\nimport { bodyTypeList } from '../../../params/bodyTypeList';\n\n\n\nconst bodyTypeModalSearchRef = React.createRef();\n\nconst BodyTypeModal = (props) => {\n    const [options, setOptions] = useState([])\n    const [searchKeyword, setSearchKeyword] = useState('')\n    const [filteredOptions, setFilteredOptions] = useState([])\n\n    useEffect(() => {\n        if (props.options != null && _.isArray(props.options)) {\n\n            let data = _.compact(_.map(bodyTypeList, function (bodyType) {\n\n                let selectedOption = _.find(props.options, function (item) {\n                    return _.toLower(item.value) == _.toLower(bodyType.value);\n                })\n                if (selectedOption) {\n                    bodyType.count = selectedOption.count;\n                    return bodyType;\n                } else {\n                    return null;\n                }\n            }))\n            setOptions(data)\n        } else {\n            setOptions([]);\n        }\n    }, [props.options])\n\n\n    useEffect(() => {\n\n        if (props.visible == true && bodyTypeModalSearchRef.current) {\n            bodyTypeModalSearchRef.current.focus();\n        }\n\n        if (!props.visible) {\n            setSearchKeyword('');\n        }\n\n    }, [props.visible, bodyTypeModalSearchRef.current])\n\n\n    useEffect(() => {\n        if (_.isArray(options) && notEmptyLength(options)) {\n            let data = _.reverse(_.sortBy(_.filter(options, function (option) {\n                if (searchKeyword) {\n                    let keyword = new RegExp(searchKeyword, 'i');\n                    return keyword.test(option.value) && option.count > 0;\n                } else {\n                    return true;\n                }\n            }), ['count', 'value']));\n            setFilteredOptions(data)\n        } else {\n            setFilteredOptions([]);\n        }\n    }, [options, searchKeyword])\n\n    const selectedValue = (item, alphaIndex, index) => {\n        if (props.onChange) {\n            props.onChange(item, alphaIndex, index);\n        }\n    }\n\n    return (\n        <React.Fragment>\n            <Row>\n                <Col xs={24} sm={24} md={24} lg={24} xl={24}>\n                    <div className=\"d-flex scroller-type\" style={{ overflow: 'scroll' }}>\n                        {\n                            filteredOptions.length > 1 ?\n                                filteredOptions.map((item, index) => {\n                                    return (\n                                        <Col span={5} key={index} className=\"col-centered\" style={{ margin: '0px 10px' }} onClick={(e) => {\n                                            if (props.onSelect) {\n                                                props.onSelect(item);\n                                            }\n                                        }}>\n                                            <div className=\"cursor-pointer\">\n                                                <img className=\"w-100\" style={{width:'80%', height:'100%', border:'none'}} src={item.icon} />\n                                                <p style={{ textTransform: 'uppercase', marginBottom: '0px', fontSize: '12px', marginTop: '-10px', fontWeight: '600' }}>{item.value}</p>\n                                            </div>\n                                        </Col>\n                                    );\n                                })\n                                :\n                                null\n                        }\n                    </div>\n                </Col>\n            </Row>\n        </React.Fragment>\n    );\n}\n\nconst mapStateToProps = state => ({\n    productsList: state.productsList,\n    app: state.app,\n});\n\nconst mapDispatchToProps = {\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Form.create()(withRouter(BodyTypeModal)));"]},"metadata":{},"sourceType":"module"}