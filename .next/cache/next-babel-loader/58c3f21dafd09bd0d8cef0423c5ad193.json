{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport _ from 'lodash';\nimport moment from 'moment';\nimport { FETCH_PRODUCTSLIST, FETCH_PRODUCTSLIST_HOME, PUSH_PRODUCTSLIST, REMOVE_PRODUCTSLIST, UPDATE_PRODUCTSLIST, UPDATE_ACTIVE_ID_PRODUCTS_LIST, ADD_COMPARE__PRODUCT_ID, REMOVE_COMPARE_PRODUCT_ID, CLEAR_COMPARE_PRODUCT_IDS, PATCH_COMPARE_PRODUCT_IDS, FETCH_FILTERED_COMPARE_DATA, FETCH_FEATURES_LIST, UPDATE_CHECKED_FEATURES_DATE, FETCH_COMPARE_LIMIT, FETCH_PRODUCT_FILTER_OPTIONS, CLEAR_PRODUCT_FILTER_OPTIONS, FETCH_PRODUCT_FILTER_GROUP, CLEAR_PRODUCT_FILTER_GROUP, FETCH_PRODUCT_FILTER_CONFIG, CLEAR_PRODUCT_FILTER_CONFIG, FETCH_FILTER_MODAL_STATE, SET_PRODUCT_LIST_LOADING } from '../actions/productsList-actions';\nimport localStorage from 'local-storage';\nimport { checkIsNeedPersist, checkNeedPersist, getPersistObj, persistRedux } from '../config';\nvar INITIAL_STATE = {\n  productListLoading: false,\n  productsList: [],\n  productsListHome: [],\n  activeId: '',\n  activeproductList: [],\n  compareData: [],\n  filteredCompareData: [],\n  featuresList: [],\n  checkedFeaturesDate: null,\n  compareIds: [],\n  compareLimit: 4,\n  filterOptions: {},\n  filterGroup: {},\n  isFilterModalOpen: false,\n  config: {}\n};\nexport default function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  // checkNeedPersist(_.get(action, 'type'), 'productsList', _.get(action, 'payload'), _.get(action, 'isRestoreData'));\n  var persistStates = _.get(localStorage.get('redux') || {}, 'productsList') || INITIAL_STATE;\n\n  var newState = _objectSpread(_objectSpread({}, state), persistStates);\n\n  if (!_.isEqual(state, newState)) {\n    state = newState;\n  }\n\n  switch (action.type) {\n    case FETCH_PRODUCTSLIST:\n      state = _objectSpread(_objectSpread({}, state), {}, {\n        productsList: action.payload\n      });\n      break;\n\n    case FETCH_PRODUCTSLIST_HOME:\n      state = _objectSpread(_objectSpread({}, state), {}, {\n        productsListHome: action.payload\n      });\n      break;\n\n    case PUSH_PRODUCTSLIST:\n      state = _objectSpread(_objectSpread({}, state), {}, {\n        productsList: [action.payload].concat(_toConsumableArray(state.productsList))\n      });\n      break;\n\n    case REMOVE_PRODUCTSLIST:\n      state = _objectSpread(_objectSpread({}, state), {}, {\n        productsList: _toConsumableArray(state.productsList.filter(function (item) {\n          return item._id !== action.payload._id;\n        }))\n      });\n      break;\n\n    case UPDATE_PRODUCTSLIST:\n      var index = _.findIndex(state.productsList, {\n        '_id': action.payload._id\n      });\n\n      state.productsList.splice(index, 1, action.payload);\n      state = _objectSpread(_objectSpread({}, state), {}, {\n        productsList: state.productsList\n      });\n      break;\n\n    case UPDATE_ACTIVE_ID_PRODUCTS_LIST:\n      state = _objectSpread(_objectSpread({}, state), {}, {\n        activeId: action.id,\n        activeproductList: _.pick(_.find(state.productsList, {\n          '_id': action.id\n        }), ['ownerMobileNumer', 'carPlateNumber', 'state', 'carspecsAll', 'ownerAddress', 'companys', 'description', 'productType', 'drivenWheel', 'carspecsId', 'createdAt', 'condition', 'ownerName', 'companyId', 'features', 'bodyType', 'fuelType', 'mileage', 'carUrl', 'prefix', 'color', 'price', '_id'])\n      });\n      break;\n\n    case ADD_COMPARE__PRODUCT_ID:\n      if (!state.compareIds) {\n        state.compareIds = [];\n      }\n\n      if (state.compareIds.length < state.compareLimit) {\n        var checkIfExist = _.findIndex(state.compareIds, function (item) {\n          state = item == action.payload;\n        });\n\n        if (checkIfExist == -1) {\n          var _temp = _.cloneDeep(state.compareIds);\n\n          _temp.push(action.payload);\n\n          state = _objectSpread(_objectSpread({}, state), {}, {\n            compareIds: _temp\n          });\n        } else {\n          state = _objectSpread({}, state);\n        }\n      } else {\n        state = _objectSpread({}, state);\n      }\n\n      break;\n\n    case REMOVE_COMPARE_PRODUCT_ID:\n      var temp = state.compareIds.filter(function (item) {\n        return item !== action.payload;\n      });\n      state = _objectSpread(_objectSpread({}, state), {}, {\n        compareIds: temp\n      });\n      break;\n\n    case PATCH_COMPARE_PRODUCT_IDS:\n      if (!Array.isArray(action.payload)) {\n        action.payload = [];\n      }\n\n      state = _objectSpread(_objectSpread({}, state), {}, {\n        compareIds: action.payload\n      });\n      break;\n\n    case CLEAR_COMPARE_PRODUCT_IDS:\n      state = _objectSpread(_objectSpread({}, state), {}, {\n        compareIds: []\n      });\n      break;\n\n    case FETCH_FILTERED_COMPARE_DATA:\n      state = _objectSpread(_objectSpread({}, state), {}, {\n        filteredCompareData: action.payload\n      });\n      break;\n\n    case FETCH_FEATURES_LIST:\n      state = _objectSpread(_objectSpread({}, state), {}, {\n        featuresList: action.payload\n      });\n      break;\n\n    case UPDATE_CHECKED_FEATURES_DATE:\n      state = _objectSpread(_objectSpread({}, state), {}, {\n        checkedFeaturesDate: moment(action.payload)\n      });\n      break;\n\n    case FETCH_COMPARE_LIMIT:\n      state = _objectSpread(_objectSpread({}, state), {}, {\n        compareLimit: action.payload\n      });\n      break;\n\n    case FETCH_PRODUCT_FILTER_OPTIONS:\n      state = _objectSpread(_objectSpread({}, state), {}, {\n        filterOptions: action.payload\n      });\n      break;\n\n    case CLEAR_PRODUCT_FILTER_OPTIONS:\n      state = _objectSpread(_objectSpread({}, state), {}, {\n        filterOptions: {}\n      });\n      break;\n\n    case FETCH_PRODUCT_FILTER_GROUP:\n      state = _objectSpread(_objectSpread({}, state), {}, {\n        filterGroup: action.payload\n      });\n      break;\n\n    case CLEAR_PRODUCT_FILTER_GROUP:\n      state = _objectSpread(_objectSpread({}, state), {}, {\n        filterGroup: {}\n      });\n      break;\n\n    case FETCH_PRODUCT_FILTER_CONFIG:\n      state = _objectSpread(_objectSpread({}, state), {}, {\n        config: action.payload\n      });\n      break;\n\n    case CLEAR_PRODUCT_FILTER_CONFIG:\n      state = _objectSpread(_objectSpread({}, state), {}, {\n        config: {}\n      });\n      break;\n\n    case FETCH_FILTER_MODAL_STATE:\n      state = _objectSpread(_objectSpread({}, state), {}, {\n        isFilterModalOpen: action.payload\n      });\n      break;\n\n    case SET_PRODUCT_LIST_LOADING:\n      state = _objectSpread(_objectSpread({}, state), {}, {\n        productListLoading: action.payload\n      });\n      break;\n\n    default:\n      state = state;\n      break;\n  }\n\n  persistRedux('productsList', state);\n  return state;\n}","map":{"version":3,"sources":["/Users/faraheen/ccar-cms-next-mobile/redux/reducers/productsList-reducer.js"],"names":["_","moment","FETCH_PRODUCTSLIST","FETCH_PRODUCTSLIST_HOME","PUSH_PRODUCTSLIST","REMOVE_PRODUCTSLIST","UPDATE_PRODUCTSLIST","UPDATE_ACTIVE_ID_PRODUCTS_LIST","ADD_COMPARE__PRODUCT_ID","REMOVE_COMPARE_PRODUCT_ID","CLEAR_COMPARE_PRODUCT_IDS","PATCH_COMPARE_PRODUCT_IDS","FETCH_FILTERED_COMPARE_DATA","FETCH_FEATURES_LIST","UPDATE_CHECKED_FEATURES_DATE","FETCH_COMPARE_LIMIT","FETCH_PRODUCT_FILTER_OPTIONS","CLEAR_PRODUCT_FILTER_OPTIONS","FETCH_PRODUCT_FILTER_GROUP","CLEAR_PRODUCT_FILTER_GROUP","FETCH_PRODUCT_FILTER_CONFIG","CLEAR_PRODUCT_FILTER_CONFIG","FETCH_FILTER_MODAL_STATE","SET_PRODUCT_LIST_LOADING","localStorage","checkIsNeedPersist","checkNeedPersist","getPersistObj","persistRedux","INITIAL_STATE","productListLoading","productsList","productsListHome","activeId","activeproductList","compareData","filteredCompareData","featuresList","checkedFeaturesDate","compareIds","compareLimit","filterOptions","filterGroup","isFilterModalOpen","config","state","action","persistStates","get","newState","isEqual","type","payload","filter","item","_id","index","findIndex","splice","id","pick","find","length","checkIfExist","temp","cloneDeep","push","Array","isArray"],"mappings":"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","sourcesContent":["import _ from 'lodash'\nimport moment from 'moment'\nimport {\n  FETCH_PRODUCTSLIST,\n  FETCH_PRODUCTSLIST_HOME,\n  PUSH_PRODUCTSLIST,\n  REMOVE_PRODUCTSLIST,\n  UPDATE_PRODUCTSLIST,\n  UPDATE_ACTIVE_ID_PRODUCTS_LIST,\n  ADD_COMPARE__PRODUCT_ID,\n  REMOVE_COMPARE_PRODUCT_ID,\n  CLEAR_COMPARE_PRODUCT_IDS,\n  PATCH_COMPARE_PRODUCT_IDS,\n  FETCH_FILTERED_COMPARE_DATA,\n  FETCH_FEATURES_LIST,\n  UPDATE_CHECKED_FEATURES_DATE,\n  FETCH_COMPARE_LIMIT,\n  FETCH_PRODUCT_FILTER_OPTIONS,\n  CLEAR_PRODUCT_FILTER_OPTIONS,\n  FETCH_PRODUCT_FILTER_GROUP,\n  CLEAR_PRODUCT_FILTER_GROUP,\n  FETCH_PRODUCT_FILTER_CONFIG,\n  CLEAR_PRODUCT_FILTER_CONFIG,\n  FETCH_FILTER_MODAL_STATE,\n  SET_PRODUCT_LIST_LOADING,\n} from '../actions/productsList-actions';\nimport localStorage from 'local-storage';\nimport { checkIsNeedPersist, checkNeedPersist, getPersistObj, persistRedux } from '../config';\n\nconst INITIAL_STATE = {\n  productListLoading: false,\n  productsList: [],\n  productsListHome: [],\n  activeId: '',\n  activeproductList: [],\n  compareData: [],\n  filteredCompareData: [],\n  featuresList: [],\n  checkedFeaturesDate: null,\n  compareIds: [],\n  compareLimit: 4,\n  filterOptions: {},\n  filterGroup: {},\n  isFilterModalOpen: false,\n  config: {},\n}\n\nexport default function (state = INITIAL_STATE, action) {\n\n  // checkNeedPersist(_.get(action, 'type'), 'productsList', _.get(action, 'payload'), _.get(action, 'isRestoreData'));\n\n  let persistStates = _.get(localStorage.get('redux') || {}, 'productsList') || INITIAL_STATE;\n  let newState = {\n    ...state,\n    ...persistStates\n  }\n  if (!_.isEqual(state, newState)) {\n    state = newState;\n  }\n  switch (action.type) {\n    case FETCH_PRODUCTSLIST:\n      state = {\n        ...state,\n        productsList: action.payload\n      }\n      break;\n    case FETCH_PRODUCTSLIST_HOME:\n      state = {\n        ...state,\n        productsListHome: action.payload\n      }\n      break;\n    case PUSH_PRODUCTSLIST:\n      state = {\n        ...state,\n        productsList: [action.payload, ...state.productsList]\n      }\n      break;\n    case REMOVE_PRODUCTSLIST:\n      state = {\n        ...state,\n        productsList: [...state.productsList.filter((item) => item._id !== action.payload._id)]\n      }\n      break;\n    case UPDATE_PRODUCTSLIST:\n      let index = _.findIndex(state.productsList, { '_id': action.payload._id })\n      state.productsList.splice(index, 1, action.payload)\n      state = {\n        ...state,\n        productsList: state.productsList\n      }\n      break;\n    case UPDATE_ACTIVE_ID_PRODUCTS_LIST:\n      state = {\n        ...state,\n        activeId: action.id,\n        activeproductList: _.pick(_.find(state.productsList, { '_id': action.id }), [\n          'ownerMobileNumer',\n          'carPlateNumber',\n          'state',\n          'carspecsAll',\n          'ownerAddress',\n          'companys',\n          'description',\n          'productType',\n          'drivenWheel',\n          'carspecsId',\n          'createdAt',\n          'condition',\n          'ownerName',\n          'companyId',\n          'features',\n          'bodyType',\n          'fuelType',\n          'mileage',\n          'carUrl',\n          'prefix',\n          'color',\n          'price',\n          '_id'\n        ])\n      }\n      break;\n    case ADD_COMPARE__PRODUCT_ID:\n\n      if (!state.compareIds) {\n        state.compareIds = []\n      }\n      if (state.compareIds.length < state.compareLimit) {\n        let checkIfExist = _.findIndex(state.compareIds, function (item) {\n          state = item == action.payload;\n        })\n        if (checkIfExist == -1) {\n          let temp = _.cloneDeep(state.compareIds)\n          temp.push(action.payload)\n          state = {\n            ...state,\n            compareIds: temp\n          }\n        } else {\n          state = {\n            ...state,\n          }\n        }\n      } else {\n        state = {\n          ...state,\n        }\n      }\n      break;\n    case REMOVE_COMPARE_PRODUCT_ID:\n      let temp = state.compareIds.filter((item) => item !== action.payload);\n\n      state = {\n        ...state,\n        compareIds: temp,\n      }\n      break;\n    case PATCH_COMPARE_PRODUCT_IDS:\n      if (!Array.isArray(action.payload)) {\n        action.payload = [];\n      }\n      state = {\n        ...state,\n        compareIds: action.payload\n      }\n      break;\n    case CLEAR_COMPARE_PRODUCT_IDS:\n      state = {\n        ...state,\n        compareIds: []\n      }\n      break;\n    case FETCH_FILTERED_COMPARE_DATA:\n      state = {\n        ...state,\n        filteredCompareData: action.payload\n      }\n      break;\n    case FETCH_FEATURES_LIST:\n      state = {\n        ...state,\n        featuresList: action.payload,\n      }\n      break;\n    case UPDATE_CHECKED_FEATURES_DATE:\n      state = {\n        ...state,\n        checkedFeaturesDate: moment(action.payload),\n      }\n      break;\n    case FETCH_COMPARE_LIMIT:\n      state = {\n        ...state,\n        compareLimit: action.payload,\n      }\n      break;\n    case FETCH_PRODUCT_FILTER_OPTIONS:\n      state = {\n        ...state,\n        filterOptions: action.payload,\n      }\n      break;\n    case CLEAR_PRODUCT_FILTER_OPTIONS:\n      state = {\n        ...state,\n        filterOptions: {},\n      }\n      break;\n    case FETCH_PRODUCT_FILTER_GROUP:\n      state = {\n        ...state,\n        filterGroup: action.payload,\n      }\n      break;\n    case CLEAR_PRODUCT_FILTER_GROUP:\n      state = {\n        ...state,\n        filterGroup: {},\n      }\n      break;\n    case FETCH_PRODUCT_FILTER_CONFIG:\n      state = {\n        ...state,\n        config: action.payload,\n      }\n      break;\n    case CLEAR_PRODUCT_FILTER_CONFIG:\n      state = {\n        ...state,\n        config: {},\n      }\n      break;\n    case FETCH_FILTER_MODAL_STATE:\n      state = {\n        ...state,\n        isFilterModalOpen: action.payload,\n      }\n      break;\n    case SET_PRODUCT_LIST_LOADING:\n      state = {\n        ...state,\n        productListLoading: action.payload,\n      }\n      break;\n    default:\n      state = state;\n      break;\n  }\n  persistRedux('productsList', state)\n\n  return state;\n}\n"]},"metadata":{},"sourceType":"module"}