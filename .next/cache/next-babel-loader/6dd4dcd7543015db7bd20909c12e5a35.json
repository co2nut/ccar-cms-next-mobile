{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { Form, message } from 'antd';\nimport axios from 'axios';\nimport _ from 'lodash';\nimport { withRouter } from 'next/dist/client/router';\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport client from '../../../feathers';\nimport { carFreakLikeGreyIcon, carFreakLikeIcon } from '../../../icon';\nimport { loading, loginMode } from '../../../redux/actions/app-actions';\nvar TIME_OUT = 1000;\n\nvar LikePostButton = function LikePostButton(props) {\n  _s();\n\n  var _useState = useState('chat'),\n      likeOn = _useState[0],\n      setLikeOn = _useState[1];\n\n  var _useState2 = useState({}),\n      postLike = _useState2[0],\n      setPostLike = _useState2[1];\n\n  var _useState3 = useState(false),\n      isActived = _useState3[0],\n      setIsActived = _useState3[1];\n\n  var _useState4 = useState(),\n      timeoutFunc = _useState4[0],\n      setTimeoutFunc = _useState4[1];\n\n  useEffect(function () {\n    setLikeOn(props.likeOn || 'chat');\n  }, [props.likeOn]);\n  useEffect(function () {\n    if (_.isPlainObject(props.postLike) && !_.isEmpty(props.postLike)) {\n      setPostLike(props.postLike);\n    } else {\n      setPostLike({});\n    }\n  }, [props.postLike]);\n  useEffect(function () {\n    if (_.isPlainObject(postLike) && !_.isEmpty(postLike)) {\n      setIsActived(true);\n    } else {\n      setIsActived(false);\n    }\n  }, [postLike]);\n  useEffect(function () {}, [isActived]);\n  useEffect(function () {\n    if (props.autoHandle && likeOn) {\n      getPostLike();\n    }\n  }, [props.autoHandle, likeOn]);\n\n  function getPostLike() {\n    if (props[\"\".concat(likeOn, \"Id\")] && _.get(props.user, ['authenticated']) && _.get(props.user, ['info', 'user', '_id'])) {\n      var query = {};\n      query.likeOn = likeOn;\n      query[\"\".concat(likeOn, \"Id\")] = props[\"\".concat(likeOn, \"Id\")];\n      query.userId = _.get(props.user, ['info', 'user', '_id']);\n      client.service('chatlikes').find({\n        query: _objectSpread({}, query)\n      }).then(function (res) {\n        setPostLike(_.get(res, ['data', 0]) || {});\n      })[\"catch\"](function (err) {\n        console.log(err);\n      });\n    }\n  }\n\n  function onClickLike() {\n    if (!props.readOnly) {\n      if (!_.get(props.user, ['authenticated']) && !_.get(props.user, ['info', 'user', '_id'])) {\n        message.error('Please Login First!');\n        props.loginMode(true);\n        return;\n      }\n\n      switch (likeOn) {\n        case 'chat':\n          break;\n\n        case 'message':\n          break;\n\n        case 'reply':\n          break;\n\n        default:\n          message.error('Content Not Found.');\n          return;\n      }\n\n      if (props[\"\".concat(likeOn, \"Id\")]) {\n        var actived = !isActived;\n        setIsActived(actived);\n\n        if (timeoutFunc) {\n          clearTimeout(timeoutFunc);\n        }\n\n        if (props.onClick) {\n          props.onClick(actived);\n        }\n\n        setTimeoutFunc(setTimeout(function () {\n          //Only run if the like status no same\n          var query = {\n            userId: _.get(props.user, ['info', 'user', '_id']),\n            type: actived ? 'add' : 'remove',\n            likeOn: likeOn\n          };\n          query[\"\".concat(likeOn, \"Id\")] = props[\"\".concat(likeOn, \"Id\")];\n          axios.post(\"\".concat(client.io.io.uri, \"updateLike\"), query, {\n            headers: {\n              'Authorization': client.settings.storage.storage.storage['feathers-jwt']\n            }\n          }).then(function (res) {\n            if (props.onSuccessUpdate) {\n              props.onSuccessUpdate(actived, _.get(res, ['data']));\n            }\n\n            if (_.get(res.data, ['type']) == 'add') {\n              setPostLike(res.data);\n            } else {\n              setPostLike({});\n            }\n\n            setTimeoutFunc();\n          })[\"catch\"](function (err) {\n            setTimeoutFunc();\n            console.log(err);\n            console.log('not able to like');\n          });\n        }, TIME_OUT));\n      } else {\n        message.error('Post Not Found');\n      }\n    }\n  }\n\n  return __jsx(\"span\", {\n    className: \"\".concat(props.className ? props.className : ''),\n    onClick: function onClick(e) {\n      if (!props.readOnly) {\n        onClickLike();\n      }\n    }\n  }, !isActived ? props.children ? props.children : __jsx(\"span\", {\n    className: \"flex-items-align-center cursor-pointer\"\n  }, __jsx(\"span\", {\n    className: \"margin-right-sm\"\n  }, __jsx(\"img\", {\n    src: carFreakLikeGreyIcon,\n    style: {\n      width: 35,\n      height: 25\n    },\n    className: \"cursor-pointer\"\n  })), __jsx(\"span\", {\n    className: \"headline\"\n  }, props.text ? props.text(false) || 'Like' : 'Like')) : props.activeButton ? props.activeButton : __jsx(\"span\", {\n    className: \"flex-items-align-center cursor-pointer\"\n  }, __jsx(\"span\", {\n    className: \"margin-right-sm\"\n  }, __jsx(\"img\", {\n    src: carFreakLikeIcon,\n    style: {\n      width: 35,\n      height: 25\n    },\n    className: \"cursor-pointer\"\n  })), __jsx(\"span\", {\n    className: \"headline\"\n  }, props.text ? props.text(true) || 'Liked' : 'Liked')));\n};\n\n_s(LikePostButton, \"7cnW+rpjOGGxXpimCHa1+au15Uw=\");\n\n_c = LikePostButton;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    app: state.app,\n    user: state.user\n  };\n};\n\nvar mapDispatchToProps = {\n  loading: loading,\n  loginMode: loginMode\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Form.create()(withRouter(LikePostButton)));\n\nvar _c;\n\n$RefreshReg$(_c, \"LikePostButton\");","map":{"version":3,"sources":["/Users/faraheen/ccar-cms-next-mobile/components/carFreak/components/like-post-button.jsx"],"names":["Form","message","axios","_","withRouter","React","useEffect","useState","connect","client","carFreakLikeGreyIcon","carFreakLikeIcon","loading","loginMode","TIME_OUT","LikePostButton","props","likeOn","setLikeOn","postLike","setPostLike","isActived","setIsActived","timeoutFunc","setTimeoutFunc","isPlainObject","isEmpty","autoHandle","getPostLike","get","user","query","userId","service","find","then","res","err","console","log","onClickLike","readOnly","error","actived","clearTimeout","onClick","setTimeout","type","post","io","uri","headers","settings","storage","onSuccessUpdate","data","className","e","children","width","height","text","activeButton","mapStateToProps","state","app","mapDispatchToProps","create"],"mappings":"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","sourcesContent":["import { Form, message } from 'antd';\nimport axios from 'axios';\nimport _ from 'lodash';\nimport { withRouter } from 'next/dist/client/router';\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport client from '../../../feathers';\nimport { carFreakLikeGreyIcon, carFreakLikeIcon } from '../../../icon';\nimport { loading, loginMode } from '../../../redux/actions/app-actions';\n\n\n\nconst TIME_OUT = 1000;\n\nconst LikePostButton = (props) => {\n\n    const [likeOn, setLikeOn] = useState('chat')\n    const [postLike, setPostLike] = useState({})\n    const [isActived, setIsActived] = useState(false)\n    const [timeoutFunc, setTimeoutFunc] = useState();\n\n    useEffect(() => {\n        setLikeOn(props.likeOn || 'chat');\n    }, [props.likeOn])\n\n    useEffect(() => {\n        if (_.isPlainObject(props.postLike) && !_.isEmpty(props.postLike)) {\n            setPostLike(props.postLike);\n        } else {\n            setPostLike({});\n        }\n    }, [props.postLike])\n\n    useEffect(() => {\n        if (_.isPlainObject(postLike) && !_.isEmpty(postLike)) {\n            setIsActived(true);\n        } else {\n            setIsActived(false);\n        }\n    }, [postLike])\n\n    useEffect(() => {\n    }, [isActived])\n\n    useEffect(() => {\n        if (props.autoHandle && likeOn) {\n            getPostLike()\n        }\n    }, [props.autoHandle, likeOn])\n\n\n    function getPostLike() {\n        if (props[`${likeOn}Id`] && _.get(props.user, ['authenticated']) && _.get(props.user, ['info', 'user', '_id']) ) {\n            let query = {};\n            query.likeOn = likeOn\n            query[`${likeOn}Id`] = props[`${likeOn}Id`]\n            query.userId = _.get(props.user, ['info', 'user', '_id'])\n            client.service('chatlikes').find({\n            query: {\n                ...query\n            }\n            }).then(res => {\n                setPostLike(_.get(res, ['data', 0]) || {})\n            }).catch(err => {\n                console.log(err);\n            });\n        }\n    }\n\n\n\n    function onClickLike() {\n\n\n        if (!props.readOnly) {\n            if (!_.get(props.user, ['authenticated']) && !_.get(props.user, ['info', 'user', '_id'])) {\n                message.error('Please Login First!');\n                props.loginMode(true);\n                return;\n            }\n\n            switch (likeOn) {\n                case 'chat':\n                    break;\n                case 'message':\n                    break;\n                case 'reply':\n                    break;\n                default:\n                    message.error('Content Not Found.')\n                    return;\n            }\n\n            if (props[`${likeOn}Id`]) {\n                let actived = !isActived;\n                setIsActived(actived);\n\n                if (timeoutFunc) {\n                    clearTimeout(timeoutFunc);\n                }\n\n                if (props.onClick) {\n                    props.onClick(actived)\n                }\n\n\n                setTimeoutFunc(setTimeout(() => {\n                    //Only run if the like status no same\n                    let query =\n                    {\n                        userId: _.get(props.user, ['info', 'user', '_id']),\n                        type: actived ? 'add' : 'remove',\n                        likeOn: likeOn,\n                    };\n\n                    query[`${likeOn}Id`] = props[`${likeOn}Id`];\n\n                    axios.post(`${client.io.io.uri}updateLike`,\n                        query\n                        , {\n                            headers: { 'Authorization': client.settings.storage.storage.storage['feathers-jwt'] },\n                        }).then((res) => {\n                            if (props.onSuccessUpdate) {\n                                props.onSuccessUpdate(actived, _.get(res, ['data']));\n                            }\n                            if (_.get(res.data, ['type']) == 'add') {\n                                setPostLike(res.data)\n                            } else {\n                                setPostLike({});\n                            }\n                            setTimeoutFunc();\n                        }).catch((err) => {\n                            setTimeoutFunc();\n                            console.log(err);\n                            console.log('not able to like');\n                        })\n                }, TIME_OUT))\n            } else {\n                message.error('Post Not Found')\n            }\n\n        }\n    }\n\n    return (\n\n        <span className={`${props.className ? props.className : ''}`} onClick={(e) => {\n            if (!props.readOnly) {\n                onClickLike()\n            }\n        }}>\n            {\n                !isActived ?\n                    props.children ?\n                        props.children\n                        :\n                        <span className='flex-items-align-center cursor-pointer' >\n                            <span className='margin-right-sm' >\n                                <img src={carFreakLikeGreyIcon} style={{ width: 35, height: 25 }} className=\"cursor-pointer\" />\n                                {/* <Icon type=\"like\" /> */}\n                            </span>\n                            <span className='headline' >\n                                {\n                                    props.text ? props.text(false) || 'Like' : 'Like'\n                                }\n                            </span>\n                        </span>\n                    :\n                    props.activeButton ?\n                        props.activeButton\n                        :\n                        <span className='flex-items-align-center cursor-pointer' >\n                            <span className='margin-right-sm' >\n                                <img src={carFreakLikeIcon} style={{ width: 35, height: 25 }} className=\"cursor-pointer\" />\n                                {/* <Icon type=\"like\" theme=\"filled\" className=\"blue\" /> */}\n                            </span>\n                            <span className='headline' >\n                                {\n                                    props.text ? props.text(true) || 'Liked' : 'Liked'\n                                }\n                            </span>\n                        </span>\n            }\n        </span>\n    );\n}\n\n\nconst mapStateToProps = state => ({\n    app: state.app,\n    user: state.user,\n});\n\nconst mapDispatchToProps = {\n    loading: loading,\n    loginMode,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Form.create()(withRouter(LikePostButton)));"]},"metadata":{},"sourceType":"module"}