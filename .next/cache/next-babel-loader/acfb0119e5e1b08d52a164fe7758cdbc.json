{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Button, Col, Empty, Form, Icon, Input, message, Modal, Radio, Row } from 'antd';\nimport axios from 'axios';\nimport _ from 'lodash';\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport client from '../../feathers';\nimport { isDealer } from './config';\nimport { arrayLengthCount, getUserName, isValidNumber } from '../../common-function';\nimport UserAvatar from '../general/UserAvatar';\nimport FollowButton from './FollowButton';\nimport ScrollLoadWrapper from '../general/ScrollLoadWrapper';\nimport { withRouter } from 'next/router';\nimport { loading } from '../../redux/actions/app-actions';\nconst PAGE_SIZE = 12;\nconst TYPING_TIMEOUT = 500;\n\nconst FollowerListModal = props => {\n  const {\n    0: visible,\n    1: setVisible\n  } = useState(false);\n  const {\n    0: followers,\n    1: setFollowers\n  } = useState([]);\n  const {\n    0: followerTotal,\n    1: setFollowerTotal\n  } = useState(0);\n  const {\n    0: followerPage,\n    1: setFollowerPage\n  } = useState(1);\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(false);\n  const {\n    0: searchWord,\n    1: setSearchWord\n  } = useState('');\n  const {\n    0: typingTimeout,\n    1: setTypingTimeout\n  } = useState();\n  const {\n    0: filterGroup,\n    1: setFilterGroup\n  } = useState({\n    keyword: '',\n    type: null\n  });\n  useEffect(() => {\n    setVisible(props.visible);\n  }, [props.visible]);\n  useEffect(() => {\n    getFollowerList(props.userId, (followerPage - 1) * PAGE_SIZE);\n  }, [followerPage]);\n  useEffect(() => {\n    if (followerPage == 1) {\n      getFollowerList(props.userId, (followerPage - 1) * PAGE_SIZE);\n    } else {\n      setFollowerPage(1);\n    }\n  }, [filterGroup]);\n  useEffect(() => {\n    if (typingTimeout) {\n      clearTimeout(typingTimeout);\n    }\n\n    setTypingTimeout(setTimeout(() => {\n      setFilterGroup(filterGroup => {\n        return _objectSpread(_objectSpread({}, filterGroup), {}, {\n          keyword: searchWord\n        });\n      });\n    }, TYPING_TIMEOUT));\n  }, [searchWord]);\n  useEffect(() => {\n    if (visible && props.userId) {\n      getFollowerList(props.userId, 0);\n    }\n  }, [visible, props.userId, props.type]);\n\n  function getFollowerList(userId, skip) {\n    if (userId) {\n      if (!isValidNumber(parseInt(skip))) {\n        skip = 0;\n      } else {\n        skip = parseInt(skip);\n      }\n\n      setIsLoading(true);\n      let filter = filterGroup;\n\n      if (!filter.keyword) {\n        delete filter.keyword;\n      }\n\n      if (!filter.type) {\n        delete filter.type;\n      }\n\n      axios.get(`${client.io.io.uri}getFollowerList`, {\n        params: {\n          followingId: userId,\n          type: 'user',\n          limit: PAGE_SIZE,\n          skip: skip,\n          match: filter\n        }\n      }).then(res => {\n        setFollowers(_.isArray(_.get(res, ['data', 'data'])) && !_.isEmpty(_.get(res, ['data', 'data'])) ? followerPage <= 1 ? res.data.data : followers.concat(res.data.data) : []);\n        setFollowerTotal(_.get(res, ['data', 'total']));\n        setIsLoading(false);\n      }).catch(err => {\n        message.error(err.message);\n      });\n    }\n  }\n\n  function closeModal() {\n    setFollowers([]);\n\n    if (props.onCancel) {\n      props.onCancel();\n    }\n  }\n\n  return __jsx(Modal, {\n    visible: visible,\n    footer: null,\n    centered: true,\n    maskClosable: false,\n    width: 500,\n    onCancel: () => {\n      closeModal();\n    }\n  }, __jsx(Row, {\n    className: \"padding-top-lg margin-top-md\",\n    gutter: [10, 10]\n  }, __jsx(Col, {\n    xs: 24,\n    sm: 24,\n    md: 24,\n    lg: 24,\n    xl: 24\n  }, __jsx(\"div\", {\n    className: \"flex-justify-space-between flex-items-align-center width-100\"\n  }, __jsx(\"span\", {\n    className: \"d-inline-block font-weight-black h6\"\n  }, \"Follower\"), __jsx(\"span\", {\n    className: \"d-inline-block\"\n  }, __jsx(Radio.Group, {\n    className: \"condition-form\",\n    style: {\n      textAlign: 'center'\n    },\n    value: filterGroup.type || '',\n    onChange: e => {\n      setFilterGroup(_objectSpread(_objectSpread({}, filterGroup), {}, {\n        type: _.toLower(e.target.value)\n      }));\n    }\n  }, __jsx(Radio.Button, {\n    style: {\n      paddingX: 10\n    },\n    className: \"margin-right-md\",\n    value: \"user\",\n    onClick: e => {\n      if (filterGroup.type == 'user') {\n        setFilterGroup(_objectSpread(_objectSpread({}, filterGroup), {}, {\n          type: ''\n        }));\n      }\n    }\n  }, \" \", __jsx(\"p\", {\n    style: {\n      fontSize: \"13px\",\n      textAlign: \"center\"\n    }\n  }, \" User \"), \" \"), __jsx(Radio.Button, {\n    style: {\n      paddingX: 10\n    },\n    value: \"dealer\",\n    onClick: e => {\n      if (filterGroup.type == 'dealer') {\n        setFilterGroup(_objectSpread(_objectSpread({}, filterGroup), {}, {\n          type: ''\n        }));\n      }\n    }\n  }, \" \", __jsx(\"p\", {\n    style: {\n      fontSize: \"13px\",\n      textAlign: \"center\"\n    }\n  }, \" Dealer\"), \" \"))))), __jsx(Col, {\n    xs: 24,\n    sm: 24,\n    md: 24,\n    lg: 24,\n    xl: 24\n  }, __jsx(\"div\", {\n    className: \"width-100 thin-border round-border-big no-border-input padding-sm\"\n  }, __jsx(Input, {\n    size: \"small\",\n    value: searchWord,\n    onChange: e => {\n      setSearchWord(e.target.value);\n    },\n    placeholder: \"Search...\",\n    suffix: __jsx(Icon, {\n      type: \"search\"\n    })\n  }))), __jsx(Col, {\n    xs: 24,\n    sm: 24,\n    md: 24,\n    lg: 24,\n    xl: 24\n  }, __jsx(\"div\", {\n    className: \"width-100 padding-top-sm\"\n  }, __jsx(ScrollLoadWrapper, {\n    style: {\n      height: '50vh'\n    },\n    autoHide: true,\n    onScrolledBottom: () => {\n      if (arrayLengthCount(followers) < followerTotal) {\n        setFollowerPage(followerPage + 1);\n      }\n    }\n  }, __jsx(\"div\", {\n    className: \"width-100\"\n  }, _.isArray(followers) && !_.isEmpty(followers) ? __jsx(\"div\", {\n    className: \"width-100\"\n  }, _.map(followers, function (follower) {\n    let user = _.get(follower, 'followerId');\n\n    return __jsx(\"div\", {\n      className: \"flex-justify-space-between flex-items-align-center margin-bottom-sm width-100\"\n    }, __jsx(\"span\", {\n      className: \"flex-items-align-center width-80\"\n    }, __jsx(UserAvatar, {\n      data: user,\n      size: 50,\n      redirectProfile: true,\n      onRedirect: () => {\n        closeModal();\n      },\n      avatarClassName: \"flex-items-no-shrink\",\n      className: \"margin-right-md\"\n    }), __jsx(\"span\", {\n      className: \"d-inline-block text-truncate\"\n    }, __jsx(\"div\", null, getUserName(user, 'freakId')), __jsx(\"div\", null, `${getUserName(user, 'fullName')} ${isDealer(user) && _.get(user, ['companys', 'name']) ? '|' : ''} ${isDealer(user) && _.get(user, ['companys', 'name']) ? _.get(user, ['companys', 'name']) : ''}`))), __jsx(\"span\", {\n      className: \"d-inline-block\"\n    }, __jsx(\"div\", {\n      className: \"flex-justify-end flex-items-align-center\"\n    }, __jsx(FollowButton, {\n      userId: _.get(user, ['_id']),\n      type: \"user\",\n      followerId: _.get(props.user, ['info', 'user', '_id']),\n      notify: true,\n      followingButton: () => {\n        return __jsx(Button, null, \"Following\");\n      },\n      followButton: () => {\n        return __jsx(Button, {\n          className: \"background-ccar-yellow border-ccar-yellow black\"\n        }, \"+ Follow\");\n      }\n    }), \"                                                                            \")));\n  })) : __jsx(\"div\", {\n    className: \"flex-justify-center flex-align-center padding-md\"\n  }, __jsx(Empty, null)))))), __jsx(Col, {\n    xs: 24,\n    sm: 24,\n    md: 24,\n    lg: 24,\n    xl: 24\n  }, __jsx(\"div\", {\n    className: \"width-100 flex-justify-center\",\n    style: {\n      height: 20\n    }\n  }, isLoading ? __jsx(Icon, {\n    type: \"loading\",\n    style: {\n      fontSize: 20\n    }\n  }) : null))));\n};\n\nconst mapStateToProps = state => ({\n  app: state.app,\n  user: state.user,\n  sellerProfile: state.sellerProfile\n});\n\nconst mapDispatchToProps = {\n  loading: loading\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Form.create()(withRouter(FollowerListModal)));","map":{"version":3,"sources":["/Users/faraheen/ccar-cms-next-mobile/components/profile/FollowerListModal.jsx"],"names":["Button","Col","Empty","Form","Icon","Input","message","Modal","Radio","Row","axios","_","React","useEffect","useState","connect","client","isDealer","arrayLengthCount","getUserName","isValidNumber","UserAvatar","FollowButton","ScrollLoadWrapper","withRouter","loading","PAGE_SIZE","TYPING_TIMEOUT","FollowerListModal","props","visible","setVisible","followers","setFollowers","followerTotal","setFollowerTotal","followerPage","setFollowerPage","isLoading","setIsLoading","searchWord","setSearchWord","typingTimeout","setTypingTimeout","filterGroup","setFilterGroup","keyword","type","getFollowerList","userId","clearTimeout","setTimeout","skip","parseInt","filter","get","io","uri","params","followingId","limit","match","then","res","isArray","isEmpty","data","concat","catch","err","error","closeModal","onCancel","textAlign","e","toLower","target","value","paddingX","fontSize","height","map","follower","user","mapStateToProps","state","app","sellerProfile","mapDispatchToProps","create"],"mappings":"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","sourcesContent":["import { Button, Col, Empty, Form, Icon, Input, message, Modal, Radio, Row } from 'antd';\nimport axios from 'axios';\nimport _ from 'lodash';\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport client from '../../feathers';\nimport { isDealer } from './config';\nimport { arrayLengthCount, getUserName, isValidNumber } from '../../common-function';\nimport UserAvatar from '../general/UserAvatar';\nimport FollowButton from './FollowButton';\nimport ScrollLoadWrapper from '../general/ScrollLoadWrapper';\nimport { withRouter } from 'next/router';\nimport { loading } from '../../redux/actions/app-actions';\n\n\nconst PAGE_SIZE = 12;\nconst TYPING_TIMEOUT = 500;\n\nconst FollowerListModal = (props) => {\n\n    const [visible, setVisible] = useState(false);\n    const [followers, setFollowers] = useState([]);\n    const [followerTotal, setFollowerTotal] = useState(0);\n    const [followerPage, setFollowerPage] = useState(1);\n    const [isLoading, setIsLoading] = useState(false);\n    const [searchWord, setSearchWord] = useState('');\n    const [typingTimeout, setTypingTimeout] = useState();\n    const [filterGroup, setFilterGroup] = useState({\n        keyword: '',\n        type: null,\n    });\n\n    useEffect(() => {\n        setVisible(props.visible);\n    }, [props.visible])\n\n    useEffect(() => {\n\n        getFollowerList(props.userId, (followerPage - 1) * PAGE_SIZE);\n\n    }, [followerPage])\n\n\n    useEffect(() => {\n\n        if (followerPage == 1) {\n            getFollowerList(props.userId, (followerPage - 1) * PAGE_SIZE);\n        } else {\n            setFollowerPage(1);\n        }\n\n    }, [filterGroup])\n\n    useEffect(() => {\n\n        if (typingTimeout) {\n            clearTimeout(typingTimeout);\n        }\n\n        setTypingTimeout(\n            setTimeout(() => {\n                setFilterGroup(filterGroup => { return { ...filterGroup, keyword: searchWord } })\n            }, TYPING_TIMEOUT)\n        )\n\n    }, [searchWord])\n\n\n    useEffect(() => {\n\n        if (visible && props.userId) {\n            getFollowerList(props.userId, 0);\n        }\n\n    }, [visible, props.userId, props.type])\n\n\n    function getFollowerList(userId, skip) {\n\n        if (userId) {\n\n            if (!isValidNumber(parseInt(skip))) {\n                skip = 0;\n            } else {\n                skip = parseInt(skip);\n            }\n\n            setIsLoading(true);\n\n            let filter = filterGroup;\n            if (!filter.keyword) {\n                delete filter.keyword;\n            }\n\n            if (!filter.type) {\n                delete filter.type;\n            }\n\n\n\n\n            axios.get(`${client.io.io.uri}getFollowerList`, {\n                params: {\n                    followingId: userId,\n                    type: 'user',\n                    limit: PAGE_SIZE,\n                    skip: skip,\n                    match: filter,\n                }\n            }).then(res => {\n\n                setFollowers(_.isArray(_.get(res, ['data', 'data'])) && !_.isEmpty(_.get(res, ['data', 'data'])) ? followerPage <= 1 ? res.data.data : followers.concat(res.data.data) : [])\n                setFollowerTotal(_.get(res, ['data', 'total']));\n                setIsLoading(false)\n\n            }).catch(err => {\n                message.error(err.message)\n            });\n\n\n        }\n    }\n\n    function closeModal() {\n        setFollowers([]);\n        if (props.onCancel) {\n            props.onCancel()\n        }\n    }\n\n    return (\n        <Modal\n            visible={visible}\n            footer={null}\n            centered\n            maskClosable={false}\n            width={500}\n            onCancel={() => { closeModal() }}\n        >\n            <Row className=\"padding-top-lg margin-top-md\" gutter={[10, 10]}>\n                <Col xs={24} sm={24} md={24} lg={24} xl={24}>\n                    <div className=\"flex-justify-space-between flex-items-align-center width-100\">\n                        <span className='d-inline-block font-weight-black h6' >\n                            Follower\n                        </span>\n                        <span className='d-inline-block' >\n                            <Radio.Group className=\"condition-form\" style={{ textAlign: 'center' }} value={filterGroup.type || ''} onChange={(e) => { setFilterGroup({ ...filterGroup, type: _.toLower(e.target.value) }) }} >\n                                <Radio.Button style={{ paddingX: 10 }} className=\"margin-right-md\" value=\"user\" onClick={(e) => { if (filterGroup.type == 'user') { setFilterGroup({ ...filterGroup, type: '' }) } }}> <p style={{ fontSize: \"13px\", textAlign: \"center\" }}> User </p> </Radio.Button>\n                                <Radio.Button style={{ paddingX: 10 }} value=\"dealer\" onClick={(e) => { if (filterGroup.type == 'dealer') { setFilterGroup({ ...filterGroup, type: '' }) } }}> <p style={{ fontSize: \"13px\", textAlign: \"center\" }}> Dealer</p> </Radio.Button>\n                            </Radio.Group>\n                        </span>\n                    </div>\n                </Col>\n                <Col xs={24} sm={24} md={24} lg={24} xl={24}>\n                    <div className=\"width-100 thin-border round-border-big no-border-input padding-sm\">\n                        <Input size=\"small\" value={searchWord} onChange={(e) => { setSearchWord(e.target.value) }} placeholder=\"Search...\" suffix={<Icon type=\"search\"></Icon>} ></Input>\n                    </div>\n                </Col>\n                <Col xs={24} sm={24} md={24} lg={24} xl={24}>\n                    <div className=\"width-100 padding-top-sm\">\n                        <ScrollLoadWrapper style={{ height: '50vh' }} autoHide onScrolledBottom={() => {\n                            if (arrayLengthCount(followers) < followerTotal) {\n                                setFollowerPage(followerPage + 1);\n                            }\n                        }}>\n                            <div className=\"width-100\">\n                                {\n                                    _.isArray(followers) && !_.isEmpty(followers) ?\n                                        <div className=\"width-100\">\n                                            {\n                                                _.map(followers, function (follower) {\n                                                    let user = _.get(follower, 'followerId');\n                                                    return (\n                                                        <div className=\"flex-justify-space-between flex-items-align-center margin-bottom-sm width-100\" >\n                                                            <span className=\"flex-items-align-center width-80\"  >\n                                                                <UserAvatar\n                                                                    data={user}\n                                                                    size={50}\n                                                                    redirectProfile\n                                                                    onRedirect={() => { closeModal() }}\n                                                                    avatarClassName='flex-items-no-shrink'\n                                                                    className=\"margin-right-md\"\n                                                                />\n\n                                                                <span className='d-inline-block text-truncate' >\n                                                                    <div>\n                                                                        {getUserName(user, 'freakId')}\n                                                                    </div>\n                                                                    <div>\n                                                                        {`${getUserName(user, 'fullName')} ${isDealer(user) && _.get(user, ['companys', 'name']) ? '|' : ''} ${isDealer(user) && _.get(user, ['companys', 'name']) ? _.get(user, ['companys', 'name']) : ''}`}\n                                                                    </div>\n                                                                </span>\n                                                            </span>\n                                                            <span className='d-inline-block' >\n                                                                <div className=\"flex-justify-end flex-items-align-center\">\n                                                                    <FollowButton userId={_.get(user, ['_id'])} type=\"user\" followerId={_.get(props.user, ['info', 'user', '_id'])}\n                                                                        notify\n                                                                        followingButton={() => {\n                                                                            return (\n                                                                                <Button>Following</Button>\n                                                                            )\n                                                                        }}\n                                                                        followButton={() => {\n                                                                            return <Button className=\"background-ccar-yellow border-ccar-yellow black\">+ Follow</Button>\n                                                                        }}\n                                                                    />                                                                            </div>\n                                                            </span>\n                                                        </div>\n                                                    )\n                                                })\n                                            }\n                                        </div>\n                                        :\n                                        <div className=\"flex-justify-center flex-align-center padding-md\">\n                                            <Empty></Empty>\n                                        </div>\n                                }\n                            </div>\n                        </ScrollLoadWrapper>\n                    </div>\n                </Col>\n                <Col xs={24} sm={24} md={24} lg={24} xl={24}>\n                    <div className=\"width-100 flex-justify-center\" style={{ height: 20 }}>\n                        {\n                            isLoading ?\n                                <Icon type=\"loading\" style={{ fontSize: 20 }} />\n                                :\n                                null\n                        }\n                    </div>\n                </Col>\n\n            </Row>\n        </Modal>\n    );\n}\n\n\nconst mapStateToProps = state => ({\n    app: state.app,\n    user: state.user,\n    sellerProfile: state.sellerProfile,\n});\n\nconst mapDispatchToProps = {\n    loading: loading,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Form.create()(withRouter(FollowerListModal)));"]},"metadata":{},"sourceType":"module"}