{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport _ from 'lodash';\nimport axios from 'axios';\nimport client from '../feathers';\nimport { isValidNumber, notEmptyLength, convertToRangeFormat, convertRangeFormatBack, convertFilterRange, objectRemoveEmptyValue } from '../common-function';\nvar availableOptions = ['make', 'model', 'state', 'area', 'bodyType', 'color', 'fuelType'];\nvar PAGESIZE = 30;\n\nvar distinctArr = function distinctArr(value, index, self) {\n  return self.indexOf(value) === index;\n};\n\nexport default function (_x, _x2) {\n  return _ref.apply(this, arguments);\n}\n\nfunction _ref() {\n  _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(modal, data) {\n    var andFilter, match, promises;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(_.isArray(modal) && !_.isEmpty(modal))) {\n              _context.next = 4;\n              break;\n            }\n\n            modal = _.intersection(modal, availableOptions) || [];\n            _context.next = 9;\n            break;\n\n          case 4:\n            if (!_.isString(modal)) {\n              _context.next = 8;\n              break;\n            }\n\n            modal = _.compact([_.find(availableOptions, modal)]);\n            _context.next = 9;\n            break;\n\n          case 8:\n            return _context.abrupt(\"return\", {});\n\n          case 9:\n            andFilter = {\n              $and: []\n            };\n\n            if (!(_.isArray(modal) && !_.isEmpty(modal))) {\n              _context.next = 25;\n              break;\n            }\n\n            if (!_.has(data, ['filterGroup'])) {\n              data.filterGroup = {};\n            } else {\n              data.filterGroup = _.cloneDeep(data.filterGroup);\n            }\n\n            if (notEmptyLength(data.filterGroup) && notEmptyLength(data.filterGroup.yearRange)) {\n              data.filterGroup.yearRange = convertToRangeFormat(data.filterGroup.yearRange);\n              data.filterGroup.yearRange = convertFilterRange(data.filterGroup.yearRange, 'carspec.year');\n\n              if (notEmptyLength(data.filterGroup.yearRange)) {\n                andFilter.$and = [].concat(_toConsumableArray(andFilter.$and), _toConsumableArray(data.filterGroup.yearRange));\n                data.filterGroup = Object.assign(data.filterGroup, andFilter);\n              }\n\n              delete data.filterGroup.yearRange;\n            }\n\n            if (notEmptyLength(data.filterGroup) && notEmptyLength(data.filterGroup.priceRange)) {\n              data.filterGroup.priceRange = convertToRangeFormat(data.filterGroup.priceRange);\n              data.filterGroup.priceRange = convertFilterRange(data.filterGroup.priceRange, 'searchPrice');\n\n              if (notEmptyLength(data.filterGroup.priceRange)) {\n                andFilter.$and = [].concat(_toConsumableArray(andFilter.$and), _toConsumableArray(data.filterGroup.priceRange));\n                data.filterGroup = Object.assign(data.filterGroup, andFilter);\n              }\n\n              delete data.filterGroup.priceRange;\n            }\n\n            if (notEmptyLength(data.filterGroup) && notEmptyLength(data.filterGroup.mileageRange)) {\n              data.filterGroup.mileageRange = convertToRangeFormat(data.filterGroup.mileageRange);\n              data.filterGroup.mileageRange = convertFilterRange(data.filterGroup.mileageRange, 'mileageFilter');\n\n              if (notEmptyLength(data.filterGroup.mileageRange)) {\n                andFilter.$and = [].concat(_toConsumableArray(andFilter.$and), _toConsumableArray(data.filterGroup.mileageRange));\n                data.filterGroup = Object.assign(data.filterGroup, andFilter);\n              }\n\n              delete data.filterGroup.mileageRange;\n            }\n\n            if (notEmptyLength(data.filterGroup) && notEmptyLength(data.filterGroup.engineCapacityRange)) {\n              data.filterGroup.engineCapacityRange = convertRangeFormatBack(data.filterGroup.engineCapacityRange);\n              data.filterGroup.engineCapacityRange = convertFilterRange(data.filterGroup.engineCapacityRange, 'carspec.engineCapacity');\n\n              if (notEmptyLength(data.filterGroup.engineCapacityRange)) {\n                andFilter.$and = [].concat(_toConsumableArray(andFilter.$and), _toConsumableArray(data.filterGroup.engineCapacityRange));\n                data.filterGroup = Object.assign(data.filterGroup, andFilter);\n              }\n\n              delete data.filterGroup.engineCapacityRange;\n            }\n\n            data.filterGroup = objectRemoveEmptyValue(data.filterGroup);\n            match = {\n              $match: _objectSpread({}, data.filterGroup)\n            };\n            promises = [];\n\n            _.forEach(modal, function (modal) {\n              promises.push(axios.get(\"\".concat(client.io.io.uri, \"brandFilterTotalV3\"), {\n                params: {\n                  filterType: modal,\n                  match: match\n                }\n              }));\n            });\n\n            _context.next = 22;\n            return Promise.all(promises).then(function (responses) {\n              if (_.isArray(responses) && !_.isEmpty(responses)) {\n                var options = {};\n\n                _.forEach(responses, function (response, index) {\n                  options[\"\".concat(modal[index], \"List\")] = response.data.uniqueInfo[\"\".concat(modal[index], \"List\")];\n                });\n\n                return options;\n              }\n            })[\"catch\"](function (err) {\n              return {}; // message.error(err.message);\n            });\n\n          case 22:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 25:\n            return _context.abrupt(\"return\", {});\n\n          case 26:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _ref.apply(this, arguments);\n}","map":{"version":3,"sources":["/Users/faraheen/ccar-cms-next-mobile/api/brandFilterTotal.js"],"names":["_","axios","client","isValidNumber","notEmptyLength","convertToRangeFormat","convertRangeFormatBack","convertFilterRange","objectRemoveEmptyValue","availableOptions","PAGESIZE","distinctArr","value","index","self","indexOf","modal","data","isArray","isEmpty","intersection","isString","compact","find","andFilter","$and","has","filterGroup","cloneDeep","yearRange","Object","assign","priceRange","mileageRange","engineCapacityRange","match","$match","promises","forEach","push","get","io","uri","params","filterType","Promise","all","then","responses","options","response","uniqueInfo","err"],"mappings":";;;;;;;;;AAAA,OAAOA,CAAP,MAAc,QAAd;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,aAAT,EAAwBC,cAAxB,EAAwCC,oBAAxC,EAA8DC,sBAA9D,EAAsFC,kBAAtF,EAA0GC,sBAA1G,QAAwI,oBAAxI;AACA,IAAMC,gBAAgB,GAAG,CAAC,MAAD,EAAS,OAAT,EAAkB,OAAlB,EAA2B,MAA3B,EAAmC,UAAnC,EAA+C,OAA/C,EAAwD,UAAxD,CAAzB;AACA,IAAMC,QAAQ,GAAG,EAAjB;;AACA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAQC,KAAR,EAAeC,IAAf,EAAwB;AACxC,SAAOA,IAAI,CAACC,OAAL,CAAaH,KAAb,MAAwBC,KAA/B;AACH,CAFD;;AAIA;AAAA;AAAA;;;kEAAe,iBAAgBG,KAAhB,EAAuBC,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEPjB,CAAC,CAACkB,OAAF,CAAUF,KAAV,KAAoB,CAAChB,CAAC,CAACmB,OAAF,CAAUH,KAAV,CAFd;AAAA;AAAA;AAAA;;AAGPA,YAAAA,KAAK,GAAGhB,CAAC,CAACoB,YAAF,CAAeJ,KAAf,EAAsBP,gBAAtB,KAA2C,EAAnD;AAHO;AAAA;;AAAA;AAAA,iBAIAT,CAAC,CAACqB,QAAF,CAAWL,KAAX,CAJA;AAAA;AAAA;AAAA;;AAKPA,YAAAA,KAAK,GAAGhB,CAAC,CAACsB,OAAF,CAAU,CAACtB,CAAC,CAACuB,IAAF,CAAOd,gBAAP,EAAyBO,KAAzB,CAAD,CAAV,CAAR;AALO;AAAA;;AAAA;AAAA,6CAOA,EAPA;;AAAA;AAUPQ,YAAAA,SAVO,GAUK;AAAEC,cAAAA,IAAI,EAAE;AAAR,aAVL;;AAAA,kBAYPzB,CAAC,CAACkB,OAAF,CAAUF,KAAV,KAAoB,CAAChB,CAAC,CAACmB,OAAF,CAAUH,KAAV,CAZd;AAAA;AAAA;AAAA;;AAcP,gBAAI,CAAChB,CAAC,CAAC0B,GAAF,CAAMT,IAAN,EAAY,CAAC,aAAD,CAAZ,CAAL,EAAmC;AAC/BA,cAAAA,IAAI,CAACU,WAAL,GAAmB,EAAnB;AACH,aAFD,MAEO;AACHV,cAAAA,IAAI,CAACU,WAAL,GAAmB3B,CAAC,CAAC4B,SAAF,CAAYX,IAAI,CAACU,WAAjB,CAAnB;AACH;;AAED,gBAAIvB,cAAc,CAACa,IAAI,CAACU,WAAN,CAAd,IAAoCvB,cAAc,CAACa,IAAI,CAACU,WAAL,CAAiBE,SAAlB,CAAtD,EAAoF;AAChFZ,cAAAA,IAAI,CAACU,WAAL,CAAiBE,SAAjB,GAA6BxB,oBAAoB,CAACY,IAAI,CAACU,WAAL,CAAiBE,SAAlB,CAAjD;AACAZ,cAAAA,IAAI,CAACU,WAAL,CAAiBE,SAAjB,GAA6BtB,kBAAkB,CAACU,IAAI,CAACU,WAAL,CAAiBE,SAAlB,EAA6B,cAA7B,CAA/C;;AACA,kBAAIzB,cAAc,CAACa,IAAI,CAACU,WAAL,CAAiBE,SAAlB,CAAlB,EAAgD;AAC5CL,gBAAAA,SAAS,CAACC,IAAV,gCAAqBD,SAAS,CAACC,IAA/B,sBAAwCR,IAAI,CAACU,WAAL,CAAiBE,SAAzD;AACAZ,gBAAAA,IAAI,CAACU,WAAL,GAAmBG,MAAM,CAACC,MAAP,CAAcd,IAAI,CAACU,WAAnB,EAAgCH,SAAhC,CAAnB;AACH;;AACD,qBAAOP,IAAI,CAACU,WAAL,CAAiBE,SAAxB;AACH;;AAED,gBAAIzB,cAAc,CAACa,IAAI,CAACU,WAAN,CAAd,IAAoCvB,cAAc,CAACa,IAAI,CAACU,WAAL,CAAiBK,UAAlB,CAAtD,EAAqF;AACjFf,cAAAA,IAAI,CAACU,WAAL,CAAiBK,UAAjB,GAA8B3B,oBAAoB,CAACY,IAAI,CAACU,WAAL,CAAiBK,UAAlB,CAAlD;AACAf,cAAAA,IAAI,CAACU,WAAL,CAAiBK,UAAjB,GAA8BzB,kBAAkB,CAACU,IAAI,CAACU,WAAL,CAAiBK,UAAlB,EAA8B,aAA9B,CAAhD;;AACA,kBAAI5B,cAAc,CAACa,IAAI,CAACU,WAAL,CAAiBK,UAAlB,CAAlB,EAAiD;AAC7CR,gBAAAA,SAAS,CAACC,IAAV,gCAAqBD,SAAS,CAACC,IAA/B,sBAAwCR,IAAI,CAACU,WAAL,CAAiBK,UAAzD;AACAf,gBAAAA,IAAI,CAACU,WAAL,GAAmBG,MAAM,CAACC,MAAP,CAAcd,IAAI,CAACU,WAAnB,EAAgCH,SAAhC,CAAnB;AACH;;AACD,qBAAOP,IAAI,CAACU,WAAL,CAAiBK,UAAxB;AACH;;AAED,gBAAI5B,cAAc,CAACa,IAAI,CAACU,WAAN,CAAd,IAAoCvB,cAAc,CAACa,IAAI,CAACU,WAAL,CAAiBM,YAAlB,CAAtD,EAAuF;AACnFhB,cAAAA,IAAI,CAACU,WAAL,CAAiBM,YAAjB,GAAgC5B,oBAAoB,CAACY,IAAI,CAACU,WAAL,CAAiBM,YAAlB,CAApD;AACAhB,cAAAA,IAAI,CAACU,WAAL,CAAiBM,YAAjB,GAAgC1B,kBAAkB,CAACU,IAAI,CAACU,WAAL,CAAiBM,YAAlB,EAAgC,eAAhC,CAAlD;;AACA,kBAAI7B,cAAc,CAACa,IAAI,CAACU,WAAL,CAAiBM,YAAlB,CAAlB,EAAmD;AAC/CT,gBAAAA,SAAS,CAACC,IAAV,gCAAqBD,SAAS,CAACC,IAA/B,sBAAwCR,IAAI,CAACU,WAAL,CAAiBM,YAAzD;AACAhB,gBAAAA,IAAI,CAACU,WAAL,GAAmBG,MAAM,CAACC,MAAP,CAAcd,IAAI,CAACU,WAAnB,EAAgCH,SAAhC,CAAnB;AACH;;AACD,qBAAOP,IAAI,CAACU,WAAL,CAAiBM,YAAxB;AACH;;AAED,gBAAI7B,cAAc,CAACa,IAAI,CAACU,WAAN,CAAd,IAAoCvB,cAAc,CAACa,IAAI,CAACU,WAAL,CAAiBO,mBAAlB,CAAtD,EAA8F;AAC1FjB,cAAAA,IAAI,CAACU,WAAL,CAAiBO,mBAAjB,GAAuC5B,sBAAsB,CAACW,IAAI,CAACU,WAAL,CAAiBO,mBAAlB,CAA7D;AACAjB,cAAAA,IAAI,CAACU,WAAL,CAAiBO,mBAAjB,GAAuC3B,kBAAkB,CAACU,IAAI,CAACU,WAAL,CAAiBO,mBAAlB,EAAuC,wBAAvC,CAAzD;;AACA,kBAAI9B,cAAc,CAACa,IAAI,CAACU,WAAL,CAAiBO,mBAAlB,CAAlB,EAA0D;AACtDV,gBAAAA,SAAS,CAACC,IAAV,gCAAqBD,SAAS,CAACC,IAA/B,sBAAwCR,IAAI,CAACU,WAAL,CAAiBO,mBAAzD;AACAjB,gBAAAA,IAAI,CAACU,WAAL,GAAmBG,MAAM,CAACC,MAAP,CAAcd,IAAI,CAACU,WAAnB,EAAgCH,SAAhC,CAAnB;AACH;;AACD,qBAAOP,IAAI,CAACU,WAAL,CAAiBO,mBAAxB;AACH;;AAEDjB,YAAAA,IAAI,CAACU,WAAL,GAAmBnB,sBAAsB,CAACS,IAAI,CAACU,WAAN,CAAzC;AACIQ,YAAAA,KA7DG,GA6DK;AAAEC,cAAAA,MAAM,oBAAOnB,IAAI,CAACU,WAAZ;AAAR,aA7DL;AA+DHU,YAAAA,QA/DG,GA+DQ,EA/DR;;AAgEPrC,YAAAA,CAAC,CAACsC,OAAF,CAAUtB,KAAV,EAAiB,UAAUA,KAAV,EAAiB;AAC9BqB,cAAAA,QAAQ,CAACE,IAAT,CACItC,KAAK,CAACuC,GAAN,WAAatC,MAAM,CAACuC,EAAP,CAAUA,EAAV,CAAaC,GAA1B,yBAAmD;AAC/CC,gBAAAA,MAAM,EAAE;AAAEC,kBAAAA,UAAU,EAAE5B,KAAd;AAAqBmB,kBAAAA,KAAK,EAALA;AAArB;AADuC,eAAnD,CADJ;AAKH,aAND;;AAhEO;AAAA,mBAwEMU,OAAO,CAACC,GAAR,CAAYT,QAAZ,EAAsBU,IAAtB,CAA2B,UAACC,SAAD,EAAe;AACnD,kBAAIhD,CAAC,CAACkB,OAAF,CAAU8B,SAAV,KAAwB,CAAChD,CAAC,CAACmB,OAAF,CAAW6B,SAAX,CAA7B,EAAqD;AACjD,oBAAIC,OAAO,GAAG,EAAd;;AACAjD,gBAAAA,CAAC,CAACsC,OAAF,CAAUU,SAAV,EAAqB,UAAUE,QAAV,EAAoBrC,KAApB,EAA2B;AAC5CoC,kBAAAA,OAAO,WAAIjC,KAAK,CAACH,KAAD,CAAT,UAAP,GAAiCqC,QAAQ,CAACjC,IAAT,CAAckC,UAAd,WAA4BnC,KAAK,CAACH,KAAD,CAAjC,UAAjC;AACH,iBAFD;;AAKA,uBAAOoC,OAAP;AAEH;AACJ,aAXY,WAWJ,UAACG,GAAD,EAAS;AACd,qBAAO,EAAP,CADc,CAEd;AACH,aAdY,CAxEN;;AAAA;AAAA;;AAAA;AAAA,6CAwFA,EAxFA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import _ from 'lodash'\nimport axios from 'axios';\nimport client from '../feathers'\nimport { isValidNumber, notEmptyLength, convertToRangeFormat, convertRangeFormatBack, convertFilterRange, objectRemoveEmptyValue } from '../common-function';\nconst availableOptions = ['make', 'model', 'state', 'area', 'bodyType', 'color', 'fuelType'];\nconst PAGESIZE = 30;\nconst distinctArr = (value, index, self) => {\n    return self.indexOf(value) === index\n}\n\nexport default async function (modal, data) {\n\n    if (_.isArray(modal) && !_.isEmpty(modal)) {\n        modal = _.intersection(modal, availableOptions) || [];\n    } else if (_.isString(modal)) {\n        modal = _.compact([_.find(availableOptions, modal)])\n    } else {\n        return {};\n    }\n\n    let andFilter = { $and: [] }\n\n    if (_.isArray(modal) && !_.isEmpty(modal)) {\n\n        if (!_.has(data, ['filterGroup'])) {\n            data.filterGroup = {};\n        } else {\n            data.filterGroup = _.cloneDeep(data.filterGroup)\n        }\n\n        if (notEmptyLength(data.filterGroup) && notEmptyLength(data.filterGroup.yearRange)) {\n            data.filterGroup.yearRange = convertToRangeFormat(data.filterGroup.yearRange);\n            data.filterGroup.yearRange = convertFilterRange(data.filterGroup.yearRange, 'carspec.year')\n            if (notEmptyLength(data.filterGroup.yearRange)) {\n                andFilter.$and = [...andFilter.$and, ...data.filterGroup.yearRange]\n                data.filterGroup = Object.assign(data.filterGroup, andFilter)\n            }\n            delete data.filterGroup.yearRange;\n        }\n\n        if (notEmptyLength(data.filterGroup) && notEmptyLength(data.filterGroup.priceRange)) {\n            data.filterGroup.priceRange = convertToRangeFormat(data.filterGroup.priceRange);\n            data.filterGroup.priceRange = convertFilterRange(data.filterGroup.priceRange, 'searchPrice')\n            if (notEmptyLength(data.filterGroup.priceRange)) {\n                andFilter.$and = [...andFilter.$and, ...data.filterGroup.priceRange]\n                data.filterGroup = Object.assign(data.filterGroup, andFilter)\n            }\n            delete data.filterGroup.priceRange;\n        }\n\n        if (notEmptyLength(data.filterGroup) && notEmptyLength(data.filterGroup.mileageRange)) {\n            data.filterGroup.mileageRange = convertToRangeFormat(data.filterGroup.mileageRange);\n            data.filterGroup.mileageRange = convertFilterRange(data.filterGroup.mileageRange, 'mileageFilter')\n            if (notEmptyLength(data.filterGroup.mileageRange)) {\n                andFilter.$and = [...andFilter.$and, ...data.filterGroup.mileageRange]\n                data.filterGroup = Object.assign(data.filterGroup, andFilter)\n            }\n            delete data.filterGroup.mileageRange;\n        }\n\n        if (notEmptyLength(data.filterGroup) && notEmptyLength(data.filterGroup.engineCapacityRange)) {\n            data.filterGroup.engineCapacityRange = convertRangeFormatBack(data.filterGroup.engineCapacityRange);\n            data.filterGroup.engineCapacityRange = convertFilterRange(data.filterGroup.engineCapacityRange, 'carspec.engineCapacity')\n            if (notEmptyLength(data.filterGroup.engineCapacityRange)) {\n                andFilter.$and = [...andFilter.$and, ...data.filterGroup.engineCapacityRange]\n                data.filterGroup = Object.assign(data.filterGroup, andFilter)\n            }\n            delete data.filterGroup.engineCapacityRange;\n        }\n\n        data.filterGroup = objectRemoveEmptyValue(data.filterGroup);\n        let match = { $match: { ...data.filterGroup } }\n \n        let promises = [];\n        _.forEach(modal, function (modal) {\n            promises.push(\n                axios.get(`${client.io.io.uri}brandFilterTotalV3`, {\n                    params: { filterType: modal, match },\n                })\n            )\n        })\n\n        return await Promise.all(promises).then((responses) => {\n            if (_.isArray(responses) && !_.isEmpty((responses))) {\n                let options = {}\n                _.forEach(responses, function (response, index) {\n                    options[`${modal[index]}List`] = response.data.uniqueInfo[`${modal[index]}List`];\n                })\n\n             \n                return options;\n\n            }\n        }).catch((err) => {\n            return {};\n            // message.error(err.message);\n        })\n    } else {\n        return {};\n    }\n\n}"]},"metadata":{},"sourceType":"module"}