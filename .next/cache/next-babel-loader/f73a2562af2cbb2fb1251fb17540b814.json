{"ast":null,"code":"var _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport { Form } from '@ant-design/compatible';\nimport { Button, message, Modal, Tooltip } from 'antd';\nimport _ from 'lodash';\nimport { withRouter } from 'next/dist/client/router';\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { arrayLengthCount, notEmptyLength } from '../../common-function';\nimport client from '../../feathers';\nimport { loading } from '../../redux/actions/app-actions';\nimport { clearCompareProductIds, patchCompareProductIds, removeCompareProductId } from '../../redux/actions/productsList-actions';\nimport { setUser } from '../../redux/actions/user-actions';\n\nvar AddCompareProductButton = function AddCompareProductButton(props) {\n  _s();\n\n  var _useState = useState(false),\n      confirmModalState = _useState[0],\n      setConfirmModalState = _useState[1];\n\n  var _useState2 = useState(4),\n      compareLimit = _useState2[0],\n      setCompareLimit = _useState2[1];\n\n  useEffect(function () {\n    setCompareLimit(_.isNaN(parseInt(props.productsList.compareLimit)) ? 4 : parseInt(props.productsList.compareLimit));\n  }, [props.productsList.compareLimit]);\n\n  function isSavedCompare(id) {\n    if (id && notEmptyLength(props.productsList.compareIds)) {\n      var check = props.productsList.compareIds.filter(function (item) {\n        return item == id;\n      });\n      return check.length > 0;\n    } else {\n      return false;\n    }\n  }\n\n  var pushToList = function pushToList(data) {\n    if (data._id) {\n      if (arrayLengthCount(_.get(props.productsList, ['compareIds'])) >= compareLimit) {\n        message.warning(\"Maximum \".concat(compareLimit, \" products in comparison list.\"));\n        return;\n      }\n\n      if (notEmptyLength(props.productsList.compareIds)) {\n        var ids = [];\n        client.service('product-ads').find({\n          query: {\n            _id: {\n              $in: props.productsList.compareIds\n            }\n          }\n        }).then(function (res) {\n          if (notEmptyLength(res.data)) {} else {\n            props.clearCompareProductIds();\n          }\n\n          ids = _.map(_.get(res, ['data']), '_id') || [];\n          ids.push(data._id);\n          props.patchCompareProductIds(ids);\n          message.success('Added to comparison list');\n        })[\"catch\"](function (err) {// message.error(err.message)\n        });\n      } else {\n        message.success('Added to comparison list');\n        props.patchCompareProductIds([data._id]);\n      }\n    } else {\n      message.error(\"Product Not Found\");\n    }\n  };\n\n  function removeFromList(data) {\n    if (data._id) {\n      props.removeCompareProductId(data._id);\n      message.success('Removed from comparison list');\n    }\n  }\n\n  return __jsx(\"span\", {\n    className: props.className ? props.className : null,\n    style: props.style ? props.style : null\n  }, __jsx(Modal, {\n    visible: confirmModalState,\n    title: \"Are you sure?\",\n    maskClosable: true,\n    centered: true,\n    onOk: function onOk(e) {\n      removeFromList(props.data);\n      setConfirmModalState(false);\n    },\n    onCancel: function onCancel(e) {\n      setConfirmModalState(false);\n    }\n  }, __jsx(\"div\", null, \" Do you want to remove this product from your comparison list? \")), __jsx(Tooltip, {\n    placement: \"top\",\n    title: \"Add me into the comparison list\"\n  }, isSavedCompare(props.data._id) ? __jsx(\"a\", {\n    onClick: function onClick() {\n      return props.readOnly ? null : setConfirmModalState(true);\n    }\n  }, props.savedButton ? props.savedButton() : __jsx(Button, {\n    type: \"normal\",\n    style: {\n      background: 'rgb(89, 54, 26)',\n      padding: 0\n    },\n    className: \"ads-purchase-button w-100\"\n  }, __jsx(\"img\", {\n    src: \"/assets/profile/icon-list/carmarket-bar-icon/compare.png\",\n    alt: \"compare\"\n  }))) : __jsx(\"a\", {\n    onClick: function onClick() {\n      return props.readOnly ? null : pushToList(props.data);\n    }\n  }, props.saveButton ? props.saveButton() : __jsx(Button, {\n    type: \"normal\",\n    className: \"w-100 ads-purchase-button ads-purchase-compare-btn\"\n  }, __jsx(\"img\", {\n    src: \"/assets/profile/icon-list/carmarket-bar-icon/compare.png\",\n    alt: \"compare\"\n  })))));\n};\n\n_s(AddCompareProductButton, \"5ABDYCqjfGB1dsfrc3Mw3TFghoI=\");\n\n_c = AddCompareProductButton;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    app: state.app,\n    user: state.user,\n    productsList: state.productsList\n  };\n};\n\nvar mapDispatchToProps = {\n  loading: loading,\n  setUser: setUser,\n  removeCompareProductId: removeCompareProductId,\n  patchCompareProductIds: patchCompareProductIds,\n  clearCompareProductIds: clearCompareProductIds\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Form.create()(withRouter(AddCompareProductButton)));\n\nvar _c;\n\n$RefreshReg$(_c, \"AddCompareProductButton\");","map":{"version":3,"sources":["/Users/faraheen/ccar-cms-next-mobile/components/general/add-compare-product-button.jsx"],"names":["Form","Button","message","Modal","Tooltip","_","withRouter","React","useEffect","useState","connect","arrayLengthCount","notEmptyLength","client","loading","clearCompareProductIds","patchCompareProductIds","removeCompareProductId","setUser","AddCompareProductButton","props","confirmModalState","setConfirmModalState","compareLimit","setCompareLimit","isNaN","parseInt","productsList","isSavedCompare","id","compareIds","check","filter","item","length","pushToList","data","_id","get","warning","ids","service","find","query","$in","then","res","map","push","success","err","error","removeFromList","className","style","e","readOnly","savedButton","background","padding","saveButton","mapStateToProps","state","app","user","mapDispatchToProps","create"],"mappings":";;;AAAA,SAASA,IAAT,QAAqB,wBAArB;AACA,SAASC,MAAT,EAAiBC,OAAjB,EAA0BC,KAA1B,EAAiCC,OAAjC,QAAgD,MAAhD;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,SAASC,UAAT,QAA2B,yBAA3B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,EAA2BC,cAA3B,QAAiD,uBAAjD;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AACA,SAASC,OAAT,QAAwB,iCAAxB;AACA,SAASC,sBAAT,EAAiCC,sBAAjC,EAAyDC,sBAAzD,QAAuF,0CAAvF;AACA,SAASC,OAAT,QAAwB,kCAAxB;;AAIA,IAAMC,uBAAuB,GAAG,SAA1BA,uBAA0B,CAACC,KAAD,EAAW;AAAA;;AAEzC,kBAAkDX,QAAQ,CAAC,KAAD,CAA1D;AAAA,MAAOY,iBAAP;AAAA,MAA0BC,oBAA1B;;AACA,mBAAwCb,QAAQ,CAAC,CAAD,CAAhD;AAAA,MAAOc,YAAP;AAAA,MAAqBC,eAArB;;AAGAhB,EAAAA,SAAS,CAAC,YAAM;AAEdgB,IAAAA,eAAe,CAACnB,CAAC,CAACoB,KAAF,CAAQC,QAAQ,CAACN,KAAK,CAACO,YAAN,CAAmBJ,YAApB,CAAhB,IAAqD,CAArD,GAAyDG,QAAQ,CAACN,KAAK,CAACO,YAAN,CAAmBJ,YAApB,CAAlE,CAAf;AACD,GAHQ,EAGN,CAACH,KAAK,CAACO,YAAN,CAAmBJ,YAApB,CAHM,CAAT;;AAKA,WAASK,cAAT,CAAwBC,EAAxB,EAA4B;AAC1B,QAAIA,EAAE,IAAIjB,cAAc,CAACQ,KAAK,CAACO,YAAN,CAAmBG,UAApB,CAAxB,EAAyD;AACvD,UAAIC,KAAK,GAAGX,KAAK,CAACO,YAAN,CAAmBG,UAAnB,CAA8BE,MAA9B,CAAqC,UAAUC,IAAV,EAAgB;AAC/D,eAAOA,IAAI,IAAIJ,EAAf;AACD,OAFW,CAAZ;AAIA,aAAOE,KAAK,CAACG,MAAN,GAAe,CAAtB;AACD,KAND,MAMO;AACL,aAAO,KAAP;AACD;AAEF;;AAED,MAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,IAAD,EAAU;AAC3B,QAAIA,IAAI,CAACC,GAAT,EAAc;AAEZ,UAAI1B,gBAAgB,CAACN,CAAC,CAACiC,GAAF,CAAMlB,KAAK,CAACO,YAAZ,EAA0B,CAAC,YAAD,CAA1B,CAAD,CAAhB,IAA+DJ,YAAnE,EAAiF;AAC/ErB,QAAAA,OAAO,CAACqC,OAAR,mBAA2BhB,YAA3B;AACA;AACD;;AACD,UAAIX,cAAc,CAACQ,KAAK,CAACO,YAAN,CAAmBG,UAApB,CAAlB,EAAmD;AACjD,YAAIU,GAAG,GAAG,EAAV;AAEA3B,QAAAA,MAAM,CAAC4B,OAAP,CAAe,aAAf,EAA8BC,IAA9B,CAAmC;AACjCC,UAAAA,KAAK,EAAE;AACLN,YAAAA,GAAG,EAAE;AACHO,cAAAA,GAAG,EAAExB,KAAK,CAACO,YAAN,CAAmBG;AADrB;AADA;AAD0B,SAAnC,EAMGe,IANH,CAMQ,UAAAC,GAAG,EAAI;AACb,cAAIlC,cAAc,CAACkC,GAAG,CAACV,IAAL,CAAlB,EAA8B,CAC7B,CADD,MACO;AACLhB,YAAAA,KAAK,CAACL,sBAAN;AACD;;AAEDyB,UAAAA,GAAG,GAAGnC,CAAC,CAAC0C,GAAF,CAAM1C,CAAC,CAACiC,GAAF,CAAMQ,GAAN,EAAW,CAAC,MAAD,CAAX,CAAN,EAA4B,KAA5B,KAAsC,EAA5C;AACAN,UAAAA,GAAG,CAACQ,IAAJ,CAASZ,IAAI,CAACC,GAAd;AACAjB,UAAAA,KAAK,CAACJ,sBAAN,CAA6BwB,GAA7B;AACAtC,UAAAA,OAAO,CAAC+C,OAAR,CAAgB,0BAAhB;AACD,SAhBD,WAgBS,UAAAC,GAAG,EAAI,CACd;AACD,SAlBD;AAoBD,OAvBD,MAwBK;AACHhD,QAAAA,OAAO,CAAC+C,OAAR,CAAgB,0BAAhB;AACA7B,QAAAA,KAAK,CAACJ,sBAAN,CAA6B,CAACoB,IAAI,CAACC,GAAN,CAA7B;AACD;AACF,KAlCD,MAkCO;AACLnC,MAAAA,OAAO,CAACiD,KAAR,CAAc,mBAAd;AACD;AACF,GAtCD;;AAwCA,WAASC,cAAT,CAAwBhB,IAAxB,EAA8B;AAC5B,QAAIA,IAAI,CAACC,GAAT,EAAc;AACZjB,MAAAA,KAAK,CAACH,sBAAN,CAA6BmB,IAAI,CAACC,GAAlC;AACAnC,MAAAA,OAAO,CAAC+C,OAAR,CAAgB,8BAAhB;AACD;AACF;;AAED,SAEE;AAAM,IAAA,SAAS,EAAE7B,KAAK,CAACiC,SAAN,GAAkBjC,KAAK,CAACiC,SAAxB,GAAoC,IAArD;AAA2D,IAAA,KAAK,EAAEjC,KAAK,CAACkC,KAAN,GAAclC,KAAK,CAACkC,KAApB,GAA4B;AAA9F,KAEE,MAAC,KAAD;AACE,IAAA,OAAO,EAAEjC,iBADX;AAEE,IAAA,KAAK,EAAC,eAFR;AAGE,IAAA,YAAY,EAAE,IAHhB;AAIE,IAAA,QAAQ,EAAE,IAJZ;AAKE,IAAA,IAAI,EAAE,cAACkC,CAAD,EAAO;AAAEH,MAAAA,cAAc,CAAChC,KAAK,CAACgB,IAAP,CAAd;AAA4Bd,MAAAA,oBAAoB,CAAC,KAAD,CAApB;AAA8B,KAL3E;AAME,IAAA,QAAQ,EAAE,kBAACiC,CAAD,EAAO;AAAEjC,MAAAA,oBAAoB,CAAC,KAAD,CAApB;AAA6B;AANlD,KAQE,qFARF,CAFF,EAYE,MAAC,OAAD;AAAS,IAAA,SAAS,EAAC,KAAnB;AAAyB,IAAA,KAAK,EAAC;AAA/B,KAEIM,cAAc,CAACR,KAAK,CAACgB,IAAN,CAAWC,GAAZ,CAAd,GACE;AAAG,IAAA,OAAO,EAAE;AAAA,aAAMjB,KAAK,CAACoC,QAAN,GAAiB,IAAjB,GAAwBlC,oBAAoB,CAAC,IAAD,CAAlD;AAAA;AAAZ,KACGF,KAAK,CAACqC,WAAN,GAAoBrC,KAAK,CAACqC,WAAN,EAApB,GAA0C,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEC,MAAAA,UAAU,EAAE,iBAAd;AAAiCC,MAAAA,OAAO,EAAE;AAA1C,KAA7B;AAA4E,IAAA,SAAS,EAAC;AAAtF,KAAkH;AAAK,IAAA,GAAG,EAAC,0DAAT;AAAoE,IAAA,GAAG,EAAC;AAAxE,IAAlH,CAD7C,CADF,GAKE;AAAG,IAAA,OAAO,EAAE;AAAA,aAAMvC,KAAK,CAACoC,QAAN,GAAiB,IAAjB,GAAwBrB,UAAU,CAACf,KAAK,CAACgB,IAAP,CAAxC;AAAA;AAAZ,KACGhB,KAAK,CAACwC,UAAN,GAAmBxC,KAAK,CAACwC,UAAN,EAAnB,GAAwC,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC;AAAhC,KAAqF;AAAK,IAAA,GAAG,EAAC,0DAAT;AAAoE,IAAA,GAAG,EAAC;AAAxE,IAArF,CAD3C,CAPN,CAZF,CAFF;AA4BD,CAnGD;;GAAMzC,uB;;KAAAA,uB;;AAsGN,IAAM0C,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAChCC,IAAAA,GAAG,EAAED,KAAK,CAACC,GADqB;AAEhCC,IAAAA,IAAI,EAAEF,KAAK,CAACE,IAFoB;AAGhCrC,IAAAA,YAAY,EAAEmC,KAAK,CAACnC;AAHY,GAAL;AAAA,CAA7B;;AAOA,IAAMsC,kBAAkB,GAAG;AACzBnD,EAAAA,OAAO,EAAEA,OADgB;AAEzBI,EAAAA,OAAO,EAAEA,OAFgB;AAGzBD,EAAAA,sBAAsB,EAAEA,sBAHC;AAIzBD,EAAAA,sBAAsB,EAAEA,sBAJC;AAKzBD,EAAAA,sBAAsB,EAAEA;AALC,CAA3B;AAOA,eAAeL,OAAO,CAACmD,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CjE,IAAI,CAACkE,MAAL,GAAc5D,UAAU,CAACa,uBAAD,CAAxB,CAA7C,CAAf","sourcesContent":["import { Form } from '@ant-design/compatible';\nimport { Button, message, Modal, Tooltip } from 'antd';\nimport _ from 'lodash';\nimport { withRouter } from 'next/dist/client/router';\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { arrayLengthCount, notEmptyLength } from '../../common-function';\nimport client from '../../feathers';\nimport { loading } from '../../redux/actions/app-actions';\nimport { clearCompareProductIds, patchCompareProductIds, removeCompareProductId } from '../../redux/actions/productsList-actions';\nimport { setUser } from '../../redux/actions/user-actions';\n\n\n\nconst AddCompareProductButton = (props) => {\n\n  const [confirmModalState, setConfirmModalState] = useState(false);\n  const [compareLimit, setCompareLimit] = useState(4);\n\n\n  useEffect(() => {\n\n    setCompareLimit(_.isNaN(parseInt(props.productsList.compareLimit)) ? 4 : parseInt(props.productsList.compareLimit))\n  }, [props.productsList.compareLimit])\n\n  function isSavedCompare(id) {\n    if (id && notEmptyLength(props.productsList.compareIds)) {\n      var check = props.productsList.compareIds.filter(function (item) {\n        return item == id;\n      });\n\n      return check.length > 0;\n    } else {\n      return false;\n    }\n\n  }\n\n  const pushToList = (data) => {\n    if (data._id) {\n\n      if (arrayLengthCount(_.get(props.productsList, ['compareIds'])) >= compareLimit) {\n        message.warning(`Maximum ${compareLimit} products in comparison list.`)\n        return;\n      }\n      if (notEmptyLength(props.productsList.compareIds)) {\n        let ids = [];\n\n        client.service('product-ads').find({\n          query: {\n            _id: {\n              $in: props.productsList.compareIds,\n            },\n          }\n        }).then(res => {\n          if (notEmptyLength(res.data)) {\n          } else {\n            props.clearCompareProductIds();\n          }\n\n          ids = _.map(_.get(res, ['data']), '_id') || [];\n          ids.push(data._id);\n          props.patchCompareProductIds(ids);\n          message.success('Added to comparison list')\n        }).catch(err => {\n          // message.error(err.message)\n        });\n\n      }\n      else {\n        message.success('Added to comparison list')\n        props.patchCompareProductIds([data._id]);\n      }\n    } else {\n      message.error(\"Product Not Found\")\n    }\n  }\n\n  function removeFromList(data) {\n    if (data._id) {\n      props.removeCompareProductId(data._id);\n      message.success('Removed from comparison list')\n    }\n  }\n\n  return (\n\n    <span className={props.className ? props.className : null} style={props.style ? props.style : null}>\n\n      <Modal\n        visible={confirmModalState}\n        title=\"Are you sure?\"\n        maskClosable={true}\n        centered={true}\n        onOk={(e) => { removeFromList(props.data); setConfirmModalState(false); }}\n        onCancel={(e) => { setConfirmModalState(false) }}\n      >\n        <div> Do you want to remove this product from your comparison list? </div>\n      </Modal>\n      <Tooltip placement=\"top\" title=\"Add me into the comparison list\">\n        {\n          isSavedCompare(props.data._id) ?\n            <a onClick={() => props.readOnly ? null : setConfirmModalState(true)}>\n              {props.savedButton ? props.savedButton() : <Button type=\"normal\" style={{ background: 'rgb(89, 54, 26)', padding: 0 }} className=\"ads-purchase-button w-100\"><img src=\"/assets/profile/icon-list/carmarket-bar-icon/compare.png\" alt=\"compare\" /></Button>}\n            </a>\n            :\n            <a onClick={() => props.readOnly ? null : pushToList(props.data)}>\n              {props.saveButton ? props.saveButton() : <Button type=\"normal\" className=\"w-100 ads-purchase-button ads-purchase-compare-btn\"><img src=\"/assets/profile/icon-list/carmarket-bar-icon/compare.png\" alt=\"compare\" /></Button>}\n            </a>\n        }\n      </Tooltip>\n    </span>\n  );\n}\n\n\nconst mapStateToProps = state => ({\n  app: state.app,\n  user: state.user,\n  productsList: state.productsList,\n});\n\n\nconst mapDispatchToProps = {\n  loading: loading,\n  setUser: setUser,\n  removeCompareProductId: removeCompareProductId,\n  patchCompareProductIds: patchCompareProductIds,\n  clearCompareProductIds: clearCompareProductIds,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Form.create()(withRouter(AddCompareProductButton)));"]},"metadata":{},"sourceType":"module"}