{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { Dropdown, Form, Icon, Menu, message, Popconfirm } from 'antd';\nimport _ from 'lodash';\nimport moment from 'moment';\nimport { withRouter } from 'next/dist/client/router';\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { v4 } from 'uuid';\nimport client from '../../../feathers';\nimport LikePostButton from './like-post-button';\nimport SocialInput from './social-input';\nimport UserAvatar from '../../general/UserAvatar';\nimport { formatNumber, getObjectId, getPlural, getUserName, notEmptyLength, objectRemoveEmptyValue } from '../../../common-function';\nimport { loading, loginMode } from '../../../redux/actions/app-actions';\nimport ParseTag from '../../general/ParseTag';\nvar uid = v4();\n\nvar ReplyBox1 = function ReplyBox1(props) {\n  _s();\n\n  var _useState = useState({}),\n      comment = _useState[0],\n      setComment = _useState[1];\n\n  var _useState2 = useState(0),\n      totalLike = _useState2[0],\n      setTotalLike = _useState2[1];\n\n  var _useState3 = useState(false),\n      editMode = _useState3[0],\n      setEditMode = _useState3[1];\n\n  useEffect(function () {\n    if (_.isPlainObject(props.data) && !_.isEmpty(props.data)) {\n      setComment(props.data);\n    } else {\n      setComment({});\n    }\n  }, [props.data]);\n  useEffect(function () {\n    if (_.isPlainObject(comment) && !_.isEmpty(comment)) {\n      setTotalLike(_.get(comment, ['totalLike']) || 0);\n    } else {\n      setTotalLike(0);\n    }\n  }, [comment]);\n\n  function handleSubmit(text) {\n    setEditMode(false);\n\n    if (_.isPlainObject(comment) && !_.isEmpty(comment) && _.get(comment, ['_id']) && editMode) {\n      if (props.onChange) {\n        comment.message = text;\n        props.onChange(comment);\n      }\n\n      client.authenticate().then(function (res) {\n        client.service('chatmessagereplies').patch(comment._id, {\n          message: text\n        }).then(function (res1) {\n          if (props.onUpdate) {\n            res1.userId = res.user;\n            props.onUpdate(res1);\n          }\n        })[\"catch\"](function (err) {\n          console.log(err);\n          message.error(\"Unable to edit comment. T.T\");\n        });\n      })[\"catch\"](function (err) {\n        message.error(err.message);\n      });\n    }\n  }\n\n  function handleRemove() {\n    if (_.isPlainObject(comment) && !_.isEmpty(comment) && _.get(comment, ['_id'])) {\n      client.authenticate().then(function (res) {\n        client.service('chatmessagereplies').remove(comment._id).then(function (res) {\n          message.success('Comment Deleted');\n\n          if (props.onRemove) {\n            props.onRemove(res);\n          }\n        })[\"catch\"](function (err) {\n          console.log(err);\n          message.error(\"Unable to edit comment. T.T\");\n        });\n      })[\"catch\"](function (err) {\n        message.error(err.message);\n      });\n    }\n  }\n\n  return notEmptyLength(objectRemoveEmptyValue(comment)) ? __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"flex-justify-space-between flex-items-align-start \".concat(props.className ? props.className : ''),\n    style: _objectSpread({}, props.style)\n  }, __jsx(\"span\", {\n    className: \"d-inline-block\",\n    style: {\n      width: 50\n    }\n  }, __jsx(UserAvatar, {\n    redirectProfile: true,\n    data: _.get(comment, ['userId']),\n    size: 30\n  })), __jsx(\"span\", {\n    className: \"d-inline-block headline width-80\"\n  }, __jsx(\"span\", {\n    className: \"headline font-weight-black padding-right-sm black\"\n  }, getUserName(_.get(comment, ['userId']), 'freakId')), editMode ? __jsx(SocialInput, {\n    placeholder: \"Write your comment...\",\n    editMode: true,\n    clickOutsideSubmit: true,\n    text: \"\".concat(_.get(comment, ['message']) || ''),\n    emojiPosition: {\n      bottom: -20,\n      right: 33\n    },\n    clubId: props.clubId,\n    onSubmit: function onSubmit(text) {\n      handleSubmit(text);\n      setEditMode(false);\n    },\n    excludeEnter: true\n  }) : __jsx(ParseTag, {\n    data: _.get(comment, ['message']) || '',\n    className: \"width-100\"\n  }), __jsx(\"div\", {\n    className: \"width-100 flex-justify-start flex-items-align-center\",\n    style: {\n      padding: 0\n    }\n  }, __jsx(\"span\", {\n    className: \"small-text margin-right-md grey font-weight-light\"\n  }, formatNumber(totalLike, 'auto', true, 0, false) || 0, \" Likes\")), __jsx(\"div\", {\n    className: \"width-100\",\n    style: {\n      padding: 0\n    }\n  }, __jsx(\"span\", {\n    className: \"margin-right-sm small-text\"\n  }, moment(comment.createdAt).fromNow()), __jsx(LikePostButton, {\n    className: \"margin-right-sm\",\n    likeOn: \"reply\",\n    replyId: _.get(comment, ['_id']),\n    onClick: function onClick(actived) {\n      setTotalLike(actived ? totalLike + 1 : totalLike - 1);\n    },\n    activeButton: __jsx(\"span\", {\n      className: \"small-text blue font-weight-light cursor-pointer\"\n    }, \"Liked\")\n  }, __jsx(\"span\", {\n    className: \"small-text grey font-weight-light cursor-pointer\"\n  }, getPlural('Like', 'Likes', totalLike, true))), __jsx(\"span\", {\n    className: \"small-text margin-right-sm grey font-weight-light cursor-pointer\",\n    onClick: function onClick() {\n      if (props.handleReply) {\n        props.handleReply(getUserName(_.get(comment, ['userId']), 'freakId') || '', getObjectId(_.get(comment, ['userId'])) || '');\n      }\n    }\n  }, \"Reply\"))), __jsx(\"span\", {\n    className: \"d-inline-block\",\n    style: {\n      width: 30\n    }\n  }, _.get(props.user, ['authenticated']) && _.get(props.user, ['info', 'user', '_id']) && _.get(props.user, ['info', 'user', '_id']) == _.get(comment, ['userId', '_id']) ? __jsx(\"span\", {\n    className: \"d-inline-block\",\n    id: \"comment-menu-\".concat(uid)\n  }, __jsx(Dropdown, {\n    getPopupContainer: function getPopupContainer() {\n      return document.getElementById(\"comment-menu-\".concat(uid));\n    },\n    overlay: __jsx(Menu, null, __jsx(Menu.Item, {\n      onClick: function onClick(e) {\n        setEditMode(true);\n      }\n    }, __jsx(\"span\", null, \"Edit\")), __jsx(Menu.Item, null, __jsx(Popconfirm, {\n      title: \"Are you sure to delete this comment?\",\n      onConfirm: function onConfirm(e) {\n        handleRemove(comment);\n      },\n      okText: \"Yes\",\n      cancelText: \"No\"\n    }, __jsx(\"span\", null, \"Delete\"))))\n  }, __jsx(Icon, {\n    type: \"more\",\n    className: \"black\",\n    style: {\n      fontSize: 20\n    }\n  }))) : null))) : null;\n};\n\n_s(ReplyBox1, \"BvE6OJlHEoxAfjSFN5eFVj3kFDQ=\");\n\n_c = ReplyBox1;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    app: state.app,\n    user: state.user\n  };\n};\n\nvar mapDispatchToProps = {\n  loading: loading,\n  loginMode: loginMode\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Form.create()(withRouter(ReplyBox1)));\n\nvar _c;\n\n$RefreshReg$(_c, \"ReplyBox1\");","map":{"version":3,"sources":["/Users/faraheen/ccar-cms-next-mobile/components/carFreak/components/reply-box-1.jsx"],"names":["Dropdown","Form","Icon","Menu","message","Popconfirm","_","moment","withRouter","React","useEffect","useState","connect","v4","client","LikePostButton","SocialInput","UserAvatar","formatNumber","getObjectId","getPlural","getUserName","notEmptyLength","objectRemoveEmptyValue","loading","loginMode","ParseTag","uid","ReplyBox1","props","comment","setComment","totalLike","setTotalLike","editMode","setEditMode","isPlainObject","data","isEmpty","get","handleSubmit","text","onChange","authenticate","then","res","service","patch","_id","res1","onUpdate","userId","user","err","console","log","error","handleRemove","remove","success","onRemove","className","style","width","bottom","right","clubId","padding","createdAt","fromNow","actived","handleReply","document","getElementById","e","fontSize","mapStateToProps","state","app","mapDispatchToProps","create"],"mappings":"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","sourcesContent":["import { Dropdown, Form, Icon, Menu, message, Popconfirm } from 'antd';\nimport _ from 'lodash';\nimport moment from 'moment';\nimport { withRouter } from 'next/dist/client/router';\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { v4 } from 'uuid';\nimport client from '../../../feathers';\nimport LikePostButton from './like-post-button';\nimport SocialInput from './social-input';\nimport UserAvatar from '../../general/UserAvatar';\nimport { formatNumber, getObjectId, getPlural, getUserName, notEmptyLength, objectRemoveEmptyValue  } from '../../../common-function';\nimport { loading, loginMode } from '../../../redux/actions/app-actions';\nimport ParseTag from '../../general/ParseTag';\n\n\n\nlet uid = v4();\n\nconst ReplyBox1 = (props) => {\n\n    const [comment, setComment] = useState({});\n    const [totalLike, setTotalLike] = useState(0);\n    const [editMode, setEditMode] = useState(false)\n\n\n\n    useEffect(() => {\n\n        if (_.isPlainObject(props.data) && !_.isEmpty(props.data)) {\n            setComment(props.data);\n        } else {\n            setComment({});\n        }\n\n    }, [props.data])\n\n\n    useEffect(() => {\n        if (_.isPlainObject(comment) && !_.isEmpty(comment)) {\n            setTotalLike(_.get(comment, ['totalLike']) || 0)\n        } else {\n            setTotalLike(0);\n        }\n\n    }, [comment])\n\n\n    function handleSubmit(text) {\n\n        setEditMode(false)\n\n        if (_.isPlainObject(comment) && !_.isEmpty(comment) && _.get(comment, ['_id']) && editMode) {\n\n            if (props.onChange) {\n                comment.message = text;\n                props.onChange(comment)\n            }\n            client.authenticate().then(res => {\n                client.service('chatmessagereplies')\n                    .patch(comment._id, {\n                        message: text,\n                    })\n                    .then((res1) => {\n                        if (props.onUpdate) {\n                            res1.userId = res.user;\n                            props.onUpdate(res1);\n                        }\n                    })\n                    .catch((err) => {\n                        console.log(err);\n                        message.error(\"Unable to edit comment. T.T\")\n\n                    })\n            }).catch(err => {\n                message.error(err.message)\n            });\n        }\n    }\n\n    function handleRemove() {\n\n        if (_.isPlainObject(comment) && !_.isEmpty(comment) && _.get(comment, ['_id'])) {\n            client.authenticate().then(res => {\n                client.service('chatmessagereplies')\n                    .remove(comment._id)\n                    .then((res) => {\n                        message.success('Comment Deleted')\n                        if (props.onRemove) {\n                            props.onRemove(res);\n                        }\n                    })\n                    .catch((err) => {\n                        console.log(err);\n                        message.error(\"Unable to edit comment. T.T\")\n\n                    })\n            }).catch(err => {\n                message.error(err.message)\n            });\n        }\n    }\n\n\n    return (\n        notEmptyLength(objectRemoveEmptyValue(comment)) ?\n            <React.Fragment>\n                <div className={`flex-justify-space-between flex-items-align-start ${props.className ? props.className : ''}`} style={{ ...props.style }}>\n                    <span className='d-inline-block' style={{ width: 50 }} >\n                        <UserAvatar redirectProfile data={_.get(comment, ['userId'])} size={30} />\n                    </span>\n                    <span className='d-inline-block headline width-80' >\n                        <span className='headline font-weight-black padding-right-sm black' >\n                            {getUserName(_.get(comment, ['userId']), 'freakId')}\n                        </span>\n                        {\n                            editMode ?\n                                <SocialInput\n                                    placeholder=\"Write your comment...\"\n                                    editMode\n                                    clickOutsideSubmit\n                                    text={`${_.get(comment, ['message']) || ''}`}\n                                    emojiPosition={{ bottom: -20, right: 33 }}\n                                    clubId={props.clubId}\n                                    onSubmit={(text) => {\n                                        handleSubmit(text);\n                                        setEditMode(false);\n                                    }}\n                                    excludeEnter\n                                />\n                                :\n                                <ParseTag data={_.get(comment, ['message']) || ''} className=\"width-100\" />\n                        }\n                        <div className=\"width-100 flex-justify-start flex-items-align-center\" style={{ padding: 0 }}>\n                            <span className=\"small-text margin-right-md grey font-weight-light\" >{formatNumber(totalLike, 'auto', true, 0, false) || 0} Likes</span>\n                            {/* <span className=\"small-text margin-right-md grey font-weight-light\" >{getPlural('Reply', 'Replies', messageTotal, true)}</span> */}\n                        </div>\n\n                        <div className=\"width-100\" style={{ padding: 0 }}>\n                            <span className=\"margin-right-sm small-text\">{moment(comment.createdAt).fromNow()}</span>\n                            <LikePostButton className=\"margin-right-sm\" likeOn=\"reply\"\n                                replyId={_.get(comment, ['_id'])} onClick={(actived) => {\n                                    setTotalLike(actived ? totalLike + 1 : totalLike - 1)\n                                }}\n                                activeButton={\n                                    <span className=\"small-text blue font-weight-light cursor-pointer\">Liked</span>\n                                }\n                            >\n                                <span className=\"small-text grey font-weight-light cursor-pointer\">\n                                    {getPlural('Like', 'Likes', totalLike, true)}\n                                </span>\n                            </LikePostButton>\n                            <span className=\"small-text margin-right-sm grey font-weight-light cursor-pointer\"\n                                onClick={() => {\n                                    if (props.handleReply) {\n                                        props.handleReply(getUserName(_.get(comment, ['userId']), 'freakId') || '', getObjectId(_.get(comment, ['userId'])) || '')\n                                    }\n                                }}>Reply</span>\n                        </div>\n                    </span>\n                    <span className='d-inline-block' style={{ width: 30 }} >\n                        {\n                            _.get(props.user, ['authenticated']) && _.get(props.user, ['info', 'user', '_id']) && _.get(props.user, ['info', 'user', '_id']) == _.get(comment, ['userId', '_id']) ?\n                                <span className='d-inline-block' id={`comment-menu-${uid}`} >\n                                    <Dropdown getPopupContainer={() => document.getElementById(`comment-menu-${uid}`)}\n                                        overlay={\n                                            <Menu>\n                                                <Menu.Item onClick={(e) => {\n                                                    setEditMode(true)\n                                                }}><span >Edit</span></Menu.Item>\n                                                <Menu.Item>\n                                                    <Popconfirm\n                                                        title=\"Are you sure to delete this comment?\"\n                                                        onConfirm={(e) => {\n                                                            handleRemove(comment);\n                                                        }}\n                                                        okText=\"Yes\"\n                                                        cancelText=\"No\"\n                                                    >\n                                                        <span>Delete</span>\n                                                    </Popconfirm>\n                                                </Menu.Item>\n                                            </Menu>\n                                        }>\n                                        <Icon type=\"more\" className=\"black\" style={{ fontSize: 20 }} />\n                                    </Dropdown>\n                                </span>\n                                :\n                                null\n                        }\n                    </span>\n                </div>\n            </React.Fragment >\n            :\n            null\n    );\n}\n\n\nconst mapStateToProps = state => ({\n    app: state.app,\n    user: state.user,\n});\n\nconst mapDispatchToProps = {\n    loading: loading,\n    loginMode\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Form.create()(withRouter(ReplyBox1)));"]},"metadata":{},"sourceType":"module"}