{"ast":null,"code":"var __jsx = React.createElement;\nimport { CloseOutlined, InfoCircleOutlined } from '@ant-design/icons';\nimport { Button, Col, InputNumber, Modal, Row, Select, Tooltip } from 'antd';\nimport _ from 'lodash';\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Form } from '@ant-design/compatible';\nimport { withRouter } from 'next/dist/client/router';\nimport { formatNumber, notEmptyLength, numberToFixed } from '../../common-function';\nconst priceRef = React.createRef();\nconst downPaymentRef = React.createRef();\n\nconst CalculatorModal = props => {\n  const {\n    getFieldDecorator\n  } = props.form;\n  const {\n    0: visible,\n    1: setVisible\n  } = useState(false); // const [calculateFields, setCalculateFields] = useState(\n  //     {\n  //         price: 0,\n  //         downpayment: 0,\n  //         interestRate: 0,\n  //         loanPeriod: 9,\n  //     }\n  // );\n\n  const {\n    0: monthlyInstalment,\n    1: setMonthlyInstallment\n  } = useState(0);\n  const {\n    0: timeoutFunction,\n    1: setTimeoutFunction\n  } = useState(null);\n  const {\n    0: formValue,\n    1: setFormValue\n  } = useState({\n    price: 0\n  }); // useEffect(() => {\n  //     if (notEmptyLength(calculateFields)) {\n  //         //Start calculate monthly payment\n  //         typingTimeOut();\n  //     } else {\n  //         setCalculateFields({\n  //             price: 0,\n  //             downpayment: 0,\n  //             interestRate: 0,\n  //             loanPeriod: 9,\n  //         });\n  //     }\n  // }, [calculateFields])\n\n  useEffect(() => {\n    reset();\n  }, [props.data]);\n\n  function close(e) {\n    setVisible(false);\n  }\n\n  function typingTimeOut() {\n    clearTimeout(timeoutFunction);\n    setTimeoutFunction(setTimeout(() => {\n      handleSubmit();\n    }, 1000));\n  }\n\n  function reset() {\n    if (notEmptyLength(props.data)) {\n      props.form.setFieldsValue({\n        price: !_.isNaN(parseFloat(props.data.price)) ? parseFloat(numberToFixed(props.data.price, true, 2)) : null,\n        downpayment: !_.isNaN(parseFloat(numberToFixed(props.data.price * 0.1, true, 2))) && _.isNaN(parseFloat(props.data.downpayment)) ? parseFloat(numberToFixed(props.data.price * 0.1, true, 2)) : !_.isNaN(parseFloat(props.data.downpayment)) ? parseFloat(numberToFixed(props.data.downpayment, true, 2)) : null,\n        loanPeriod: 9,\n        interestRate: 3.00\n      });\n      handleSubmit();\n    } else {\n      props.form.setFieldsValue({\n        price: 0,\n        downpayment: 0,\n        loanPeriod: 9,\n        interestRate: 0.00\n      });\n      handleSubmit();\n    }\n  } // function handleOnChange() {\n  //     let price = '0';\n  //     let downpayment = '0';\n  //     let interestRate = '3';\n  //     let loanPeriod = '9';\n  //     if (props.form.getFieldValue('price')) {\n  //         price = props.form.getFieldValue('price').toString();\n  //         price = formatNumber(price.replace(',', ''), null, true, 2);\n  //     }\n  //     if (props.form.getFieldValue('downpayment')) {\n  //         downpayment = props.form.getFieldValue('downpayment').toString();\n  //         downpayment = formatNumber(downpayment.replace(',', ''), null, true, 2);\n  //     }\n  //     if (props.form.getFieldValue('interestRate')) {\n  //         interestRate = props.form.getFieldValue('interestRate');\n  //     }\n  //     if (props.form.getFieldValue('loanPeriod')) {\n  //         loanPeriod = props.form.getFieldValue('loanPeriod');\n  //     }\n  //     setCalculateFields({\n  //         price: isValidNumber(price.replace(',', '')) ? parseFloat(price.replace(',', '')) : 0,\n  //         downpayment: isValidNumber(downpayment.replace(',', '')) ? parseFloat(downpayment.replace(',', '')) : 0,\n  //         interestRate: interestRate ? interestRate : 3,\n  //         loanPeriod: loanPeriod ? loanPeriod : 9,\n  //     });\n  // }\n\n\n  function handleSubmit() {\n    props.form.validateFields((err, values) => {\n      if (!err) {\n        let LoanAmount = parseFloat(values.price) - parseFloat(values.downpayment);\n        let LoanPeriod = parseInt(values.loanPeriod);\n        let Interest = parseFloat(values.interestRate) / 100;\n        let totalInterest = Interest * LoanAmount * LoanPeriod;\n        let monthlyInterest = totalInterest / (LoanPeriod * 12);\n        let monthlyInstalment = numberToFixed((LoanAmount + totalInterest) / (LoanPeriod * 12), true, 2); //Rounding fields to 2 decimal point\n\n        props.form.setFieldsValue({\n          price: !_.isNaN(parseFloat(values.price)) ? parseFloat(numberToFixed(values.price, true, 2)) : null,\n          downpayment: !_.isNaN(parseFloat(numberToFixed(values.price * 0.1, true, 2))) && _.isNaN(parseFloat(values.downpayment)) ? parseFloat(numberToFixed(values.price * 0.1, true, 2)) : !_.isNaN(parseFloat(values.downpayment)) ? parseFloat(numberToFixed(values.downpayment, true, 2)) : null,\n          interestRate: !_.isNaN(parseFloat(values.interestRate)) ? parseFloat(numberToFixed(values.interestRate, true, 2)) : null\n        });\n        setMonthlyInstallment(monthlyInstalment);\n      } else {\n        setMonthlyInstallment('N/A'); // _.map(err, function (err) {\n        //     return message.error(err.errors[0].message)\n        // })\n      }\n    });\n  }\n\n  return __jsx(React.Fragment, null, __jsx(Modal, {\n    visible: visible,\n    centered: true,\n    title: \"Car Loan Calculator\",\n    maskClosable: true,\n    closable: true,\n    footer: null,\n    onCancel: close,\n    width: \"350px\" // wrapClassName=\"md-padding-modal-body\"\n\n  }, __jsx(Form, {\n    name: \"basic\"\n  }, __jsx(Form.Item, {\n    style: {\n      margin: '0px 5px'\n    }\n  }, __jsx(Row, {\n    align: \"middle\",\n    gutter: [10, 0]\n  }, __jsx(Col, {\n    xs: 24,\n    sm: 24,\n    md: 24,\n    lg: 24,\n    xl: 24\n  }, __jsx(\"span\", {\n    className: \"caption flex-items-align-center\",\n    style: {\n      maxHeight: '30px'\n    }\n  }, \"Loan Amount\")), __jsx(Col, {\n    xs: 22,\n    sm: 22,\n    md: 22,\n    lg: 22,\n    xl: 22\n  }, getFieldDecorator('price', {\n    rules: [{\n      required: false\n    }]\n  })(__jsx(InputNumber, {\n    ref: priceRef,\n    placeholder: \"Total Price (RM)\",\n    formatter: value => {\n      if (!value && priceRef.current) {\n        priceRef.current.focus();\n      }\n\n      return `RM ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n    },\n    parser: value => value.replace(/\\RM\\s?|(,*)/g, ''),\n    onChange: typingTimeOut,\n    step: \"0.01\",\n    className: \"width-100\"\n  }))), props.form.getFieldValue('price') ? __jsx(Col, {\n    span: 2\n  }, __jsx(\"div\", {\n    className: \"fill-parent flex-justify-center flex-items-align-center\"\n  }, __jsx(CloseOutlined, {\n    key: \"price-close\",\n    onClick: () => {\n      props.form.setFieldsValue({\n        price: 0\n      });\n      handleSubmit();\n    }\n  }))) : __jsx(Col, {\n    span: 2\n  }, __jsx(\"div\", {\n    className: \"fill-parent flex-justify-center flex-items-align-center\"\n  }, __jsx(Tooltip, {\n    placement: \"topLeft\",\n    title: \"The vehicle selling price.\"\n  }, __jsx(InfoCircleOutlined, {\n    key: \"downpayment-info\",\n    className: \"ccar-yellow\"\n  })))))), __jsx(Form.Item, {\n    style: {\n      margin: '0px 5px'\n    }\n  }, __jsx(Row, {\n    align: \"middle\",\n    gutter: [10, 0]\n  }, __jsx(Col, {\n    xs: 24,\n    sm: 24,\n    md: 24,\n    lg: 24,\n    xl: 24\n  }, __jsx(\"span\", {\n    className: \"caption flex-items-align-center\",\n    style: {\n      maxHeight: '30px'\n    }\n  }, \"Down Payment\")), __jsx(Col, {\n    span: props.form.getFieldValue('downpayment') ? 22 : 22\n  }, getFieldDecorator('downpayment', {\n    rules: [{\n      required: false\n    }]\n  })(__jsx(InputNumber, {\n    ref: downPaymentRef,\n    placeholder: \"Downpayment (RM)\",\n    formatter: value => {\n      if (!value && downPaymentRef.current) {\n        downPaymentRef.current.focus();\n      }\n\n      return `RM ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n    },\n    parser: value => value.replace(/\\RM\\s?|(,*)/g, ''),\n    onChange: typingTimeOut,\n    step: \"0.01\",\n    className: \"width-100 no-margin\"\n  }))), props.form.getFieldValue('downpayment') ? __jsx(Col, {\n    span: 2\n  }, __jsx(\"div\", {\n    className: \"fill-pareont flex-justify-center flex-items-align-center\"\n  }, __jsx(CloseOutlined, {\n    key: \"dwnpayment-close\",\n    onClick: () => {\n      props.form.setFieldsValue({\n        downpayment: undefined\n      });\n      handleSubmit();\n    }\n  }))) : __jsx(Col, {\n    span: 2\n  }, __jsx(\"div\", {\n    className: \"fill-parent flex-justify-center flex-items-align-center\"\n  }, __jsx(Tooltip, {\n    placement: \"topLeft\",\n    title: \"The amount of money you need to pay by your own. Default rate of downpayment is 10%.(This cost is not covered by the loan that take from a bank).\"\n  }, __jsx(InfoCircleOutlined, {\n    key: \"downpayment-info\",\n    className: \"ccar-yellow\"\n  })))))), __jsx(Form.Item, {\n    style: {\n      margin: '0px 5px'\n    }\n  }, __jsx(Row, {\n    align: \"middle\",\n    gutter: [10, 0]\n  }, __jsx(Col, {\n    xs: 24,\n    sm: 24,\n    md: 24,\n    lg: 24,\n    xl: 24\n  }, __jsx(\"span\", {\n    className: \"caption flex-items-align-center\",\n    style: {\n      maxHeight: '30px'\n    }\n  }, \"Loan Period\")), __jsx(Col, {\n    span: props.form.getFieldValue('loanPeriod') ? 22 : 22\n  }, getFieldDecorator('loanPeriod', {\n    rules: [{\n      required: false\n    }]\n  })(__jsx(Select, {\n    className: \"width-100\",\n    placeholder: \"Loan Period (Year)\",\n    onChange: typingTimeOut\n  }, __jsx(Select.Option, {\n    value: 5\n  }, \"5 Years\"), __jsx(Select.Option, {\n    value: 7\n  }, \"7 Years\"), __jsx(Select.Option, {\n    value: 9\n  }, \"9 Years\")))), props.form.getFieldValue('loanPeriod') ? __jsx(Col, {\n    span: 2\n  }, __jsx(\"div\", {\n    className: \"fill-parent flex-justify-center flex-items-align-center\"\n  }, __jsx(CloseOutlined, {\n    key: \"loanPeriod-close\",\n    onClick: () => {\n      props.form.setFieldsValue({\n        loanPeriod: undefined\n      });\n      handleSubmit();\n    }\n  }))) : __jsx(Col, {\n    span: 2\n  }, __jsx(\"div\", {\n    className: \"fill-parent flex-justify-center flex-items-align-center\"\n  }, __jsx(Tooltip, {\n    placement: \"topLeft\",\n    title: \"The period (in years) for paying off the bank loan.\"\n  }, __jsx(InfoCircleOutlined, {\n    key: \"loanPeriod-info\",\n    className: \"ccar-yellow\"\n  })))))), __jsx(Form.Item, {\n    style: {\n      margin: '0px 5px'\n    }\n  }, __jsx(Row, {\n    align: \"middle\",\n    gutter: [10, 0]\n  }, __jsx(Col, {\n    xs: 24,\n    sm: 24,\n    md: 24,\n    lg: 24,\n    xl: 24\n  }, __jsx(\"span\", {\n    className: \"caption flex-items-align-center\",\n    style: {\n      maxHeight: '30px'\n    }\n  }, \"Interest Rate\")), __jsx(Col, {\n    span: props.form.getFieldValue('interestRate') ? 22 : 22\n  }, getFieldDecorator('interestRate', {\n    rules: [{\n      required: false\n    }]\n  })(__jsx(InputNumber, {\n    placeholder: \"Interest Rate (%)\",\n    formatter: value => `${value}%`,\n    parser: value => value.replace('%', ''),\n    onChange: typingTimeOut,\n    step: \"0.01\",\n    className: \"width-100\"\n  }))), props.form.getFieldValue('interestRate') ? __jsx(Col, {\n    span: 2\n  }, __jsx(\"div\", {\n    className: \"fill-parent flex-justify-center flex-items-align-center\"\n  }, __jsx(CloseOutlined, {\n    key: \"interestRate-close\",\n    onClick: () => {\n      props.form.setFieldsValue({\n        interestRate: undefined\n      });\n      handleSubmit();\n    }\n  }))) : __jsx(Col, {\n    span: 2\n  }, __jsx(\"div\", {\n    className: \"fill-parent flex-justify-center flex-items-align-center\"\n  }, __jsx(Tooltip, {\n    placement: \"topLeft\",\n    title: \"The loan interest rate charged by your bank.\"\n  }, __jsx(InfoCircleOutlined, {\n    key: \"interestRate-info\",\n    className: \"ccar-yellow\"\n  })))))), __jsx(\"div\", {\n    className: \"round-border text-align-center border-yellow-darken-1 margin-top-md\"\n  }, __jsx(\"div\", {\n    style: {\n      fontWeight: 600,\n      fontSize: 16,\n      marginBottom: 2\n    }\n  }, \" Monthly Pay\"), __jsx(\"div\", {\n    style: {\n      fontWeight: 700,\n      color: 'rgb(251, 176, 64)',\n      fontSize: 18,\n      padding: 0\n    }\n  }, \" RM \", formatNumber(monthlyInstalment, null, null, 2), \" \")))), __jsx(\"a\", {\n    onClick: e => {\n      setVisible(true);\n      reset();\n    }\n  }, props.button ? props.button() : // <Tooltip placement=\"top\" title={`Calculate my monthly payment`}>\n  //     <Button style={{ paddingLeft: '9px', paddingRight: '9px' }} >\n  //         <div className='fill-parent flex-items-align-center' >\n  //             <Icon type=\"calculator\" className='ccar-yellow cursor-pointer' style={{ fontSize: '20px' }}/>\n  //         </div>\n  //     </Button>\n  __jsx(Button, {\n    type: \"normal\",\n    className: \"w-100 ads-purchase-button \",\n    style: {\n      padding: 0\n    }\n  }, __jsx(\"img\", {\n    src: \"/assets/profile/icon-list/calculator.png\",\n    style: {\n      width: '19px'\n    }\n  })) // </Tooltip>\n  ));\n};\n\nconst mapStateToProps = state => ({\n  app: state.app,\n  user: state.user\n});\n\nconst mapDispatchToProps = {};\nexport default connect(mapStateToProps, mapDispatchToProps)(Form.create()(withRouter(CalculatorModal)));","map":{"version":3,"sources":["/Users/faraheen/ccar-cms-next-mobile/components/general/calculator-modal.jsx"],"names":["CloseOutlined","InfoCircleOutlined","Button","Col","InputNumber","Modal","Row","Select","Tooltip","_","React","useEffect","useState","connect","Form","withRouter","formatNumber","notEmptyLength","numberToFixed","priceRef","createRef","downPaymentRef","CalculatorModal","props","getFieldDecorator","form","visible","setVisible","monthlyInstalment","setMonthlyInstallment","timeoutFunction","setTimeoutFunction","formValue","setFormValue","price","reset","data","close","e","typingTimeOut","clearTimeout","setTimeout","handleSubmit","setFieldsValue","isNaN","parseFloat","downpayment","loanPeriod","interestRate","validateFields","err","values","LoanAmount","LoanPeriod","parseInt","Interest","totalInterest","monthlyInterest","margin","maxHeight","rules","required","value","current","focus","replace","getFieldValue","undefined","fontWeight","fontSize","marginBottom","color","padding","button","width","mapStateToProps","state","app","user","mapDispatchToProps","create"],"mappings":"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","sourcesContent":["import { CloseOutlined, InfoCircleOutlined } from '@ant-design/icons';\nimport { Button, Col, InputNumber, Modal, Row, Select, Tooltip } from 'antd';\nimport _ from 'lodash';\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Form } from '@ant-design/compatible';\nimport { withRouter } from 'next/dist/client/router';\nimport { formatNumber, notEmptyLength, numberToFixed } from '../../common-function';\n\n\nconst priceRef = React.createRef();\nconst downPaymentRef = React.createRef();\n\nconst CalculatorModal = (props) => {\n\n    const { getFieldDecorator } = props.form;\n\n    const [visible, setVisible] = useState(false);\n    // const [calculateFields, setCalculateFields] = useState(\n    //     {\n    //         price: 0,\n    //         downpayment: 0,\n    //         interestRate: 0,\n    //         loanPeriod: 9,\n    //     }\n    // );\n    const [monthlyInstalment, setMonthlyInstallment] = useState(0);\n    const [timeoutFunction, setTimeoutFunction] = useState(null);\n    const [formValue, setFormValue] = useState({\n        price: 0,\n    });\n\n\n    // useEffect(() => {\n    //     if (notEmptyLength(calculateFields)) {\n    //         //Start calculate monthly payment\n    //         typingTimeOut();\n    //     } else {\n    //         setCalculateFields({\n    //             price: 0,\n    //             downpayment: 0,\n    //             interestRate: 0,\n    //             loanPeriod: 9,\n    //         });\n    //     }\n    // }, [calculateFields])\n\n\n\n    useEffect(() => {\n        reset();\n    }, [props.data])\n\n    function close(e) {\n        setVisible(false);\n    }\n\n\n    function typingTimeOut() {\n        clearTimeout(timeoutFunction);\n        setTimeoutFunction(setTimeout(() => {\n            handleSubmit();\n        }, 1000))\n    }\n\n    function reset() {\n        if (notEmptyLength(props.data)) {\n            props.form.setFieldsValue({\n                price: !_.isNaN(parseFloat(props.data.price)) ? parseFloat(numberToFixed(props.data.price, true, 2)) : null,\n                downpayment: !_.isNaN(parseFloat(numberToFixed(props.data.price * 0.1, true, 2))) && _.isNaN(parseFloat(props.data.downpayment)) ? parseFloat(numberToFixed(props.data.price * 0.1, true, 2)) : !_.isNaN(parseFloat(props.data.downpayment)) ? parseFloat(numberToFixed(props.data.downpayment, true, 2)) : null,\n                loanPeriod: 9,\n                interestRate: 3.00\n            })\n            handleSubmit();\n        } else {\n            props.form.setFieldsValue({\n                price: 0,\n                downpayment: 0,\n                loanPeriod: 9,\n                interestRate: 0.00\n            })\n            handleSubmit();\n\n        }\n    }\n\n\n    // function handleOnChange() {\n    //     let price = '0';\n    //     let downpayment = '0';\n    //     let interestRate = '3';\n    //     let loanPeriod = '9';\n\n\n    //     if (props.form.getFieldValue('price')) {\n    //         price = props.form.getFieldValue('price').toString();\n    //         price = formatNumber(price.replace(',', ''), null, true, 2);\n    //     }\n\n    //     if (props.form.getFieldValue('downpayment')) {\n    //         downpayment = props.form.getFieldValue('downpayment').toString();\n    //         downpayment = formatNumber(downpayment.replace(',', ''), null, true, 2);\n    //     }\n\n    //     if (props.form.getFieldValue('interestRate')) {\n    //         interestRate = props.form.getFieldValue('interestRate');\n    //     }\n    //     if (props.form.getFieldValue('loanPeriod')) {\n    //         loanPeriod = props.form.getFieldValue('loanPeriod');\n    //     }\n\n    //     setCalculateFields({\n    //         price: isValidNumber(price.replace(',', '')) ? parseFloat(price.replace(',', '')) : 0,\n    //         downpayment: isValidNumber(downpayment.replace(',', '')) ? parseFloat(downpayment.replace(',', '')) : 0,\n    //         interestRate: interestRate ? interestRate : 3,\n    //         loanPeriod: loanPeriod ? loanPeriod : 9,\n    //     });\n    // }\n    function handleSubmit() {\n        props.form.validateFields((err, values) => {\n            if (!err) {\n                let LoanAmount = parseFloat(values.price) - parseFloat(values.downpayment)\n                let LoanPeriod = parseInt(values.loanPeriod)\n                let Interest = parseFloat(values.interestRate) / 100\n                let totalInterest = Interest * LoanAmount * LoanPeriod\n                let monthlyInterest = totalInterest / (LoanPeriod * 12)\n                let monthlyInstalment = numberToFixed((LoanAmount + totalInterest) / (LoanPeriod * 12), true, 2)\n\n                //Rounding fields to 2 decimal point\n                props.form.setFieldsValue({\n                    price: !_.isNaN(parseFloat(values.price)) ? parseFloat(numberToFixed(values.price, true, 2)) : null,\n                    downpayment: !_.isNaN(parseFloat(numberToFixed(values.price * 0.1, true, 2))) && _.isNaN(parseFloat(values.downpayment)) ? parseFloat(numberToFixed(values.price * 0.1, true, 2)) : !_.isNaN(parseFloat(values.downpayment)) ? parseFloat(numberToFixed(values.downpayment, true, 2)) : null,\n                    interestRate: !_.isNaN(parseFloat(values.interestRate)) ? parseFloat(numberToFixed(values.interestRate, true, 2)) : null,\n                })\n                setMonthlyInstallment(monthlyInstalment);\n            } else {\n                setMonthlyInstallment('N/A');\n                // _.map(err, function (err) {\n                //     return message.error(err.errors[0].message)\n                // })\n            }\n        })\n    }\n\n\n    return (\n\n        <React.Fragment>\n            <Modal\n                visible={visible}\n                centered\n                title=\"Car Loan Calculator\"\n                maskClosable={true}\n                closable={true}\n                footer={null}\n                onCancel={close}\n                width=\"350px\"\n                // wrapClassName=\"md-padding-modal-body\"\n            >\n                <Form\n                    name=\"basic\"\n                >\n                    <Form.Item style={{ margin: '0px 5px' }}>\n\n                        <Row align=\"middle\" gutter={[10, 0]}>\n                            <Col xs={24} sm={24} md={24} lg={24} xl={24}>\n                                <span className='caption flex-items-align-center' style={{ maxHeight: '30px' }} >\n                                    Loan Amount\n                                    </span>\n                            </Col>\n                            <Col xs={22} sm={22} md={22} lg={22} xl={22}>\n                                {\n                                    getFieldDecorator('price', {\n                                        rules: [{ required: false }],\n                                    })(\n                                        <InputNumber\n                                            ref={priceRef}\n                                            placeholder=\"Total Price (RM)\"\n                                            formatter={value => {\n                                                if (!value && priceRef.current) {\n                                                    priceRef.current.focus();\n                                                }\n                                                return `RM ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n                                            }}\n                                            parser={value => value.replace(/\\RM\\s?|(,*)/g, '')}\n                                            onChange={typingTimeOut}\n                                            step=\"0.01\"\n                                            className='width-100'\n                                        />\n                                    )\n                                }\n                            </Col>\n                            {\n                                props.form.getFieldValue('price') ?\n                                    <Col span={2}  >\n                                        <div className='fill-parent flex-justify-center flex-items-align-center'>\n                                            <CloseOutlined key=\"price-close\" onClick={() => {\n                                                props.form.setFieldsValue({ price: 0 });\n                                                handleSubmit();\n                                            }} />\n                                        </div>\n                                    </Col>\n\n                                    :\n                                    <Col span={2}  >\n                                        <div className='fill-parent flex-justify-center flex-items-align-center'>\n                                            <Tooltip placement=\"topLeft\" title=\"The vehicle selling price.\">\n                                                <InfoCircleOutlined key=\"downpayment-info\" className='ccar-yellow' />\n                                            </Tooltip>\n                                        </div>\n                                    </Col>\n\n                            }\n                        </Row>\n                    </Form.Item>\n                    <Form.Item style={{ margin: '0px 5px' }}>\n                        <Row align=\"middle\" gutter={[10, 0]}>\n                            <Col xs={24} sm={24} md={24} lg={24} xl={24}>\n                                <span className='caption flex-items-align-center' style={{ maxHeight: '30px' }} >\n                                    Down Payment\n                                    </span>\n                            </Col>\n\n                            <Col span={props.form.getFieldValue('downpayment') ? 22 : 22}>\n                                {\n                                    getFieldDecorator('downpayment', {\n                                        rules: [{ required: false }],\n                                    })(\n                                        <InputNumber\n                                            ref={downPaymentRef}\n                                            placeholder=\"Downpayment (RM)\"\n                                            formatter={value => {\n                                                if (!value && downPaymentRef.current) {\n                                                    downPaymentRef.current.focus();\n                                                }\n                                                return `RM ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n                                            }}\n                                            parser={value => value.replace(/\\RM\\s?|(,*)/g, '')}\n                                            onChange={typingTimeOut}\n                                            step=\"0.01\"\n                                            className='width-100 no-margin'\n                                        />\n                                    )\n                                }\n                            </Col>\n                            {\n                                props.form.getFieldValue('downpayment') ?\n                                    <Col span={2}  >\n                                        <div className='fill-pareont flex-justify-center flex-items-align-center'>\n                                            <CloseOutlined key=\"dwnpayment-close\" onClick={() => {\n                                                props.form.setFieldsValue({ downpayment: undefined });\n                                                handleSubmit();\n                                            }} />\n                                        </div>\n                                    </Col>\n\n                                    :\n                                    <Col span={2}  >\n                                        <div className='fill-parent flex-justify-center flex-items-align-center'>\n                                            <Tooltip placement=\"topLeft\" title=\"The amount of money you need to pay by your own. Default rate of downpayment is 10%.(This cost is not covered by the loan that take from a bank).\">\n                                                <InfoCircleOutlined key=\"downpayment-info\" className='ccar-yellow' />\n                                            </Tooltip>\n                                        </div>\n                                    </Col>\n\n                            }\n                        </Row>\n\n                    </Form.Item>\n\n                    <Form.Item style={{ margin: '0px 5px' }}>\n                        <Row align=\"middle\" gutter={[10, 0]}>\n                            <Col xs={24} sm={24} md={24} lg={24} xl={24}>\n                                <span className='caption flex-items-align-center' style={{ maxHeight: '30px' }} >\n                                    Loan Period\n                                    </span>\n                            </Col>\n                            <Col span={props.form.getFieldValue('loanPeriod') ? 22 : 22}>\n                                {\n                                    getFieldDecorator('loanPeriod', {\n                                        rules: [{ required: false }],\n                                    })(\n                                        <Select\n                                            className=\"width-100\"\n                                            placeholder=\"Loan Period (Year)\"\n                                            onChange={typingTimeOut}>\n                                            <Select.Option value={5} >5 Years</Select.Option>\n                                            <Select.Option value={7} >7 Years</Select.Option>\n                                            <Select.Option value={9} >9 Years</Select.Option>\n                                        </Select>\n                                    )\n                                }\n                            </Col>\n                            {\n                                props.form.getFieldValue('loanPeriod') ?\n                                    <Col span={2}  >\n                                        <div className='fill-parent flex-justify-center flex-items-align-center'>\n                                            <CloseOutlined key=\"loanPeriod-close\" onClick={() => {\n                                                props.form.setFieldsValue({ loanPeriod: undefined });\n                                                handleSubmit();\n                                            }} />\n                                        </div>\n                                    </Col>\n\n                                    :\n                                    <Col span={2}  >\n                                        <div className='fill-parent flex-justify-center flex-items-align-center'>\n                                            <Tooltip placement=\"topLeft\" title=\"The period (in years) for paying off the bank loan.\">\n                                                <InfoCircleOutlined key=\"loanPeriod-info\" className='ccar-yellow' />\n                                            </Tooltip>\n                                        </div>\n                                    </Col>\n\n                            }\n                        </Row>\n                    </Form.Item>\n                    <Form.Item style={{ margin: '0px 5px' }}>\n                        <Row align=\"middle\" gutter={[10, 0]}>\n                            <Col xs={24} sm={24} md={24} lg={24} xl={24}>\n                                <span className='caption flex-items-align-center' style={{ maxHeight: '30px' }} >\n                                    Interest Rate\n                                    </span>\n                            </Col>\n                            <Col span={props.form.getFieldValue('interestRate') ? 22 : 22}>\n                                {\n                                    getFieldDecorator('interestRate', {\n                                        rules: [{ required: false }],\n                                    })(\n                                        <InputNumber\n                                            placeholder=\"Interest Rate (%)\"\n                                            formatter={value => `${value}%`}\n                                            parser={value => value.replace('%', '')}\n                                            onChange={typingTimeOut}\n                                            step=\"0.01\"\n                                            className='width-100'\n                                        />\n                                    )\n                                }\n                            </Col>\n                            {\n                                props.form.getFieldValue('interestRate') ?\n                                    <Col span={2}  >\n                                        <div className='fill-parent flex-justify-center flex-items-align-center'>\n                                            <CloseOutlined key=\"interestRate-close\" onClick={() => {\n                                                props.form.setFieldsValue({ interestRate: undefined });\n                                                handleSubmit();\n                                            }} />\n                                        </div>\n                                    </Col>\n\n                                    :\n                                    <Col span={2}  >\n                                        <div className='fill-parent flex-justify-center flex-items-align-center'>\n                                            <Tooltip placement=\"topLeft\" title=\"The loan interest rate charged by your bank.\">\n                                                <InfoCircleOutlined key=\"interestRate-info\" className='ccar-yellow' />\n                                            </Tooltip>\n                                        </div>\n                                    </Col>\n\n                            }\n\n\n                        </Row>\n                    </Form.Item>\n\n\n                    <div className='round-border text-align-center border-yellow-darken-1 margin-top-md'>\n                        <div style={{ fontWeight: 600, fontSize: 16, marginBottom: 2 }}> Monthly Pay</div>\n                        <div style={{ fontWeight: 700, color: 'rgb(251, 176, 64)', fontSize: 18, padding: 0 }}> RM {formatNumber(monthlyInstalment, null, null, 2)} </div>\n                    </div>\n\n                </Form>\n\n            </Modal>\n\n\n            <a onClick={(e) => { setVisible(true); reset(); }}>\n                {\n                    props.button ?\n                        props.button()\n                        :\n                        // <Tooltip placement=\"top\" title={`Calculate my monthly payment`}>\n                        //     <Button style={{ paddingLeft: '9px', paddingRight: '9px' }} >\n                        //         <div className='fill-parent flex-items-align-center' >\n                        //             <Icon type=\"calculator\" className='ccar-yellow cursor-pointer' style={{ fontSize: '20px' }}/>\n                        //         </div>\n                        //     </Button>\n                        <Button\n                            type=\"normal\"\n                            className=\"w-100 ads-purchase-button \"\n                            style={{ padding: 0 }}\n                        >\n                            {/* <WhatsAppOutlined style={{ fontSize: 20, color: 'white' }} /> */}\n                            <img src=\"/assets/profile/icon-list/calculator.png\" style={{ width: '19px' }} />\n                        </Button>\n                    // </Tooltip>\n                }\n            </a>\n\n        </React.Fragment>\n    );\n}\n\n\nconst mapStateToProps = state => ({\n    app: state.app,\n    user: state.user,\n});\n\nconst mapDispatchToProps = {\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Form.create()(withRouter(CalculatorModal)));"]},"metadata":{},"sourceType":"module"}