{"ast":null,"code":"var _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport { Col, Empty, Form, Row } from 'antd';\nimport _ from 'lodash';\nimport { withRouter } from 'next/router';\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { arrayLengthCount, notEmptyLength } from '../../common-function';\nimport { loading, loginMode, updateActiveMenu } from '../../redux/actions/app-actions';\nimport PostModal from '../carFreak/components/post-modal';\nimport WritePostModal from '../carFreak/components/write-post-modal';\nimport UserPost from './UserPost';\n\nvar moment = require('moment');\n\nvar defaultHeight = 100;\n\nvar UserPosts = function UserPosts(props) {\n  _s();\n\n  var _useState = useState([]),\n      posts = _useState[0],\n      setPosts = _useState[1];\n\n  var _useState2 = useState([]),\n      postLikes = _useState2[0],\n      setPostLikes = _useState2[1];\n\n  var _useState3 = useState(false),\n      writePostVisible = _useState3[0],\n      setWritePostVisible = _useState3[1];\n\n  var _useState4 = useState(false),\n      postVisible = _useState4[0],\n      setPostVisible = _useState4[1];\n\n  var _useState5 = useState({}),\n      selectedPost = _useState5[0],\n      setSelectedPost = _useState5[1];\n\n  useEffect(function () {\n    if (_.isArray(props.posts) && notEmptyLength(props.posts)) {\n      setPosts(props.posts);\n    } else {\n      setPosts([]);\n    }\n  }, [props.posts]);\n  useEffect(function () {\n    if (_.isArray(props.postLikes) && notEmptyLength(props.postLikes)) {\n      setPostLikes(props.postLikes);\n    } else {\n      setPostLikes([]);\n    }\n  }, [props.postLikes]);\n  return __jsx(React.Fragment, null, __jsx(Row, {\n    type: \"flex\",\n    gutter: props.gutter ? props.gutter : [10, 10]\n  }, props.showAddPostCard ? __jsx(Col, {\n    xs: props.xs ? props.xs : 24,\n    sm: props.sm ? props.sm : 24,\n    md: props.md ? props.md : 12,\n    lg: props.lg ? props.lg : 6,\n    xl: props.xl ? props.xl : 6\n  }, __jsx(\"div\", {\n    className: \"width-100 background-white relative-wrapper cursor-pointer\",\n    style: {\n      height: defaultHeight,\n      position: 'relative'\n    },\n    onClick: function onClick(e) {\n      setWritePostVisible(true);\n    }\n  }, __jsx(\"img\", {\n    src: \"/assets/upload_photo.png\",\n    style: {\n      width: defaultHeight * 0.5,\n      height: defaultHeight * 0.5\n    },\n    className: \"absolute-center\"\n  }), __jsx(\"div\", {\n    className: \"flex-justify-center flex-items-align-center subtitle1 absolute-center\",\n    style: {\n      paddingTop: defaultHeight * 0.5 + 30\n    }\n  }, \"POST / UPLOAD PHOTO\"))) : null, posts.map(function (post, i) {\n    return __jsx(Col, {\n      key: 'colPost' + i,\n      xs: props.xs ? props.xs : 8,\n      sm: props.sm ? props.sm : 8,\n      md: props.md ? props.md : 12,\n      lg: props.lg ? props.lg : 6,\n      xl: props.xl ? props.xl : 6\n    }, __jsx(UserPost, {\n      height: defaultHeight,\n      post: post,\n      onClick: function onClick(post) {\n        setSelectedPost(post);\n        setPostVisible(true);\n      }\n    }));\n  }), !props.showAddPostCard && arrayLengthCount(posts) <= 0 ? __jsx(Col, {\n    xs: 24,\n    sm: 24,\n    md: 24,\n    lg: 24,\n    xl: 24\n  }, __jsx(\"div\", {\n    className: \"width-100\",\n    style: {\n      height: 400\n    }\n  }, __jsx(Empty, null))) : null), __jsx(WritePostModal, {\n    visibleMode: writePostVisible,\n    changeVisibleMode: function changeVisibleMode(e) {\n      setWritePostVisible(e);\n    },\n    chatType: 'carfreaks',\n    onCreatePost: function onCreatePost(data) {\n      if (props.onCreatePost) {\n        props.onCreatePost(data);\n      }\n    }\n  }), __jsx(PostModal, {\n    postLike: _.find(postLikes, {\n      chatId: selectedPost._id\n    }),\n    onPostLikeChange: function onPostLikeChange(liked, data) {\n      var newPostLikes = postLikes;\n\n      if (liked) {\n        newPostLikes = _.concat(newPostLikes, [data]);\n      } else {\n        newPostLikes = _.filter(newPostLikes, function (like) {\n          return _.get(like, ['chatId']) != _.get(data, ['chatId']);\n        });\n      }\n\n      if (props.onUpdatePostLikes) {\n        props.onUpdatePostLikes(newPostLikes);\n      }\n    },\n    visibleMode: postVisible,\n    changeVisibleMode: function changeVisibleMode(e) {\n      setPostVisible(e);\n      setSelectedPost({});\n    },\n    chatInfo: _.isPlainObject(selectedPost) && !_.isEmpty(selectedPost) ? selectedPost : {},\n    onUpdatePost: function onUpdatePost(data) {\n      if (props.onUpdatePost) {\n        props.onUpdatePost(data);\n      }\n    }\n  }));\n};\n\n_s(UserPosts, \"EspI21TAu7T4JLg5IJ3OCpvJs5c=\");\n\n_c = UserPosts;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    sellCars: state.sellCars,\n    productsList: state.productsList,\n    app: state.app,\n    user: state.user,\n    sellerProfile: state.sellerProfile\n  };\n};\n\nvar mapDispatchToProps = {\n  updateActiveMenu: updateActiveMenu,\n  loading: loading,\n  loginMode: loginMode\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Form.create()(withRouter(UserPosts)));\n\nvar _c;\n\n$RefreshReg$(_c, \"UserPosts\");","map":{"version":3,"sources":["/Users/faraheen/ccar-cms-next-mobile/components/profile/UserPosts.jsx"],"names":["Col","Empty","Form","Row","_","withRouter","React","useEffect","useState","connect","arrayLengthCount","notEmptyLength","loading","loginMode","updateActiveMenu","PostModal","WritePostModal","UserPost","moment","require","defaultHeight","UserPosts","props","posts","setPosts","postLikes","setPostLikes","writePostVisible","setWritePostVisible","postVisible","setPostVisible","selectedPost","setSelectedPost","isArray","gutter","showAddPostCard","xs","sm","md","lg","xl","height","position","e","width","paddingTop","map","post","i","data","onCreatePost","find","chatId","_id","liked","newPostLikes","concat","filter","like","get","onUpdatePostLikes","isPlainObject","isEmpty","onUpdatePost","mapStateToProps","state","sellCars","productsList","app","user","sellerProfile","mapDispatchToProps","create"],"mappings":";;;AAAA,SAASA,GAAT,EAAcC,KAAd,EAAqBC,IAArB,EAA2BC,GAA3B,QAAsC,MAAtC;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,SAASC,UAAT,QAA2B,aAA3B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,EAA2BC,cAA3B,QAAiD,uBAAjD;AACA,SACIC,OADJ,EAEIC,SAFJ,EAEeC,gBAFf,QAGO,iCAHP;AAIA,OAAOC,SAAP,MAAsB,mCAAtB;AACA,OAAOC,cAAP,MAA2B,yCAA3B;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAGA,IAAIC,MAAM,GAAGC,OAAO,CAAC,QAAD,CAApB;;AAGA,IAAMC,aAAa,GAAG,GAAtB;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD,EAAW;AAAA;;AAEzB,kBAA0Bd,QAAQ,CAAC,EAAD,CAAlC;AAAA,MAAOe,KAAP;AAAA,MAAcC,QAAd;;AACA,mBAAkChB,QAAQ,CAAC,EAAD,CAA1C;AAAA,MAAOiB,SAAP;AAAA,MAAkBC,YAAlB;;AACA,mBAAgDlB,QAAQ,CAAC,KAAD,CAAxD;AAAA,MAAOmB,gBAAP;AAAA,MAAyBC,mBAAzB;;AACA,mBAAsCpB,QAAQ,CAAC,KAAD,CAA9C;AAAA,MAAOqB,WAAP;AAAA,MAAoBC,cAApB;;AACA,mBAAwCtB,QAAQ,CAAC,EAAD,CAAhD;AAAA,MAAOuB,YAAP;AAAA,MAAqBC,eAArB;;AAEAzB,EAAAA,SAAS,CAAC,YAAM;AAEZ,QAAIH,CAAC,CAAC6B,OAAF,CAAUX,KAAK,CAACC,KAAhB,KAA0BZ,cAAc,CAACW,KAAK,CAACC,KAAP,CAA5C,EAA2D;AACvDC,MAAAA,QAAQ,CAACF,KAAK,CAACC,KAAP,CAAR;AACH,KAFD,MAEO;AACHC,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACH;AAEJ,GARQ,EAQN,CAACF,KAAK,CAACC,KAAP,CARM,CAAT;AAUAhB,EAAAA,SAAS,CAAC,YAAM;AAEZ,QAAIH,CAAC,CAAC6B,OAAF,CAAUX,KAAK,CAACG,SAAhB,KAA8Bd,cAAc,CAACW,KAAK,CAACG,SAAP,CAAhD,EAAmE;AAC/DC,MAAAA,YAAY,CAACJ,KAAK,CAACG,SAAP,CAAZ;AACH,KAFD,MAEO;AACHC,MAAAA,YAAY,CAAC,EAAD,CAAZ;AACH;AACJ,GAPQ,EAON,CAACJ,KAAK,CAACG,SAAP,CAPM,CAAT;AASA,SACI,MAAC,KAAD,CAAO,QAAP,QACI,MAAC,GAAD;AAAK,IAAA,IAAI,EAAC,MAAV;AAAiB,IAAA,MAAM,EAAEH,KAAK,CAACY,MAAN,GAAeZ,KAAK,CAACY,MAArB,GAA8B,CAAC,EAAD,EAAK,EAAL;AAAvD,KAEQZ,KAAK,CAACa,eAAN,GACI,MAAC,GAAD;AAAK,IAAA,EAAE,EAAEb,KAAK,CAACc,EAAN,GAAWd,KAAK,CAACc,EAAjB,GAAsB,EAA/B;AAAmC,IAAA,EAAE,EAAEd,KAAK,CAACe,EAAN,GAAWf,KAAK,CAACe,EAAjB,GAAsB,EAA7D;AAAiE,IAAA,EAAE,EAAEf,KAAK,CAACgB,EAAN,GAAWhB,KAAK,CAACgB,EAAjB,GAAsB,EAA3F;AAA+F,IAAA,EAAE,EAAEhB,KAAK,CAACiB,EAAN,GAAWjB,KAAK,CAACiB,EAAjB,GAAsB,CAAzH;AAA4H,IAAA,EAAE,EAAEjB,KAAK,CAACkB,EAAN,GAAWlB,KAAK,CAACkB,EAAjB,GAAsB;AAAtJ,KACI;AAAK,IAAA,SAAS,EAAC,4DAAf;AAA4E,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAErB,aAAV;AAAyBsB,MAAAA,QAAQ,EAAE;AAAnC,KAAnF;AAAoI,IAAA,OAAO,EAAE,iBAACC,CAAD,EAAO;AAAEf,MAAAA,mBAAmB,CAAC,IAAD,CAAnB;AAA2B;AAAjL,KACI;AAAK,IAAA,GAAG,EAAC,0BAAT;AAAoC,IAAA,KAAK,EAAE;AAAEgB,MAAAA,KAAK,EAAExB,aAAa,GAAG,GAAzB;AAA8BqB,MAAAA,MAAM,EAAErB,aAAa,GAAG;AAAtD,KAA3C;AAAwG,IAAA,SAAS,EAAC;AAAlH,IADJ,EAEI;AAAK,IAAA,SAAS,EAAC,uEAAf;AAAuF,IAAA,KAAK,EAAE;AAAEyB,MAAAA,UAAU,EAAEzB,aAAa,GAAG,GAAhB,GAAsB;AAApC;AAA9F,2BAFJ,CADJ,CADJ,GAUI,IAZZ,EAeQG,KAAK,CAACuB,GAAN,CAAU,UAAUC,IAAV,EAAgBC,CAAhB,EAAmB;AACzB,WACI,MAAC,GAAD;AAAK,MAAA,GAAG,EAAE,YAAYA,CAAtB;AAAyB,MAAA,EAAE,EAAE1B,KAAK,CAACc,EAAN,GAAWd,KAAK,CAACc,EAAjB,GAAsB,CAAnD;AAAsD,MAAA,EAAE,EAAEd,KAAK,CAACe,EAAN,GAAWf,KAAK,CAACe,EAAjB,GAAsB,CAAhF;AAAmF,MAAA,EAAE,EAAEf,KAAK,CAACgB,EAAN,GAAWhB,KAAK,CAACgB,EAAjB,GAAsB,EAA7G;AAAiH,MAAA,EAAE,EAAEhB,KAAK,CAACiB,EAAN,GAAWjB,KAAK,CAACiB,EAAjB,GAAsB,CAA3I;AAA8I,MAAA,EAAE,EAAEjB,KAAK,CAACkB,EAAN,GAAWlB,KAAK,CAACkB,EAAjB,GAAsB;AAAxK,OACI,MAAC,QAAD;AAAU,MAAA,MAAM,EAAEpB,aAAlB;AAAiC,MAAA,IAAI,EAAE2B,IAAvC;AAA6C,MAAA,OAAO,EAAE,iBAACA,IAAD,EAAU;AAAEf,QAAAA,eAAe,CAACe,IAAD,CAAf;AAAuBjB,QAAAA,cAAc,CAAC,IAAD,CAAd;AAAuB;AAAhH,MADJ,CADJ;AAKH,GAND,CAfR,EAwBQ,CAACR,KAAK,CAACa,eAAP,IAA0BzB,gBAAgB,CAACa,KAAD,CAAhB,IAA2B,CAArD,GACI,MAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAa,IAAA,EAAE,EAAE,EAAjB;AAAqB,IAAA,EAAE,EAAE,EAAzB;AAA6B,IAAA,EAAE,EAAE,EAAjC;AAAqC,IAAA,EAAE,EAAE;AAAzC,KACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAA2B,IAAA,KAAK,EAAE;AAAEkB,MAAAA,MAAM,EAAE;AAAV;AAAlC,KACI,MAAC,KAAD,OADJ,CADJ,CADJ,GAOI,IA/BZ,CADJ,EAmCI,MAAC,cAAD;AACI,IAAA,WAAW,EAAEd,gBADjB;AAEI,IAAA,iBAAiB,EAAE,2BAACgB,CAAD,EAAO;AAAEf,MAAAA,mBAAmB,CAACe,CAAD,CAAnB;AAAwB,KAFxD;AAGI,IAAA,QAAQ,EAAE,WAHd;AAII,IAAA,YAAY,EAAE,sBAACM,IAAD,EAAU;AACpB,UAAI3B,KAAK,CAAC4B,YAAV,EAAwB;AACpB5B,QAAAA,KAAK,CAAC4B,YAAN,CAAmBD,IAAnB;AACH;AACJ;AARL,IAnCJ,EA6CI,MAAC,SAAD;AACI,IAAA,QAAQ,EAAE7C,CAAC,CAAC+C,IAAF,CAAO1B,SAAP,EAAkB;AAAE2B,MAAAA,MAAM,EAAErB,YAAY,CAACsB;AAAvB,KAAlB,CADd;AAEI,IAAA,gBAAgB,EAAE,0BAACC,KAAD,EAAQL,IAAR,EAAiB;AAC/B,UAAIM,YAAY,GAAG9B,SAAnB;;AACA,UAAI6B,KAAJ,EAAW;AACPC,QAAAA,YAAY,GAAGnD,CAAC,CAACoD,MAAF,CAASD,YAAT,EAAuB,CAACN,IAAD,CAAvB,CAAf;AACH,OAFD,MAEO;AACHM,QAAAA,YAAY,GAAGnD,CAAC,CAACqD,MAAF,CAASF,YAAT,EAAuB,UAAUG,IAAV,EAAgB;AAClD,iBAAOtD,CAAC,CAACuD,GAAF,CAAMD,IAAN,EAAY,CAAC,QAAD,CAAZ,KAA2BtD,CAAC,CAACuD,GAAF,CAAMV,IAAN,EAAY,CAAC,QAAD,CAAZ,CAAlC;AACH,SAFc,CAAf;AAGH;;AAED,UAAI3B,KAAK,CAACsC,iBAAV,EAA6B;AACzBtC,QAAAA,KAAK,CAACsC,iBAAN,CAAwBL,YAAxB;AACH;AACJ,KAfL;AAgBI,IAAA,WAAW,EAAE1B,WAhBjB;AAiBI,IAAA,iBAAiB,EAAE,2BAACc,CAAD,EAAO;AAAEb,MAAAA,cAAc,CAACa,CAAD,CAAd;AAAmBX,MAAAA,eAAe,CAAC,EAAD,CAAf;AAAqB,KAjBxE;AAkBI,IAAA,QAAQ,EAAE5B,CAAC,CAACyD,aAAF,CAAgB9B,YAAhB,KAAiC,CAAC3B,CAAC,CAAC0D,OAAF,CAAU/B,YAAV,CAAlC,GAA4DA,YAA5D,GAA2E,EAlBzF;AAmBI,IAAA,YAAY,EAAE,sBAACkB,IAAD,EAAU;AACpB,UAAI3B,KAAK,CAACyC,YAAV,EAAwB;AACpBzC,QAAAA,KAAK,CAACyC,YAAN,CAAmBd,IAAnB;AACH;AACJ;AAvBL,IA7CJ,CADJ;AAyEH,CApGD;;GAAM5B,S;;KAAAA,S;;AAsGN,IAAM2C,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAC9BC,IAAAA,QAAQ,EAAED,KAAK,CAACC,QADc;AAE9BC,IAAAA,YAAY,EAAEF,KAAK,CAACE,YAFU;AAG9BC,IAAAA,GAAG,EAAEH,KAAK,CAACG,GAHmB;AAI9BC,IAAAA,IAAI,EAAEJ,KAAK,CAACI,IAJkB;AAK9BC,IAAAA,aAAa,EAAEL,KAAK,CAACK;AALS,GAAL;AAAA,CAA7B;;AASA,IAAMC,kBAAkB,GAAG;AACvBzD,EAAAA,gBAAgB,EAAEA,gBADK;AAEvBF,EAAAA,OAAO,EAAEA,OAFc;AAGvBC,EAAAA,SAAS,EAAEA;AAHY,CAA3B;AAKA,eAAeJ,OAAO,CAACuD,eAAD,EAAkBO,kBAAlB,CAAP,CAA6CrE,IAAI,CAACsE,MAAL,GAAcnE,UAAU,CAACgB,SAAD,CAAxB,CAA7C,CAAf","sourcesContent":["import { Col, Empty, Form, Row } from 'antd';\nimport _ from 'lodash';\nimport { withRouter } from 'next/router';\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { arrayLengthCount, notEmptyLength } from '../../common-function';\nimport {\n    loading,\n    loginMode, updateActiveMenu\n} from '../../redux/actions/app-actions';\nimport PostModal from '../carFreak/components/post-modal';\nimport WritePostModal from '../carFreak/components/write-post-modal';\nimport UserPost from './UserPost';\n\n\nvar moment = require('moment');\n\n\nconst defaultHeight = 100;\n\nconst UserPosts = (props) => {\n\n    const [posts, setPosts] = useState([]);\n    const [postLikes, setPostLikes] = useState([]);\n    const [writePostVisible, setWritePostVisible] = useState(false);\n    const [postVisible, setPostVisible] = useState(false);\n    const [selectedPost, setSelectedPost] = useState({});\n\n    useEffect(() => {\n\n        if (_.isArray(props.posts) && notEmptyLength(props.posts)) {\n            setPosts(props.posts)\n        } else {\n            setPosts([]);\n        }\n\n    }, [props.posts])\n\n    useEffect(() => {\n\n        if (_.isArray(props.postLikes) && notEmptyLength(props.postLikes)) {\n            setPostLikes(props.postLikes)\n        } else {\n            setPostLikes([]);\n        }\n    }, [props.postLikes])\n\n    return (\n        <React.Fragment>\n            <Row type='flex' gutter={props.gutter ? props.gutter : [10, 10]}>\n                {\n                    props.showAddPostCard ?\n                        <Col xs={props.xs ? props.xs : 24} sm={props.sm ? props.sm : 24} md={props.md ? props.md : 12} lg={props.lg ? props.lg : 6} xl={props.xl ? props.xl : 6}>\n                            <div className=\"width-100 background-white relative-wrapper cursor-pointer\" style={{ height: defaultHeight, position: 'relative' }} onClick={(e) => { setWritePostVisible(true) }}>\n                                <img src=\"/assets/upload_photo.png\" style={{ width: defaultHeight * 0.5, height: defaultHeight * 0.5 }} className='absolute-center' />\n                                <div className=\"flex-justify-center flex-items-align-center subtitle1 absolute-center\" style={{ paddingTop: defaultHeight * 0.5 + 30 }}>\n                                    POST / UPLOAD PHOTO\n                                </div>\n                            </div>\n                        </Col>\n                        :\n                        null\n                }\n                {\n                    posts.map(function (post, i) {\n                        return (\n                            <Col key={'colPost' + i} xs={props.xs ? props.xs : 8} sm={props.sm ? props.sm : 8} md={props.md ? props.md : 12} lg={props.lg ? props.lg : 6} xl={props.xl ? props.xl : 6}>\n                                <UserPost height={defaultHeight} post={post} onClick={(post) => { setSelectedPost(post); setPostVisible(true); }} />\n                            </Col>\n                        )\n                    })\n                }\n                {\n                    !props.showAddPostCard && arrayLengthCount(posts) <= 0 ?\n                        <Col xs={24} sm={24} md={24} lg={24} xl={24}>\n                            <div className=\"width-100\" style={{ height: 400 }}>\n                                <Empty></Empty>\n                            </div>\n                        </Col>\n                        :\n                        null\n                }\n            </Row>\n            <WritePostModal\n                visibleMode={writePostVisible}\n                changeVisibleMode={(e) => { setWritePostVisible(e) }}\n                chatType={'carfreaks'}\n                onCreatePost={(data) => {\n                    if (props.onCreatePost) {\n                        props.onCreatePost(data)\n                    }\n                }}\n            ></WritePostModal>\n            <PostModal\n                postLike={_.find(postLikes, { chatId: selectedPost._id })}\n                onPostLikeChange={(liked, data) => {\n                    let newPostLikes = postLikes;\n                    if (liked) {\n                        newPostLikes = _.concat(newPostLikes, [data]);\n                    } else {\n                        newPostLikes = _.filter(newPostLikes, function (like) {\n                            return _.get(like, ['chatId']) != _.get(data, ['chatId']);\n                        })\n                    }\n\n                    if (props.onUpdatePostLikes) {\n                        props.onUpdatePostLikes(newPostLikes);\n                    }\n                }}\n                visibleMode={postVisible}\n                changeVisibleMode={(e) => { setPostVisible(e); setSelectedPost({}) }}\n                chatInfo={_.isPlainObject(selectedPost) && !_.isEmpty(selectedPost) ? selectedPost : {}}\n                onUpdatePost={(data) => {\n                    if (props.onUpdatePost) {\n                        props.onUpdatePost(data);\n                    }\n                }}\n            />\n        </React.Fragment>\n    );\n}\n\nconst mapStateToProps = state => ({\n    sellCars: state.sellCars,\n    productsList: state.productsList,\n    app: state.app,\n    user: state.user,\n    sellerProfile: state.sellerProfile,\n});\n\n\nconst mapDispatchToProps = {\n    updateActiveMenu: updateActiveMenu,\n    loading: loading,\n    loginMode: loginMode,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Form.create()(withRouter(UserPosts)));"]},"metadata":{},"sourceType":"module"}