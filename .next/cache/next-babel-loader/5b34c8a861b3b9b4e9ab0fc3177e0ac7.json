{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Avatar, Col, Dropdown, Form, Input, Menu, message, Rate, Row, Select } from 'antd';\nimport _ from 'lodash';\nimport { withRouter } from 'next/router';\nimport React, { useEffect, useState } from 'react';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport ScrollContainer from 'react-indiana-drag-scroll';\nimport ReactPlayer from 'react-player';\nimport { connect } from 'react-redux';\nimport { isObject, notEmptyLength } from '../../common-function';\nimport LightBoxGallery from '../general/light-box-gallery';\nimport UserAvatar from '../general/UserAvatar';\nimport HideReviewButton from './HideReviewButton';\nimport RemoveReviewButton from './RemoveReviewButton';\nimport WriteReviewButton from './WriteReviewButton';\nconst {\n  TextArea\n} = Input;\nconst {\n  Option\n} = Select;\n\nvar moment = require('moment');\n\nconst containerRef = React.createRef();\n\nconst ReviewList = props => {\n  const {\n    0: reviews,\n    1: setReviews\n  } = useState([]);\n  const {\n    0: stop,\n    1: setStop\n  } = useState(false); //initial render\n\n  useEffect(() => {\n    if (notEmptyLength(props.data)) {\n      setStop(false); //Set up Ref for Text truncate\n\n      let data = props.data.map(item => {\n        item.textRef = React.createRef();\n        item.seeMore = false;\n        item.showText = false;\n        return item;\n      });\n      setReviews(data);\n    } else {\n      setReviews([]);\n    }\n  }, [props.data]);\n  useEffect(() => {\n    if (notEmptyLength(reviews)) {\n      if (!stop) {\n        checkForOverFlow();\n      }\n    }\n  });\n\n  function isEllipsisActive(e) {\n    //Use outside container width to compare span overflow width\n    if (!containerRef || !containerRef.current) {\n      return false;\n    } else {\n      return containerRef.current.clientWidth < e.clientWidth;\n    }\n  }\n\n  function checkForOverFlow() {\n    let done = true;\n    let data;\n\n    if (notEmptyLength(reviews)) {\n      if (reviews[0].textRef) {\n        data = reviews.map(function (item) {\n          if (item.textRef.current) {\n            item.seeMore = isEllipsisActive(item.textRef.current);\n          } else {\n            done = false;\n            item.seeMore = false;\n          }\n\n          return item;\n        });\n      }\n    }\n\n    if (done) {\n      setReviews(data);\n      setStop(done);\n    }\n  }\n\n  function updateRatings(rating) {\n    if (notEmptyLength(reviews)) {\n      let data = reviews.map(function (item) {\n        if (item._id == rating._id) {\n          item = rating;\n        }\n\n        return item;\n      });\n      setReviews(data);\n    }\n  }\n\n  function handleChange(e) {\n    if (props.handleChange) {\n      props.handleChange(e);\n    }\n  }\n\n  function handleError(e) {\n    message.error(e.message);\n  }\n\n  function isOwnReview(data) {\n    if (props.user.authenticated) {\n      if (isObject(data.reviewerId) && data.reviewerId._id == props.user.info.user._id) {\n        return true;\n      } else if (data.reviewerId == props.user.info.user._id) {\n        return true;\n      } else {\n        return false;\n      }\n    } else {\n      return false;\n    }\n  }\n\n  const menu = data => {\n    return isOwnReview(data) ? __jsx(Menu, null, __jsx(Menu.Item, null, __jsx(WriteReviewButton, {\n      data: data,\n      mode: \"edit\",\n      button: () => {\n        return __jsx(\"div\", null, __jsx(\"img\", {\n          src: \"https://img.icons8.com/color/24/000000/edit.png\",\n          style: {\n            display: 'inline-block',\n            width: \"100\"\n          }\n        }), __jsx(\"p\", {\n          style: {\n            display: 'inline-block',\n            marginLeft: '10px',\n            color: '#616161'\n          }\n        }, \"  Edit post \"));\n      },\n      handleSuccess: handleChange,\n      handleError: handleError\n    })), __jsx(Menu.Item, null, __jsx(RemoveReviewButton, {\n      id: data._id,\n      handleSuccess: handleChange,\n      button: () => {\n        return __jsx(\"div\", null, __jsx(\"img\", {\n          src: \"https://img.icons8.com/color/24/000000/delete-forever.png\",\n          style: {\n            display: 'inline-block',\n            width: \"100\"\n          }\n        }), __jsx(\"p\", {\n          style: {\n            display: 'inline-block',\n            marginLeft: '10px',\n            color: '#616161'\n          }\n        }, \" Remove post \"));\n      }\n    }))) : __jsx(Menu, null, __jsx(Menu.Item, null, __jsx(HideReviewButton, {\n      data: data,\n      button: () => {\n        return __jsx(\"div\", null, __jsx(\"img\", {\n          src: \"https://img.icons8.com/metro/24/F1C40F/sleep.png\",\n          style: {\n            display: 'inline-block',\n            width: \"100\",\n            color: 'yellow'\n          }\n        }), __jsx(\"p\", {\n          style: {\n            display: 'inline-block',\n            marginLeft: '10px',\n            color: '#616161'\n          }\n        }, \"  Not interested in this post \"));\n      },\n      handleSuccess: handleChange\n    })));\n  };\n\n  const _renderReviewList = data => {\n    let list = null;\n\n    if (notEmptyLength(data)) {\n      list = data.map(function (item, i) {\n        return __jsx(\"div\", {\n          key: 'divReview1' + i,\n          className: \"review1 relative-wrapper\"\n        }, __jsx(\"div\", {\n          className: \"flex-justify-start flex-items-align-start\"\n        }, __jsx(\"span\", {\n          className: \"d-inline-block margin-right-md\"\n        }, __jsx(UserAvatar, {\n          size: props.size || 50,\n          data: item.reviewerId\n        })), __jsx(\"span\", {\n          className: \"d-inline-block \"\n        }, __jsx(\"div\", {\n          className: \"flex-justify-start flex-items-align-center\"\n        }, __jsx(\"span\", {\n          className: \"subtitle-1 margin-right-md text-overflow-break font-weight-bold grey-darken-1\"\n        }, !item.reviewerId ? null : item.reviewerId.firstName + ' ' + item.reviewerId.lastName), item.state ? __jsx(\"span\", {\n          className: \"headline blue\"\n        }, item.state) : null), __jsx(\"div\", {\n          className: \"headline\"\n        }, moment(item.createdAt).format('D MMMM Y')), _.isPlainObject(_.get(item, ['carspecId'])) && !_.isEmpty(_.get(item, ['carspecId'])) ? __jsx(\"div\", {\n          className: \"flex-justify-start flex-items-align-center\"\n        }, props.renderCarspec ? props.renderCarspec(item) : __jsx(\"div\", {\n          className: \"font-weight-black padding-top-md subtitle1\"\n        }, _.trim(`${_.get(item, 'carspecId.make') || ''} ${_.get(item, 'carspecId.model') || ''} ${_.get(item, 'carspecId.variant') || ''}`))) : null)), __jsx(\"span\", {\n          className: \"d-inline-block \",\n          style: {\n            position: 'absolute',\n            top: 10,\n            right: 10\n          }\n        }, __jsx(Dropdown, {\n          overlay: menu(item),\n          placement: \"bottomRight\"\n        }, __jsx(\"a\", {\n          className: \"ant-dropdown-link \",\n          onClick: e => e.preventDefault()\n        }, __jsx(\"img\", {\n          src: \"https://img.icons8.com/material-rounded/24/000000/menu-2.png\"\n        })))), __jsx(\"div\", {\n          className: \"flex-justify-start flex-items-align-center\"\n        }, props.renderRate ? props.renderRate(item) : __jsx(\"div\", null, __jsx(Rate, {\n          allowHalf: true,\n          value: item.rating,\n          disabled: true\n        }))), item.title && item.comment ? [__jsx(\"div\", {\n          className: \"subtitle1 margin-y-sm\"\n        }, item.title), __jsx(\"div\", {\n          style: {\n            overflowX: \"hidden\",\n            maxWidth: '97%'\n          },\n          ref: containerRef\n        }, __jsx(\"span\", {\n          ref: item.textRef,\n          className: item.showText ? \"headline text-overflow-break d-inline-block\" : \"headline   text-truncate d-inline-block font-weight-thin \"\n        }, item.comment)), __jsx(\"div\", null, item.seeMore && !item.showText ? __jsx(\"span\", null, __jsx(\"a\", {\n          onClick: () => {\n            updateRatings(_objectSpread(_objectSpread({}, item), {}, {\n              showText: true\n            }));\n          }\n        }, \"...See More\")) : null, item.seeMore && item.showText ? __jsx(\"span\", null, __jsx(\"a\", {\n          onClick: () => {\n            updateRatings(_objectSpread(_objectSpread({}, item), {}, {\n              showText: false\n            }));\n          }\n        }, \"...See Less\")) : null)] : null, notEmptyLength(item.images) || notEmptyLength(item.videos) ? __jsx(\"div\", {\n          key: \"imageDiv\",\n          className: \"margin-top-md\"\n        }, notEmptyLength(item.videos) ? item.videos.map(function (video, i) {\n          return __jsx(\"span\", {\n            key: 'videoDiv' + i,\n            className: \"d-inline-block margin-sm flex-items-no-shrink \",\n            style: {\n              width: \"150px\",\n              height: '100px',\n              border: 'solid',\n              borderColor: 'rgba(150, 150, 150, 0.5)'\n            }\n          }, __jsx(ReactPlayer, {\n            width: \"100%\",\n            height: \"100%\",\n            controls: true,\n            url: video.url\n          }));\n        }) : null, notEmptyLength(item.images) ? __jsx(LightBoxGallery, {\n          images: _.compact(_.map(item.images, function (v) {\n            return _.get(v, ['url']) || null;\n          }))\n        }, (state, setCurrentIndex, setVisible) => {\n          return __jsx(Scrollbars, {\n            style: {\n              width: '100%',\n              height: '120px'\n            },\n            autoHide: true,\n            autoHeight: true\n          }, __jsx(\"div\", {\n            className: \"flex-justify-start flex-items-align-center fill-parent\"\n          }, _.map(state.images, function (v, index) {\n            return __jsx(\"span\", {\n              className: \"d-inline-block margin-right-md cursor-pointer\",\n              onClick: e => {\n                setCurrentIndex(index);\n                setVisible(true);\n              }\n            }, __jsx(\"img\", {\n              src: v,\n              style: {\n                width: 100,\n                height: 100\n              },\n              className: \" img-cover\"\n            }));\n          })));\n        }) : null) : null);\n      });\n    }\n\n    return list;\n  };\n\n  return __jsx(React.Fragment, null, _renderReviewList(reviews));\n};\n\nconst mapStateToProps = state => ({\n  app: state.app,\n  user: state.user\n});\n\nconst mapDispatchToProps = {};\nexport default connect(mapStateToProps, mapDispatchToProps)(Form.create()(withRouter(ReviewList)));","map":{"version":3,"sources":["/Users/faraheen/ccar-cms-next-mobile/components/rating/ReviewList2.jsx"],"names":["Avatar","Col","Dropdown","Form","Input","Menu","message","Rate","Row","Select","_","withRouter","React","useEffect","useState","Scrollbars","ScrollContainer","ReactPlayer","connect","isObject","notEmptyLength","LightBoxGallery","UserAvatar","HideReviewButton","RemoveReviewButton","WriteReviewButton","TextArea","Option","moment","require","containerRef","createRef","ReviewList","props","reviews","setReviews","stop","setStop","data","map","item","textRef","seeMore","showText","checkForOverFlow","isEllipsisActive","e","current","clientWidth","done","updateRatings","rating","_id","handleChange","handleError","error","isOwnReview","user","authenticated","reviewerId","info","menu","display","width","marginLeft","color","_renderReviewList","list","i","size","firstName","lastName","state","createdAt","format","isPlainObject","get","isEmpty","renderCarspec","trim","position","top","right","preventDefault","renderRate","title","comment","overflowX","maxWidth","images","videos","video","height","border","borderColor","url","compact","v","setCurrentIndex","setVisible","index","mapStateToProps","app","mapDispatchToProps","create"],"mappings":"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","sourcesContent":["import { Avatar, Col, Dropdown, Form, Input, Menu, message, Rate, Row, Select } from 'antd';\nimport _ from 'lodash';\nimport { withRouter } from 'next/router';\nimport React, { useEffect, useState } from 'react';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport ScrollContainer from 'react-indiana-drag-scroll';\nimport ReactPlayer from 'react-player';\nimport { connect } from 'react-redux';\nimport { isObject, notEmptyLength } from '../../common-function';\nimport LightBoxGallery from '../general/light-box-gallery';\nimport UserAvatar from '../general/UserAvatar';\nimport HideReviewButton from './HideReviewButton';\nimport RemoveReviewButton from './RemoveReviewButton';\nimport WriteReviewButton from './WriteReviewButton';\n\n\n\nconst { TextArea } = Input;\nconst { Option } = Select;\n\nvar moment = require('moment')\n\n\n\nconst containerRef = React.createRef();\n\nconst ReviewList = (props) => {\n\n\n\n    const [reviews, setReviews] = useState([]);\n    const [stop, setStop] = useState(false);\n    //initial render\n    useEffect(() => {\n\n        if (notEmptyLength(props.data)) {\n            setStop(false);\n            //Set up Ref for Text truncate\n            let data = props.data.map((item) => {\n                item.textRef = React.createRef();\n                item.seeMore = false;\n                item.showText = false;\n                return item;\n            })\n\n            setReviews(data);\n        } else {\n            setReviews([]);\n        }\n    }, [props.data])\n\n\n    useEffect(() => {\n        if (notEmptyLength(reviews)) {\n            if (!stop) {\n                checkForOverFlow();\n            }\n        }\n\n    })\n\n\n\n    function isEllipsisActive(e) {\n\n        //Use outside container width to compare span overflow width\n        if (!containerRef || !containerRef.current) {\n            return false;\n        } else {\n            return (containerRef.current.clientWidth < e.clientWidth);\n        }\n    }\n\n    function checkForOverFlow() {\n        let done = true;\n        let data;\n        if (notEmptyLength(reviews)) {\n\n            if (reviews[0].textRef) {\n                data = reviews.map(function (item) {\n                    if (item.textRef.current) {\n                        item.seeMore = isEllipsisActive(item.textRef.current);\n                    } else {\n                        done = false;\n                        item.seeMore = false;\n                    }\n                    return item;\n                });\n            }\n        }\n\n\n        if (done) {\n            setReviews(data);\n            setStop(done);\n        }\n    }\n\n    function updateRatings(rating) {\n        if (notEmptyLength(reviews)) {\n            let data = reviews.map(function (item) {\n                if (item._id == rating._id) {\n                    item = rating;\n                }\n                return item;\n            })\n            setReviews(data);\n        }\n    }\n\n    function handleChange(e) {\n        if (props.handleChange) {\n            props.handleChange(e);\n        }\n    }\n\n    function handleError(e) {\n        message.error(e.message);\n    }\n\n    function isOwnReview(data) {\n        if (props.user.authenticated) {\n            if (isObject(data.reviewerId) && data.reviewerId._id == props.user.info.user._id) {\n                return true;\n            } else if (data.reviewerId == props.user.info.user._id) {\n                return true;\n            } else {\n                return false;\n            }\n        } else {\n            return false;\n        }\n    }\n\n\n\n    const menu = (data) => {\n        return (\n            isOwnReview(data) ?\n                <Menu>\n                    <Menu.Item>\n                        <WriteReviewButton data={data} mode=\"edit\" button={() => {\n                            return (\n                                <div>\n                                    <img src=\"https://img.icons8.com/color/24/000000/edit.png\" style={{ display: 'inline-block', width: \"100\" }} />\n                                    <p style={{ display: 'inline-block', marginLeft: '10px', color: '#616161' }}>  Edit post </p>\n                                </div>\n                            )\n                        }}\n                            handleSuccess={handleChange}\n                            handleError={handleError}\n                        />\n\n                    </Menu.Item>\n                    <Menu.Item>\n                        <RemoveReviewButton id={data._id} handleSuccess={handleChange} button={\n                            () => {\n                                return (\n                                    <div>\n                                        <img src=\"https://img.icons8.com/color/24/000000/delete-forever.png\" style={{ display: 'inline-block', width: \"100\" }} />\n                                        <p style={{ display: 'inline-block', marginLeft: '10px', color: '#616161' }}> Remove post </p>\n                                    </div>\n                                );\n                            }\n                        } />\n                    </Menu.Item>\n\n                </Menu>\n                :\n                <Menu>\n                    <Menu.Item>\n                        <HideReviewButton data={data} button={() => {\n                            return (\n                                <div>\n                                    <img src=\"https://img.icons8.com/metro/24/F1C40F/sleep.png\" style={{ display: 'inline-block', width: \"100\", color: 'yellow' }} />\n                                    <p style={{ display: 'inline-block', marginLeft: '10px', color: '#616161' }}>  Not interested in this post </p>\n                                </div>\n                            )\n                        }}\n                            handleSuccess={handleChange}\n                        />\n                    </Menu.Item>\n                    {/* <Menu.Item>\n                        <ReportReviewButton data={data}\n                            reportButton={() => {\n                                return (\n                                    <div>\n                                        <img src=\"https://img.icons8.com/ios-filled/24/E74C3C/flag.png\" style={{ display: 'inline-block', width: \"100\" }} />\n                                        <p style={{ display: 'inline-block', marginLeft: '10px' }}>  Report this post </p>\n                                    </div>\n                                )\n                            }}\n                            reportedButton={() => {\n                                return (\n                                    <div>\n                                        <img src=\"https://img.icons8.com/ios-filled/24/E74C3C/flag.png\" style={{ display: 'inline-block', width: \"100\" }} />\n                                        <p style={{ display: 'inline-block', marginLeft: '10px' }}>  Reported </p>\n                                    </div>\n                                )\n                            }}\n                            handleSuccess={handleChange}\n                        />\n                    </Menu.Item> */}\n                </Menu>\n        );\n    }\n\n    const _renderReviewList = (data) => {\n        let list = null;\n\n        if (notEmptyLength(data)) {\n            list = data.map(function (item, i) {\n                return (\n                    <div key={'divReview1' + i} className=\"review1 relative-wrapper\" >\n                        <div className=\"flex-justify-start flex-items-align-start\">\n                            <span className='d-inline-block margin-right-md' >\n                                <UserAvatar size={props.size || 50} data={item.reviewerId}></UserAvatar>\n                            </span>\n                            <span className='d-inline-block ' >\n                                <div className=\"flex-justify-start flex-items-align-center\">\n                                    <span className=\"subtitle-1 margin-right-md text-overflow-break font-weight-bold grey-darken-1\">\n                                        {!item.reviewerId ? null : item.reviewerId.firstName + ' ' + item.reviewerId.lastName}\n                                    </span>\n                                    {\n                                        item.state ?\n                                            <span className=\"headline blue\">\n                                                {item.state}\n                                            </span>\n                                            :\n                                            null\n                                    }\n                                </div>\n                                <div className=\"headline\">\n                                    {moment(item.createdAt).format('D MMMM Y')}\n                                </div>\n                                {\n                                    _.isPlainObject(_.get(item, ['carspecId'])) && !_.isEmpty(_.get(item, ['carspecId'])) ?\n                                        <div className=\"flex-justify-start flex-items-align-center\">\n                                            {\n                                                props.renderCarspec ?\n                                                    props.renderCarspec(item)\n                                                    :\n                                                    <div className=\"font-weight-black padding-top-md subtitle1\">{_.trim(`${_.get(item, 'carspecId.make') || ''} ${_.get(item, 'carspecId.model') || ''} ${_.get(item, 'carspecId.variant') || ''}`)}</div>\n                                            }\n                                        </div>\n                                        :\n                                        null\n                                }\n                            </span>\n                        </div>\n\n                        <span className='d-inline-block ' style={{ position: 'absolute', top: 10, right: 10 }} >\n                            <Dropdown overlay={menu(item)} placement=\"bottomRight\">\n                                <a className=\"ant-dropdown-link \" onClick={e => e.preventDefault()}>\n                                    <img src=\"https://img.icons8.com/material-rounded/24/000000/menu-2.png\" />\n                                </a>\n                            </Dropdown>\n                        </span>\n\n                        <div className=\"flex-justify-start flex-items-align-center\">\n                                    {\n                                        props.renderRate ?\n                                            props.renderRate(item)\n                                            :\n                                            <div><Rate allowHalf value={item.rating} disabled /></div>\n                                    }\n                                </div>\n                                {\n                                    item.title && item.comment ?\n                                        [\n                                            <div className=\"subtitle1 margin-y-sm\">\n                                                {item.title}\n                                            </div>,\n                                            <div style={{ overflowX: \"hidden\", maxWidth: '97%' }} ref={containerRef}>\n                                                <span ref={item.textRef} className={item.showText ? \"headline text-overflow-break d-inline-block\" : \"headline   text-truncate d-inline-block font-weight-thin \"}>\n                                                    {item.comment}\n                                                </span>\n                                            </div>,\n                                            <div>\n                                                {\n                                                    item.seeMore && !item.showText ?\n                                                        <span><a onClick={() => { updateRatings({ ...item, showText: true }) }}>...See More</a></span>\n                                                        :\n                                                        null\n                                                }\n                                                {\n                                                    item.seeMore && item.showText ?\n                                                        <span><a onClick={() => { updateRatings({ ...item, showText: false }) }}>...See Less</a></span>\n                                                        :\n                                                        null\n                                                }\n                                            </div>\n                                        ]\n                                        :\n                                        null\n                                }\n                                {\n                                    notEmptyLength(item.images) || notEmptyLength(item.videos) ?\n                                        <div key='imageDiv' className=\"margin-top-md\">\n                                            {\n                                                notEmptyLength(item.videos) ?\n                                                    item.videos.map(function (video, i) {\n                                                        return (\n                                                            <span key={'videoDiv' + i} className=\"d-inline-block margin-sm flex-items-no-shrink \" style={{ width: \"150px\", height: '100px', border: 'solid', borderColor: 'rgba(150, 150, 150, 0.5)' }}>\n                                                                <ReactPlayer width='100%' height=\"100%\" controls url={video.url} />\n                                                            </span>\n                                                        )\n                                                    })\n                                                    :\n                                                    null\n                                            }\n                                            {\n                                                notEmptyLength(item.images) ?\n                                                    <LightBoxGallery images={_.compact(_.map(item.images, function (v) {\n                                                        return _.get(v, ['url']) || null;\n                                                    }))}>\n                                                        {\n                                                            (state, setCurrentIndex, setVisible) => {\n                                                                return (\n                                                                    <Scrollbars style={{ width: '100%', height: '120px' }} autoHide autoHeight>\n                                                                        <div className=\"flex-justify-start flex-items-align-center fill-parent\">\n                                                                            {\n                                                                                _.map(state.images, function (v, index) {\n                                                                                    return <span className='d-inline-block margin-right-md cursor-pointer' onClick={(e) => { setCurrentIndex(index); setVisible(true) }} >\n                                                                                        <img src={v} style={{ width: 100, height: 100 }} className=\" img-cover\" />\n                                                                                    </span>\n                                                                                })\n                                                                            }\n                                                                        </div>\n                                                                    </Scrollbars>\n                                                                )\n                                                            }\n                                                        }\n                                                    </LightBoxGallery>\n                                                    :\n                                                    null\n                                            }\n                                        </div>\n                                        :\n                                        null\n                                }\n                    </div >\n\n                );\n            })\n        }\n\n\n        return list;\n    }\n\n    return (\n        <React.Fragment>\n            {_renderReviewList(reviews)}\n        </React.Fragment>\n    );\n}\n\n\nconst mapStateToProps = state => ({\n    app: state.app,\n    user: state.user,\n});\n\n\nconst mapDispatchToProps = {\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Form.create()(withRouter(ReviewList)));"]},"metadata":{},"sourceType":"module"}