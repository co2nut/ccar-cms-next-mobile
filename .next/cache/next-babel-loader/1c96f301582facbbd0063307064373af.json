{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport _ from 'lodash';\nimport axios from 'axios';\nimport client from '../feathers';\nimport { isValidNumber, notEmptyLength, convertToRangeFormat, convertRangeFormatBack, convertFilterRange, objectRemoveEmptyValue } from '../common-function';\nconst availableOptions = ['make', 'model', 'state', 'area', 'bodyType', 'color', 'fuelType'];\nconst PAGESIZE = 30;\n\nconst distinctArr = (value, index, self) => {\n  return self.indexOf(value) === index;\n};\n\nexport default async function (modal, data) {\n  if (_.isArray(modal) && !_.isEmpty(modal)) {\n    modal = _.intersection(modal, availableOptions) || [];\n  } else if (_.isString(modal)) {\n    modal = _.compact([_.find(availableOptions, modal)]);\n  } else {\n    return {};\n  }\n\n  let andFilter = {\n    $and: []\n  };\n\n  if (_.isArray(modal) && !_.isEmpty(modal)) {\n    if (!_.has(data, ['filterGroup'])) {\n      data.filterGroup = {};\n    } else {\n      data.filterGroup = _.cloneDeep(data.filterGroup);\n    }\n\n    if (notEmptyLength(data.filterGroup) && notEmptyLength(data.filterGroup.yearRange)) {\n      data.filterGroup.yearRange = convertToRangeFormat(data.filterGroup.yearRange);\n      data.filterGroup.yearRange = convertFilterRange(data.filterGroup.yearRange, 'carspec.year');\n\n      if (notEmptyLength(data.filterGroup.yearRange)) {\n        andFilter.$and = [...andFilter.$and, ...data.filterGroup.yearRange];\n        data.filterGroup = Object.assign(data.filterGroup, andFilter);\n      }\n\n      delete data.filterGroup.yearRange;\n    }\n\n    if (notEmptyLength(data.filterGroup) && notEmptyLength(data.filterGroup.priceRange)) {\n      data.filterGroup.priceRange = convertToRangeFormat(data.filterGroup.priceRange);\n      data.filterGroup.priceRange = convertFilterRange(data.filterGroup.priceRange, 'searchPrice');\n\n      if (notEmptyLength(data.filterGroup.priceRange)) {\n        andFilter.$and = [...andFilter.$and, ...data.filterGroup.priceRange];\n        data.filterGroup = Object.assign(data.filterGroup, andFilter);\n      }\n\n      delete data.filterGroup.priceRange;\n    }\n\n    if (notEmptyLength(data.filterGroup) && notEmptyLength(data.filterGroup.mileageRange)) {\n      data.filterGroup.mileageRange = convertToRangeFormat(data.filterGroup.mileageRange);\n      data.filterGroup.mileageRange = convertFilterRange(data.filterGroup.mileageRange, 'mileageFilter');\n\n      if (notEmptyLength(data.filterGroup.mileageRange)) {\n        andFilter.$and = [...andFilter.$and, ...data.filterGroup.mileageRange];\n        data.filterGroup = Object.assign(data.filterGroup, andFilter);\n      }\n\n      delete data.filterGroup.mileageRange;\n    }\n\n    if (notEmptyLength(data.filterGroup) && notEmptyLength(data.filterGroup.engineCapacityRange)) {\n      data.filterGroup.engineCapacityRange = convertRangeFormatBack(data.filterGroup.engineCapacityRange);\n      data.filterGroup.engineCapacityRange = convertFilterRange(data.filterGroup.engineCapacityRange, 'carspec.engineCapacity');\n\n      if (notEmptyLength(data.filterGroup.engineCapacityRange)) {\n        andFilter.$and = [...andFilter.$and, ...data.filterGroup.engineCapacityRange];\n        data.filterGroup = Object.assign(data.filterGroup, andFilter);\n      }\n\n      delete data.filterGroup.engineCapacityRange;\n    }\n\n    data.filterGroup = objectRemoveEmptyValue(data.filterGroup);\n    let match = {\n      $match: _objectSpread({}, data.filterGroup)\n    };\n    let promises = [];\n\n    _.forEach(modal, function (modal) {\n      promises.push(axios.get(`${client.io.io.uri}brandFilterTotalV3`, {\n        params: {\n          filterType: modal,\n          match\n        }\n      }));\n    });\n\n    return await Promise.all(promises).then(responses => {\n      if (_.isArray(responses) && !_.isEmpty(responses)) {\n        let options = {};\n\n        _.forEach(responses, function (response, index) {\n          options[`${modal[index]}List`] = response.data.uniqueInfo[`${modal[index]}List`];\n        });\n\n        return options;\n      }\n    }).catch(err => {\n      return {}; // message.error(err.message);\n    });\n  } else {\n    return {};\n  }\n}","map":{"version":3,"sources":["/Users/faraheen/ccar-cms-next-mobile/api/brandFilterTotal.js"],"names":["_","axios","client","isValidNumber","notEmptyLength","convertToRangeFormat","convertRangeFormatBack","convertFilterRange","objectRemoveEmptyValue","availableOptions","PAGESIZE","distinctArr","value","index","self","indexOf","modal","data","isArray","isEmpty","intersection","isString","compact","find","andFilter","$and","has","filterGroup","cloneDeep","yearRange","Object","assign","priceRange","mileageRange","engineCapacityRange","match","$match","promises","forEach","push","get","io","uri","params","filterType","Promise","all","then","responses","options","response","uniqueInfo","catch","err"],"mappings":"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","sourcesContent":["import _ from 'lodash'\nimport axios from 'axios';\nimport client from '../feathers'\nimport { isValidNumber, notEmptyLength, convertToRangeFormat, convertRangeFormatBack, convertFilterRange, objectRemoveEmptyValue } from '../common-function';\nconst availableOptions = ['make', 'model', 'state', 'area', 'bodyType', 'color', 'fuelType'];\nconst PAGESIZE = 30;\nconst distinctArr = (value, index, self) => {\n    return self.indexOf(value) === index\n}\n\nexport default async function (modal, data) {\n\n    if (_.isArray(modal) && !_.isEmpty(modal)) {\n        modal = _.intersection(modal, availableOptions) || [];\n    } else if (_.isString(modal)) {\n        modal = _.compact([_.find(availableOptions, modal)])\n    } else {\n        return {};\n    }\n\n    let andFilter = { $and: [] }\n\n    if (_.isArray(modal) && !_.isEmpty(modal)) {\n\n        if (!_.has(data, ['filterGroup'])) {\n            data.filterGroup = {};\n        } else {\n            data.filterGroup = _.cloneDeep(data.filterGroup)\n        }\n\n        if (notEmptyLength(data.filterGroup) && notEmptyLength(data.filterGroup.yearRange)) {\n            data.filterGroup.yearRange = convertToRangeFormat(data.filterGroup.yearRange);\n            data.filterGroup.yearRange = convertFilterRange(data.filterGroup.yearRange, 'carspec.year')\n            if (notEmptyLength(data.filterGroup.yearRange)) {\n                andFilter.$and = [...andFilter.$and, ...data.filterGroup.yearRange]\n                data.filterGroup = Object.assign(data.filterGroup, andFilter)\n            }\n            delete data.filterGroup.yearRange;\n        }\n\n        if (notEmptyLength(data.filterGroup) && notEmptyLength(data.filterGroup.priceRange)) {\n            data.filterGroup.priceRange = convertToRangeFormat(data.filterGroup.priceRange);\n            data.filterGroup.priceRange = convertFilterRange(data.filterGroup.priceRange, 'searchPrice')\n            if (notEmptyLength(data.filterGroup.priceRange)) {\n                andFilter.$and = [...andFilter.$and, ...data.filterGroup.priceRange]\n                data.filterGroup = Object.assign(data.filterGroup, andFilter)\n            }\n            delete data.filterGroup.priceRange;\n        }\n\n        if (notEmptyLength(data.filterGroup) && notEmptyLength(data.filterGroup.mileageRange)) {\n            data.filterGroup.mileageRange = convertToRangeFormat(data.filterGroup.mileageRange);\n            data.filterGroup.mileageRange = convertFilterRange(data.filterGroup.mileageRange, 'mileageFilter')\n            if (notEmptyLength(data.filterGroup.mileageRange)) {\n                andFilter.$and = [...andFilter.$and, ...data.filterGroup.mileageRange]\n                data.filterGroup = Object.assign(data.filterGroup, andFilter)\n            }\n            delete data.filterGroup.mileageRange;\n        }\n\n        if (notEmptyLength(data.filterGroup) && notEmptyLength(data.filterGroup.engineCapacityRange)) {\n            data.filterGroup.engineCapacityRange = convertRangeFormatBack(data.filterGroup.engineCapacityRange);\n            data.filterGroup.engineCapacityRange = convertFilterRange(data.filterGroup.engineCapacityRange, 'carspec.engineCapacity')\n            if (notEmptyLength(data.filterGroup.engineCapacityRange)) {\n                andFilter.$and = [...andFilter.$and, ...data.filterGroup.engineCapacityRange]\n                data.filterGroup = Object.assign(data.filterGroup, andFilter)\n            }\n            delete data.filterGroup.engineCapacityRange;\n        }\n\n        data.filterGroup = objectRemoveEmptyValue(data.filterGroup);\n        let match = { $match: { ...data.filterGroup } }\n \n        let promises = [];\n        _.forEach(modal, function (modal) {\n            promises.push(\n                axios.get(`${client.io.io.uri}brandFilterTotalV3`, {\n                    params: { filterType: modal, match },\n                })\n            )\n        })\n\n        return await Promise.all(promises).then((responses) => {\n            if (_.isArray(responses) && !_.isEmpty((responses))) {\n                let options = {}\n                _.forEach(responses, function (response, index) {\n                    options[`${modal[index]}List`] = response.data.uniqueInfo[`${modal[index]}List`];\n                })\n\n             \n                return options;\n\n            }\n        }).catch((err) => {\n            return {};\n            // message.error(err.message);\n        })\n    } else {\n        return {};\n    }\n\n}"]},"metadata":{},"sourceType":"module"}