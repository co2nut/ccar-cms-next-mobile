{"ast":null,"code":"var _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport 'antd';\nimport _ from 'lodash';\nimport React, { useEffect, useState } from 'react';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport Lightbox from 'react-image-lightbox';\nimport { connect } from 'react-redux';\nimport { Form } from '@ant-design/compatible';\nimport { isValidNumber } from '../../common-function';\nimport WindowScrollDisableWrapper from './WindowScrollDisableWrapper';\n\nvar LightBoxGallery = function LightBoxGallery(props) {\n  _s();\n\n  var _useState = useState(false),\n      visible = _useState[0],\n      setVisible = _useState[1];\n\n  var _useState2 = useState(0),\n      currentIndex = _useState2[0],\n      setCurrentIndex = _useState2[1];\n\n  var _useState3 = useState(),\n      images = _useState3[0],\n      setImages = _useState3[1];\n\n  var _useState4 = useState(false),\n      inited = _useState4[0],\n      setInited = _useState4[1];\n\n  useEffect(function () {\n    if (_.isArray(props.images) && !_.isEmpty(props.images)) {\n      setImages(props.images);\n    } else {\n      setImages([]);\n    }\n  }, [props.images]);\n  useEffect(function () {\n    if (_.isArray(images) && !_.isEmpty(images)) {\n      if (props.onChange) {\n        props.onChange(currentIndex, images[currentIndex]);\n      }\n    }\n  }, [currentIndex]);\n  useEffect(function () {\n    if (isValidNumber(parseInt(props.currentIndex))) {\n      setCurrentIndex(props.currentIndex);\n    }\n  }, [props.currentIndex]);\n  return __jsx(React.Fragment, null, props.children ? props.children({\n    images: images,\n    currentIndex: currentIndex,\n    visible: visible\n  }, setCurrentIndex, setVisible) : __jsx(Scrollbars, {\n    style: {\n      width: '100%',\n      height: '100px'\n    }\n  }, __jsx(\"div\", {\n    className: \"flex-justify-start flex-items-align-center fill-parent\"\n  }, _.map(images, function (v, index) {\n    return __jsx(\"span\", {\n      className: \"d-inline-block margin-right-md cursor-pointer\",\n      onClick: function onClick(e) {\n        setCurrentIndex(index);\n        setVisible(true);\n      }\n    }, __jsx(\"img\", {\n      src: v,\n      style: {\n        width: props.size || 70,\n        height: props.size || 70\n      }\n    }));\n  }))), visible && __jsx(Lightbox, {\n    mainSrc: images[currentIndex],\n    nextSrc: images[(currentIndex + 1) % images.length],\n    prevSrc: images[(currentIndex + images.length - 1) % images.length],\n    onCloseRequest: function onCloseRequest() {\n      setTimeout(function () {\n        setVisible(false);\n      }, 500);\n    },\n    onMovePrevRequest: function onMovePrevRequest() {\n      setCurrentIndex((currentIndex + images.length - 1) % images.length);\n    },\n    onMoveNextRequest: function onMoveNextRequest() {\n      setCurrentIndex((currentIndex + 1) % images.length);\n    }\n  }));\n};\n\n_s(LightBoxGallery, \"s2vDZI1DzXJL9YYpBizkEKKL9xw=\");\n\n_c = LightBoxGallery;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    app: state.app,\n    user: state.user\n  };\n};\n\nvar mapDispatchToProps = {};\nexport default connect(mapStateToProps, mapDispatchToProps)(Form.create()(LightBoxGallery));\n\nvar _c;\n\n$RefreshReg$(_c, \"LightBoxGallery\");","map":{"version":3,"sources":["/Users/faraheen/ccar-cms-next-mobile/components/general/light-box-gallery.jsx"],"names":["_","React","useEffect","useState","Scrollbars","Lightbox","connect","Form","isValidNumber","WindowScrollDisableWrapper","LightBoxGallery","props","visible","setVisible","currentIndex","setCurrentIndex","images","setImages","inited","setInited","isArray","isEmpty","onChange","parseInt","children","width","height","map","v","index","e","size","length","setTimeout","mapStateToProps","state","app","user","mapDispatchToProps","create"],"mappings":"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","sourcesContent":["import { } from 'antd';\nimport _ from 'lodash';\nimport React, { useEffect, useState } from 'react';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport Lightbox from 'react-image-lightbox';\nimport { connect } from 'react-redux';\nimport { Form } from '@ant-design/compatible';\nimport { isValidNumber } from '../../common-function';\nimport WindowScrollDisableWrapper from './WindowScrollDisableWrapper';\n\n\nconst LightBoxGallery = (props) => {\n\n    const [visible, setVisible] = useState(false)\n    const [currentIndex, setCurrentIndex] = useState(0);\n    const [images, setImages] = useState()\n    const [inited, setInited] = useState(false)\n\n\n    useEffect(() => {\n        if (_.isArray(props.images) && !_.isEmpty(props.images)) {\n            setImages(props.images);\n        } else {\n            setImages([]);\n        }\n    }, [props.images])\n\n    useEffect(() => {\n        if (_.isArray(images) && !_.isEmpty(images)) {\n            if (props.onChange) {\n                props.onChange(currentIndex, images[currentIndex]);\n            }\n        }\n    }, [currentIndex])\n\n    useEffect(() => {\n        if (isValidNumber(parseInt(props.currentIndex))) {\n            setCurrentIndex(props.currentIndex)\n        }\n    }, [props.currentIndex])\n\n    return (\n\n        <React.Fragment>\n            {/* <WindowScrollDisableWrapper disabled={inited ? visible : null}> */}\n                {\n                    props.children ?\n                        props.children({ images, currentIndex, visible }, setCurrentIndex, setVisible)\n                        :\n                        <Scrollbars style={{ width: '100%', height: '100px' }}>\n                            <div className=\"flex-justify-start flex-items-align-center fill-parent\">\n                                {\n                                    _.map(images, function (v, index) {\n                                        return <span className='d-inline-block margin-right-md cursor-pointer' onClick={(e) => { setCurrentIndex(index); setVisible(true) }} >\n                                            <img src={v} style={{ width: props.size || 70, height: props.size || 70 }} />\n                                        </span>\n                                    })\n                                }\n                            </div>\n                        </Scrollbars>\n                }\n                {visible && (\n                    <Lightbox\n                        mainSrc={images[currentIndex]}\n                        nextSrc={images[(currentIndex + 1) % images.length]}\n                        prevSrc={images[(currentIndex + images.length - 1) % images.length]}\n                        onCloseRequest={() => {\n                            setTimeout(() => {\n                                setVisible(false)\n                            }, 500);\n                        }}\n                        onMovePrevRequest={() => {\n                            setCurrentIndex((currentIndex + images.length - 1) % images.length)\n                        }\n                        }\n                        onMoveNextRequest={() => {\n                            setCurrentIndex((currentIndex + 1) % images.length)\n                        }\n                        }\n                    />\n                )}\n            {/* </WindowScrollDisableWrapper> */}\n        </React.Fragment>\n    );\n}\n\n\nconst mapStateToProps = state => ({\n    app: state.app,\n    user: state.user,\n});\n\nconst mapDispatchToProps = {\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Form.create()(LightBoxGallery));"]},"metadata":{},"sourceType":"module"}